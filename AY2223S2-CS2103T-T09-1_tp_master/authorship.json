[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T09-1/tp/actions)","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"# PowerConnect","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"* PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact management tasks done faster than traditional GUI apps \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"  * keep track of student grades","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"  * adding comments to students","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"* It is named `PowerConnect` (`PC` for short) because it provides teacher a powerful application to connect with their students.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mayuanxin1234":8,"-":7}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"run {","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"    archiveFileName \u003d \u0027PowerConnect.jar\u0027","lastModifiedDate":"2023-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"securespider":1,"-":70,"mayuanxin1234":4}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"### Pang Chin Kiat, Vincent","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"\u003cimg src\u003d\"images/securespider.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"[[github](https://github.com/securespider)]","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"[[portfolio](team/securespider.md)]","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"* Role: Developer","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"### Ma Yuanxin","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"\u003cimg src\u003d\"./images/mayuanxin1234.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"[[github](https://github.com/mayuanxin1234)]","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"[[portfolio](team/mayuanxin1234.md)]","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"*  Role: Developer","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"*  Responsibilities: Deliverables and deadlines, and Integration","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"### Lim Diat Bbin","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"\u003cimg src\u003d\"./images/diatbbin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"[[github](https://github.com/Diatbbin)]","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"[[portfolio](team/diatbbin.md)]","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"* Responsibilities: Finding bugs and Documentation","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"### Yeo Wen Jue","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"\u003cimg src\u003d\"images/mrtwit99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"[[github](https://github.com/MrTwit99)]","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"[[portfolio](team/mrtwit99.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"* Responsibilities: Documentation","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"MrTwit99":8,"securespider":5,"Diatbbin":2,"-":30,"mayuanxin1234":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"## PowerConnect Developer Guide","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect is a fully customized offline application for tuition and school teachers to manage students\u0027 and parents\u0027 administrative details. While it has limited features at this stage, plans for future PowerConnect releases to update features and usage capabilities have been made with detailed timeline.","lastModifiedDate":"2023-04-08"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"The aim of this product is to eventually be a useful tool that is used in conjunction with Learning Management System (LMS) tools currently in the market to aid teachers in managing students. \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"PowerConnect is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). PowerConnect helps teachers in tracking and updating students\u0027 particulars.","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"table-of-contents\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"## **Table of Contents**","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"2. [Setting Up, Getting Started](#setting-up-getting-started)","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"3. [Design](#design)","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"   1. [Architecture](#architecture)","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"   2. [Ui Component](#ui-component)","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"   3. [Logic Component](#logic-component)","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"   4. [Model Component](#model-component)","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"   5. [Storage Component](#storage-component)","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"   6. [Common Classes](#common-classes)","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"4. [Implementation](#implementation)","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"   1. [Student/Parent Delete Feature](#delete-studentparent-feature)","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"   2. [Attendance Feature](#attendance-feature)","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"   3. [Grade Feature](#grade-feature)","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"   4. [Parent/NOK Add Feature](#parentnok-add-feature)","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"   4. [Parent/NOK Edit Feature](#parentnok-edit-feature)","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"   5. [Binding Parent/NOK and Student](#binding-student-and-parentnok-feature)","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"5. [Planned Enhancements](#planned-enhancements)","lastModifiedDate":"2023-04-06"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"   1. [Enhancement 1 - Name Fix](#enhancement-1-name-fix)","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"   2. [Enhancement 2 - Age Fix](#enhancement-2-age-fix)","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"   3. [Enhancement 3 - Attendance Fix](#enhancement-3-attendance-fix)","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"6. [Documentation, Logging, Testing, Configuration, Dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-04-06"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"7. [Appendix](#appendix-requirements)","lastModifiedDate":"2023-04-06"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"   1. [Appendix-Requirements](#appendix-requirements)","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"      1. [Product Scope](#product-scope)","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"      2. [User Stories](#user-stories)","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"      3. [Use Cases](#use-cases)","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"         1. [UC01 - Adding a new student](#use-case-uc01---adding-a-new-student-to-an-existing-class)","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"         2. [UC02 - Adding a grade for a student](#use-case-uc02---adding-grade-for-a-student)","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"         3. [UC03 - Adding a comment for a student](#use-case-uc03---adding-comment-for-a-student)","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"         4. [UC04 - Listing all students in a class](#use-case-uc04---listing-all-students-in-the-selected-class)","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"         5. [UC05 - Finding a student in a class](#use-case-uc05---finding-a-student-in-a-class)","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"         6. [UC06 - Deleting a student from a class](#use-case-uc06---deleting-student-from-class)","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"         7. [UC07 - Adding a new parent/NOK](#use-case-uc07---adding-a-new-parentnok-to-the-system)","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"         8. [UC08 - Editing a parent/NOK](#use-case-uc08---editing-an-existing-parentnok-in-the-system)","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"         9. [UC09 - Deleting a parent/NOK](#use-case-uc09---deleting-a-parentnok-from-the-system)","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"      4. [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"      5. [Glossary](#glossary)","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"   2. [Appendix-Instructions for Manual Testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"      1. [Launch and Shutdown](#launch-and-shutdown)","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"      2. [Adding a student](#addingstudent)","lastModifiedDate":"2023-04-08"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"      3. [Marking attendance](#markingattendance)","lastModifiedDate":"2023-04-08"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"      4. [Adding a grade](#addinggrade)","lastModifiedDate":"2023-04-08"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"      5. [Deleting a grade](#deletinggrade)","lastModifiedDate":"2023-04-08"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"      6. [Adding a comment](#addingcomment)","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"      7. [Editing student](#editingstudent)","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"      8. [Listing student](#listingstudent)","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"      9. [Finding student](#findingstudent)","lastModifiedDate":"2023-04-08"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"      10. [Deleting student](#deletingstudent)","lastModifiedDate":"2023-04-08"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"      11. [Adding a parent](#addingparent)","lastModifiedDate":"2023-04-08"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"      12. [Listing all parents](#listingparent)","lastModifiedDate":"2023-04-08"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"      13. [Editing a parent](#editingparent)","lastModifiedDate":"2023-04-08"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"      14. [Finding a parent](#findingparent)","lastModifiedDate":"2023-04-08"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"      15. [Deleting a parent](#deletingparent)","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"      16. [Saving preferences](#savingwindow)","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"      17. [Shutdown of application](#shutdown)","lastModifiedDate":"2023-04-08"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"      18. [Saving data](#saving-data)","lastModifiedDate":"2023-04-08"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"      ","lastModifiedDate":"2023-04-08"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"   3. [Appendix-Effort](#effort)","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"acknowledgements\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"* This project also took inspiration from [TeaPet](https://github.com/AY1920S2-CS2103T-W12-2/main) during the implementation of PowerConnect\u0027s Storage.","lastModifiedDate":"2023-04-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"setting-up-getting-started\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"## **Setting Up, Getting Started**","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"design\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"architecture\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":107,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `student delete in/13`.","lastModifiedDate":"2023-04-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2023-04-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"ui-component\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":154,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java).","lastModifiedDate":"2023-04-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"MrTwit99"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml).","lastModifiedDate":"2023-04-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":173,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":174,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":175,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":176,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"logic-component\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":177,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"1. When `Logic` is called upon to execute a command, it uses the `PowerConnectParser` class to parse the user command.","lastModifiedDate":"2023-04-03"},{"lineNumber":188,"author":{"gitId":"mayuanxin1234"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `StudentAddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2023-04-03"},{"lineNumber":189,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":190,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":192,"author":{"gitId":"MrTwit99"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `student delete command` \u0026 `parent/NOK delete command`.","lastModifiedDate":"2023-04-09"},{"lineNumber":193,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":194,"author":{"gitId":"MrTwit99"},"content":"**Sequence Diagram for Student Delete Command**","lastModifiedDate":"2023-04-09"},{"lineNumber":195,"author":{"gitId":"MrTwit99"},"content":"![Interactions inside the Logic Component for the `Student Delete` Command](images/StudentDeleteSequentialDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":196,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":197,"author":{"gitId":"MrTwit99"},"content":"**Sequence Diagram for Parent/NOK Delete Command**","lastModifiedDate":"2023-04-09"},{"lineNumber":198,"author":{"gitId":"MrTwit99"},"content":"![Interactions inside the Logic Component for the `Parent/NOK Delete` Command](images/ParentDeleteSequentialDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"mayuanxin1234"},"content":"* When called upon to parse a user command, the `PowerConnectParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `StudentAddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `StudentAddCommand`) which the `PowerConnectParser` returns back as a `Command` object.","lastModifiedDate":"2023-04-03"},{"lineNumber":208,"author":{"gitId":"mayuanxin1234"},"content":"* All `XYZCommandParser` classes (e.g., `StudentAddCommandParser`, `StudentDeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2023-04-03"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":211,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":212,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":213,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":214,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":215,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"model-component\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":217,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":237,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":238,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":239,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":240,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":241,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"storage-component\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"mayuanxin1234"},"content":"\u003cimg src\u003d\"images/StoragePowerConnect.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"mayuanxin1234"},"content":"* can save both PowerConnect data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-04-03"},{"lineNumber":251,"author":{"gitId":"mayuanxin1234"},"content":"* inherits from both `PowerConnectStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-04-03"},{"lineNumber":252,"author":{"gitId":"MrTwit99"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`).","lastModifiedDate":"2023-04-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":255,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":256,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":257,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"common-classes\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":259,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":264,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":265,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":266,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":267,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"implementation\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":275,"author":{"gitId":"Diatbbin"},"content":"\u003ca name \u003d \"delete-student/parent-feature\"/\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":276,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":277,"author":{"gitId":"Diatbbin"},"content":"## Delete student/parent feature","lastModifiedDate":"2023-04-07"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":279,"author":{"gitId":"MrTwit99"},"content":"### Current Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":280,"author":{"gitId":"Diatbbin"},"content":"PowerConnect allows users to delete ","lastModifiedDate":"2023-04-07"},{"lineNumber":281,"author":{"gitId":"Diatbbin"},"content":"* Student from `UniqueStudentList` of `Class` using their class and index number.","lastModifiedDate":"2023-04-07"},{"lineNumber":282,"author":{"gitId":"Diatbbin"},"content":"* Parent from `UniqueParentList` of `parents` using their name and phone number.","lastModifiedDate":"2023-04-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":284,"author":{"gitId":"Diatbbin"},"content":"However, a parent can only be deleted if no student is attached to that parent.","lastModifiedDate":"2023-04-07"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":286,"author":{"gitId":"Diatbbin"},"content":"#### General Flow for deleting a student and the parent for that student","lastModifiedDate":"2023-04-07"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":288,"author":{"gitId":"Diatbbin"},"content":"1. The user launches the application and wants to delete a student, `Bernice`, and her parent, `Bob`, who are already stored inside.","lastModifiedDate":"2023-04-07"},{"lineNumber":289,"author":{"gitId":"Diatbbin"},"content":"2. The user tries deleting the parent first using `parent delete n/Bob pnP/91234567`.","lastModifiedDate":"2023-04-07"},{"lineNumber":290,"author":{"gitId":"Diatbbin"},"content":"3. PowerConnect displays an error saying `\"The parent you are trying to delete has a student attached! You can\u0027t delete the parent!\"`.","lastModifiedDate":"2023-04-07"},{"lineNumber":291,"author":{"gitId":"Diatbbin"},"content":"4. The user then tries to delete that student using `student 1A delete in/1`.","lastModifiedDate":"2023-04-07"},{"lineNumber":292,"author":{"gitId":"Diatbbin"},"content":"5. `PowerConnectParser` and `StudentCommandParser` will check if command provided by the user is valid before `StudentDeleteCommand#execute(Model)` is called.","lastModifiedDate":"2023-04-07"},{"lineNumber":293,"author":{"gitId":"Diatbbin"},"content":"6. This would call `Model#deleteStudent(Student)` method to delete the student.","lastModifiedDate":"2023-04-07"},{"lineNumber":294,"author":{"gitId":"Diatbbin"},"content":"7. It will then check if the student to be deleted exists in `UniqueStudentList` of `Class` before deleting the student. ","lastModifiedDate":"2023-04-07"},{"lineNumber":295,"author":{"gitId":"Diatbbin"},"content":"8. The deleted student will also be removed from its parent\u0027s list of children.","lastModifiedDate":"2023-04-07"},{"lineNumber":296,"author":{"gitId":"Diatbbin"},"content":"9. The success message and resulting list of students will be displayed via the dashboard.","lastModifiedDate":"2023-04-07"},{"lineNumber":297,"author":{"gitId":"Diatbbin"},"content":"10. The user tries deleting the parent again, it follows `step 5-7` in a similar way to just that it is now for parent instead of student.","lastModifiedDate":"2023-04-07"},{"lineNumber":298,"author":{"gitId":"Diatbbin"},"content":"11. After step 7, it will check that `Bob` has no students attached before deleting him and showing the success message.","lastModifiedDate":"2023-04-07"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":301,"author":{"gitId":"MrTwit99"},"content":"**Sequence diagram for Parent Delete**","lastModifiedDate":"2023-04-09"},{"lineNumber":302,"author":{"gitId":"Diatbbin"},"content":"![Sequence Diagram](images/ParentDeleteSequentialDiagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":304,"author":{"gitId":"MrTwit99"},"content":"**Sequence diagram for Student Delete**","lastModifiedDate":"2023-04-09"},{"lineNumber":305,"author":{"gitId":"Diatbbin"},"content":"![Sequence Diagram](images/StudentDeleteSequentialDiagram.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":307,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":309,"author":{"gitId":"Diatbbin"},"content":"### Design considerations","lastModifiedDate":"2023-03-22"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":311,"author":{"gitId":"Diatbbin"},"content":"#### Aspect 1: How to delete students","lastModifiedDate":"2023-04-07"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":313,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 1 (current choice):** Delete student from their class\u0027s student list.","lastModifiedDate":"2023-04-09"},{"lineNumber":314,"author":{"gitId":"MrTwit99"},"content":"    * Pros: Provides flexibility in adding new features. e.g. deleting all students in a class ","lastModifiedDate":"2023-04-09"},{"lineNumber":315,"author":{"gitId":"Diatbbin"},"content":"    * Cons: Harder to implement","lastModifiedDate":"2023-03-22"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":317,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 2:** Delete student from a student list containing all students.","lastModifiedDate":"2023-04-09"},{"lineNumber":318,"author":{"gitId":"Diatbbin"},"content":"    * Pros: Uses less memory","lastModifiedDate":"2023-04-07"},{"lineNumber":319,"author":{"gitId":"Diatbbin"},"content":"    * Cons: Time performance will be worse when there are a lot of students","lastModifiedDate":"2023-04-07"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":321,"author":{"gitId":"Diatbbin"},"content":"#### Aspect 2: Whether parent can be deleted if there is a student attached","lastModifiedDate":"2023-04-07"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":323,"author":{"gitId":"MrTwit99"},"content":"Current implementation allows a parent can have any number of students attached.","lastModifiedDate":"2023-04-09"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":325,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 1 (current choice):** Parent cannot be deleted if there is a student attached to ensure that every student always have one parent.","lastModifiedDate":"2023-04-09"},{"lineNumber":326,"author":{"gitId":"Diatbbin"},"content":"    * Pros: Easier to implement, since we do not have to update multiple students when a parent is deleted","lastModifiedDate":"2023-04-07"},{"lineNumber":327,"author":{"gitId":"Diatbbin"},"content":"    * Pros: Easier to add features that involve both a student and a parent","lastModifiedDate":"2023-04-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":329,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 2:** Parent can be deleted if there is a student attached.","lastModifiedDate":"2023-04-09"},{"lineNumber":330,"author":{"gitId":"Diatbbin"},"content":"    * Pros: Deletion of parent will be more flexible","lastModifiedDate":"2023-04-07"},{"lineNumber":331,"author":{"gitId":"Diatbbin"},"content":"    * Cons: Can be time-consuming to update if there are a lot of students attached to one parent","lastModifiedDate":"2023-04-07"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":333,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":335,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":337,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":338,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"attendance-feature\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":340,"author":{"gitId":"MrTwit99"},"content":"## Attendance feature","lastModifiedDate":"2023-04-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":342,"author":{"gitId":"MrTwit99"},"content":"### Current Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":344,"author":{"gitId":"securespider"},"content":"The attendance feature is facilitated by `Attendance`. It is composed by a `Person` with an `Attendance` object.","lastModifiedDate":"2023-03-22"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":346,"author":{"gitId":"MrTwit99"},"content":"Given below is an example usage scenario and how the attendance mechanism behaves at each step:","lastModifiedDate":"2023-04-09"},{"lineNumber":347,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":348,"author":{"gitId":"MrTwit99"},"content":"Step 1. The user launches the application for the first time. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":349,"author":{"gitId":"securespider"},"content":"Step 2. The user creates a student using the Add command. The `Attendance` of `Students` will be initialized with the initial attendance state (F) indicating that the student is absent.","lastModifiedDate":"2023-03-22"},{"lineNumber":350,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":351,"author":{"gitId":"securespider"},"content":"[//]: # (![Student Add Command]\u0026#40;images/StudentAddCommand.png\u0026#41;)","lastModifiedDate":"2023-03-22"},{"lineNumber":352,"author":{"gitId":"securespider"},"content":"Step 3. The user wants to mark a particular student as present. The user executes the `Attendance` command with the index of the student and att/T. The `Attendance` of the student will be updated to the current date.","lastModifiedDate":"2023-03-22"},{"lineNumber":353,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":354,"author":{"gitId":"securespider"},"content":"Step 4. The attendance is saved to the storage file automatically after each command. Attendance is saved as the string representation of LocalDate in JsonAdaptedAttendance.","lastModifiedDate":"2023-03-22"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":357,"author":{"gitId":"securespider"},"content":"**Activity Diagram**","lastModifiedDate":"2023-04-05"},{"lineNumber":358,"author":{"gitId":"securespider"},"content":"![Activity Diagram](images/AttendanceActivityDiagram.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":360,"author":{"gitId":"securespider"},"content":"**Full implementation sequence diagram**","lastModifiedDate":"2023-04-05"},{"lineNumber":361,"author":{"gitId":"securespider"},"content":"![Sequence Diagram](images/AttendanceSequenceDiagram.png)","lastModifiedDate":"2023-04-09"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":363,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":364,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":365,"author":{"gitId":"securespider"},"content":"### Design considerations","lastModifiedDate":"2023-03-22"},{"lineNumber":366,"author":{"gitId":"MrTwit99"},"content":"We want to make it easy for the user to set current date as present. Thus, we allowed the user to set attendance as T which will automatically register as present today.","lastModifiedDate":"2023-04-09"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":368,"author":{"gitId":"securespider"},"content":"#### Aspect: How to store attendance","lastModifiedDate":"2023-03-22"},{"lineNumber":369,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":370,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 1 (current choice):** Store attendance as a JsonAdaptedAttendance object that records the string representation of LocalDate.","lastModifiedDate":"2023-04-09"},{"lineNumber":371,"author":{"gitId":"securespider"},"content":"    * Pros: Easy to access and manipulate attendance data","lastModifiedDate":"2023-03-22"},{"lineNumber":372,"author":{"gitId":"securespider"},"content":"    * Pros: Easy to read and write to storage","lastModifiedDate":"2023-03-22"},{"lineNumber":373,"author":{"gitId":"mayuanxin1234"},"content":"    * Pros: Flexible to add more features if more features are added e.g. mark as MC, Late..","lastModifiedDate":"2023-04-08"},{"lineNumber":374,"author":{"gitId":"securespider"},"content":"    * Cons: Hard to implement","lastModifiedDate":"2023-03-22"},{"lineNumber":375,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":376,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 2:** Store attendance as a string representation of LocalDate.","lastModifiedDate":"2023-04-09"},{"lineNumber":377,"author":{"gitId":"securespider"},"content":"    * Pros: Easy to implement","lastModifiedDate":"2023-03-22"},{"lineNumber":378,"author":{"gitId":"securespider"},"content":"    * Pros: Use less memory","lastModifiedDate":"2023-03-22"},{"lineNumber":379,"author":{"gitId":"securespider"},"content":"    * Cons: Hard to access and manipulate attendance data","lastModifiedDate":"2023-03-22"},{"lineNumber":380,"author":{"gitId":"securespider"},"content":"    * Cons: Hard to read and write to storage","lastModifiedDate":"2023-03-22"},{"lineNumber":381,"author":{"gitId":"mayuanxin1234"},"content":"    * Cons: Hard to add more features if more features are added e.g. mark as MC, Late..","lastModifiedDate":"2023-04-08"},{"lineNumber":382,"author":{"gitId":"MrTwit99"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":383,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":384,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":385,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":386,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":387,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":388,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":389,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"grade-feature\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":391,"author":{"gitId":"MrTwit99"},"content":"## Grade feature","lastModifiedDate":"2023-04-02"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":393,"author":{"gitId":"MrTwit99"},"content":"### Current Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":395,"author":{"gitId":"mayuanxin1234"},"content":"The grade feature is facilitated by `grade`. It is composed by a `Student` with an `Assignment` object.","lastModifiedDate":"2023-03-22"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":397,"author":{"gitId":"MrTwit99"},"content":"Given below is an example usage scenario and how the attendance mechanism behaves at each step:","lastModifiedDate":"2023-04-09"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":399,"author":{"gitId":"MrTwit99"},"content":"Step 1. The user launches the application for the first time. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":400,"author":{"gitId":"mayuanxin1234"},"content":"Step 2. The user creates a student using the Add command. The `Test` and `Homework` which extends `Assignment` of `Students` will be initialized with the initial name: Insert student test/homework here!, Score: -100, Weightage: -100, Deadline: No Deadline and Is Done(Homework): false.","lastModifiedDate":"2023-03-22"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":402,"author":{"gitId":"mayuanxin1234"},"content":"[//]: # (![Student Add Command]\u0026#40;images/StudentAddCommand.png\u0026#41;)","lastModifiedDate":"2023-03-22"},{"lineNumber":403,"author":{"gitId":"mayuanxin1234"},"content":"Step 3. The user wants to add a test to a student. The user executes the `grade` command with the index of the student and test/TEST_NAME. The `test` of the student will be updated to the name.","lastModifiedDate":"2023-03-22"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":405,"author":{"gitId":"mayuanxin1234"},"content":"![Grade Command](images/Grade.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":407,"author":{"gitId":"mayuanxin1234"},"content":"Step 4. The test/homework is saved to the storage file automatically after each command.","lastModifiedDate":"2023-03-22"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":409,"author":{"gitId":"securespider"},"content":"**Full implementation sequence diagram**","lastModifiedDate":"2023-04-05"},{"lineNumber":410,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":411,"author":{"gitId":"mayuanxin1234"},"content":"![Sequence Diagram](images/GradeSequentialDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":412,"author":{"gitId":"mayuanxin1234"},"content":"![Sequence Diagram2](images/GradeSequentialDiagram2.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":413,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":414,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":415,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":416,"author":{"gitId":"mayuanxin1234"},"content":"### Design considerations","lastModifiedDate":"2023-03-22"},{"lineNumber":417,"author":{"gitId":"mayuanxin1234"},"content":"We want to make it easy for the user to set tests without inputting all the details at one go, with the test/homework name being the only field compulsory.","lastModifiedDate":"2023-03-22"},{"lineNumber":418,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":419,"author":{"gitId":"mayuanxin1234"},"content":"#### Aspect: How to store test","lastModifiedDate":"2023-03-22"},{"lineNumber":420,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":421,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 1 (current choice):** Store test as a JsonAdaptedTest object.","lastModifiedDate":"2023-04-09"},{"lineNumber":422,"author":{"gitId":"mayuanxin1234"},"content":"    * Pros: Easy to access and manipulate attendance data","lastModifiedDate":"2023-03-22"},{"lineNumber":423,"author":{"gitId":"mayuanxin1234"},"content":"    * Pros: Easy to read and write to storage","lastModifiedDate":"2023-03-22"},{"lineNumber":424,"author":{"gitId":"mayuanxin1234"},"content":"    * Pros: Flexible to add more features if more features are added","lastModifiedDate":"2023-03-22"},{"lineNumber":425,"author":{"gitId":"mayuanxin1234"},"content":"    * Cons: Hard to implement","lastModifiedDate":"2023-03-22"},{"lineNumber":426,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":427,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 2:** Store attendance as a string representation of Test details.","lastModifiedDate":"2023-04-09"},{"lineNumber":428,"author":{"gitId":"mayuanxin1234"},"content":"    * Pros: Easy to implement","lastModifiedDate":"2023-03-22"},{"lineNumber":429,"author":{"gitId":"mayuanxin1234"},"content":"    * Pros: Use less memory","lastModifiedDate":"2023-03-22"},{"lineNumber":430,"author":{"gitId":"mayuanxin1234"},"content":"    * Cons: Hard to access and manipulate attendance data","lastModifiedDate":"2023-03-22"},{"lineNumber":431,"author":{"gitId":"mayuanxin1234"},"content":"    * Cons: Hard to read and write to storage","lastModifiedDate":"2023-03-22"},{"lineNumber":432,"author":{"gitId":"mayuanxin1234"},"content":"    * Cons: Hard to add more features if more features are added","lastModifiedDate":"2023-03-22"},{"lineNumber":433,"author":{"gitId":"MrTwit99"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":434,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":435,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":436,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":437,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":438,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":439,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":440,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"parentnok-add-feature\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":441,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":442,"author":{"gitId":"MrTwit99"},"content":"## Parent/NOK Add Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":443,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":444,"author":{"gitId":"MrTwit99"},"content":"### Current Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":445,"author":{"gitId":"MrTwit99"},"content":"The add feature for parent/NOK is facilitated by `parent add`.","lastModifiedDate":"2023-04-02"},{"lineNumber":446,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":447,"author":{"gitId":"MrTwit99"},"content":"Given below are example usage scenarios and how the add mechanism behaves at each step.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":448,"author":{"gitId":"MrTwit99"},"content":"Scenario 1:","lastModifiedDate":"2023-04-02"},{"lineNumber":449,"author":{"gitId":"MrTwit99"},"content":"1. User launches the application.","lastModifiedDate":"2023-04-02"},{"lineNumber":450,"author":{"gitId":"MrTwit99"},"content":"2. User wants to add a new `Parent / NOK`.","lastModifiedDate":"2023-04-02"},{"lineNumber":451,"author":{"gitId":"MrTwit99"},"content":"3. User keys in the parent add command to add a new `Parent / NOK` to PowerConnect.","lastModifiedDate":"2023-04-02"},{"lineNumber":452,"author":{"gitId":"MrTwit99"},"content":"4. PowerConnect creates a new `Parent / NOK` and automatically saves its data into its storage file (parents.json).","lastModifiedDate":"2023-04-02"},{"lineNumber":453,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":454,"author":{"gitId":"MrTwit99"},"content":"Scenario 2:","lastModifiedDate":"2023-04-02"},{"lineNumber":455,"author":{"gitId":"MrTwit99"},"content":"1. As user executes the `Student Add` command, PowerConnect cannot locate the `Parent / NOK` to bind to the `Student`.","lastModifiedDate":"2023-04-02"},{"lineNumber":456,"author":{"gitId":"MrTwit99"},"content":"2. PowerConnect hence **AUTOMATICALLY** creates a new `Parent / NOK`.","lastModifiedDate":"2023-04-02"},{"lineNumber":457,"author":{"gitId":"MrTwit99"},"content":"3. PowerConnect retrieves the information required for `Parent Add` command from `Student Add` command.","lastModifiedDate":"2023-04-02"},{"lineNumber":458,"author":{"gitId":"MrTwit99"},"content":"4. PowerConnect automatically saves all changes into its storage files (parents.json \u0026 pcclass.json). \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":459,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":460,"author":{"gitId":"MrTwit99"},"content":"**Activity Diagram**","lastModifiedDate":"2023-04-02"},{"lineNumber":461,"author":{"gitId":"MrTwit99"},"content":"![Activity Diagram](images/ParentAddActivityDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":462,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":463,"author":{"gitId":"MrTwit99"},"content":"**Full implementation sequence diagram**","lastModifiedDate":"2023-04-02"},{"lineNumber":464,"author":{"gitId":"MrTwit99"},"content":"![Sequential Diagram](images/ParentAddSequentialDiagram.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":465,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":466,"author":{"gitId":"MrTwit99"},"content":"**Reference to get parent particulars sequence diagram**","lastModifiedDate":"2023-04-03"},{"lineNumber":467,"author":{"gitId":"MrTwit99"},"content":"![Sequence Diagram](images/ParentAddParserUtilSequentialDiagram.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":468,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":469,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":470,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":471,"author":{"gitId":"MrTwit99"},"content":"### Design considerations","lastModifiedDate":"2023-04-02"},{"lineNumber":472,"author":{"gitId":"MrTwit99"},"content":"We want to make it simple for users to add a new `Parent / NOK` to PowerConnect without having the need to include students attached to him/her. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":473,"author":{"gitId":"MrTwit99"},"content":"We also want to have a centralized way and adopt defensive coding practices for binding of `Student` and `Parent / NOK`. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":474,"author":{"gitId":"MrTwit99"},"content":"Furthermore, we do not want to trouble users by forcing them to have **ALL** particulars of a `Parent / NOK`. Hence, we made the command such that it **ONLY** requires minimal information from users: \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":475,"author":{"gitId":"MrTwit99"},"content":"1. Parent\u0027s / NOK\u0027s `Name`","lastModifiedDate":"2023-04-02"},{"lineNumber":476,"author":{"gitId":"MrTwit99"},"content":"2. Parent\u0027s / NOK\u0027s `Phone number` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":477,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":478,"author":{"gitId":"MrTwit99"},"content":"#### Aspect: How Parent Add executes","lastModifiedDate":"2023-04-02"},{"lineNumber":479,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 1 (current choice):** Users provide **COMPULSORY** details about the parent / NOK only + binding of student and parent / NOK is done at `Student` side **ONLY**.","lastModifiedDate":"2023-04-09"},{"lineNumber":480,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Defensive coding is applied, reducing chances of bugs","lastModifiedDate":"2023-04-02"},{"lineNumber":481,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Users are **NOT FORCED** to come up with arbitrary values to fill up **OPTIONAL** details for the parent / NOK to create a new `Parent / NOK`.","lastModifiedDate":"2023-04-02"},{"lineNumber":482,"author":{"gitId":"MrTwit99"},"content":"    * Con: Hard to implement","lastModifiedDate":"2023-04-02"},{"lineNumber":483,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 2:** Users provide **ALL** particulars of the `Parent / NOK` + binding of student and parent / NOK is done at `Student` side **ONLY**.","lastModifiedDate":"2023-04-09"},{"lineNumber":484,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Slightly easier to implement as compared to Alternative 1","lastModifiedDate":"2023-04-02"},{"lineNumber":485,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Defensive coding is applied, reducing chances of bugs","lastModifiedDate":"2023-04-02"},{"lineNumber":486,"author":{"gitId":"MrTwit99"},"content":"    * Con: Users are **FORCED** to come up with arbitrary values to fill up any missing values for **OPTIONAL** section.","lastModifiedDate":"2023-04-02"},{"lineNumber":487,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 3:** Users provide **ALL** particulars of the `Parent / NOK` + binding of student and parent / NOK are done at **BOTH** `Student` and `Parent / NOK`.","lastModifiedDate":"2023-04-09"},{"lineNumber":488,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Slightly easier to implement as compared to Alternative 2","lastModifiedDate":"2023-04-02"},{"lineNumber":489,"author":{"gitId":"MrTwit99"},"content":"    * Con: Defensive coding is **NOT** applied, increasing chances of bugs","lastModifiedDate":"2023-04-02"},{"lineNumber":490,"author":{"gitId":"MrTwit99"},"content":"    * Con: Users are **FORCED** to come up with arbitrary values to fill up any missing values for **OPTIONAL** section.","lastModifiedDate":"2023-04-02"},{"lineNumber":491,"author":{"gitId":"MrTwit99"},"content":"    * Con: Need to test the feature exhaustively / create sufficient automated tests to ensure `Students` and `Parents / NOKs` are properly bound together.","lastModifiedDate":"2023-04-02"},{"lineNumber":492,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":493,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":494,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":495,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":496,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":497,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":498,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"parentnok-edit-feature\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":499,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":500,"author":{"gitId":"MrTwit99"},"content":"## Parent/NOK Edit Feature","lastModifiedDate":"2023-04-02"},{"lineNumber":501,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":502,"author":{"gitId":"MrTwit99"},"content":"### Current Implementation","lastModifiedDate":"2023-04-02"},{"lineNumber":503,"author":{"gitId":"MrTwit99"},"content":"The edit feature for parent / NOK is facilitated by `parent edit`. \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":504,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":505,"author":{"gitId":"MrTwit99"},"content":"Given below is an example usage scenario and how the edit mechanism behaves at each step.","lastModifiedDate":"2023-03-22"},{"lineNumber":506,"author":{"gitId":"MrTwit99"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":507,"author":{"gitId":"MrTwit99"},"content":"1. User launches the application for the first time. \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":508,"author":{"gitId":"MrTwit99"},"content":"2. User creates a new `Parent` using ***Parent Add Command*** or gets a new `Parent` created by PowerConnect while executing the ***Student Add Command***. \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":509,"author":{"gitId":"MrTwit99"},"content":"3. During creation of `Parent`, User encountered one of the two scenarios and requires to edit the `Parent`:","lastModifiedDate":"2023-04-02"},{"lineNumber":510,"author":{"gitId":"MrTwit99"},"content":"   1. Did not include certain particulars of the `Parent`.","lastModifiedDate":"2023-03-22"},{"lineNumber":511,"author":{"gitId":"MrTwit99"},"content":"   2. Keyed in wrong particulars for the `Parent`.","lastModifiedDate":"2023-03-22"},{"lineNumber":512,"author":{"gitId":"MrTwit99"},"content":"4. User wants to edit the `Parent` particulars and hence executes the `parent edit` command with the `Name` and `Phone Number` of the corresponding `Parent` and the `Particulars` to be edited.\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":513,"author":{"gitId":"MrTwit99"},"content":"   Example of parent edit command: `\"parent edit n/Tan Ah Niu pnP/91234567 npnP/65656565\"` \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":514,"author":{"gitId":"MrTwit99"},"content":"5. Edited `Parent` is saved to the storage file automatically after the command. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":515,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":516,"author":{"gitId":"MrTwit99"},"content":"**Activity Diagram**","lastModifiedDate":"2023-04-02"},{"lineNumber":517,"author":{"gitId":"MrTwit99"},"content":"![Activity Diagram](images/ParentEditActivityDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":518,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":519,"author":{"gitId":"MrTwit99"},"content":"**Full implementation sequence diagram**","lastModifiedDate":"2023-03-22"},{"lineNumber":520,"author":{"gitId":"MrTwit99"},"content":"![Sequence Diagram](images/ParentEditSequentialDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":521,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":522,"author":{"gitId":"MrTwit99"},"content":"**Reference to get parent particulars sequence diagram**","lastModifiedDate":"2023-04-02"},{"lineNumber":523,"author":{"gitId":"MrTwit99"},"content":"![Sequence Diagram](images/ParentEditParserUtilSequentialDiagram.png)","lastModifiedDate":"2023-04-02"},{"lineNumber":524,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":525,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":526,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":527,"author":{"gitId":"MrTwit99"},"content":"### Design considerations","lastModifiedDate":"2023-03-22"},{"lineNumber":528,"author":{"gitId":"MrTwit99"},"content":"We want to make it easy for users to edit `Parent / NOK` particulars without manually deleting the `Parent / NOK` and creating a new `Parent / NOK` and reassigning each `Student` attached to original `Parent / NOK` with the new `Parent / NOK`.","lastModifiedDate":"2023-04-02"},{"lineNumber":529,"author":{"gitId":"MrTwit99"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":530,"author":{"gitId":"MrTwit99"},"content":"We also do not want to trouble user with inputting multiple **PREFIXES** to edit `Parent / NOK`. Hence, users only need to input ***PREFIXES*** belonging to the edited information and the following:","lastModifiedDate":"2023-04-02"},{"lineNumber":531,"author":{"gitId":"MrTwit99"},"content":"1. Parent\u0027s / NOK\u0027s `Name`","lastModifiedDate":"2023-03-22"},{"lineNumber":532,"author":{"gitId":"MrTwit99"},"content":"2. Parent\u0027s / NOK\u0027s `Phone Number`","lastModifiedDate":"2023-03-22"},{"lineNumber":533,"author":{"gitId":"MrTwit99"},"content":"3. Particulars that are being amended\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":534,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":535,"author":{"gitId":"MrTwit99"},"content":"#### Aspect: How Parent Edit executes","lastModifiedDate":"2023-03-22"},{"lineNumber":536,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 1 (current choice):** Run the command with `parent edit n/\u003cNAME\u003e pnP/\u003cPARENT_PHONE_NUMBER\u003e` + PREFIXES and details of information that are being changed.","lastModifiedDate":"2023-04-09"},{"lineNumber":537,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Easy to use","lastModifiedDate":"2023-03-22"},{"lineNumber":538,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Minimal input by user to edit `Parent / NOK` particulars","lastModifiedDate":"2023-03-22"},{"lineNumber":539,"author":{"gitId":"MrTwit99"},"content":"    * Con: Slightly harder than Alternative 2 to implement","lastModifiedDate":"2023-03-22"},{"lineNumber":540,"author":{"gitId":"MrTwit99"},"content":"    * Con: Need to test the ***Parent Edit Command*** exhaustively / come up with automated tests to ensure when creating the new `Parent / NOK`, system takes input from original `Parent / NOK` for particulars that are not amended.","lastModifiedDate":"2023-04-02"},{"lineNumber":541,"author":{"gitId":"mayuanxin1234"},"content":"* **Alternative 2:** User provides **ALL** particulars of the `Parent / NOK` to be edited even if **SOME** particulars are the **SAME** as original. From these details, system will create a new `Parent / NOK` and replace the original copy of `Parent / NOK` with it.","lastModifiedDate":"2023-04-08"},{"lineNumber":542,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Easy to implement","lastModifiedDate":"2023-03-22"},{"lineNumber":543,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Makes use of existing features **Parent Add** and **Parent Delete**","lastModifiedDate":"2023-03-22"},{"lineNumber":544,"author":{"gitId":"MrTwit99"},"content":"    * Con: Troublesome for the user as there is a need to input **ALL** particulars of a `Parent / NOK` even if he/she is just amending one of the particulars of the `Parent / NOK`.","lastModifiedDate":"2023-04-02"},{"lineNumber":545,"author":{"gitId":"MrTwit99"},"content":"    * Con: It may cause regressions, user may key in wrong details for some of the `Parent / NOK` particulars as he/she is keying in the command. This will cause much inconvenience for Users especially when the `Parent / NOK` they are amending has **TONS** of information.","lastModifiedDate":"2023-04-02"},{"lineNumber":546,"author":{"gitId":"MrTwit99"},"content":"    * Con: It is no longer **FAST** and **EASY** for the user to use.","lastModifiedDate":"2023-03-22"},{"lineNumber":547,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":548,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":549,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":550,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":551,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":552,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-22"},{"lineNumber":553,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"binding-student-and-parentnok-feature\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":554,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":555,"author":{"gitId":"MrTwit99"},"content":"## Binding Student and Parent/NOK Feature","lastModifiedDate":"2023-04-03"},{"lineNumber":556,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":557,"author":{"gitId":"MrTwit99"},"content":"### Current Implementation","lastModifiedDate":"2023-04-03"},{"lineNumber":558,"author":{"gitId":"MrTwit99"},"content":"The binding feature is created with the consideration of defensive coding in mind. It is executed by PowerConnect when the following commands are executed: `Student Add`, `Student Edit`, `Student Delete`, `Parent Edit` commands.","lastModifiedDate":"2023-04-03"},{"lineNumber":559,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":560,"author":{"gitId":"MrTwit99"},"content":"Given below is an example usage scenario and how the edit mechanism behaves at each step.","lastModifiedDate":"2023-04-03"},{"lineNumber":561,"author":{"gitId":"MrTwit99"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":562,"author":{"gitId":"MrTwit99"},"content":"1. User executes `Student Edit` command and decides to change the parent\u0027s/NOK\u0027s `Name`.","lastModifiedDate":"2023-04-03"},{"lineNumber":563,"author":{"gitId":"MrTwit99"},"content":"2. As PowerConnect executes the `Student Edit` command, PowerConnect will also retrieve the corresponding `parent/NOK` and perform similar behaviors to `Parent Edit` command to update the `parent/NOK` info in PowerConnect\u0027s database.","lastModifiedDate":"2023-04-03"},{"lineNumber":564,"author":{"gitId":"MrTwit99"},"content":"3. PowerConnect will also perform similar behaviors of `Student Edit` command to edit the `parent/NOK` information for all `Students` that are bound to the `Parent/NOK`.","lastModifiedDate":"2023-04-03"},{"lineNumber":565,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":566,"author":{"gitId":"MrTwit99"},"content":"### Design considerations","lastModifiedDate":"2023-04-03"},{"lineNumber":567,"author":{"gitId":"MrTwit99"},"content":"We wanted to adopt defensive coding for this feature to reduce any unwanted bugs. It is also complex when determining which party (students or parents/NOKs) should be the one performing the binding and unbinding and whether to allow both parties to perform.","lastModifiedDate":"2023-04-03"},{"lineNumber":568,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":569,"author":{"gitId":"MrTwit99"},"content":"#### Aspect: How Parent Edit executes","lastModifiedDate":"2023-04-03"},{"lineNumber":570,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 1 (current choice):** Perform the binding and unbinding **MAINLY** on the `Student` end as the main concern of this binding is to allow users to know the parent/NOK of a particular student.","lastModifiedDate":"2023-04-03"},{"lineNumber":571,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Logical and solves the issue of pairing `students` and `parents/NOKs`.","lastModifiedDate":"2023-04-03"},{"lineNumber":572,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Defensive coding used.","lastModifiedDate":"2023-04-03"},{"lineNumber":573,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Less likely to cause bugs as compared to other Alternatives.","lastModifiedDate":"2023-04-03"},{"lineNumber":574,"author":{"gitId":"MrTwit99"},"content":"    * Con: Difficult to implement.","lastModifiedDate":"2023-04-03"},{"lineNumber":575,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 2:** Perform the binding and unbinding on the `Parent/NOK` end when commands pertaining to `Parents/NOKs` are executed.","lastModifiedDate":"2023-04-03"},{"lineNumber":576,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Less information required for `Student Add` command.","lastModifiedDate":"2023-04-03"},{"lineNumber":577,"author":{"gitId":"MrTwit99"},"content":"    * Con: More information required for `Parent Add` command, resulting in requiring a long input from users.","lastModifiedDate":"2023-04-03"},{"lineNumber":578,"author":{"gitId":"MrTwit99"},"content":"    * Con: Troublesome for users.","lastModifiedDate":"2023-04-03"},{"lineNumber":579,"author":{"gitId":"MrTwit99"},"content":"    * Con: More likely to cause bugs as compared to Alternative 1.","lastModifiedDate":"2023-04-03"},{"lineNumber":580,"author":{"gitId":"MrTwit99"},"content":"    * Con: Difficult to implement.","lastModifiedDate":"2023-04-03"},{"lineNumber":581,"author":{"gitId":"MrTwit99"},"content":"* **Alternative 3:** Perform the binding and unbinding at **BOTH** `Student` and `Parent/NOK` commands.","lastModifiedDate":"2023-04-03"},{"lineNumber":582,"author":{"gitId":"MrTwit99"},"content":"    * Pro: Easy to implement.","lastModifiedDate":"2023-04-03"},{"lineNumber":583,"author":{"gitId":"MrTwit99"},"content":"    * Con: Most likely to cause bugs among the Alternatives.","lastModifiedDate":"2023-04-03"},{"lineNumber":584,"author":{"gitId":"MrTwit99"},"content":"    * Con: Did not adopt Defensive Coding.","lastModifiedDate":"2023-04-03"},{"lineNumber":585,"author":{"gitId":"MrTwit99"},"content":"    * Con: Requires exhaustive testing and automated tests to reduce bugs.","lastModifiedDate":"2023-04-03"},{"lineNumber":586,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":587,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":588,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":589,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":590,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":591,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":592,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"planned-enhancements\"/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":593,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":594,"author":{"gitId":"MrTwit99"},"content":"## Planned Enhancements","lastModifiedDate":"2023-04-05"},{"lineNumber":595,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":596,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"enhancement-1-name-fix\"/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":597,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":598,"author":{"gitId":"MrTwit99"},"content":"#### Enhancement 1: Name Fix","lastModifiedDate":"2023-04-05"},{"lineNumber":599,"author":{"gitId":"MrTwit99"},"content":"Bug Report: [PE-D][Tester B] Edit Student: name can be numbers, Issue #179.","lastModifiedDate":"2023-04-09"},{"lineNumber":600,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":601,"author":{"gitId":"MrTwit99"},"content":"Feature Flaw: User is able to input numbers into `Student`\u0027s `Name` and `Parent/NOK`\u0027s `Name`.","lastModifiedDate":"2023-04-09"},{"lineNumber":602,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":603,"author":{"gitId":"MrTwit99"},"content":"Fix: Update `Name.java` file\u0027s line 19 code such that it will **ONLY** accept alphabets and spacing.","lastModifiedDate":"2023-04-05"},{"lineNumber":604,"author":{"gitId":"MrTwit99"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":605,"author":{"gitId":"MrTwit99"},"content":"From:","lastModifiedDate":"2023-04-05"},{"lineNumber":606,"author":{"gitId":"MrTwit99"},"content":"public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-04-05"},{"lineNumber":607,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":608,"author":{"gitId":"MrTwit99"},"content":"To:","lastModifiedDate":"2023-04-05"},{"lineNumber":609,"author":{"gitId":"MrTwit99"},"content":"public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alpha}][\\\\p{Alpha} ]*\";","lastModifiedDate":"2023-04-05"},{"lineNumber":610,"author":{"gitId":"MrTwit99"},"content":"```","lastModifiedDate":"2023-04-05"},{"lineNumber":611,"author":{"gitId":"MrTwit99"},"content":"Note: It is perhaps possible for a person to have a name with numbers or symbols in the future. This can be seen in the case where Elon Musk tried naming his child to be [X Æ A-12](https://pagesix.com/article/elon-musk-children/).","lastModifiedDate":"2023-04-09"},{"lineNumber":612,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":613,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-05"},{"lineNumber":614,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":615,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":616,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":617,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"},{"lineNumber":618,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"enhancement-2-age-fix\"/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":619,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":620,"author":{"gitId":"MrTwit99"},"content":"#### Enhancement 2: Age Fix","lastModifiedDate":"2023-04-05"},{"lineNumber":621,"author":{"gitId":"MrTwit99"},"content":"Bug Report: [PE-D][Tester B] Edit student: age can be 0 or any extreme value, Issue #178.","lastModifiedDate":"2023-04-09"},{"lineNumber":622,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":623,"author":{"gitId":"MrTwit99"},"content":"Feature Flaw: User is able to input `Age` values like `0` or `999` when logically speaking, there wouldn\u0027t be anyone with those `Age` values. Current implementation is self-reliant on users to provide **APPROPRIATE** values.","lastModifiedDate":"2023-04-05"},{"lineNumber":624,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":625,"author":{"gitId":"MrTwit99"},"content":"Fix: Update `Age.java` file such that it **DOES NOT** allow values like `0` and has a **SOFT CAP** of 200 as current longest lifespan of humans is only 122 years. Even after **50 years**, there shouldn\u0027t be anyone who **EXCEEDS** this soft cap value.","lastModifiedDate":"2023-04-05"},{"lineNumber":626,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":627,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-05"},{"lineNumber":628,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":629,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":630,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":631,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"},{"lineNumber":632,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"enhancement-3-attendance-fix\"/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":633,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":634,"author":{"gitId":"MrTwit99"},"content":"#### Enhancement 3: Attendance Fix","lastModifiedDate":"2023-04-05"},{"lineNumber":635,"author":{"gitId":"MrTwit99"},"content":"Bug Report: [PE-D][Tester C] Unclear options for marking students as absent, Issues #174, #166, #162.","lastModifiedDate":"2023-04-09"},{"lineNumber":636,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":637,"author":{"gitId":"MrTwit99"},"content":"Feature Flaw: User is unable to set `Attendance` of a `Student` to be `Absent` once he/she is marked as `Present.","lastModifiedDate":"2023-04-05"},{"lineNumber":638,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":639,"author":{"gitId":"MrTwit99"},"content":"Fix: Update `Attendance` feature such that it allows users to set it to `Absent` and other statuses set by users, such as `Late`, `Left Home Early`, `On medical leave` and reflects the correct displaying message as well in future releases.","lastModifiedDate":"2023-04-05"},{"lineNumber":640,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":641,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-05"},{"lineNumber":642,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":643,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":644,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":645,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"},{"lineNumber":646,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"documentation-logging-testing-configuration-dev-ops\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":647,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"MrTwit99"},"content":"## **Documentation, Logging, Testing, Configuration, Dev-ops**","lastModifiedDate":"2023-03-22"},{"lineNumber":649,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":651,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":652,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":653,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":654,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":655,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":657,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":658,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":659,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":660,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"appendix-requirements\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":662,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"product-scope\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":666,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":667,"author":{"gitId":"MrTwit99"},"content":"### Product Scope","lastModifiedDate":"2023-03-22"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"mayuanxin1234"},"content":"* This product mainly targets tuition teachers and in the future, secondary school teachers that prefer CLI to GUI,  manage large groups of students and require ease of access to students\u0027 information.","lastModifiedDate":"2023-04-08"},{"lineNumber":672,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"MrTwit99"},"content":"**Value proposition**: \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":674,"author":{"gitId":"MrTwit99"},"content":"Provides teachers with the ability to manage students administration and academics efficiently by operating on CLI, to complement existing LMS.","lastModifiedDate":"2023-04-03"},{"lineNumber":675,"author":{"gitId":"MrTwit99"},"content":"* Our product uses CLI instead of GUI.","lastModifiedDate":"2023-04-09"},{"lineNumber":676,"author":{"gitId":"MrTwit99"},"content":"* Simple application for teachers to keep track of many students in different classes / co-curricular activities (CCAs) that have different phone numbers.","lastModifiedDate":"2023-04-09"},{"lineNumber":677,"author":{"gitId":"MrTwit99"},"content":"* Our application can be used individually without internet connection (currently supports single user usage ONLY).","lastModifiedDate":"2023-04-09"},{"lineNumber":678,"author":{"gitId":"MrTwit99"},"content":"* Helps to keep track of students’ parents / next-of-kins’ contact information for emergency purposes.","lastModifiedDate":"2023-04-09"},{"lineNumber":679,"author":{"gitId":"MrTwit99"},"content":"* Teachers may not be able to match students names and faces well and so this app serves as an easy way to identify students (since there are too many students).","lastModifiedDate":"2023-04-09"},{"lineNumber":680,"author":{"gitId":"MrTwit99"},"content":"* Streamline administration processes because there’s plenty of students’ information to keep track of (e.g. attendance, assignments, grades, contact details).","lastModifiedDate":"2023-04-09"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":682,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":685,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":686,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":687,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"user-stories\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":688,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"MrTwit99"},"content":"### User Stories","lastModifiedDate":"2023-03-22"},{"lineNumber":690,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"MrTwit99"},"content":"| No  | As a...                     | I can...                                                                    | So that...                                                                                                                                 | Notes                                                                                                                                     | Priority |","lastModifiedDate":"2023-03-07"},{"lineNumber":692,"author":{"gitId":"MrTwit99"},"content":"|-----|-----------------------------|-----------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|----------|","lastModifiedDate":"2023-03-07"},{"lineNumber":693,"author":{"gitId":"MrTwit99"},"content":"| 1   | Teacher                     | Record student’s attendance                                                 | I know that my student is present in class (in school).                                                                                    |                                                                                                                                           | High     |","lastModifiedDate":"2023-03-07"},{"lineNumber":694,"author":{"gitId":"MrTwit99"},"content":"| 2   | Teacher                     | Record students’ assessment and test grades.                                | I am able to manage my students’ performance.                                                                                              |                                                                                                                                           | High     |","lastModifiedDate":"2023-04-09"},{"lineNumber":695,"author":{"gitId":"MrTwit99"},"content":"| 3   | Teacher                     | Have an efficient way to view and track my students’ attendance.            | I will have an easier time managing my students’ attendance over the year.                                                                 |                                                                                                                                           | High     |","lastModifiedDate":"2023-04-09"},{"lineNumber":696,"author":{"gitId":"MrTwit99"},"content":"| 4   | Teacher                     | Have the option to leave some details empty                                 | I am able to key in my students’ information when there’s missing information.                                                             |                                                                                                                                           | High     |","lastModifiedDate":"2023-04-09"},{"lineNumber":697,"author":{"gitId":"MrTwit99"},"content":"| 5   | Teacher                     | Document students’ progress                                                 | I am able to record easily the students’ performance.                                                                                      |                                                                                                                                           | High     |","lastModifiedDate":"2023-04-09"},{"lineNumber":698,"author":{"gitId":"MrTwit99"},"content":"| 6   | Teacher                     | Organise my students by class                                               | I am able to identify which class they belong to.                                                                                          | Determine whether to create separate classes: “class” class and “student” class or merge                                                  | High     |","lastModifiedDate":"2023-04-09"},{"lineNumber":699,"author":{"gitId":"MrTwit99"},"content":"| 7   | Non tech-savvy teacher      | Learn about new commands                                                    | I am able to use the application effectively and save unnecessary time and effort in recording students’ particulars and searching for it. | Provide User Guide that is easy to understand                                                                                             | High     |","lastModifiedDate":"2023-03-07"},{"lineNumber":700,"author":{"gitId":"MrTwit99"},"content":"| 8   | Teacher                     | Recognise my students from different classes through their photos           | I am able to recognise my students\u0027 looks.                                                                                                 | Long setup process for user as they need to manually input images for individual student\u003cp\u003e\u003c/p\u003e Keeping separate file / folder for images | Medium   |","lastModifiedDate":"2023-04-09"},{"lineNumber":701,"author":{"gitId":"MrTwit99"},"content":"| 9   | Caring Teacher              | Provide comments for each student                                           | I am able to keep track of students who need meaningful feedback and support.                                                              | (comments section on each student)                                                                                                        | Medium   |","lastModifiedDate":"2023-03-07"},{"lineNumber":702,"author":{"gitId":"MrTwit99"},"content":"| 10  | Teacher / teacher assistant | Have an efficient way to retrieve my students’ contact details.             | I am able to contact them easily.                                                                                                          | Assumption: student details are known to teachers / TAs                                                                                   | Medium   |","lastModifiedDate":"2023-04-09"},{"lineNumber":703,"author":{"gitId":"MrTwit99"},"content":"| 11  | Teacher                     | Keep track of students who have submitted assignment                        | I am aware of which student missed the deadline for their work.                                                                            |                                                                                                                                           | Medium   |","lastModifiedDate":"2023-04-09"},{"lineNumber":704,"author":{"gitId":"MrTwit99"},"content":"| 12  | Motivational teacher        | Sort my students by overall grades                                          | I am able to foster a positive and supportive learning environment.                                                                        |                                                                                                                                           | Medium   |","lastModifiedDate":"2023-04-09"},{"lineNumber":705,"author":{"gitId":"MrTwit99"},"content":"| 13  | Teacher                     | Use an application that is easy to navigate about and has a nice interface. | I am able to save unnecessary time and effort in recording students’ particulars and searching for it.                                     | Issue under designs                                                                                                                       | Low      |","lastModifiedDate":"2023-03-07"},{"lineNumber":706,"author":{"gitId":"MrTwit99"},"content":"| 14  | Responsible Teacher         | Access student records, such as grades and attendance                       | I will be able to make informed decisions about student progress.                                                                          | Summary of all students grades for a particular test / class                                                                              | Low      |","lastModifiedDate":"2023-04-09"},{"lineNumber":707,"author":{"gitId":"MrTwit99"},"content":"| 15  | Busy teacher                | Have a todo list                                                            | I am able to keep track of what to do.                                                                                                     |                                                                                                                                           | Low / NA |","lastModifiedDate":"2023-04-09"},{"lineNumber":708,"author":{"gitId":"MrTwit99"},"content":"| 16  | Teacher                     | Use an application with a reminder system                                   | I am able to track the things that needs to be done.                                                                                       |                                                                                                                                           | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":709,"author":{"gitId":"MrTwit99"},"content":"| 17  | Teacher                     | Efficiently and effectively assign assessments and assignments              | I am able to better assess my students’ learning and progress.                                                                             |                                                                                                                                           | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":710,"author":{"gitId":"MrTwit99"},"content":"| 18  | Teacher                     | Managing students’ behaviours and actions                                   | I am able to promote a safe and productive learning space for all.                                                                         |                                                                                                                                           | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":711,"author":{"gitId":"MrTwit99"},"content":"| 19  | Teacher                     | Add individual feedback to students                                         | I am able to provide feedback to parents/guardians effectively.                                                                            | Duplicate point to Point 7                                                                                                                | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":712,"author":{"gitId":"MrTwit99"},"content":"| 20  | Teacher                     | Access my students contacts conveniently                                    | I am able to build a closer relationship with my students and their next of kin.                                                           | Too vague                                                                                                                                 | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":713,"author":{"gitId":"MrTwit99"},"content":"| 21  | Busy Teacher                | Keep track of my teaching feedback                                          | I can keep improving my teaching practices.                                                                                                | Hard to get school admin team on board                                                                                                    | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":714,"author":{"gitId":"MrTwit99"},"content":"| 22  | Efficient Teacher           | Integrate technology into my teaching                                       | I am able to enrich my student learning.                                                                                                   | Vague                                                                                                                                     | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":715,"author":{"gitId":"MrTwit99"},"content":"| 23  | Teacher assistant           | Retrieve my students contact                                                | I am able to look them up easily.                                                                                                          | Duplicate Point to Point 10                                                                                                               | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":716,"author":{"gitId":"MrTwit99"},"content":"| 24  | Teacher                     | Track the date and time of my classes                                       | I will be able to reach my classes on time.                                                                                                |                                                                                                                                           | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":717,"author":{"gitId":"MrTwit99"},"content":"| 25  | Forgetful teacher           | Record attendance                                                           | I am able to keep track of my students.                                                                                                    | Duplicate to Point 5                                                                                                                      | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":718,"author":{"gitId":"MrTwit99"},"content":"| 26  | Teacher                     | Identify weaker students                                                    | I can give them more attention in class.                                                                                                   | Duplicate to Point 20                                                                                                                     | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":719,"author":{"gitId":"MrTwit99"},"content":"| 27  | Teacher                     | Manage my consultation timings                                              | I am able to organise my schedule.                                                                                                         |                                                                                                                                           | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":720,"author":{"gitId":"MrTwit99"},"content":"| 28  | Teacher                     | Set reminders for my consultation timings                                   | I am able to ensure I am not late for consultations.                                                                                       |                                                                                                                                           | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":721,"author":{"gitId":"MrTwit99"},"content":"| 29  | Teacher                     | Marks my students’ assignments automatically                                | I am able to use time and effort spent on it on other use, such as thinking of ways to improve my students’ learning.                      | Difficult to implement autograder                                                                                                         | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":722,"author":{"gitId":"MrTwit99"},"content":"| 30  | Teacher                     | Have an application that is used as CLI instead of GUI                      | I am able to make use of my fast typing speed to sort out all the administrative work.                                                     | Too Vague                                                                                                                                 | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":723,"author":{"gitId":"MrTwit99"},"content":"| 31  | Busy Teacher                | Easily manage my schedule                                                   | I am able to spend more time on other things.                                                                                              | Out of scope                                                                                                                              | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":724,"author":{"gitId":"MrTwit99"},"content":"| 32  | Busy Teacher                | Know which tasks to prioritise                                              | I am able to ensure all of my responsibilities are taken care of in a timely and efficient manner.                                         |                                                                                                                                           | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":725,"author":{"gitId":"MrTwit99"},"content":"| 33  | Teacher                     | Track the date and time of the classes that I have                          | I am able to reach on time and teach the correct module for the particular lesson slot.                                                    | Out of scope                                                                                                                              | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":726,"author":{"gitId":"MrTwit99"},"content":"| 34  | Teacher                     | Amend date and time of certain lesson timings                               | I am able to change lesson dates and timings easily when lessons shift.                                                                    |                                                                                                                                           | NA       |","lastModifiedDate":"2023-04-09"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":729,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":730,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":731,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":732,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":733,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-cases\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":735,"author":{"gitId":"MrTwit99"},"content":"### Use Cases","lastModifiedDate":"2023-03-22"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"MrTwit99"},"content":"***For all use cases below, the System is PowerConnect and the Actor is the teacher, unless specified otherwise.***","lastModifiedDate":"2023-04-03"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-case-uc01---adding-a-new-student-to-an-existing-class\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"MrTwit99"},"content":"#### Use Case: UC01 - Adding a new `student` to an existing `class`.","lastModifiedDate":"2023-04-03"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":743,"author":{"gitId":"mayuanxin1234"},"content":"**Preconditions:** User knows the `index number` for the `student` and the `class` the student belongs to have already been created.","lastModifiedDate":"2023-04-08"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"mayuanxin1234"},"content":"**MSS:**","lastModifiedDate":"2023-02-25"},{"lineNumber":746,"author":{"gitId":"MrTwit99"},"content":"1. User keys in **ALL COMPULSORY** details and any other **OPTIONAL** details for student’s particulars.","lastModifiedDate":"2023-04-03"},{"lineNumber":747,"author":{"gitId":"MrTwit99"},"content":"2. System creates and adds student to respective `class` and indicates success.","lastModifiedDate":"2023-04-03"},{"lineNumber":748,"author":{"gitId":"MrTwit99"},"content":"   System creates and binds `parent` to the student if parent does not exist. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":750,"author":{"gitId":"MrTwit99"},"content":"**Extensions:**","lastModifiedDate":"2023-04-03"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":752,"author":{"gitId":"MrTwit99"},"content":"+ 1a. User did not enter **ALL COMPULSORY** details.","lastModifiedDate":"2023-04-03"},{"lineNumber":753,"author":{"gitId":"MrTwit99"},"content":"    + 1a1. System displays an error message to the user indicating that there is insufficient information given to create the new `student` and provides an example of what to include. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":754,"author":{"gitId":"MrTwit99"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":755,"author":{"gitId":"MrTwit99"},"content":"+ 1b. User keys in invalid **COMPULSORY** or **OPTIONAL** information.","lastModifiedDate":"2023-04-03"},{"lineNumber":756,"author":{"gitId":"MrTwit99"},"content":"    + 1b1. User keys in invalid `SEX` type not supported by system. (m/f/M/F)","lastModifiedDate":"2023-04-03"},{"lineNumber":757,"author":{"gitId":"MrTwit99"},"content":"    + 1b2. User keys in `age` or `phone number` that are not of an integer.","lastModifiedDate":"2023-04-03"},{"lineNumber":758,"author":{"gitId":"MrTwit99"},"content":"    + 1b3. User keys in invalid path to `image`.","lastModifiedDate":"2023-04-03"},{"lineNumber":759,"author":{"gitId":"MrTwit99"},"content":"    + 1b4. System displays an error message to the user indicating that he/she has keyed in wrong information for the `student` along with a sample of the correct way to key in information for a new `student`. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":760,"author":{"gitId":"MrTwit99"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":761,"author":{"gitId":"MrTwit99"},"content":"+ 2a. User is trying to create a new `student` whose index number belongs to an existing `student` in the class.","lastModifiedDate":"2023-04-03"},{"lineNumber":762,"author":{"gitId":"MrTwit99"},"content":"    + 2a1. System displays an error message to the user indicating that a student with the same index number already exists in the class. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":763,"author":{"gitId":"MrTwit99"},"content":"      Use case ends.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":764,"author":{"gitId":"MrTwit99"},"content":"+ 2b. Parent already exists.","lastModifiedDate":"2023-04-03"},{"lineNumber":765,"author":{"gitId":"MrTwit99"},"content":"    + 2b1. System locates and binds the parent to the student. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":766,"author":{"gitId":"MrTwit99"},"content":"      Use case ends.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":768,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":772,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":773,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-case-uc02---adding-grade-for-a-student\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":774,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":775,"author":{"gitId":"MrTwit99"},"content":"#### Use Case: UC02 - Adding `grade` for a `student`.","lastModifiedDate":"2023-04-03"},{"lineNumber":776,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":777,"author":{"gitId":"MrTwit99"},"content":"**Preconditions:** User knows `index number` and `class` of the `student` he/she wishes add `grade` for.","lastModifiedDate":"2023-04-03"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":779,"author":{"gitId":"MrTwit99"},"content":"**MSS:**","lastModifiedDate":"2023-04-03"},{"lineNumber":780,"author":{"gitId":"MrTwit99"},"content":"1. User keys in the `test` name, `class`, `index number` of student and corresponding `grade`.","lastModifiedDate":"2023-04-03"},{"lineNumber":781,"author":{"gitId":"MrTwit99"},"content":"2. System displays feedback to the user that grade has been successfully added for the student. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":782,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"mayuanxin1234"},"content":"**Extensions:**","lastModifiedDate":"2023-02-25"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"MrTwit99"},"content":"+ 1a. User keyed in an invalid `index number` or `class`.","lastModifiedDate":"2023-04-03"},{"lineNumber":787,"author":{"gitId":"MrTwit99"},"content":"    + 1a1. System displays an error message indicating the student does not exist.","lastModifiedDate":"2023-04-03"},{"lineNumber":788,"author":{"gitId":"MrTwit99"},"content":"    + 1a2. User checks for the index number and class of the student via the student list displayed on the application and keys in the correct value.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":789,"author":{"gitId":"MrTwit99"},"content":"      Use case ends.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":790,"author":{"gitId":"MrTwit99"},"content":"+ 1b. Test name is duplicate.","lastModifiedDate":"2023-04-03"},{"lineNumber":791,"author":{"gitId":"MrTwit99"},"content":"    + 1b1. System displays an error message indicating duplicated test name.","lastModifiedDate":"2023-04-03"},{"lineNumber":792,"author":{"gitId":"mayuanxin1234"},"content":"    + 1b2. User adds a new test name.","lastModifiedDate":"2023-02-25"},{"lineNumber":793,"author":{"gitId":"MrTwit99"},"content":"    + Use case resumes at step 2.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":794,"author":{"gitId":"mayuanxin1234"},"content":"+ 1c. User gave a `Grade` value that is not of an integer.","lastModifiedDate":"2023-02-25"},{"lineNumber":795,"author":{"gitId":"mayuanxin1234"},"content":"    + 1c1. System displays an error message indicating the wrong grade given.","lastModifiedDate":"2023-02-25"},{"lineNumber":796,"author":{"gitId":"MrTwit99"},"content":"    + 1c2. User checks and adds the grade input again. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":797,"author":{"gitId":"mayuanxin1234"},"content":"      Use case resumes at step 2.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":798,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":801,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":802,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":803,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":804,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-case-uc03---adding-comment-for-a-student\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":805,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":806,"author":{"gitId":"MrTwit99"},"content":"#### Use Case: UC03 - Adding `comment` for a `student`.","lastModifiedDate":"2023-04-03"},{"lineNumber":807,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":808,"author":{"gitId":"MrTwit99"},"content":"**Preconditions:** User knows `index number` and `class` of the `student` he/she wishes to add `comment`.","lastModifiedDate":"2023-04-03"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"MrTwit99"},"content":"**MSS:** Similar to UC02","lastModifiedDate":"2023-04-03"},{"lineNumber":811,"author":{"gitId":"MrTwit99"},"content":"1. User keys in the `index number` and `class` of student and the corresponding `comment` for the student.","lastModifiedDate":"2023-04-03"},{"lineNumber":812,"author":{"gitId":"MrTwit99"},"content":"2. System adds the comment for the student and indicates success. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":813,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"MrTwit99"},"content":"**Extensions:** Similar to UC02","lastModifiedDate":"2023-04-03"},{"lineNumber":816,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":817,"author":{"gitId":"MrTwit99"},"content":"+ 1a. User keyed in invalid `index number` or `class`.","lastModifiedDate":"2023-04-03"},{"lineNumber":818,"author":{"gitId":"MrTwit99"},"content":"    + 1a1. System displays an error message indicating the student does not exist.","lastModifiedDate":"2023-04-03"},{"lineNumber":819,"author":{"gitId":"MrTwit99"},"content":"    + 1a2. User checks for the index number and class of the student via the student list displayed on the application and keys in the correct value.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":820,"author":{"gitId":"MrTwit99"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":821,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":822,"author":{"gitId":"MrTwit99"},"content":"+ 2a. There is an existing comment for the student.","lastModifiedDate":"2023-04-03"},{"lineNumber":823,"author":{"gitId":"MrTwit99"},"content":"    + 2a1. System overrides the existing comment with the new comment. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":824,"author":{"gitId":"mayuanxin1234"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":825,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":826,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":827,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":828,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":829,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":830,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":831,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-case-uc04---listing-all-students-in-the-selected-class\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":832,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":833,"author":{"gitId":"MrTwit99"},"content":"#### Use Case: UC04 - Listing all `students` in the selected `class`.","lastModifiedDate":"2023-04-03"},{"lineNumber":834,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":835,"author":{"gitId":"mayuanxin1234"},"content":"**MSS:**","lastModifiedDate":"2023-02-25"},{"lineNumber":836,"author":{"gitId":"MrTwit99"},"content":"1. User keys in the command to view the list of all `students` in the selected `class`.","lastModifiedDate":"2023-04-03"},{"lineNumber":837,"author":{"gitId":"MrTwit99"},"content":"2. System displays all `students` particulars in the `class`.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":838,"author":{"gitId":"mayuanxin1234"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":839,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":840,"author":{"gitId":"MrTwit99"},"content":"**Extensions:**\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":841,"author":{"gitId":"MrTwit99"},"content":"+ 1a. User keys in an invalid `class`.","lastModifiedDate":"2023-04-03"},{"lineNumber":842,"author":{"gitId":"MrTwit99"},"content":"    + 1a1. System displays an error message to the user informing him/her the `class` is invalid.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":843,"author":{"gitId":"MrTwit99"},"content":"      Use case ends.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":844,"author":{"gitId":"MrTwit99"},"content":"+ 2a. Selected `class` does not have any `students`.","lastModifiedDate":"2023-04-03"},{"lineNumber":845,"author":{"gitId":"MrTwit99"},"content":"    + 2a1. System displays an empty list.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":846,"author":{"gitId":"MrTwit99"},"content":"      Use case ends.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":847,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":848,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":849,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":850,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":851,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":852,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":853,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-case-uc05---finding-a-student-in-a-class\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":854,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":855,"author":{"gitId":"MrTwit99"},"content":"#### Use Case: UC05 - Finding a `student` in a class.","lastModifiedDate":"2023-04-03"},{"lineNumber":856,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":857,"author":{"gitId":"MrTwit99"},"content":"**Preconditions:** User knows the `class` of the `student` he/she wishes to locate.","lastModifiedDate":"2023-04-03"},{"lineNumber":858,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":859,"author":{"gitId":"MrTwit99"},"content":"**MSS:**","lastModifiedDate":"2023-04-03"},{"lineNumber":860,"author":{"gitId":"mayuanxin1234"},"content":"1. User keys in a section of student’s name (e.g. Mary Goh - `Mary`) along with the `class` where the user wishes to find from.","lastModifiedDate":"2023-04-08"},{"lineNumber":861,"author":{"gitId":"MrTwit99"},"content":"2. System finds matching students and displays it to user.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":862,"author":{"gitId":"MrTwit99"},"content":"   Use case ends.","lastModifiedDate":"2023-04-03"},{"lineNumber":863,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":864,"author":{"gitId":"MrTwit99"},"content":"**Extensions:**","lastModifiedDate":"2023-04-03"},{"lineNumber":865,"author":{"gitId":"MrTwit99"},"content":"+ 1a. User did not enter **ALL COMPULSORY** details.","lastModifiedDate":"2023-04-03"},{"lineNumber":866,"author":{"gitId":"MrTwit99"},"content":"    + 1a1. System displays an error message to the user indicating that there is insufficient information given to create the new `student` and provides an example of what to include. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":867,"author":{"gitId":"MrTwit99"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":868,"author":{"gitId":"MrTwit99"},"content":"+ 2a. Student does not exist in the specified `class`.","lastModifiedDate":"2023-04-03"},{"lineNumber":869,"author":{"gitId":"MrTwit99"},"content":"    + 2a1. System displays an empty list.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":870,"author":{"gitId":"mayuanxin1234"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":871,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":872,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":873,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":874,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":875,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":876,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":877,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-case-uc06---deleting-student-from-class\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":878,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":879,"author":{"gitId":"MrTwit99"},"content":"#### Use Case: UC06 - Deleting `student` from class.","lastModifiedDate":"2023-04-03"},{"lineNumber":880,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":881,"author":{"gitId":"mayuanxin1234"},"content":"**Preconditions**: User knows the `index number` for the `student` and the `class` the student belongs to have already been created.","lastModifiedDate":"2023-04-08"},{"lineNumber":882,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":883,"author":{"gitId":"MrTwit99"},"content":"**MSS:**","lastModifiedDate":"2023-04-03"},{"lineNumber":884,"author":{"gitId":"MrTwit99"},"content":"1. User keys in the student `index number` and `class`.","lastModifiedDate":"2023-04-03"},{"lineNumber":885,"author":{"gitId":"MrTwit99"},"content":"2. System deletes the student from that class and indicates success.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":886,"author":{"gitId":"mayuanxin1234"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":887,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":888,"author":{"gitId":"mayuanxin1234"},"content":"**Extensions:**","lastModifiedDate":"2023-02-25"},{"lineNumber":889,"author":{"gitId":"MrTwit99"},"content":"+ 1a. User keyed in invalid `index number` or `class`.","lastModifiedDate":"2023-04-03"},{"lineNumber":890,"author":{"gitId":"MrTwit99"},"content":"    + 1a1. System displays an error message indicating the student does not exist.","lastModifiedDate":"2023-04-03"},{"lineNumber":891,"author":{"gitId":"MrTwit99"},"content":"    + 1a2. User checks for the index number and class of the student via the student list displayed on the application and keys in the correct value.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":892,"author":{"gitId":"mayuanxin1234"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":893,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":894,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":895,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":896,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":897,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":898,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":899,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-case-uc07---adding-a-new-parentnok-to-the-system\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":900,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":901,"author":{"gitId":"MrTwit99"},"content":"#### Use Case: UC07 - Adding a new `parent/NOK` to the system.","lastModifiedDate":"2023-04-03"},{"lineNumber":902,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":903,"author":{"gitId":"MrTwit99"},"content":"**MSS:** Similar to UC01","lastModifiedDate":"2023-04-03"},{"lineNumber":904,"author":{"gitId":"MrTwit99"},"content":"1. User keys in **ALL COMPULSORY** details and any other **OPTIONAL** details for parent’s / NOK\u0027s particulars.","lastModifiedDate":"2023-04-09"},{"lineNumber":905,"author":{"gitId":"MrTwit99"},"content":"2. System creates parent/NOK and adds its data into system\u0027s storage and indicates success to user. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":906,"author":{"gitId":"Diatbbin"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":907,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":908,"author":{"gitId":"Diatbbin"},"content":"**Extensions:**","lastModifiedDate":"2023-03-01"},{"lineNumber":909,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":910,"author":{"gitId":"Diatbbin"},"content":"+ 1a. User did not enter **ALL COMPULSORY** details.","lastModifiedDate":"2023-03-01"},{"lineNumber":911,"author":{"gitId":"MrTwit99"},"content":"    + 1a1. System displays an error message to the user indicating that there is insufficient information given to create the new `parent/NOK` and provides an example of what to include. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":912,"author":{"gitId":"MrTwit99"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":913,"author":{"gitId":"MrTwit99"},"content":"+ 1b. User keys in invalid **COMPULSORY** or **OPTIONAL** information.","lastModifiedDate":"2023-04-03"},{"lineNumber":914,"author":{"gitId":"MrTwit99"},"content":"    + 1b1. User keys in invalid `SEX` type not supported by system. (m/f/M/F)","lastModifiedDate":"2023-04-03"},{"lineNumber":915,"author":{"gitId":"MrTwit99"},"content":"    + 1b2. User keys in `age` or `phone number` that are not of an integer.","lastModifiedDate":"2023-04-03"},{"lineNumber":916,"author":{"gitId":"MrTwit99"},"content":"    + 1b3. User keys in invalid path to `image`.","lastModifiedDate":"2023-04-03"},{"lineNumber":917,"author":{"gitId":"MrTwit99"},"content":"    + 1b4. System displays an error message to the user indicating that he/she has keyed in wrong information for the `parent/NOK` along with a sample of the correct way to key in information for a new `parent/NOK`. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":918,"author":{"gitId":"MrTwit99"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":919,"author":{"gitId":"MrTwit99"},"content":"+ 2a. User is trying to create a new `parent/NOK` whose `phone number` belongs to an existing `parent/NOK` in the system.","lastModifiedDate":"2023-04-03"},{"lineNumber":920,"author":{"gitId":"MrTwit99"},"content":"    + 2a1. System displays an error message to the user indicating that a `parent/NOK` with the same `phone number` already exists in the system. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":921,"author":{"gitId":"MrTwit99"},"content":"      Use case ends.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":922,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":923,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":924,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":925,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":926,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":927,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":928,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-case-uc08---editing-an-existing-parentnok-in-the-system\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":929,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":930,"author":{"gitId":"MrTwit99"},"content":"#### Use Case: UC08 - Editing an existing `parent/NOK` in the system.","lastModifiedDate":"2023-04-03"},{"lineNumber":931,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":932,"author":{"gitId":"Diatbbin"},"content":"**MSS:**","lastModifiedDate":"2023-03-01"},{"lineNumber":933,"author":{"gitId":"MrTwit99"},"content":"1. User keys in parent’s / NOK\u0027s name and phone number along with the details that are being amended.","lastModifiedDate":"2023-04-03"},{"lineNumber":934,"author":{"gitId":"MrTwit99"},"content":"2. System retrieves the original parent/NOK, creates a **NEW** parent/NOK with the amended details and original particulars. At the same time, system will automatically unbind and bind all students bound to **ORIGINAL** parent/NOK and bind them accordingly to the **NEW** parent/NOK.","lastModifiedDate":"2023-04-03"},{"lineNumber":935,"author":{"gitId":"MrTwit99"},"content":"3. System replaces the ***original*** parent/NOK with the ***new*** parent/NOK.","lastModifiedDate":"2023-04-03"},{"lineNumber":936,"author":{"gitId":"MrTwit99"},"content":"4. System proceeds to indicate success to user. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":937,"author":{"gitId":"Diatbbin"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":938,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":939,"author":{"gitId":"Diatbbin"},"content":"**Extensions:**","lastModifiedDate":"2023-03-01"},{"lineNumber":940,"author":{"gitId":"MrTwit99"},"content":"+ 1a. User keyed in invalid `phone number` or `name` of the parent/NOK to be edited.","lastModifiedDate":"2023-04-03"},{"lineNumber":941,"author":{"gitId":"MrTwit99"},"content":"    + 1a1. System displays an error message indicating the parent does not exist.","lastModifiedDate":"2023-04-03"},{"lineNumber":942,"author":{"gitId":"MrTwit99"},"content":"    + 1a2. User checks for the `phone number` and `name` of the parent/NOK via the parent/NOK list displayed on the application and keys in the correct value.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":943,"author":{"gitId":"Diatbbin"},"content":"      Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":944,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":945,"author":{"gitId":"MrTwit99"},"content":"+ 1b. User keys in invalid **COMPULSORY** or **OPTIONAL** information.","lastModifiedDate":"2023-04-03"},{"lineNumber":946,"author":{"gitId":"MrTwit99"},"content":"    + 1b1. User keys in invalid `SEX` type not supported by system. (m/f/M/F)","lastModifiedDate":"2023-04-03"},{"lineNumber":947,"author":{"gitId":"MrTwit99"},"content":"    + 1b2. User keys in `age` or `phone number` that are not of an integer.","lastModifiedDate":"2023-04-03"},{"lineNumber":948,"author":{"gitId":"MrTwit99"},"content":"    + 1b3. User keys in invalid path to `image`.","lastModifiedDate":"2023-04-03"},{"lineNumber":949,"author":{"gitId":"MrTwit99"},"content":"    + 1b4. System displays an error message to the user indicating that he/she has keyed in wrong information for the `parent/NOK` along with a sample of the correct way to key in information for a new `parent/NOK`. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":950,"author":{"gitId":"MrTwit99"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":951,"author":{"gitId":"MrTwit99"},"content":"+ 2a. User is trying to edit the `parent\u0027s/NOK\u0027s` `phone number` to an existing `parent/NOK` in the system.","lastModifiedDate":"2023-04-03"},{"lineNumber":952,"author":{"gitId":"MrTwit99"},"content":"    + 2a1. System displays an error message to the user indicating that a `parent/NOK` with the same `phone number` already exists in the system. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":953,"author":{"gitId":"MrTwit99"},"content":"      Use case ends.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":954,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":955,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":956,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":957,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":958,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":959,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":960,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"use-case-uc09---deleting-a-parentnok-from-the-system\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":961,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":962,"author":{"gitId":"MrTwit99"},"content":"#### Use Case: UC09 - Deleting a `parent/NOK` from the system.","lastModifiedDate":"2023-04-03"},{"lineNumber":963,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":964,"author":{"gitId":"Diatbbin"},"content":"**MSS:**","lastModifiedDate":"2023-03-01"},{"lineNumber":965,"author":{"gitId":"MrTwit99"},"content":"1. User keys in parent’s / NOK\u0027s `name` and `phone number`.","lastModifiedDate":"2023-04-03"},{"lineNumber":966,"author":{"gitId":"MrTwit99"},"content":"2. System locates the parent / NOK with matching `name` and `phone number` and removes him/her from the system.","lastModifiedDate":"2023-04-03"},{"lineNumber":967,"author":{"gitId":"MrTwit99"},"content":"3. System proceeds to indicate success to user along with deleted `parent/NOK` details. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":968,"author":{"gitId":"Diatbbin"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":969,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":970,"author":{"gitId":"Diatbbin"},"content":"**Extensions:**","lastModifiedDate":"2023-03-01"},{"lineNumber":971,"author":{"gitId":"mayuanxin1234"},"content":"+ 1a. User keyed in invalid `phone number` or `name` of the parent/NOK to be deleted.","lastModifiedDate":"2023-04-08"},{"lineNumber":972,"author":{"gitId":"MrTwit99"},"content":"    + 1a1. System displays an error message indicating the parent does not exist.","lastModifiedDate":"2023-04-03"},{"lineNumber":973,"author":{"gitId":"MrTwit99"},"content":"    + 1a2. User checks for the `phone number` and `name` of the parent/NOK via the parent/NOK list displayed on the application and keys in the correct value.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":974,"author":{"gitId":"Diatbbin"},"content":"      Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":975,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":976,"author":{"gitId":"MrTwit99"},"content":"+ 2a. User is trying to delete a `parent/NOK` that currently has students attached.","lastModifiedDate":"2023-04-03"},{"lineNumber":977,"author":{"gitId":"MrTwit99"},"content":"    + 2a1. System displays an error message to the user indicating that the `parent/NOK` currently has students attached to him/her and hence **CANNOT** be removed from the system. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":978,"author":{"gitId":"MrTwit99"},"content":"      Use case ends.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":979,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":980,"author":{"gitId":"MrTwit99"},"content":"*{More to be added}* \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":981,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":982,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":983,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":984,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":985,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":986,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":987,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"non-functional-requirements\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":988,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":989,"author":{"gitId":"MrTwit99"},"content":"## Non-Functional Requirements","lastModifiedDate":"2023-04-03"},{"lineNumber":990,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":991,"author":{"gitId":"mayuanxin1234"},"content":"1. Should work on any mainstream OS as long as it has Java `11` or above installed.","lastModifiedDate":"2023-02-25"},{"lineNumber":992,"author":{"gitId":"mayuanxin1234"},"content":"2. Should be able to handle up to 400 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-25"},{"lineNumber":993,"author":{"gitId":"MrTwit99"},"content":"3. Should package it as a JAR file that is smaller than 50MB.","lastModifiedDate":"2023-04-09"},{"lineNumber":994,"author":{"gitId":"MrTwit99"},"content":"4. Should store data in a txt/csv file.","lastModifiedDate":"2023-04-09"},{"lineNumber":995,"author":{"gitId":"Diatbbin"},"content":"5. PowerConnect should be able to work without any internet access.","lastModifiedDate":"2023-03-01"},{"lineNumber":996,"author":{"gitId":"Diatbbin"},"content":"6. PowerConnect should only be used by a single user per installation and not by multiple users.","lastModifiedDate":"2023-03-01"},{"lineNumber":997,"author":{"gitId":"Diatbbin"},"content":"7. Users with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-03-01"},{"lineNumber":998,"author":{"gitId":"mayuanxin1234"},"content":"   able to accomplish the majority of the tasks faster using CLI commands than using the mouse.","lastModifiedDate":"2023-02-25"},{"lineNumber":999,"author":{"gitId":"securespider"},"content":"8. PowerConnect should be able to handle all user input errors gracefully.","lastModifiedDate":"2023-03-03"},{"lineNumber":1000,"author":{"gitId":"securespider"},"content":"9. PowerConnect should be able to display all error messages in a user-friendly manner.","lastModifiedDate":"2023-03-03"},{"lineNumber":1001,"author":{"gitId":"securespider"},"content":"10. PowerConnect should be able to run on a 32-bit system with 8GB of RAM.","lastModifiedDate":"2023-03-03"},{"lineNumber":1002,"author":{"gitId":"securespider"},"content":"11. PowerConnect should be able to display all success messages within 1 second.","lastModifiedDate":"2023-03-03"},{"lineNumber":1003,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1004,"author":{"gitId":"MrTwit99"},"content":"*{More to be added}* \u003cbr\u003e\u003c/br\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":1005,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1006,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":1007,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1008,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":1009,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":1010,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-02"},{"lineNumber":1011,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"glossary\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1012,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":1013,"author":{"gitId":"MrTwit99"},"content":"## Glossary","lastModifiedDate":"2023-04-03"},{"lineNumber":1014,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1015,"author":{"gitId":"MrTwit99"},"content":"**Attributes**: Information of a student / parent. \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":1016,"author":{"gitId":"MrTwit99"},"content":"For example, name, phone number, email address etc \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":1017,"author":{"gitId":"MrTwit99"},"content":"**CCA**: Co-curricular activities. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1018,"author":{"gitId":"MrTwit99"},"content":"**CLI**: Command Line Interface. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1019,"author":{"gitId":"MrTwit99"},"content":"**Hard disk**: Non-volatile data storage device, your OS\u0027s storage in short. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1020,"author":{"gitId":"MrTwit99"},"content":"**LMS**: Learning Management System, application used by schools to provide students a platform to access their lessons materials online. \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":1021,"author":{"gitId":"MrTwit99"},"content":"Examples of LMS: Canvas, LumiNUS, Blackboard, Google Classroom, Quizlet \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":1022,"author":{"gitId":"MrTwit99"},"content":"**NOK**: Refers to Next-of-Kin, could be either blood related or a guardian. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1023,"author":{"gitId":"MrTwit99"},"content":"**OS**: Operating Systems. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1024,"author":{"gitId":"MrTwit99"},"content":"Examples of OS: Windows, Linux, Unix, OS-X etc \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1025,"author":{"gitId":"MrTwit99"},"content":"**Parameters**: The actual information of a student/parent. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1026,"author":{"gitId":"MrTwit99"},"content":"For example, Tan Ah Kow, 91234567 etc. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1027,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":1028,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2023-02-25"},{"lineNumber":1029,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1030,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":1031,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1032,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":1033,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":1034,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1035,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"appendix-instructions-for-manual-testing\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1036,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1037,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1038,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1039,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1040,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1041,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1042,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1043,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1044,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1045,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1046,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"launch-and-shutdown\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1047,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1048,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1049,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1050,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1051,"author":{"gitId":"MrTwit99"},"content":"   1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2023-04-03"},{"lineNumber":1052,"author":{"gitId":"MrTwit99"},"content":"   2. Download the latest `PowerConnect.jar` from [here](https://github.com/AY2223S2-CS2103T-T09-1/tp/releases).","lastModifiedDate":"2023-04-03"},{"lineNumber":1053,"author":{"gitId":"MrTwit99"},"content":"   3. Copy the file to the folder you want to use as the _home folder_ for PowerConnect.","lastModifiedDate":"2023-04-03"},{"lineNumber":1054,"author":{"gitId":"mayuanxin1234"},"content":"   4. In the same folder, create a new folder named “image” and store all images to be used for the program in this folder. e.g. student image and parent image. For the student image, it should be named `\u003cSTUDENT_NAME\u003e\u003cCLASS\u003e\u003cINDEX NUMBER\u003e.png`. For the parent image, it should be named `\u003cPARENT_NAME\u003e.png`.","lastModifiedDate":"2023-04-08"},{"lineNumber":1055,"author":{"gitId":"mayuanxin1234"},"content":"   5. Double-click the jar file.","lastModifiedDate":"2023-04-08"},{"lineNumber":1056,"author":{"gitId":"MrTwit99"},"content":"      \u003cbr\u003e **OR** \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1057,"author":{"gitId":"MrTwit99"},"content":"      Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar PowerConnect.jar` command to run the application.","lastModifiedDate":"2023-04-03"},{"lineNumber":1058,"author":{"gitId":"MrTwit99"},"content":"   6. A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data. The window size may not be optimum.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1059,"author":{"gitId":"MrTwit99"},"content":"      ![Ui](images/Ui.png)","lastModifiedDate":"2023-04-03"},{"lineNumber":1060,"author":{"gitId":"MrTwit99"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1061,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1062,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"addingstudent\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1063,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1064,"author":{"gitId":"mayuanxin1234"},"content":"2. Adding a student","lastModifiedDate":"2023-04-07"},{"lineNumber":1065,"author":{"gitId":"mayuanxin1234"},"content":"   1. Prerequisites: There should be no student with the same class and index number as the student you are adding. Same name is allowed. List all the students with `list student` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1066,"author":{"gitId":"MrTwit99"},"content":"   2. Test case 1: `student 1A add n/TanAhCow in/03 pn/TanAhNiu pnP/91234567 rls/Father`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1067,"author":{"gitId":"MrTwit99"},"content":"      Expected: A student is added and displayed in the student list and a parent is added to the Parents/Next Of Kins(NOK) list.","lastModifiedDate":"2023-04-09"},{"lineNumber":1068,"author":{"gitId":"MrTwit99"},"content":"   3. Test case 2: `student 1A add n/Tan Ah Cow in/13 s/M pn/Tan Ah Niu pnP/91234567 rls/Father a/Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456) ageS/14 eS/tanahcow@gmail.com pnS/91234567 cca/Captain Ball att/T`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1069,"author":{"gitId":"MrTwit99"},"content":"      Expected: A student with more optional details is added and displayed in the student list and a parent is added to the Parents/Next Of Kins(NOK) list.","lastModifiedDate":"2023-04-09"},{"lineNumber":1070,"author":{"gitId":"mayuanxin1234"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1071,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"markingattendance\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1072,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1073,"author":{"gitId":"mayuanxin1234"},"content":"3. Marking attendance","lastModifiedDate":"2023-04-07"},{"lineNumber":1074,"author":{"gitId":"mayuanxin1234"},"content":"   1. Prerequisites: The date of attendance should be known, or you can mark it as T/F (True/False) for today\u0027s date. List all the students with `list student` command.","lastModifiedDate":"2023-04-08"},{"lineNumber":1075,"author":{"gitId":"MrTwit99"},"content":"   2. Test case 1: `student 3A attendance in/25 att/T`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1076,"author":{"gitId":"mayuanxin1234"},"content":"      Expected: The attendance of the student is marked as T (present) for today\u0027s date.","lastModifiedDate":"2023-04-07"},{"lineNumber":1077,"author":{"gitId":"MrTwit99"},"content":"   3. Test case 2: `student 3A attendance in/25 att/25/02/2023`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1078,"author":{"gitId":"mayuanxin1234"},"content":"      Expected: The attendance of the student is marked as F if today\u0027s date is not 25/02/2023. PowerConnect V1.4 only supports display of today\u0027s date for attendance. ","lastModifiedDate":"2023-04-07"},{"lineNumber":1079,"author":{"gitId":"mayuanxin1234"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1080,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"addinggrade\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1081,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1082,"author":{"gitId":"mayuanxin1234"},"content":"4. Adding grade (homework/test) for student","lastModifiedDate":"2023-04-07"},{"lineNumber":1083,"author":{"gitId":"mayuanxin1234"},"content":"   1. Prerequisites: The test should not have duplicate names and must be known. List all the students with `list student` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1084,"author":{"gitId":"MrTwit99"},"content":"   2. Test case 1: `student 1A grade in/13 test/CA1 score/75 weightage/10`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1085,"author":{"gitId":"mayuanxin1234"},"content":"      Expected: A test named CA1, 75 score and 10 weightage is added to the student with index number 13.","lastModifiedDate":"2023-04-07"},{"lineNumber":1086,"author":{"gitId":"MrTwit99"},"content":"   3. Test case 2: `student 1A grade in/13 hw/Chapter 1 score/75 deadline/25/04/2023 weightage/10 hwdone/true`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1087,"author":{"gitId":"mayuanxin1234"},"content":"      Expected: A homework named Chapter 1, 75 score, 10 weightage and deadline of 25/04/2023 is added to the student with index number 13.","lastModifiedDate":"2023-04-07"},{"lineNumber":1088,"author":{"gitId":"mayuanxin1234"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1089,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"deletinggrade\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1090,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1091,"author":{"gitId":"mayuanxin1234"},"content":"5. Deleting a grade (homework/test) for student","lastModifiedDate":"2023-04-07"},{"lineNumber":1092,"author":{"gitId":"mayuanxin1234"},"content":"   1. Prerequisites: You know the deleted grade name and the student index number.","lastModifiedDate":"2023-04-07"},{"lineNumber":1093,"author":{"gitId":"MrTwit99"},"content":"   2. Test case 1: `student 1A gradedelete in/13 hw/Chapter 1`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1094,"author":{"gitId":"mayuanxin1234"},"content":"      Expected: The homework named Chapter 1 is deleted from the student with index number 13.","lastModifiedDate":"2023-04-07"},{"lineNumber":1095,"author":{"gitId":"mayuanxin1234"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1096,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"addingcomment\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1097,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1098,"author":{"gitId":"mayuanxin1234"},"content":"6. Adding comments for a student","lastModifiedDate":"2023-04-07"},{"lineNumber":1099,"author":{"gitId":"mayuanxin1234"},"content":"   1. Prerequisites: You know the student index number. List all the students with `list student` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1100,"author":{"gitId":"MrTwit99"},"content":"   2. Test case 1: `student 1A comment in/25 com/Quiet person, needs to interact more with classmates`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1101,"author":{"gitId":"mayuanxin1234"},"content":"      Expected: The comment is added to the student with index number 25.","lastModifiedDate":"2023-04-07"},{"lineNumber":1102,"author":{"gitId":"mayuanxin1234"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1103,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"editingstudent\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1104,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1105,"author":{"gitId":"mayuanxin1234"},"content":"7. Edit a student","lastModifiedDate":"2023-04-07"},{"lineNumber":1106,"author":{"gitId":"mayuanxin1234"},"content":"   1. Prerequisites: List all the students with `list student` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1107,"author":{"gitId":"MrTwit99"},"content":"   2. Test case 1: `student 1A edit in/3 cca/basketball`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1108,"author":{"gitId":"mayuanxin1234"},"content":"      Expected: The student with index number 3 will have the cca changed to basketball.","lastModifiedDate":"2023-04-07"},{"lineNumber":1109,"author":{"gitId":"mayuanxin1234"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1110,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"listingstudent\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1111,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1112,"author":{"gitId":"mayuanxin1234"},"content":"8. Listing all students in a specified class","lastModifiedDate":"2023-04-07"},{"lineNumber":1113,"author":{"gitId":"mayuanxin1234"},"content":"   1. Prerequisites: List all the students with `list student` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1114,"author":{"gitId":"MrTwit99"},"content":"   2. Test case 1: `student 1A list`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1115,"author":{"gitId":"mayuanxin1234"},"content":"      Expected: All students in class 1A will be listed.","lastModifiedDate":"2023-04-07"},{"lineNumber":1116,"author":{"gitId":"mayuanxin1234"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1117,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \u0027findingstudent\u0027/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1118,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1119,"author":{"gitId":"mayuanxin1234"},"content":"9. Finding a student","lastModifiedDate":"2023-04-07"},{"lineNumber":1120,"author":{"gitId":"mayuanxin1234"},"content":"   1. Prerequisites: List all the students with `list student` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1121,"author":{"gitId":"MrTwit99"},"content":"   2. Test case 1: `student 1A find n/TanAhCow`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1122,"author":{"gitId":"mayuanxin1234"},"content":"      Expected: All students with name TanAhCow in class 1A will be listed.","lastModifiedDate":"2023-04-07"},{"lineNumber":1123,"author":{"gitId":"mayuanxin1234"},"content":"   \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1124,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"deletingstudent\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1125,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1126,"author":{"gitId":"mayuanxin1234"},"content":"10. Deleting a student ","lastModifiedDate":"2023-04-07"},{"lineNumber":1127,"author":{"gitId":"mayuanxin1234"},"content":"    1. Prerequisites: List all the students with `list student` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1128,"author":{"gitId":"MrTwit99"},"content":"    2. Test case 1: `student 1A delete in/3`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1129,"author":{"gitId":"mayuanxin1234"},"content":"       Expected: The student with index number 3 will be deleted.","lastModifiedDate":"2023-04-07"},{"lineNumber":1130,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1131,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"addingparent\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1132,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1133,"author":{"gitId":"mayuanxin1234"},"content":"11. Adding a parent","lastModifiedDate":"2023-04-07"},{"lineNumber":1134,"author":{"gitId":"mayuanxin1234"},"content":"    1. Prerequisites: List all the parents with `list parent` command. Parents can have the same name but phone numbers must be unique!","lastModifiedDate":"2023-04-07"},{"lineNumber":1135,"author":{"gitId":"MrTwit99"},"content":"    2. Test case 1: `parent add n/TanAhNiu pnP/91234567`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1136,"author":{"gitId":"mayuanxin1234"},"content":"       Expected: A parent is added and displayed in the parent list.","lastModifiedDate":"2023-04-07"},{"lineNumber":1137,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1138,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"listingparent\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1139,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1140,"author":{"gitId":"mayuanxin1234"},"content":"12. Listing all parents","lastModifiedDate":"2023-04-07"},{"lineNumber":1141,"author":{"gitId":"mayuanxin1234"},"content":"    1. Prerequisites: List all the parents with `list parent` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1142,"author":{"gitId":"MrTwit99"},"content":"    2. Test case 1: `parent list`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1143,"author":{"gitId":"mayuanxin1234"},"content":"       Expected: All parents will be listed.","lastModifiedDate":"2023-04-07"},{"lineNumber":1144,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1145,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"editingparent\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1146,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1147,"author":{"gitId":"mayuanxin1234"},"content":"13. Editing a parent","lastModifiedDate":"2023-04-07"},{"lineNumber":1148,"author":{"gitId":"mayuanxin1234"},"content":"    1. Prerequisites: List all the parents with `list parent` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1149,"author":{"gitId":"MrTwit99"},"content":"    2. Test case 1: `parent edit n/TanAhNiu pnP/91234567 npnP/65656565`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1150,"author":{"gitId":"mayuanxin1234"},"content":"       Expected: The parent with name TanAhNiu will have the phone number changed to 65656565.","lastModifiedDate":"2023-04-07"},{"lineNumber":1151,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1152,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"findingparent\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1153,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1154,"author":{"gitId":"mayuanxin1234"},"content":"14. Finding a parent","lastModifiedDate":"2023-04-07"},{"lineNumber":1155,"author":{"gitId":"mayuanxin1234"},"content":"    1. Prerequisites: List all the parents with `list parent` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1156,"author":{"gitId":"MrTwit99"},"content":"    2. Test case 1: `parent find TanAhNiu`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1157,"author":{"gitId":"mayuanxin1234"},"content":"       Expected: All parents with name TanAhNiu will be listed.","lastModifiedDate":"2023-04-07"},{"lineNumber":1158,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1159,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"deletingparent\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1160,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1161,"author":{"gitId":"mayuanxin1234"},"content":"15. Deleting a parent","lastModifiedDate":"2023-04-07"},{"lineNumber":1162,"author":{"gitId":"mayuanxin1234"},"content":"    1. Prerequisites: List all the parents with `list parent` command.","lastModifiedDate":"2023-04-07"},{"lineNumber":1163,"author":{"gitId":"MrTwit99"},"content":"    2. Test case 1: `parent delete n/TanAhCow pnP/91234566`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":1164,"author":{"gitId":"mayuanxin1234"},"content":"       Expected: The parent with name TanAhNiu and phone number 9123456 will be deleted.","lastModifiedDate":"2023-04-07"},{"lineNumber":1165,"author":{"gitId":"mayuanxin1234"},"content":"    3. Note: You CANNOT delete the parent/NOK if the parent/NOK has students BOUND to him/her. System will display an error message for this. Delete the student using student delete command first.","lastModifiedDate":"2023-04-08"},{"lineNumber":1166,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1167,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"savingwindow\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1168,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1169,"author":{"gitId":"mayuanxin1234"},"content":"16. Saving window preferences","lastModifiedDate":"2023-04-07"},{"lineNumber":1170,"author":{"gitId":"MrTwit99"},"content":"     1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2023-04-03"},{"lineNumber":1171,"author":{"gitId":"MrTwit99"},"content":"     2. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1172,"author":{"gitId":"mayuanxin1234"},"content":"        Expected: The most recent window size and location is retained. ","lastModifiedDate":"2023-04-07"},{"lineNumber":1173,"author":{"gitId":"mayuanxin1234"},"content":"     \u003cbr\u003e\u003cbr\u003e ","lastModifiedDate":"2023-04-07"},{"lineNumber":1174,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"shutdown\"/\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1175,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":1176,"author":{"gitId":"mayuanxin1234"},"content":"17. Shutdown of Application","lastModifiedDate":"2023-04-07"},{"lineNumber":1177,"author":{"gitId":"mayuanxin1234"},"content":"     1. Run the `exit` command: `exit` or press the `X` button located in the top right corner of the application.","lastModifiedDate":"2023-04-08"},{"lineNumber":1178,"author":{"gitId":"MrTwit99"},"content":"     2. The application should close within 3 seconds.","lastModifiedDate":"2023-04-03"},{"lineNumber":1179,"author":{"gitId":"mayuanxin1234"},"content":"     \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":1180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1181,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1183,"author":{"gitId":"MrTwit99"},"content":":bulb: **Tip:** In the case, PowerConnect does not boot up with a similar UI display as the image above or PowerConnect is **NOT RESPONDING**, please kindly remove all files related and download the `jar` file again.","lastModifiedDate":"2023-04-03"},{"lineNumber":1184,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1186,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **CAUTION:** \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1187,"author":{"gitId":"MrTwit99"},"content":"Testers **AVOID** terminating the application abruptly via **Task Manager**, closing the application process or any other methods that is **NOT** mentioned in the section above on Shutdown!","lastModifiedDate":"2023-04-03"},{"lineNumber":1188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1189,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1190,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1191,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1193,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":1194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":1195,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-03"},{"lineNumber":1196,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"saving-data\"/\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1197,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1198,"author":{"gitId":"MrTwit99"},"content":"### Saving data","lastModifiedDate":"2023-04-03"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1200,"author":{"gitId":"MrTwit99"},"content":"**1. Dealing with corrupted files** \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1201,"author":{"gitId":"MrTwit99"},"content":"Testers usually get corrupted files when they perform one of the **FOLLOWING** scenarios:","lastModifiedDate":"2023-04-03"},{"lineNumber":1202,"author":{"gitId":"MrTwit99"},"content":"   1. Manually editing the storage files - `parents.json` and `pcclass.json`","lastModifiedDate":"2023-04-03"},{"lineNumber":1203,"author":{"gitId":"MrTwit99"},"content":"   2. Stop the application abruptly without entering the `Exit` command. \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1205,"author":{"gitId":"MrTwit99"},"content":"**Possible Fix**: \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1206,"author":{"gitId":"MrTwit99"},"content":"Unfortunately there is no **FIX** for this issue at the moment. Tester will need to manually key in or input the data file again as PowerConnect will erase the data files (`parents.json` \u0026 `pcclass.json`) upon **NEXT** valid command execution.","lastModifiedDate":"2023-04-03"},{"lineNumber":1207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1208,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1210,"author":{"gitId":"MrTwit99"},"content":":bulb: **Tip:** Always duplicate the data files being input into PowerConnect for testing for backup copies in case of file corruption.","lastModifiedDate":"2023-04-03"},{"lineNumber":1211,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1213,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **CAUTION:** \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1214,"author":{"gitId":"MrTwit99"},"content":"Testers should **AVOID** manually amending the storage files **UNLESS** there is an error in the `edit` commands **AND** they are sure of how to amend the storage files!","lastModifiedDate":"2023-04-03"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1216,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1218,"author":{"gitId":"MrTwit99"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1220,"author":{"gitId":"MrTwit99"},"content":"**2. Dealing with missing files** \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1221,"author":{"gitId":"MrTwit99"},"content":"Testers usually get missing files when they perform one of the **FOLLOWING** scenarios:","lastModifiedDate":"2023-04-03"},{"lineNumber":1222,"author":{"gitId":"MrTwit99"},"content":"1. Changing the files / folders names (eg changing `parents.json`, `pcclass.json`, `/images/`, images names)","lastModifiedDate":"2023-04-09"},{"lineNumber":1223,"author":{"gitId":"MrTwit99"},"content":"2. Changing the files / folders location","lastModifiedDate":"2023-04-09"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1225,"author":{"gitId":"MrTwit99"},"content":"**Possible Fix:** \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1226,"author":{"gitId":"MrTwit99"},"content":"Testers can attempt to manually locate the files and folders and ensure they are named correctly as per PowerConnect\u0027s requirements.","lastModifiedDate":"2023-04-03"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1228,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1230,"author":{"gitId":"MrTwit99"},"content":":bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1231,"author":{"gitId":"MrTwit99"},"content":"Follow PowerConnect Requirements:","lastModifiedDate":"2023-04-03"},{"lineNumber":1232,"author":{"gitId":"mayuanxin1234"},"content":"1. Images should be stored as `.png` format and inside `images/student` for students or `images/parent` for parents.","lastModifiedDate":"2023-04-07"},{"lineNumber":1233,"author":{"gitId":"MrTwit99"},"content":"2. Storages files should be named as `parents.json` \u0026 `pcclass.json`.","lastModifiedDate":"2023-04-03"},{"lineNumber":1234,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1236,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **CAUTION:** \u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1237,"author":{"gitId":"mayuanxin1234"},"content":"Testers **SHOULD NOT** change directory name for `images/`, **ANY CHANGE** to image renaming should also be updated via the `edit` commands and storage files (`parents.json \u0026 `pcclass.json`) **SHOULD NOT** be renamed.","lastModifiedDate":"2023-04-07"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1239,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1240,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1241,"author":{"gitId":"MrTwit99"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1242,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1243,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-03"},{"lineNumber":1244,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":1245,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1247,"author":{"gitId":"mayuanxin1234"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"},{"lineNumber":1248,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"effort\" /\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1250,"author":{"gitId":"mayuanxin1234"},"content":"### Appendix: Effort","lastModifiedDate":"2023-04-05"},{"lineNumber":1251,"author":{"gitId":"mayuanxin1234"},"content":"The hardest part of the project was modifying the whole storage class to fit our model correctly. As we created both","lastModifiedDate":"2023-04-05"},{"lineNumber":1252,"author":{"gitId":"mayuanxin1234"},"content":"students and parents that inherited from persons, the AB3 model storage could not fit our model correctly. As such, we had","lastModifiedDate":"2023-04-05"},{"lineNumber":1253,"author":{"gitId":"mayuanxin1234"},"content":"to overhaul the whole storage package, and we also supported class functionality for students which made things even harder.\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1255,"author":{"gitId":"mayuanxin1234"},"content":"We also made linkages between parents and students to better model the relationship between students and parents. This was","lastModifiedDate":"2023-04-05"},{"lineNumber":1256,"author":{"gitId":"mayuanxin1234"},"content":"quite time-consuming as we had to make sure each command we implemented adjusted this relationship accordingly. ","lastModifiedDate":"2023-04-08"},{"lineNumber":1257,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1258,"author":{"gitId":"mayuanxin1234"},"content":"The UI package also took us quite a while as we were not really familiar with JavaFX, and we had to make sure the information ","lastModifiedDate":"2023-04-08"},{"lineNumber":1259,"author":{"gitId":"MrTwit99"},"content":"displays correctly especially with expanding number of information (tests/homework).","lastModifiedDate":"2023-04-09"},{"lineNumber":1260,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1261,"author":{"gitId":"mayuanxin1234"},"content":"The novelty of giving users both the option to specify an image path or use the images folder method to store images for students","lastModifiedDate":"2023-04-05"},{"lineNumber":1262,"author":{"gitId":"mayuanxin1234"},"content":"or parents also took us some time as we were unsure to hard code the location or not. ","lastModifiedDate":"2023-04-05"},{"lineNumber":1263,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1264,"author":{"gitId":"mayuanxin1234"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-05"},{"lineNumber":1265,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":1266,"author":{"gitId":"mayuanxin1234"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":1267,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-06"},{"lineNumber":1268,"author":{"gitId":"mayuanxin1234"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"MrTwit99":696,"securespider":28,"Diatbbin":58,"mayuanxin1234":217,"-":269}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"## PowerConnect User Guide","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"Greetings! Welcome to PowerConnect! \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"Are you looking for a simple and all in one solution for your teaching needs? Look no further. \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect is a fully customized offline application for tuition and school teachers to manage students\u0027 and parents\u0027 administrative details. We are still working to scale our features, so we mainly target tuition teachers currently. However, school teachers, do still give us a try. While our","lastModifiedDate":"2023-04-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"features are limited at this stage, we are working hard to scale them and be a useful tool in conjunction with [Learning Management System (LMS)](#glossary) tools currently in the market. \u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"We aim to make PowerConnect as simple as possible for you to use with a focus on command line interface where you don\u0027t","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"have to navigate complex user menus to access the features you need, especially if you can type fast. \u003cbr\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"Without further ado, let\u0027s get started!","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"\u003ca name\u003d\"table-of-contents\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"## Table of Contents","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"1. [Quick Start](#quick-start)","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"2. [Glossary](#glossary)","lastModifiedDate":"2023-03-30"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"3. [Features](#features)","lastModifiedDate":"2023-03-30"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    1. [Legend](#legend)","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    2. [Student Features: `student`](#student)","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"         1. [Add student: `add`](#adding-a-student-student-class-add)","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"         2. [Add attendance to students: `attendance`](#marking-attendance-for-student-student-class-attendance)","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"         3. [Add students\u0027 grade: `grade`](#adding-a-grade-for-student--student-class-grade)","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"         4. [Deletes students\u0027 grade: `gradedelete`](#deleting-a-grade-for-student--student-class-gradedelete)","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"         5. [Add comments to students: `comment`](#adding-comments-for-student--student-class-comment)","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"         6. [Listing all students in a particular class: `list`](#listing-all-students-in-the-selected-class-student-class-list)","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"         7. [Editing a student\u0027s particulars: `edit`](#edit-student-student-class-edit)","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"         8. [Searching students: `find`](#locating-students-by-name-student-class-find)","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"         9. [Deleting a student: `delete`](#deleting-student-student-class-delete)","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    3. [Parent Features: `parent`](#parent)","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        1. [Add Parent/Next-of-Kin: `add`](#adding-a-parentnok-parent-add)","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        2. [Listing all Parents/Next-of-Kins: `list`](#listing-all-parentsnoks--parent-list)","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"        3. [Editing a Parent/Next-of-Kin particulars: `edit`](#edit-parent-parent-edit)","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"        4. [Searching Parents/Next-of-Kins: `find`](#locating-parent-by-name-parent-find)","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"        5. [Deleting a Parent/Next-of-Kin: `delete`](#deleting-parent-parent-delete)","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    4. [General Features](#general)","lastModifiedDate":"2023-03-28"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"       1. [List all students / parents](#listing-students--parents-list)","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"       2. [Viewing help: `help`](#viewing-help--help)","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"       3. [Exiting program: `exit`](#exiting-the-program--exit)","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"4. [Saving the data](#saving-the-data)","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"5. [Editing the data file](#editing-the-data-file)","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"6. [Clearing the data](#clearing-the-data)","lastModifiedDate":"2023-03-31"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"7. [Images](#images-recommended-method-to-store-student-and-parentnok-images)","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"8. [FAQ](#faq)","lastModifiedDate":"2023-03-31"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"9. [Command Summary](#command-summary)","lastModifiedDate":"2023-03-31"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"   1. [Command Summary for Student](#command-summary-for-student-student-class)","lastModifiedDate":"2023-03-31"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"   2. [Command Summary for Parent](#command-summary-for-parent--nok-parent)","lastModifiedDate":"2023-04-09"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"   3. [Prefix Summary](#prefix-summary)","lastModifiedDate":"2023-03-31"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"\u003ca name\u003d\"quickstart\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"## Quick Start","lastModifiedDate":"2023-02-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"2. Download the latest `PowerConnect.jar` from [here](https://github.com/AY2223S2-CS2103T-T09-1/tp/releases).","lastModifiedDate":"2023-03-28"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for PowerConnect.","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"4. In the same folder, create a new folder named “images” and another folder named \"student\" and \"parent\" in the \"images folder\". e.g. student image and parent image. For the student image, it should be named `\u003cSTUDENT_NAME\u003e\u003cCLASS\u003e\u003cINDEX NUMBER\u003e.png`. For the parent image, it should be named `\u003cPARENT_NAME\u003e.png`. More details [here.](#images)","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"5. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar PowerConnect.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":74,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"6. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"    * `list student` : Lists all students.","lastModifiedDate":"2023-03-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"    * `student 1A add n/Tan Ah Cow in/13 s/M pn/Tan Ah Niu pnP/91234567 rls/Father` : Adds a student in class 1A named `Tan Ah Cow` to PowerConnect.","lastModifiedDate":"2023-03-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"    * `student 1A delete in/13` : Deletes the student with index number 13 in class 1A.","lastModifiedDate":"2023-04-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"    * `student 1A grade in/13 test/CA1 score/75 deadline/15/05/2023 weightage/20`: Adds a test named CA1, score of 75, deadline of 15/05/2023, weightage 20% to student index number 13 in class 1A.","lastModifiedDate":"2023-04-09"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"    * `student 1A gradedelete in/13 test/CA1`: Deletes a test named CA1 for student in class 1A with index 13.","lastModifiedDate":"2023-04-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"7. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-28"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"8. To clear the student and parent list, make use of student [delete](#deletestudent) and parent [delete](#deleteparent) commands.","lastModifiedDate":"2023-03-31"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"\u003ca name\u003d\"glossary\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"## Glossary","lastModifiedDate":"2023-03-30"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"1. Absolute Path to Image: Location where the image is stored. \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"   By default, it should be stored in the images folder as mentioned [here](#images). \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"2. Attributes: General particulars of a student/parent. \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"   For example, name, phone number, email address etc. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"3. Parameters: The actual information of a student/parent. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"   For example, Tan Ah Kow, 91234567 etc. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"4. CCA: Co-curricular activities. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"5. CLI: Command Line Interface. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"6. Hard disk: Non-volatile data storage device, your OS\u0027s storage in short. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"7. JSON: JavaScript Object Notation, open standard file format for storing text. \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"   Examples of other commonly known file formats: `.TXT`, `.DOC`, `.PDF`, `.XLS`, `.HTML` etc. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"8. LMS: Learning Management System, application used by schools to provide students a platform to access their lessons materials online. \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"   Examples of LMS: Canvas, LumiNUS, Blackboard, Google Classroom, Quizlet. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"9. NOK: Next-of-kin, could be either blood related family members or guardian. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"10. OS: Operating System. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"   Examples of OS: Windows, Linux, Mac etc. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"\u003ca name\u003d\"features\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"This section aims to provide a brief overview of the features available in PowerConnect and the appropriate [CLI](#glossary) command to call them. \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"securespider"},"content":"### Legend","lastModifiedDate":"2023-03-28"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"* Command lines supplied by the teachers are case-sensitive. You need to ensure that you have typed the command in the correct case.","lastModifiedDate":"2023-04-03"},{"lineNumber":134,"author":{"gitId":"Diatbbin"},"content":"  e.g. in the list feature, you can call it via this method:","lastModifiedDate":"2023-04-02"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"  `student 5A list`. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":136,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":137,"author":{"gitId":"Diatbbin"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the teachers.","lastModifiedDate":"2023-04-02"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"  e.g. in `…add \u003cNAME\u003e...`, `NAME` is a parameter which can be used as `…add John…`. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"Diatbbin"},"content":"* Items in `\u003c\u003e` brackets are the values that the teachers should fill in and is compulsory.","lastModifiedDate":"2023-04-02"},{"lineNumber":141,"author":{"gitId":"MrTwit99"},"content":"  e.g. in `…add \u003cNAME\u003e…` , `NAME` is a parameter that needs to be included, can be used as `…add John…`. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"* All items in the square brackets are OPTIONAL.","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"  e.g. in `…add…[..c/[CCA].. ]...` , `CCA` is an optional parameter that need not be given by the teachers and can be skipped, can be used as `…add…`  or `…add…c/Mathematics Club nok/…`. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"* `Names` **may** contain **numbers**! PowerConnect supports this flexibility as we understand some parents name their child after numbers.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"* You **SHOULD** choose **VALID** values (positive numbers) for `Age` although you are **NOT LIMITED** to setting it to **0** or other non-conventional values like **999**.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"* PowerConnect does not verify if the input phone number is valid for the country (e.g. Singapore), please ensure that you input the phone number correctly.","lastModifiedDate":"2023-04-05"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"* Phone numbers should only contain numbers and must be at least 3 digits long. ","lastModifiedDate":"2023-04-05"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"* Student Particulars:","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"securespider"},"content":"  * Compulsory:","lastModifiedDate":"2023-03-28"},{"lineNumber":157,"author":{"gitId":"securespider"},"content":"    - Name n/\u003c**NAME**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":158,"author":{"gitId":"securespider"},"content":"      -  Student\u0027s name","lastModifiedDate":"2023-03-28"},{"lineNumber":159,"author":{"gitId":"securespider"},"content":"    - Class \u003c**CLASS**\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"securespider"},"content":"      - Student\u0027s class","lastModifiedDate":"2023-03-28"},{"lineNumber":161,"author":{"gitId":"securespider"},"content":"    - Index Number in/\u003c**INDEX_NUMBER**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":162,"author":{"gitId":"securespider"},"content":"      - Number value of student\u0027s index number","lastModifiedDate":"2023-03-28"},{"lineNumber":163,"author":{"gitId":"securespider"},"content":"    - Parents/ Next-of-kin pn/\u003c**PARENT/NOK**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"      - Parent\u0027s/ Next-of-kin\u0027s name","lastModifiedDate":"2023-04-05"},{"lineNumber":165,"author":{"gitId":"securespider"},"content":"    - Parents/ Next-of-kin pnP/\u003c**PARENT/NOK_PHONE_NUMBER**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"      - Parent\u0027s/ Next-of-kin\u0027s phone number","lastModifiedDate":"2023-04-05"},{"lineNumber":167,"author":{"gitId":"securespider"},"content":"      - Should not include country code","lastModifiedDate":"2023-03-28"},{"lineNumber":168,"author":{"gitId":"securespider"},"content":"    - Parents/ Next-of-kin rls/\u003c**RELATIONSHIP**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"      - Relationship between student and parent/ Next-of-kin","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"  * Optional:","lastModifiedDate":"2023-03-25"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"    - Age ageS/[**AGE**]","lastModifiedDate":"2023-04-02"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"        - Numerical value of student\u0027s age","lastModifiedDate":"2023-04-02"},{"lineNumber":173,"author":{"gitId":"securespider"},"content":"    - Sex s/[**SEX**]","lastModifiedDate":"2023-03-28"},{"lineNumber":174,"author":{"gitId":"securespider"},"content":"      - Student\u0027s gender","lastModifiedDate":"2023-03-28"},{"lineNumber":175,"author":{"gitId":"mayuanxin1234"},"content":"      - Should be either M or F (case-insensitive)","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"securespider"},"content":"    - CCA c/[**CCA**]","lastModifiedDate":"2023-03-28"},{"lineNumber":177,"author":{"gitId":"securespider"},"content":"      - Student\u0027s CCA","lastModifiedDate":"2023-03-28"},{"lineNumber":178,"author":{"gitId":"securespider"},"content":"    - Comments com/[**COMMENTS**]","lastModifiedDate":"2023-03-28"},{"lineNumber":179,"author":{"gitId":"securespider"},"content":"      - Student\u0027s comments","lastModifiedDate":"2023-03-28"},{"lineNumber":180,"author":{"gitId":"securespider"},"content":"    - Image imgS/[**IMAGE**]","lastModifiedDate":"2023-03-28"},{"lineNumber":181,"author":{"gitId":"securespider"},"content":"      - Student\u0027s image","lastModifiedDate":"2023-03-28"},{"lineNumber":182,"author":{"gitId":"securespider"},"content":"      - Should be in .png format","lastModifiedDate":"2023-03-28"},{"lineNumber":183,"author":{"gitId":"securespider"},"content":"      - Should be named \u003cSTUDENT_NAME\u003e\u003cCLASS\u003e\u003cINDEX NUMBER\u003e.png","lastModifiedDate":"2023-03-28"},{"lineNumber":184,"author":{"gitId":"securespider"},"content":"      - Should be stored in the image folder","lastModifiedDate":"2023-03-28"},{"lineNumber":185,"author":{"gitId":"securespider"},"content":"    - Residential address a/[**RESIDENTIAL_ADDRESS**]","lastModifiedDate":"2023-03-28"},{"lineNumber":186,"author":{"gitId":"securespider"},"content":"      - Student\u0027s residential address","lastModifiedDate":"2023-03-28"},{"lineNumber":187,"author":{"gitId":"securespider"},"content":"    - Email e/[**EMAIL**]","lastModifiedDate":"2023-03-28"},{"lineNumber":188,"author":{"gitId":"securespider"},"content":"      - Student\u0027s email address","lastModifiedDate":"2023-03-28"},{"lineNumber":189,"author":{"gitId":"securespider"},"content":"    - Phone number pnS/[**PHONE_NUMBER**]","lastModifiedDate":"2023-03-28"},{"lineNumber":190,"author":{"gitId":"securespider"},"content":"      - Student\u0027s phone number","lastModifiedDate":"2023-03-28"},{"lineNumber":191,"author":{"gitId":"securespider"},"content":"      - Should not include country code","lastModifiedDate":"2023-03-28"},{"lineNumber":192,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":193,"author":{"gitId":"securespider"},"content":"  *  Academics:","lastModifiedDate":"2023-03-28"},{"lineNumber":194,"author":{"gitId":"securespider"},"content":"      - Attendance att/\u003c**ATTENDANCE**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":195,"author":{"gitId":"securespider"},"content":"          - Can be T/F/`Date`","lastModifiedDate":"2023-03-28"},{"lineNumber":196,"author":{"gitId":"securespider"},"content":"      - Test test/\u003c**TEST_NAME**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":197,"author":{"gitId":"mayuanxin1234"},"content":"        - String value of test name","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"securespider"},"content":"      - Homework hw/\u003c**HOMEWORK**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":199,"author":{"gitId":"mayuanxin1234"},"content":"          - String value of homework name","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"securespider"},"content":"      - Grade gde/\u003c**GRADE**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":201,"author":{"gitId":"mayuanxin1234"},"content":"          - String value of grade results","lastModifiedDate":"2023-02-18"},{"lineNumber":202,"author":{"gitId":"securespider"},"content":"      - Tags t/\u003c**TAGS**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":203,"author":{"gitId":"securespider"},"content":"          - String value of tags","lastModifiedDate":"2023-03-28"},{"lineNumber":204,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":205,"author":{"gitId":"securespider"},"content":"* Parent / Guardians Particular","lastModifiedDate":"2023-03-28"},{"lineNumber":206,"author":{"gitId":"securespider"},"content":"  * Compulsory:","lastModifiedDate":"2023-03-28"},{"lineNumber":207,"author":{"gitId":"securespider"},"content":"    - Name n/\u003c**NAME**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":208,"author":{"gitId":"securespider"},"content":"      -  Parent\u0027s name","lastModifiedDate":"2023-03-28"},{"lineNumber":209,"author":{"gitId":"securespider"},"content":"    - Phone number pnP/\u003c**PHONE_NUMBER**\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":210,"author":{"gitId":"securespider"},"content":"      - Parent\u0027s phone number","lastModifiedDate":"2023-03-28"},{"lineNumber":211,"author":{"gitId":"securespider"},"content":"      - Should not include country code","lastModifiedDate":"2023-03-28"},{"lineNumber":212,"author":{"gitId":"securespider"},"content":"  * Optional:","lastModifiedDate":"2023-03-28"},{"lineNumber":213,"author":{"gitId":"mayuanxin1234"},"content":"    - Age ageP/[**AGE**]","lastModifiedDate":"2023-04-02"},{"lineNumber":214,"author":{"gitId":"mayuanxin1234"},"content":"      - Numerical value of parent\u0027s/NOK age","lastModifiedDate":"2023-04-02"},{"lineNumber":215,"author":{"gitId":"securespider"},"content":"    - Image imgP/[**IMAGE**]","lastModifiedDate":"2023-03-28"},{"lineNumber":216,"author":{"gitId":"securespider"},"content":"      - Parent\u0027s image","lastModifiedDate":"2023-03-28"},{"lineNumber":217,"author":{"gitId":"securespider"},"content":"      - Should be in .png format","lastModifiedDate":"2023-03-28"},{"lineNumber":218,"author":{"gitId":"securespider"},"content":"      - Should be named \u003cPARENT_NAME\u003e.png","lastModifiedDate":"2023-03-28"},{"lineNumber":219,"author":{"gitId":"securespider"},"content":"      - Should be stored in the image folder","lastModifiedDate":"2023-03-28"},{"lineNumber":220,"author":{"gitId":"securespider"},"content":"    - Email e/[**EMAIL**]","lastModifiedDate":"2023-03-28"},{"lineNumber":221,"author":{"gitId":"securespider"},"content":"      - Parent\u0027s email address","lastModifiedDate":"2023-03-28"},{"lineNumber":222,"author":{"gitId":"securespider"},"content":"    - Residential address a/[**RESIDENTIAL_ADDRESS**]","lastModifiedDate":"2023-03-28"},{"lineNumber":223,"author":{"gitId":"securespider"},"content":"      - Parent\u0027s residential address","lastModifiedDate":"2023-03-28"},{"lineNumber":224,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":225,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":226,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":227,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":228,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":229,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":230,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":231,"author":{"gitId":"MrTwit99"},"content":"\u003ca name\u003d\"student\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":232,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":233,"author":{"gitId":"MrTwit99"},"content":"## General Command for Student Related features","lastModifiedDate":"2023-02-22"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"mayuanxin1234"},"content":"* For all following features that are related to `students`, start first by typing `student \u003cCLASS\u003e` before adding the respective command for the feature.\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":236,"author":{"gitId":"MrTwit99"},"content":"* Compulsory field are inside \u003c\u003e while optional fields are in [].","lastModifiedDate":"2023-04-09"},{"lineNumber":237,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":238,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":239,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":240,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name\u003d\"addstudent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"mayuanxin1234"},"content":"### Adding a Student: `student \u003cclass\u003e add`","lastModifiedDate":"2023-03-31"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"securespider"},"content":"Adds a student to the database.","lastModifiedDate":"2023-03-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":246,"author":{"gitId":"Diatbbin"},"content":"Format: `student \u003cclass\u003e add n/\u003cNAME\u003e in/\u003cINDEX_NUMBER\u003e pn/\u003cNOK_NAME\u003e pnP/\u003cNOK_CONTACT_NUMBER\u003e rls/\u003cNOK_RELATIONSHIP_TO_STUDENT\u003e [s/[SEX] a/[RESIDENTIAL_ADDRESS] ageS/[AGE] imgS/[ABSOLUTE_PATH_TO_IMAGE] eS/[EMAIL_ADDRESS] pnS/[PHONE_NUMBER] cca/[CCA] ]`","lastModifiedDate":"2023-04-02"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":248,"author":{"gitId":"MrTwit99"},"content":"***Click [HERE](#glossary) to understand `ABSOLUTE PATH TO IMAGE`!!!***","lastModifiedDate":"2023-03-30"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":250,"author":{"gitId":"mayuanxin1234"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-02-18"},{"lineNumber":251,"author":{"gitId":"mayuanxin1234"},"content":"A person with the same name and same class but different index number can exist.","lastModifiedDate":"2023-03-19"},{"lineNumber":252,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"mayuanxin1234"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":255,"author":{"gitId":"mayuanxin1234"},"content":"* `student 1A add n/TanAhCow in/03 pn/TanAhNiu pnP/91234567 rls/Father` \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":256,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":257,"author":{"gitId":"mayuanxin1234"},"content":"  *Above is a situation where some of the student\u0027s information is not given!","lastModifiedDate":"2023-03-28"},{"lineNumber":258,"author":{"gitId":"mayuanxin1234"},"content":"* `student 1A add n/Tan Ah Cow in/13 s/M pn/Tan Ah Niu pnP/91234567 rls/Father a/Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456) ageS/14 eS/tanahcow@gmail.com pnS/91234567 cca/Captain Ball att/T `","lastModifiedDate":"2023-04-02"},{"lineNumber":259,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":260,"author":{"gitId":"Diatbbin"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-03-30"},{"lineNumber":261,"author":{"gitId":"Diatbbin"},"content":"* `New student added:`","lastModifiedDate":"2023-03-30"},{"lineNumber":262,"author":{"gitId":"mayuanxin1234"},"content":"  ![add image](images/add.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":263,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":264,"author":{"gitId":"Diatbbin"},"content":"**For student image:**","lastModifiedDate":"2023-04-02"},{"lineNumber":265,"author":{"gitId":"Diatbbin"},"content":"* `Advanced` CLI users could specify the absolute file path.","lastModifiedDate":"2023-04-02"},{"lineNumber":266,"author":{"gitId":"Diatbbin"},"content":"* `beginners` could add the image to the images folder and use images/\u003cSTUDENT_NAME\u003e\u003cSTUDENT_CLASS\u003e.png as input.","lastModifiedDate":"2023-04-02"},{"lineNumber":267,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":268,"author":{"gitId":"Diatbbin"},"content":"**If the source of the image is not specified:**","lastModifiedDate":"2023-04-02"},{"lineNumber":269,"author":{"gitId":"Diatbbin"},"content":"* A Default Image of a question mark will be displayed. \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"MrTwit99"},"content":"***Click [HERE](#images-recommended-method-to-store-student-and-parentnok-images) to find out more on what to input for inserting image!!!***","lastModifiedDate":"2023-04-09"},{"lineNumber":272,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":273,"author":{"gitId":"Diatbbin"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Caution: \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":274,"author":{"gitId":"MrTwit99"},"content":"1. You cannot create two students of the same index number and same class. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":275,"author":{"gitId":"MrTwit99"},"content":"2. Upon creation of a student, a new parent is also created if the parent does not exist based on the particulars given for the parent. Otherwise, the student will get bound to the matching parent. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":276,"author":{"gitId":"MrTwit99"},"content":"3. If the image does not exist, the default image will be shown and if you choose to update the image using the folder after specifying the exact image location when using the student \u003cCLASS\u003e add command\u003c/CLASS\u003e, it will not update. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":277,"author":{"gitId":"mayuanxin1234"},"content":"Please delete the student and add without the image source path specified in the student \u003cCLASS\u003e add command\u003c/CLASS\u003e. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":278,"author":{"gitId":"MrTwit99"},"content":"4. If you have entered the `ABSOLUTE PATH TO IMAGE`, note that once the image changes location, the picture will not render properly. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":279,"author":{"gitId":"MrTwit99"},"content":"It is recommended to store the images using the folder instead. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":280,"author":{"gitId":"mayuanxin1234"},"content":"5. Student names and Parent/NOK names **may** contain **numbers**! PowerConnect supports this flexibility as we understand some parents name their child after numbers.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":281,"author":{"gitId":"mayuanxin1234"},"content":"6.You **SHOULD** choose **VALID** values (positive numbers) for `Age` although you are **NOT LIMITED** to setting it to **0** or other non-conventional values like **999**.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":282,"author":{"gitId":"mayuanxin1234"},"content":"7.PowerConnect does not verify if the input phone number is valid for the country (e.g. Singapore), please ensure that you input the phone number correctly.\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":283,"author":{"gitId":"mayuanxin1234"},"content":"8.Phone numbers should only contain numbers and must be at least 3 digits long. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":284,"author":{"gitId":"mayuanxin1234"},"content":"9. As we **ALLOW** you to create `CCA` containing **numbers** due to our beliefs that **CCAs* could have **numbers**, it is **HENCE** reliant on you to ensure the field for `CCA` is keyed in correctly. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":285,"author":{"gitId":"mayuanxin1234"},"content":"10. By default, `Attendance` is set to `F`, representing **ABSENT**. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":286,"author":{"gitId":"mayuanxin1234"},"content":"11. Attendance information displayed in the application is `Attendance` for **TODAY\u0027s** date and will be reset on a **DAILY** basis (midnight at 0000 hours).","lastModifiedDate":"2023-04-05"},{"lineNumber":287,"author":{"gitId":"securespider"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":288,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":290,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":291,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":293,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":295,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"attendance\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":297,"author":{"gitId":"mayuanxin1234"},"content":"### Marking attendance for student: `student \u003cclass\u003e attendance`","lastModifiedDate":"2023-03-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":299,"author":{"gitId":"securespider"},"content":"Marks the student as being present or allow you to define that the student was present.","lastModifiedDate":"2023-03-31"},{"lineNumber":300,"author":{"gitId":"securespider"},"content":"Ensure that if you mark the same date for the same student as being present, it will prompt that you have indeed added the same date (for verification).","lastModifiedDate":"2023-03-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":302,"author":{"gitId":"mayuanxin1234"},"content":"Format : `student \u003cclass\u003e attendance in/\u003cINDEX_NUMBER\u003e att/\u003cDATE_PRESENT\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":303,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":304,"author":{"gitId":"mayuanxin1234"},"content":"Examples:","lastModifiedDate":"2023-03-28"},{"lineNumber":305,"author":{"gitId":"mayuanxin1234"},"content":"* `student 3A attendance in/25 att/T`","lastModifiedDate":"2023-03-28"},{"lineNumber":306,"author":{"gitId":"Diatbbin"},"content":"* `student 3A attendance in/25 att/25/02/2023`","lastModifiedDate":"2023-03-30"},{"lineNumber":307,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":308,"author":{"gitId":"Diatbbin"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-03-30"},{"lineNumber":309,"author":{"gitId":"Diatbbin"},"content":"* `Attendance marked as present`","lastModifiedDate":"2023-03-30"},{"lineNumber":310,"author":{"gitId":"MrTwit99"},"content":"  ![attendance image](images/attendance.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":312,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":313,"author":{"gitId":"MrTwit99"},"content":"Date is in DD/MM/YYYY format. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":314,"author":{"gitId":"MrTwit99"},"content":"This date can be set to: \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":315,"author":{"gitId":"MrTwit99"},"content":"* T (Indicates that the student was present today) \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":316,"author":{"gitId":"MrTwit99"},"content":"* F (Default when adding student) \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":317,"author":{"gitId":"MrTwit99"},"content":"* Specific date (Used when you want to update the attendance of the student in the past)\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":318,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":320,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:** \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":321,"author":{"gitId":"mayuanxin1234"},"content":"Attendance information displayed in the application is `Attendance` for **TODAY\u0027s** date and will be reset on a **DAILY** basis (0000 hours). Hence, updating `Attendance` for past dates will not be reflected in the application. It is however still be **SAVED** in PowerConnect. Future releases will further improve the `Attendance` feature, allowing teachers to view **PAST** attendances. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":322,"author":{"gitId":"mayuanxin1234"},"content":"Future release of PowerConnect will also provide you with a wider range of attendance **TYPES* to choose from for a particular `Student`\u0027s attendance, such as `Late`, `Left school early`, `On MC`. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":323,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":325,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":327,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":329,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":331,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name\u003d\"gradestudent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"mayuanxin1234"},"content":"### Adding a grade for student : `student \u003cclass\u003e grade`","lastModifiedDate":"2023-03-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"securespider"},"content":"Adds a test OR homework grade for the student corresponding to the `INDEX_NUMBER` in the `CLASS`.","lastModifiedDate":"2023-03-31"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":337,"author":{"gitId":"securespider"},"content":"You cannot have different test/homework with the same name.","lastModifiedDate":"2023-03-31"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"Diatbbin"},"content":"Format:","lastModifiedDate":"2023-04-02"},{"lineNumber":340,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":341,"author":{"gitId":"Diatbbin"},"content":"`student \u003cclass\u003e grade in/\u003cINDEX_NUMBER\u003e test/\u003cTEST_NAME\u003e [score/[score] deadline/[DEADLINE(DD/MM/YYYY)] weightage/[WEIGHTAGE] ]`","lastModifiedDate":"2023-04-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"Diatbbin"},"content":"`student \u003cclass\u003e grade in/\u003cINDEX_NUMBER\u003e hw/\u003cHOMEWORK_NAME\u003e [score/[score] deadline/[DEADLINE(DD/MM/YYYY)] weightage/[WEIGHTAGE] hwdone/[HOMEWORK_DONE(true/false)] ]`","lastModifiedDate":"2023-04-02"},{"lineNumber":344,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":345,"author":{"gitId":"mayuanxin1234"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":346,"author":{"gitId":"mayuanxin1234"},"content":"* `student 1A grade in/13 test/CA1 score/75 weightage/10`","lastModifiedDate":"2023-03-19"},{"lineNumber":347,"author":{"gitId":"Diatbbin"},"content":"* `student 1A grade in/13 hw/homework1 score/75 deadline/25/04/2023 weightage/10 hwdone/true`\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":348,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":349,"author":{"gitId":"Diatbbin"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-03-30"},{"lineNumber":350,"author":{"gitId":"Diatbbin"},"content":"* `New test added:`","lastModifiedDate":"2023-03-30"},{"lineNumber":351,"author":{"gitId":"MrTwit99"},"content":"![add test image](images/addtest.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":352,"author":{"gitId":"Diatbbin"},"content":"* `New homework added:`","lastModifiedDate":"2023-03-30"},{"lineNumber":353,"author":{"gitId":"MrTwit99"},"content":"![add homework image](images/addhomework.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":354,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":355,"author":{"gitId":"securespider"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-31"},{"lineNumber":356,"author":{"gitId":"securespider"},"content":"* Test or Homework name is compulsory for the command to work and must not be duplicate of current tests/homework in student.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":357,"author":{"gitId":"MrTwit99"},"content":"   * Duplicate test/homework is checked through having the same name. \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":358,"author":{"gitId":"securespider"},"content":"* hwdone is compulsory for homework.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":359,"author":{"gitId":"MrTwit99"},"content":"* Score is out of 100.\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":360,"author":{"gitId":"MrTwit99"},"content":"* Weightage is out of 100%.\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":361,"author":{"gitId":"mayuanxin1234"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-19"},{"lineNumber":362,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":363,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":364,"author":{"gitId":"securespider"},"content":"Note:","lastModifiedDate":"2023-03-31"},{"lineNumber":365,"author":{"gitId":"securespider"},"content":"* Score is out of 100.\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":366,"author":{"gitId":"securespider"},"content":"* Weightage is out of 100%.","lastModifiedDate":"2023-03-31"},{"lineNumber":367,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":368,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":369,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":370,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":371,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":372,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":373,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":374,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"gradedelete\"/\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":375,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":376,"author":{"gitId":"mayuanxin1234"},"content":"### Deleting a grade for student : `student \u003cclass\u003e gradedelete`","lastModifiedDate":"2023-03-31"},{"lineNumber":377,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":378,"author":{"gitId":"securespider"},"content":"Deletes a test OR homework grade for the student corresponding to the `INDEX_NUMBER` in the `CLASS`.","lastModifiedDate":"2023-03-31"},{"lineNumber":379,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":380,"author":{"gitId":"securespider"},"content":"Duplicate test/homework is checked through having the same name.","lastModifiedDate":"2023-03-31"},{"lineNumber":381,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":382,"author":{"gitId":"mayuanxin1234"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-04-03"},{"lineNumber":383,"author":{"gitId":"mayuanxin1234"},"content":"Please specify only one test or homework name. Multiple names would result in PowerConnect taking the last name.","lastModifiedDate":"2023-04-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":386,"author":{"gitId":"mayuanxin1234"},"content":"Format:","lastModifiedDate":"2023-04-02"},{"lineNumber":387,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":388,"author":{"gitId":"mayuanxin1234"},"content":"`student \u003cclass\u003e gradedelete in/\u003cINDEX_NUMBER\u003e test/\u003cTEST_NAME\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":389,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":390,"author":{"gitId":"mayuanxin1234"},"content":"`student \u003cclass\u003e gradedelete in/\u003cINDEX_NUMBER\u003e hw/\u003cHOMEWORK_NAME\u003e`","lastModifiedDate":"2023-04-02"},{"lineNumber":391,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":392,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-03-19"},{"lineNumber":393,"author":{"gitId":"MrTwit99"},"content":"* `student 1A gradedelete in/13 hw/Chapter 1`","lastModifiedDate":"2023-03-31"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"Diatbbin"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-03-30"},{"lineNumber":396,"author":{"gitId":"MrTwit99"},"content":"* `Homework deleted successfully`","lastModifiedDate":"2023-03-31"},{"lineNumber":397,"author":{"gitId":"MrTwit99"},"content":"![delete homework image](images/deletehomework.png)","lastModifiedDate":"2023-03-31"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":399,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":401,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":402,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":403,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"commentstudent\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":404,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":405,"author":{"gitId":"mayuanxin1234"},"content":"### Adding comments for student : `student \u003cclass\u003e comment`","lastModifiedDate":"2023-03-31"},{"lineNumber":406,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":407,"author":{"gitId":"securespider"},"content":"Adds a comment for the student corresponding to the `INDEX_NUMBER` in the `CLASS`.","lastModifiedDate":"2023-03-31"},{"lineNumber":408,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":409,"author":{"gitId":"mayuanxin1234"},"content":"Format: `student \u003cclass\u003e comment in/\u003cINDEX_NUMBER\u003e com/\u003cCOMMENT\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":410,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"mayuanxin1234"},"content":"* `student 3A comment in/25 com/Quiet person, needs to interact more with classmates`","lastModifiedDate":"2023-03-19"},{"lineNumber":414,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":415,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:** \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":416,"author":{"gitId":"MrTwit99"},"content":"If an existing comment is already available for the selected student, the new comment will **OVERWRITE** the old comment!\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":417,"author":{"gitId":"Diatbbin"},"content":"You should check on existing comments before adding a new comment! \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":418,"author":{"gitId":"securespider"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":419,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":422,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":424,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":426,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"liststudent\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":427,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":428,"author":{"gitId":"mayuanxin1234"},"content":"### Listing all students in the selected class: `student \u003cclass\u003e list`","lastModifiedDate":"2023-03-31"},{"lineNumber":429,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":430,"author":{"gitId":"securespider"},"content":"Shows a list of all students in the selected class in the database.","lastModifiedDate":"2023-03-31"},{"lineNumber":431,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"mayuanxin1234"},"content":"Format: `student \u003cclass\u003e list`","lastModifiedDate":"2023-03-31"},{"lineNumber":433,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":434,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":435,"author":{"gitId":"mayuanxin1234"},"content":"* `student 1A list`","lastModifiedDate":"2023-03-25"},{"lineNumber":436,"author":{"gitId":"mayuanxin1234"},"content":"* `student 1B list`","lastModifiedDate":"2023-03-25"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":438,"author":{"gitId":"mayuanxin1234"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-03-28"},{"lineNumber":439,"author":{"gitId":"mayuanxin1234"},"content":"![list message](images/list.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":440,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":441,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":442,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":443,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":444,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":445,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":446,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":447,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"editstudent\" /\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":448,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":449,"author":{"gitId":"mayuanxin1234"},"content":"### Edit Student:  `student \u003cclass\u003e edit`","lastModifiedDate":"2023-03-31"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":451,"author":{"gitId":"Diatbbin"},"content":"Edits personal details of students for the student corresponding to the `INDEX_NUMBER` in the `CLASS` based on the particulars given by the teacher.","lastModifiedDate":"2023-04-02"},{"lineNumber":452,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":453,"author":{"gitId":"Diatbbin"},"content":"Format: `student \u003cclass\u003e edit in/\u003cINDEX_NUMBER\u003e [nn/[NEW_NAME] nin/[NEW_INDEX_NUMBER] nc/[NEW_CLASS] s/[SEX] ageS/[STUDENT_AGE]","lastModifiedDate":"2023-04-07"},{"lineNumber":454,"author":{"gitId":"Diatbbin"},"content":"imgS/[ABSOLUTE_PATH_TO_IMAGE] cca/[CCA] com/[COMMENTS] pnS/[STUDENT_PHONE_NUMBER] eS/[STUDENT_EMAIL] a/[ADDRESS] npn/[NEW_PARENT_NAME] npnP/[NEW_PARENT_PHONE_NUMBER] rls/[RELATIONSHIP] ]`","lastModifiedDate":"2023-04-07"},{"lineNumber":455,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":456,"author":{"gitId":"MrTwit99"},"content":"***Click [HERE](#glossary) to understand `ABSOLUTE PATH TO IMAGE`!!!***","lastModifiedDate":"2023-03-30"},{"lineNumber":457,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":458,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":459,"author":{"gitId":"Diatbbin"},"content":"* `student 1A edit in/3 cca/basketball`","lastModifiedDate":"2023-04-07"},{"lineNumber":460,"author":{"gitId":"Diatbbin"},"content":"* `student 1B edit in/4 cca/badminton ageS/23`","lastModifiedDate":"2023-04-07"},{"lineNumber":461,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":462,"author":{"gitId":"Diatbbin"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-04-07"},{"lineNumber":463,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":464,"author":{"gitId":"Diatbbin"},"content":"* `Edited student: TanAhCow; Class: 1A; Index Number: 3;`","lastModifiedDate":"2023-04-07"},{"lineNumber":465,"author":{"gitId":"Diatbbin"},"content":"* `Edited student: Bernice; Class: 1B; Index Number: 4;`","lastModifiedDate":"2023-04-07"},{"lineNumber":466,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":467,"author":{"gitId":"mayuanxin1234"},"content":"`Student list before edit:`","lastModifiedDate":"2023-04-05"},{"lineNumber":468,"author":{"gitId":"Diatbbin"},"content":"![original_edit](images/studentBeforeEdit.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":469,"author":{"gitId":"mayuanxin1234"},"content":"`Student list after edit:`","lastModifiedDate":"2023-04-05"},{"lineNumber":470,"author":{"gitId":"Diatbbin"},"content":"![after_edit](images/studentAfterEdit.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":471,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":472,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:** \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":473,"author":{"gitId":"MrTwit99"},"content":"If you want to change the parent for this student only, please kindly fill in the **NEW** parent/NOK **NAME**, **PHONE NUMBER** and **RELATIONSHIP**. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":474,"author":{"gitId":"MrTwit99"},"content":"If you want to update all students under this student\u0027s parent, please kindly use the [PARENT EDIT COMMAND](#editparent) instead!!! \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":475,"author":{"gitId":"MrTwit99"},"content":"As we **ALLOW** you to create `CCA` containing **numbers** due to our beliefs that **CCAs* could have **numbers**, it is **HENCE** reliant on you to ensure the field for `CCA` is keyed in correctly.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":476,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":477,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":478,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":479,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":480,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":481,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":482,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":483,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":484,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"findstudent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":485,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"mayuanxin1234"},"content":"### Locating students by name:  `student \u003cclass\u003e find`","lastModifiedDate":"2023-03-31"},{"lineNumber":487,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":488,"author":{"gitId":"securespider"},"content":"Finds and generates all students with matching student name and class.","lastModifiedDate":"2023-03-31"},{"lineNumber":489,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":490,"author":{"gitId":"mayuanxin1234"},"content":"Format: `student \u003cclass\u003e find \u003cNAME\u003e  `","lastModifiedDate":"2023-03-31"},{"lineNumber":491,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":492,"author":{"gitId":"mayuanxin1234"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":493,"author":{"gitId":"MrTwit99"},"content":"* `student 3B find Russel`","lastModifiedDate":"2023-03-31"},{"lineNumber":494,"author":{"gitId":"MrTwit99"},"content":"* `student 3B find Joseph`","lastModifiedDate":"2023-03-31"},{"lineNumber":495,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":496,"author":{"gitId":"mayuanxin1234"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":497,"author":{"gitId":"mayuanxin1234"},"content":"To list back all students, use the [general list](#listing)command! \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":498,"author":{"gitId":"mayuanxin1234"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":499,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":500,"author":{"gitId":"mayuanxin1234"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-02-18"},{"lineNumber":501,"author":{"gitId":"mayuanxin1234"},"content":"* Student found: Russel Ong class:3B cca: swimming grade: [sci:A, maths:B] id:26 age:14 email:ro@outlook.com ph:85349633 attendance: 2023-01-01 [y] hw: ip [x] notes:extroverted nok: David Ong","lastModifiedDate":"2023-04-02"},{"lineNumber":502,"author":{"gitId":"mayuanxin1234"},"content":"* Student found: Joseph Tan class:3B cca: basketball grade: [sci:A, maths:C] id:27 age:14 email:jo@outlook.com ph:92103134 attendance: 2023-01-01 [x] hw: ip [x] notes:shy  nok: David Tan \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":503,"author":{"gitId":"mayuanxin1234"},"content":"![student_find.png](images/studentfind.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":504,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":505,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":506,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":507,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":508,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":509,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":510,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":511,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"deletestudent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":512,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":513,"author":{"gitId":"mayuanxin1234"},"content":"### Deleting student: `student \u003cclass\u003e delete`","lastModifiedDate":"2023-03-31"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"securespider"},"content":"Deletes student corresponding to the `INDEX_NUMBER` in the `CLASS`  from the database.","lastModifiedDate":"2023-03-31"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"mayuanxin1234"},"content":"Format: `student \u003cclass\u003e delete in/\u003cINDEX_NUMBER\u003e`","lastModifiedDate":"2023-03-31"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"Diatbbin"},"content":"* `student 1A delete in/13`","lastModifiedDate":"2023-04-05"},{"lineNumber":521,"author":{"gitId":"Diatbbin"},"content":"* `student 1B delete in/23`","lastModifiedDate":"2023-03-28"},{"lineNumber":522,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":523,"author":{"gitId":"mayuanxin1234"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-03-28"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":525,"author":{"gitId":"Diatbbin"},"content":"* `Deleted Student: Tan Ah Cow; Class: 1A; Index Number: 13;`","lastModifiedDate":"2023-04-07"},{"lineNumber":526,"author":{"gitId":"Diatbbin"},"content":"* `Deleted Student: Tan Ah Niu; Class: 1B; Index Number: 23;`","lastModifiedDate":"2023-04-07"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":528,"author":{"gitId":"Diatbbin"},"content":"![student_delete.png](images/studentDeleteSuccess.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":529,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":530,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":531,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":532,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":533,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":534,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":535,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":536,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"parent\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"mayuanxin1234"},"content":"## General Command for parent related features","lastModifiedDate":"2023-02-18"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"MrTwit99"},"content":"* For all following features that are related to `parent`, start first by typing `parent`  before adding the respective command for the feature.","lastModifiedDate":"2023-03-15"},{"lineNumber":541,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":542,"author":{"gitId":"MrTwit99"},"content":"* Note that it is possible to have multiple students with the same parent and parents are identified via their phone number and *HENCE* `student class` is not used for identification.","lastModifiedDate":"2023-03-15"},{"lineNumber":543,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":544,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":545,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":546,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name\u003d\"addparent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":547,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":548,"author":{"gitId":"mayuanxin1234"},"content":"### Adding a Parent/NOK: `parent add`","lastModifiedDate":"2023-03-31"},{"lineNumber":549,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":550,"author":{"gitId":"securespider"},"content":"Adds a Parent/[NOK](#glossary) to the database.","lastModifiedDate":"2023-03-31"},{"lineNumber":551,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":552,"author":{"gitId":"Diatbbin"},"content":"Format: `parent add n/\u003cPARENT_NAME/NOK_NAME\u003e pnP/\u003cPHONE_NUMBER\u003e [ageP/[AGE] imgP/[ABSOLUTE_PATH_TO_IMAGE] e/[EMAIL_ADDRESS] a/[RESIDENTIAL_ADDRESS] ]`","lastModifiedDate":"2023-04-07"},{"lineNumber":553,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":554,"author":{"gitId":"MrTwit99"},"content":"***Click [HERE](#images) to find out more on what to input for inserting image!!!***","lastModifiedDate":"2023-03-30"},{"lineNumber":555,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":556,"author":{"gitId":"MrTwit99"},"content":"***Click [HERE](#glossary) to understand `ABSOLUTE PATH TO IMAGE`!!!***","lastModifiedDate":"2023-03-30"},{"lineNumber":557,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":558,"author":{"gitId":"Diatbbin"},"content":"Examples of Full Command:","lastModifiedDate":"2023-03-28"},{"lineNumber":559,"author":{"gitId":"MrTwit99"},"content":"* `parent add n/TanAhNiu pnP/91234567`","lastModifiedDate":"2023-03-15"},{"lineNumber":560,"author":{"gitId":"mayuanxin1234"},"content":"* `parent add n/Tan Ah Niu pnP/91234567 ageP/30 e/tanahcow@gmail.com a/Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456)` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":561,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":562,"author":{"gitId":"Diatbbin"},"content":"**Expected outcome:**","lastModifiedDate":"2023-03-28"},{"lineNumber":563,"author":{"gitId":"Diatbbin"},"content":"* `New parent added:`","lastModifiedDate":"2023-03-28"},{"lineNumber":564,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":565,"author":{"gitId":"mayuanxin1234"},"content":"![parent_add.png](images/parentadd.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":566,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":567,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":568,"author":{"gitId":"MrTwit99"},"content":"1. You cannot create two parents with the same `phone number`. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":569,"author":{"gitId":"MrTwit99"},"content":"2. If the image does not exist, the default image will be shown and if you choose to update the image using the folder [method](#images), it will not update. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":570,"author":{"gitId":"mayuanxin1234"},"content":"Please delete the parent and add without the image source path. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":571,"author":{"gitId":"MrTwit99"},"content":"3. If you have entered the `ABSOLUTE PATH TO IMAGE`, note that once the image changes location, the picture will not render properly. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":572,"author":{"gitId":"MrTwit99"},"content":"It is recommended to store the images using the folder [method](#images) instead. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":573,"author":{"gitId":"mayuanxin1234"},"content":"4. You **SHOULD** choose **VALID** values for `Age` (positive numbers) although you are **NOT LIMITED** to setting it to **0** or other non-conventional values like **999**.","lastModifiedDate":"2023-04-05"},{"lineNumber":574,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":575,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":576,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":577,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":578,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":579,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":580,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":581,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":582,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":583,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"listparent\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":584,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":585,"author":{"gitId":"mayuanxin1234"},"content":"### Listing all Parents/NOKs : `parent list`","lastModifiedDate":"2023-03-31"},{"lineNumber":586,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":587,"author":{"gitId":"securespider"},"content":"Shows a list of all Parents/[NOKs](#glossary) in the database with their corresponding particulars.","lastModifiedDate":"2023-03-31"},{"lineNumber":588,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":589,"author":{"gitId":"mayuanxin1234"},"content":"Format: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":590,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":591,"author":{"gitId":"Diatbbin"},"content":"Examples of Full Command:","lastModifiedDate":"2023-03-28"},{"lineNumber":592,"author":{"gitId":"Diatbbin"},"content":"* `list parent` \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":593,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":594,"author":{"gitId":"Diatbbin"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-03-28"},{"lineNumber":595,"author":{"gitId":"Diatbbin"},"content":"![list message](images/listParent.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":596,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":597,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":598,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":599,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":600,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":601,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":602,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":603,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"editparent\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":604,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":605,"author":{"gitId":"mayuanxin1234"},"content":"### Edit Parent: `parent edit`","lastModifiedDate":"2023-03-31"},{"lineNumber":606,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":607,"author":{"gitId":"securespider"},"content":"Edits personal details of Parent/[NOK](#glossary) with corresponding NAME and PARENT_PHONE_NUMBER.","lastModifiedDate":"2023-03-31"},{"lineNumber":608,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":609,"author":{"gitId":"Diatbbin"},"content":"Format: `Format: parent edit n/\u003cPARENT_NAME/NOK_NAME\u003e pnP/\u003cPHONE_NUMBER\u003e [nn/[NEW_NAME] npnP/[NEW_PHONE_NUMBER] ageP/[NEW_AGE] imgP/[NEW_IMAGE] e/[NEW_EMAIL_ADDRESS] a/[NEW_RESIDENTIAL_ADDRESS] ]`","lastModifiedDate":"2023-04-07"},{"lineNumber":610,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":611,"author":{"gitId":"Diatbbin"},"content":"Examples of Full Command:","lastModifiedDate":"2023-03-28"},{"lineNumber":612,"author":{"gitId":"MrTwit99"},"content":"* `parent edit n/TanAhNiu pnP/91234567 npnP/65656565`","lastModifiedDate":"2023-03-21"},{"lineNumber":613,"author":{"gitId":"Diatbbin"},"content":"* `parent edit n/Tan Ah Niu pnP/91234567 nn/Tan Ah Seng npnP/91274444 ageP/31 e/tanahcow@gmail.com a/Blk 245 Ang Mo Kio Avenue 1 #11-800 S(560245)`","lastModifiedDate":"2023-04-06"},{"lineNumber":614,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":615,"author":{"gitId":"MrTwit99"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-03-21"},{"lineNumber":616,"author":{"gitId":"Diatbbin"},"content":"* `Edited Parent: TanAhNiu; Phone number: 65656565;`","lastModifiedDate":"2023-04-06"},{"lineNumber":617,"author":{"gitId":"Diatbbin"},"content":"* `Edited Parent: Tan Ah Niu; Phone number: 91234567;` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-06"},{"lineNumber":618,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":619,"author":{"gitId":"Diatbbin"},"content":"![parent_edit](images/parentEdit.png)","lastModifiedDate":"2023-04-07"},{"lineNumber":620,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:** \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":621,"author":{"gitId":"mayuanxin1234"},"content":"You **SHOULD** choose **VALID** values for `Age` (positive numbers) although you are **NOT LIMITED** to setting it to **0** or other non-conventional values like **999**.\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":622,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":623,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":624,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":625,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":626,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":627,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":628,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":629,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":630,"author":{"gitId":"securespider"},"content":"\u003ca name \u003d \"findparent\" /\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":631,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":632,"author":{"gitId":"securespider"},"content":"### Locating parent by name:  `parent find`","lastModifiedDate":"2023-04-05"},{"lineNumber":633,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":634,"author":{"gitId":"securespider"},"content":"Finds and generates all parents with matching parent name.","lastModifiedDate":"2023-04-05"},{"lineNumber":635,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":636,"author":{"gitId":"securespider"},"content":"Format: `parent find \u003cNAME\u003e  `","lastModifiedDate":"2023-04-05"},{"lineNumber":637,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":638,"author":{"gitId":"securespider"},"content":"Examples:","lastModifiedDate":"2023-04-05"},{"lineNumber":639,"author":{"gitId":"securespider"},"content":"* `parent find Russel`","lastModifiedDate":"2023-04-05"},{"lineNumber":640,"author":{"gitId":"securespider"},"content":"* `parent find Joseph`","lastModifiedDate":"2023-04-05"},{"lineNumber":641,"author":{"gitId":"securespider"},"content":"*","lastModifiedDate":"2023-04-05"},{"lineNumber":642,"author":{"gitId":"securespider"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":643,"author":{"gitId":"securespider"},"content":"To list back all parent, use the [general list](#listing)command! \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":644,"author":{"gitId":"securespider"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":645,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":646,"author":{"gitId":"securespider"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-04-05"},{"lineNumber":647,"author":{"gitId":"securespider"},"content":"* 1 parent listed!","lastModifiedDate":"2023-04-05"},{"lineNumber":648,"author":{"gitId":"securespider"},"content":"* 2 parents listed! \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":649,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":650,"author":{"gitId":"securespider"},"content":"  ![parent_find.png](images/parentfind.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":651,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":652,"author":{"gitId":"securespider"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-05"},{"lineNumber":653,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":654,"author":{"gitId":"securespider"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":655,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":656,"author":{"gitId":"securespider"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-04-05"},{"lineNumber":657,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":658,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"deleteparent\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":659,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":660,"author":{"gitId":"mayuanxin1234"},"content":"### Deleting Parent: `parent delete`","lastModifiedDate":"2023-03-31"},{"lineNumber":661,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":662,"author":{"gitId":"Diatbbin"},"content":"Deletes parent with corresponding `NAME` and `PHONE_NUMBER` from the database.","lastModifiedDate":"2023-04-07"},{"lineNumber":663,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":664,"author":{"gitId":"Diatbbin"},"content":"Format: `parent delete n/NAME pnP/PHONE_NUMBER`","lastModifiedDate":"2023-04-07"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"Diatbbin"},"content":"* `parent delete n/TanAhCow pnP/91234566` \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":668,"author":{"gitId":"Diatbbin"},"content":"* `parent delete n/Tan Ah Niu pnP/91234567` \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":669,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":670,"author":{"gitId":"Diatbbin"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-04-07"},{"lineNumber":671,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":672,"author":{"gitId":"Diatbbin"},"content":"* `Deleted Parent: TanAhCow; Phone Number: 91234566;`","lastModifiedDate":"2023-04-07"},{"lineNumber":673,"author":{"gitId":"Diatbbin"},"content":"* `Deleted Parent: Tan Ah Niu; Phone Number: 91234567;`","lastModifiedDate":"2023-04-07"},{"lineNumber":674,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":675,"author":{"gitId":"Diatbbin"},"content":"![parent_delete_success](images/parentDeleteSuccess.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":676,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":677,"author":{"gitId":"MrTwit99"},"content":"**Note:**","lastModifiedDate":"2023-03-28"},{"lineNumber":678,"author":{"gitId":"mayuanxin1234"},"content":"1. You *CANNOT* delete the parent/[NOK](#glossary) if the parent/[NOK](#glossary) has students *BOUND* to him/her. System will display an error message for this. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-08"},{"lineNumber":679,"author":{"gitId":"mayuanxin1234"},"content":"   ![parent_delete_attach_fail](images/parentdeleteattach.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":680,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":681,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":682,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":683,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":684,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":685,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":686,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"general\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":687,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":688,"author":{"gitId":"MrTwit99"},"content":"## General Features \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":689,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":690,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"listing\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":691,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":692,"author":{"gitId":"MrTwit99"},"content":"### Listing students / parents: `list`","lastModifiedDate":"2023-03-28"},{"lineNumber":693,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":694,"author":{"gitId":"securespider"},"content":"Lists all students / parents as specified in command. \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":695,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":696,"author":{"gitId":"MrTwit99"},"content":"Format: `list student` `list parent` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":697,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":698,"author":{"gitId":"mayuanxin1234"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-04-05"},{"lineNumber":699,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":700,"author":{"gitId":"mayuanxin1234"},"content":"![list_student_success](images/list1.png)","lastModifiedDate":"2023-04-05"},{"lineNumber":701,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":702,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":703,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":704,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":705,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":706,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"help\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":707,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":708,"author":{"gitId":"mayuanxin1234"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-02-18"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"MrTwit99"},"content":"Provides a link to our UserGuide.","lastModifiedDate":"2023-03-28"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"mayuanxin1234"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-02-18"},{"lineNumber":713,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"MrTwit99"},"content":"Format: `help` \u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":715,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":716,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":717,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":718,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":719,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":720,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"exit\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":721,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"MrTwit99"},"content":"Format: `exit` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":727,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":729,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":730,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":731,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":732,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":733,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":734,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"savingdata\"/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":735,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":736,"author":{"gitId":"MrTwit99"},"content":"## Saving the data","lastModifiedDate":"2023-03-28"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"MrTwit99"},"content":"PowerConnect data are saved in the [hard disk](#glossary) automatically after any command that changes the data. There is no need to save manually. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":740,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":741,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":742,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":744,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"editdatafile\"/\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":745,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":746,"author":{"gitId":"MrTwit99"},"content":"## Editing the data file","lastModifiedDate":"2023-03-28"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":748,"author":{"gitId":"MrTwit99"},"content":"PowerConnect data are saved as a [JSON](#glossary) file `[JAR file location]/data/parents.json` and `[JAR file location]/data/pcclass.json` for respectively parents/NOKs and students. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":749,"author":{"gitId":"MrTwit99"},"content":"Advanced users are welcome to update data directly by editing that data file.addressbook.json`. \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":750,"author":{"gitId":"MrTwit99"},"content":"Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-04-09"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":752,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":753,"author":{"gitId":"MrTwit99"},"content":"If your changes to the data file makes its format invalid, PowerConnect will discard all data and start with an empty data file at the next run. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":754,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":756,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":757,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":758,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":759,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":760,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"},{"lineNumber":761,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":762,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"clearing-the-data\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":763,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":764,"author":{"gitId":"MrTwit99"},"content":"## Clearing the data","lastModifiedDate":"2023-03-31"},{"lineNumber":765,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":766,"author":{"gitId":"MrTwit99"},"content":"While PowerConnect do not currently support the `clear` function in this version, you may clear all saved `Students\u0027` and `Parents\u0027/NOKs\u0027` information in the following 2 ways:","lastModifiedDate":"2023-03-31"},{"lineNumber":767,"author":{"gitId":"MrTwit99"},"content":"1. Locate the folder `data`, double click into it and ***REMOVE*** these two files `parents.json` and `pcclass.json`.","lastModifiedDate":"2023-03-31"},{"lineNumber":768,"author":{"gitId":"MrTwit99"},"content":"2. Locate the folder `data`, double click into it, ***OPEN*** both files `parents.json` and `pcclass.json` and ***MANUALLY*** clear all data inside and save both files as ***EMPTY*** files.","lastModifiedDate":"2023-03-31"},{"lineNumber":769,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":770,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:** \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":771,"author":{"gitId":"MrTwit99"},"content":"If you happen to mess up the file data while ***EDITING*** the files mentioned above (**NOT RECOMMENDED** to edit this way **EVEN IF** you are an **EXPERIENCED USER**), you should always follow the steps above to perform a **FULL CLEAR** of data using the steps above to avoid any unwanted errors! \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":772,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":774,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:** \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":775,"author":{"gitId":"MrTwit99"},"content":"You should also locate the folder `images`, and **REMOVE** all images within the folder to save storage space! \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":776,"author":{"gitId":"MrTwit99"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":777,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":778,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-31"},{"lineNumber":779,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":780,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":781,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":782,"author":{"gitId":"MrTwit99"},"content":"----------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-31"},{"lineNumber":783,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":784,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"images\"/\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":785,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":786,"author":{"gitId":"mayuanxin1234"},"content":"## Images (Recommended method to store student and parent/NOK images)","lastModifiedDate":"2023-04-05"},{"lineNumber":787,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":788,"author":{"gitId":"securespider"},"content":"1. In the same folder as your PowerConnect.jar file, create a new file called `images` if it does not exist. \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":789,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":790,"author":{"gitId":"securespider"},"content":"2. Place all your student images in this format: `images/student/\u003cSTUDENT_NAME\u003e\u003cSTUDENT_CLASS\u003e.png` \u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":791,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":792,"author":{"gitId":"MrTwit99"},"content":"    Place all your parent images in this format: `images/parent/\u003cPARENT_NAME\u003e.png` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":793,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":794,"author":{"gitId":"mayuanxin1234"},"content":"    Location of where images folder should be at. (Same directory of PowerConnect.jar)","lastModifiedDate":"2023-03-28"},{"lineNumber":795,"author":{"gitId":"mayuanxin1234"},"content":"![image message](images/images1.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":796,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":797,"author":{"gitId":"mayuanxin1234"},"content":"3. Inside the images\u0027 folder, create a folder called `student` and `parent` if it does not exist.","lastModifiedDate":"2023-04-08"},{"lineNumber":798,"author":{"gitId":"mayuanxin1234"},"content":"![image2 message](images/images2.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":799,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":800,"author":{"gitId":"mayuanxin1234"},"content":"    Sample of student image naming format. `images/student/\u003cSTUDENT_NAME\u003e\u003cSTUDENT_CLASS\u003e.png`","lastModifiedDate":"2023-03-28"},{"lineNumber":801,"author":{"gitId":"mayuanxin1234"},"content":"![imagestudent message](images/imagestudent.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":802,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":803,"author":{"gitId":"mayuanxin1234"},"content":"    Sample of parent image naming format. `images/parent/\u003cPARENT_NAME\u003e.png`","lastModifiedDate":"2023-03-28"},{"lineNumber":804,"author":{"gitId":"mayuanxin1234"},"content":"![imagesparent message](images/imagesparent.png)","lastModifiedDate":"2023-03-28"},{"lineNumber":805,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":806,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":807,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":808,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":810,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"faq\"/\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":812,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":813,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":814,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":815,"author":{"gitId":"mayuanxin1234"},"content":"Feel free to ask any questions [here](https://docs.google.com/forms/d/e/1FAIpQLScpZ7Gg52KQ8LRsaq_6rXoPG4nYCClzmXKeRK6lyoYP1ZQV0w/viewform), and we will get back to you as soon as possible.","lastModifiedDate":"2023-04-08"},{"lineNumber":816,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":817,"author":{"gitId":"mayuanxin1234"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-28"},{"lineNumber":818,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":819,"author":{"gitId":"mayuanxin1234"},"content":"**Q**: Where is the information stored?\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":820,"author":{"gitId":"securespider"},"content":"**A**: Data is stored locally in the ./data folder. The student and class information is stored in the file pcclass.json whereas the parents information is stored in parents.json.","lastModifiedDate":"2023-03-31"},{"lineNumber":821,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":822,"author":{"gitId":"mayuanxin1234"},"content":"**Q**: What is CLI?\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":823,"author":{"gitId":"mayuanxin1234"},"content":"**A**: Command Line Interface (CLI) is a text based user interface used to run the","lastModifiedDate":"2023-03-28"},{"lineNumber":824,"author":{"gitId":"mayuanxin1234"},"content":"program. Essentially you do not need a mouse to run this program at all!","lastModifiedDate":"2023-03-28"},{"lineNumber":825,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":826,"author":{"gitId":"mayuanxin1234"},"content":"**Q**: Do I need to pay for this product?\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":827,"author":{"gitId":"Diatbbin"},"content":"**A**: No! We made a commitment to keep this program free for all teachers. Feel free to run and use our program, but remember to like, share and comment down below any feedback.","lastModifiedDate":"2023-04-02"},{"lineNumber":828,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":829,"author":{"gitId":"mayuanxin1234"},"content":"**Q**: Why is my command not working?\u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":830,"author":{"gitId":"mayuanxin1234"},"content":"**A**: PowerConnect is particular with the prefixes (/) and they need to be in the exact format as specified in the user guide. Don’t worry, with practice, it would be second nature to you.","lastModifiedDate":"2023-03-28"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"MrTwit99"},"content":"**Q**: There are some terms that I do not understand in the User Guide...\u003cbr\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":833,"author":{"gitId":"MrTwit99"},"content":"**A**: You may refer to our [Glossary section](#glossary) to better understand the terminologies used in this User Guide!","lastModifiedDate":"2023-03-30"},{"lineNumber":834,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":835,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":836,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":837,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":838,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-30"},{"lineNumber":839,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":840,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":841,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"command-summary\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":842,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":843,"author":{"gitId":"MrTwit99"},"content":"## Command Summary","lastModifiedDate":"2023-03-28"},{"lineNumber":844,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":845,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"command-summary-for-student-student-class\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":846,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":847,"author":{"gitId":"MrTwit99"},"content":"### Command Summary for Student `student \u003cCLASS\u003e`","lastModifiedDate":"2023-03-28"},{"lineNumber":848,"author":{"gitId":"mayuanxin1234"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-31"},{"lineNumber":849,"author":{"gitId":"MrTwit99"},"content":"Need to add **student** and **class** before each command!","lastModifiedDate":"2023-04-01"},{"lineNumber":850,"author":{"gitId":"mayuanxin1234"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":851,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":852,"author":{"gitId":"mayuanxin1234"},"content":"| Action         | Format, Examples                                                                                                                                                                                                                                                                                                             |","lastModifiedDate":"2023-02-25"},{"lineNumber":853,"author":{"gitId":"Diatbbin"},"content":"|----------------|------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-07"},{"lineNumber":854,"author":{"gitId":"mayuanxin1234"},"content":"| **Add**        | `add n/\u003cNAME\u003e in/\u003cINDEX_NUMBER\u003e pn/\u003cNOK_NAME\u003e pnP/\u003cNOK_CONTACT_NUMBER\u003e rls/\u003cRELATIONSHIP\u003e [ s/[SEX] a/[RESIDENTIAL_ADDRESS] ageS/[AGE] imgS/[ABSOLUTE_PATH_TO_IMAGE] eS/[EMAIL_ADDRESS] pnS/[PHONE_NUMBER] cca/[CCA] att/[ATTENDANCE] ]`                                                                                     |","lastModifiedDate":"2023-04-02"},{"lineNumber":855,"author":{"gitId":"MrTwit99"},"content":"| **Attendance** | `attendance in/\u003cINDEX_NUMBER\u003e att/\u003cDATE_PRESENT\u003e`                                                                                                                                                                                                                                                                            |","lastModifiedDate":"2023-03-30"},{"lineNumber":856,"author":{"gitId":"Diatbbin"},"content":"| **Grade**      | `grade in/\u003cINDEX_NUMBER\u003e test/\u003cTEST_NAME\u003e or hw/\u003cHOMEWORK_NAME\u003e [score/[SCORE] deadline/[DEADLINE] weightage/[WEIGHTAGE] hwdone/[HOMEWORK DONE OR NOT] ]`                                                                                                                                                                    |","lastModifiedDate":"2023-04-02"},{"lineNumber":857,"author":{"gitId":"MrTwit99"},"content":"| **Comment**    | `comment in/\u003cINDEX_NUMBER\u003e com/\u003cCOMMENT\u003e`                                                                                                                                                                                                                                                                                    |","lastModifiedDate":"2023-03-28"},{"lineNumber":858,"author":{"gitId":"mayuanxin1234"},"content":"| **List**       | `list`                                                                                                                                                                                                                                                                                                                       |","lastModifiedDate":"2023-02-25"},{"lineNumber":859,"author":{"gitId":"Diatbbin"},"content":"| **Edit**       | `edit in/\u003cINDEX_NUMBER\u003e [nn/[NEW_NAME] nin/[NEW_INDEX_NUMBER] nc/[NEW_CLASS] s/[SEX] ageS/[STUDENT_AGE] id/[INDEX_NUMBER] imgS/[ABSOLUTE_PATH_TO_IMAGE] cca/[CCA] att/[ATTENDANCE] com/[COMMENTS] pnS/[STUDENT_PHONE_NUMBER] eS/[STUDENT_EMAIL] a/[ADDRESS] pn/[PARENT_NAME] pnP/[PARENT_PHONE_NUMBER] rls/[RELATIONSHIP] ]` |","lastModifiedDate":"2023-04-07"},{"lineNumber":860,"author":{"gitId":"MrTwit99"},"content":"| **Find**       | `find \u003cNAME\u003e `                                                                                                                                                                                                                                                                                                               |","lastModifiedDate":"2023-03-28"},{"lineNumber":861,"author":{"gitId":"MrTwit99"},"content":"| **Delete**     | `delete in/\u003cINDEX_NUMBER\u003e`                                                                                                                                                                                                                                                                                                   |","lastModifiedDate":"2023-03-28"},{"lineNumber":862,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":863,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-31"},{"lineNumber":864,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":865,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":866,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":867,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"command-summary-for-parent--nok-parent-\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":868,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":869,"author":{"gitId":"MrTwit99"},"content":"### Command Summary for Parent / NOK `parent`","lastModifiedDate":"2023-03-30"},{"lineNumber":870,"author":{"gitId":"mayuanxin1234"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2023-03-31"},{"lineNumber":871,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":872,"author":{"gitId":"mayuanxin1234"},"content":"Need to add parent before each command!!","lastModifiedDate":"2023-03-31"},{"lineNumber":873,"author":{"gitId":"mayuanxin1234"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":874,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":875,"author":{"gitId":"mayuanxin1234"},"content":"| Action     | Format, Examples                                                                                                                                                                           |","lastModifiedDate":"2023-02-25"},{"lineNumber":876,"author":{"gitId":"Diatbbin"},"content":"|------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-04-07"},{"lineNumber":877,"author":{"gitId":"mayuanxin1234"},"content":"| **Add**    | `add n/\u003cPARENT_NAME/NOK_NAME\u003e pnP/\u003cPHONE_NUMBER\u003e [ageP/[AGE] imgP/[ABSOLUTE_PATH_TO_IMAGE] e/[EMAIL_ADDRESS] a/[RESIDENTIAL_ADDRESS]`                                                      |","lastModifiedDate":"2023-04-02"},{"lineNumber":878,"author":{"gitId":"mayuanxin1234"},"content":"| **List**   | `list`                                                                                                                                                                                     |","lastModifiedDate":"2023-02-25"},{"lineNumber":879,"author":{"gitId":"Diatbbin"},"content":"| **Edit**   | `edit n/\u003cPARENT_NAME/NOK_NAME\u003e pnP/\u003cPHONE_NUMBER\u003e [nn/[NEW_NAME] npnP/[NEW_PHONE_NUMBER] ageP/[NEW_AGE] imgP/[ABSOLUTE_PATH_TO_IMAGE] e/[NEW_EMAIL_ADDRESS] a/[NEW_RESIDENTIAL_ADDRESS] ]` |","lastModifiedDate":"2023-04-07"},{"lineNumber":880,"author":{"gitId":"Diatbbin"},"content":"| **Delete** | `delete n/\u003cNAME\u003e pnP/\u003cPHONE\u003e`                                                                                                                                                              |","lastModifiedDate":"2023-04-07"},{"lineNumber":881,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":882,"author":{"gitId":"mayuanxin1234"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-05"},{"lineNumber":883,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":884,"author":{"gitId":"mayuanxin1234"},"content":"### General Command Summary","lastModifiedDate":"2023-03-31"},{"lineNumber":885,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":886,"author":{"gitId":"mayuanxin1234"},"content":"| Action     | Format, Examples             |","lastModifiedDate":"2023-03-31"},{"lineNumber":887,"author":{"gitId":"mayuanxin1234"},"content":"|------------|------------------------------|","lastModifiedDate":"2023-03-31"},{"lineNumber":888,"author":{"gitId":"mayuanxin1234"},"content":"| **List**   | `list student` `list parent` |","lastModifiedDate":"2023-03-31"},{"lineNumber":889,"author":{"gitId":"mayuanxin1234"},"content":"| **Help**   | `help`                       |","lastModifiedDate":"2023-03-31"},{"lineNumber":890,"author":{"gitId":"mayuanxin1234"},"content":"| **Exit**   | `exit`                       |","lastModifiedDate":"2023-03-31"},{"lineNumber":891,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":892,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-03-30"},{"lineNumber":893,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":894,"author":{"gitId":"MrTwit99"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":895,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":896,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"prefix-summary\"/\u003e","lastModifiedDate":"2023-03-31"},{"lineNumber":897,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":898,"author":{"gitId":"MrTwit99"},"content":"### Prefix Summary","lastModifiedDate":"2023-03-31"},{"lineNumber":899,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":900,"author":{"gitId":"MrTwit99"},"content":"| Prefix        | Prefix Details                     | Notes                                                                                                                               |","lastModifiedDate":"2023-03-31"},{"lineNumber":901,"author":{"gitId":"MrTwit99"},"content":"|---------------|------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-03-31"},{"lineNumber":902,"author":{"gitId":"MrTwit99"},"content":"| `add`         | Add Command                        | Used to identify command as an Add Command;\u003cbr\u003e\u003cbr\u003e Used in Student Add and Parent/NOK Add commands                                 |","lastModifiedDate":"2023-03-31"},{"lineNumber":903,"author":{"gitId":"MrTwit99"},"content":"| `attendance`  | Attendance Command                 | Used in Student Attendance Command;\u003cbr\u003e\u003cbr\u003e Used to input attendance for `Student`s                                                 |","lastModifiedDate":"2023-04-03"},{"lineNumber":904,"author":{"gitId":"MrTwit99"},"content":"| `comment`     | Comment Command                    | Used in Student Comment Command;\u003cbr\u003e\u003cbr\u003e Used to input comment for `Student`                                                        |","lastModifiedDate":"2023-03-31"},{"lineNumber":905,"author":{"gitId":"MrTwit99"},"content":"| `delete`      | Delete Command                     | Used to identify command as a Delete Command;\u003cbr\u003e\u003cbr\u003e Used in Student Delete and Parent/NOK Delete commands                         |","lastModifiedDate":"2023-03-31"},{"lineNumber":906,"author":{"gitId":"MrTwit99"},"content":"| `edit`        | Edit Command                       | Used to identify command as an Edit Command;\u003cbr\u003e\u003cbr\u003e Used in Student Edit and Parent Edit commands                                  |","lastModifiedDate":"2023-03-31"},{"lineNumber":907,"author":{"gitId":"MrTwit99"},"content":"| `find`        | Find Command                       | Used to identify command as a Find Command;\u003cbr\u003e\u003cbr\u003e Used in Student Find and Parent Find commands                                   |","lastModifiedDate":"2023-03-31"},{"lineNumber":908,"author":{"gitId":"MrTwit99"},"content":"| `grade`       | Grade Command                      | Used in Student Grade Command;\u003cbr\u003e\u003cbr\u003e Used to input `Student`\u0027s assessments / assignment grades                                    |","lastModifiedDate":"2023-03-31"},{"lineNumber":909,"author":{"gitId":"MrTwit99"},"content":"| `gradedelete` | Grade Delete Command               | Used in Student Grade Delete Command;\u003cbr\u003e\u003cbr\u003e Used to remove `Student`\u0027s grades for assessments / assignments                       |","lastModifiedDate":"2023-03-31"},{"lineNumber":910,"author":{"gitId":"MrTwit99"},"content":"| `list`        | List Command                       | Used to identify command as a List Command;\u003cbr\u003e\u003cbr\u003e Used in List Parent/NOK and List Student commands                               |","lastModifiedDate":"2023-03-31"},{"lineNumber":911,"author":{"gitId":"MrTwit99"},"content":"| `n/`          | Name                               | Used to retrieve `Name` of individual (`Student` / `Parent / NOK`)                                                                  |","lastModifiedDate":"2023-03-31"},{"lineNumber":912,"author":{"gitId":"MrTwit99"},"content":"| `nn/`         | New Name                           | Used to retrieve **NEW** `Name` of individual (`Student` / `Parent / NOK`)                                                          |","lastModifiedDate":"2023-03-31"},{"lineNumber":913,"author":{"gitId":"MrTwit99"},"content":"| `pn/`         | Parent/NOK Name                    | Used to retrieve `Parent/NOK`\u0027s `Name`                                                                                              |","lastModifiedDate":"2023-03-31"},{"lineNumber":914,"author":{"gitId":"MrTwit99"},"content":"| `npn/`        | New Parent/NOK Name                | Used to retrieve **NEW** `Name` of `Parent/NOK`;\u003cbr\u003e\u003cbr\u003eUsed in the case where `Parent/NOK` and/or `Student` can have **NEW** names |","lastModifiedDate":"2023-03-31"},{"lineNumber":915,"author":{"gitId":"mayuanxin1234"},"content":"| `ageS`        | Student\u0027s Age                      | Used to retrieve `Student`\u0027s `Age`                                                                                                  |","lastModifiedDate":"2023-04-02"},{"lineNumber":916,"author":{"gitId":"mayuanxin1234"},"content":"| `ageP/`       | Parent\u0027s/NOK\u0027s Age                 | Used to retrieve `Parent/NOK`\u0027s `Age`                                                                                               |","lastModifiedDate":"2023-04-02"},{"lineNumber":917,"author":{"gitId":"MrTwit99"},"content":"| `att/`        | Attendance                         | Used to retrieve `Student`\u0027s Attendance for a particular date or current date (by default)                                          |","lastModifiedDate":"2023-03-31"},{"lineNumber":918,"author":{"gitId":"MrTwit99"},"content":"| `cca/`        | CCA                                | Used to retrieve `Student`\u0027s co-curricular activity                                                                                 |","lastModifiedDate":"2023-03-31"},{"lineNumber":919,"author":{"gitId":"MrTwit99"},"content":"| `com/`        | Comment                            | Used to retrieve `Student`\u0027s comment                                                                                                |","lastModifiedDate":"2023-03-31"},{"lineNumber":920,"author":{"gitId":"MrTwit99"},"content":"| `e/`          | Parent\u0027s/NOK\u0027s Email Address       | Used to retrieve email `Address` of `Parent / NOK`                                                                                  |","lastModifiedDate":"2023-03-31"},{"lineNumber":921,"author":{"gitId":"MrTwit99"},"content":"| `eS/`         | Student\u0027s Email Address            | Used to retrieve email `Address` of `Student`                                                                                       |","lastModifiedDate":"2023-03-31"},{"lineNumber":922,"author":{"gitId":"MrTwit99"},"content":"| `a/`          | Residential Address                | Used to retrieve residential `Address` of individual (`Student` / `Parent / NOK`)                                                   |","lastModifiedDate":"2023-03-31"},{"lineNumber":923,"author":{"gitId":"MrTwit99"},"content":"| `hw/`         | Homework                           | Used to retrieve `Student`\u0027s homework                                                                                               |","lastModifiedDate":"2023-03-31"},{"lineNumber":924,"author":{"gitId":"MrTwit99"},"content":"| `imgS/`       | Student\u0027s Image                    | Used to retrieve `Student`\u0027s image                                                                                                  |","lastModifiedDate":"2023-03-31"},{"lineNumber":925,"author":{"gitId":"MrTwit99"},"content":"| `imgP/`       | Parent\u0027s Image                     | Used to retrieve `Parent`\u0027s image                                                                                                   |","lastModifiedDate":"2023-03-31"},{"lineNumber":926,"author":{"gitId":"MrTwit99"},"content":"| `in/`         | Index Number                       | Used to retrieve `Student`\u0027s `Index Number`                                                                                         |","lastModifiedDate":"2023-03-31"},{"lineNumber":927,"author":{"gitId":"MrTwit99"},"content":"| `nin/`        | New Index Number                   | Used to retrieve `Student`\u0027s **NEW** `Index Number`                                                                                 |","lastModifiedDate":"2023-03-31"},{"lineNumber":928,"author":{"gitId":"MrTwit99"},"content":"| `nc/`         | New Class                          | Used to retrieve `Student`\u0027s **NEW** `Class`                                                                                        |","lastModifiedDate":"2023-03-31"},{"lineNumber":929,"author":{"gitId":"MrTwit99"},"content":"| `pnS/`        | Student phone number               | Used to retrieve `Student`\u0027s phone number                                                                                           |","lastModifiedDate":"2023-03-31"},{"lineNumber":930,"author":{"gitId":"MrTwit99"},"content":"| `pnP/`        | Parent/NOK phone number            | Used to retrieve `Parent/NOK`\u0027s phone number                                                                                        |","lastModifiedDate":"2023-03-31"},{"lineNumber":931,"author":{"gitId":"MrTwit99"},"content":"| `npnP/`       | New Parent/NOK phone number        | Used to retrieve `Parent/NOK`\u0027s **NEW** phone number                                                                                |","lastModifiedDate":"2023-03-31"},{"lineNumber":932,"author":{"gitId":"MrTwit99"},"content":"| `rls/`        | Parent/NOK relationship to Student | Used to retrieve the relationship between the `Student` and specified `Parent/NOK`                                                  |","lastModifiedDate":"2023-03-31"},{"lineNumber":933,"author":{"gitId":"MrTwit99"},"content":"| `s/`          | Gender                             | Used to retrieve `Student`\u0027s gender                                                                                                 |","lastModifiedDate":"2023-03-31"},{"lineNumber":934,"author":{"gitId":"MrTwit99"},"content":"| `t/`          | Tag                                | Used to retrieve individual\u0027s tag (`Student` / `Parent / NOK`)                                                                      |","lastModifiedDate":"2023-03-31"},{"lineNumber":935,"author":{"gitId":"MrTwit99"},"content":"| `test/`       | Assessment                         | Used to retrieve `Student`\u0027s assessments (includes tests and exams)                                                                 |","lastModifiedDate":"2023-03-31"},{"lineNumber":936,"author":{"gitId":"MrTwit99"},"content":"| `score/`      | Assessment Score                   | Used to retrieve `Student`\u0027s score for assessment                                                                                   |","lastModifiedDate":"2023-03-31"},{"lineNumber":937,"author":{"gitId":"MrTwit99"},"content":"| `deadline/`   | Deadline                           | Used to retrieve deadline for `Student`\u0027s assignments                                                                               |","lastModifiedDate":"2023-03-31"},{"lineNumber":938,"author":{"gitId":"MrTwit99"},"content":"| `weightage/`  | Weightage                          | Used to retrieve weightage for `Student`\u0027s assignments/assessments                                                                  |","lastModifiedDate":"2023-03-31"},{"lineNumber":939,"author":{"gitId":"MrTwit99"},"content":"| `hwdone/`     | Completion Status for Assignments  | Used to retrieve the completion status for `Student`\u0027s assignments                                                                  |","lastModifiedDate":"2023-03-31"},{"lineNumber":940,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":941,"author":{"gitId":"MrTwit99"},"content":"[Back to Table of Contents](#table-of-contents)","lastModifiedDate":"2023-04-01"},{"lineNumber":942,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":943,"author":{"gitId":"MrTwit99"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-30"}],"authorContributionMap":{"MrTwit99":372,"securespider":125,"Diatbbin":83,"mayuanxin1234":240,"-":123}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"Diatbbin"},"content":"    content: \"PowerConnect\";","lastModifiedDate":"2023-03-30"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"Diatbbin":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"user -[USER_COLOR]\u003e ui : \"student delete in/1\"","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"student delete in/1\")","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteStudent(s)","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"logic -[LOGIC_COLOR]\u003e storage : savePowerConnect(powerConnect)","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":34,"mayuanxin1234":4}},{"path":"docs/diagrams/AttendanceActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"@startuml","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"\u0027https://plantuml.com/activity-diagram-beta","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"@startuml","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"start","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":":User marks student as present;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":":PowerConnect searches for student;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"if () then ([Student exists])","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"    :PowerConnect retrieves student attendance dates;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    :PowerConnect checks if today\u0027s date is in attendance dates;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    if () then ([marked present])","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"        :Output message \u003d \\nAttendance already marked!;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"        :Creates a new attendance date with today\u0027s date;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"        :PowerConnect adds new attendance date to student attendance dates;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"        :PowerConnect saves student attendance dates into storage file;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"        :Output message \u003d \\nAttendance marked for student;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"        :UI updated to mark student as present;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"endif","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"else ([else])","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    :Output message \u003d \\nThe student index provided is invalid/ not found;","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"endif","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":":PowerConnect displays output message to User;","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"stop","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"@enduml","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"securespider":24}},{"path":"docs/diagrams/AttendanceSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"@startuml","lastModifiedDate":"2023-04-09"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"!include style.puml","lastModifiedDate":"2023-04-09"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-09"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"participant \":StudentCommandParser\" as StudentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"participant \":StudentAttendanceCommand\" as StudentAttendanceCommand LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"participant \":Attendance\" as Attendance MODEL_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"end box","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"[-\u003e LogicManager : execute(\"student 1A attendance in/25 att/T\")","lastModifiedDate":"2023-04-09"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"activate LogicManager","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"LogicManager -\u003e StudentCommandParser : parse(\"student 1A attendance in/25 att/T\")","lastModifiedDate":"2023-04-09"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"activate StudentCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"StudentCommandParser -\u003e StudentCommandParser : attCommand(\"1A\", attendanceInfo)","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"activate StudentCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"StudentCommandParser -\u003e ParserUtil : parseStudentClass(\"1A\")","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-09"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"ParserUtil --\u003e StudentCommandParser : Class","lastModifiedDate":"2023-04-09"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-09"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"StudentCommandParser -\u003e ParserUtil : parseIndexNumber(\"25\")","lastModifiedDate":"2023-04-09"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-09"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"ParserUtil --\u003e StudentCommandParser : IndexNumber","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"StudentCommandParser -\u003e ParserUtil : parseAttendance(\"T\")","lastModifiedDate":"2023-04-09"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-09"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"create Attendance","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"ParserUtil --\u003e Attendance : Attendance(\"T\")","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"activate Attendance","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"Attendance --\u003e StudentCommandParser : Attendance","lastModifiedDate":"2023-04-09"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"deactivate Attendance","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"create StudentAttendanceCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"StudentCommandParser --\u003e StudentAttendanceCommand : StudentAttendanceCommand(Class, IndexNumber, Attendance)","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"activate StudentAttendanceCommand","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"\u0027StudentCommandParser -\u003e StudentAttendanceCommand : parse(\"student 1A grade in/25 test/CA1 score/75\")","lastModifiedDate":"2023-04-09"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"\u0027activate StudentCommandParser","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"\u0027","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"\u0027StudentCommandParser -\u003e : parseTest(\"in/25 test/CA1 score/75\", 75\")","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"\u0027StudentCommandParser \u003c--","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"\u0027StudentCommandParser -\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"\u0027StudentCommandParser \u003c-- : commandResult","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"@enduml","lastModifiedDate":"2023-04-09"}],"authorContributionMap":{"securespider":51}},{"path":"docs/diagrams/BetterModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect *-right-\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-04-09"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect *-right-\u003e \"1\" UniqueTagList","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"UniqueTagList -[hidden]down- UniquePersonList","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"UniqueTagList -right-\u003e \"*\" Tag","lastModifiedDate":"2023-01-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"UniquePersonList -right-\u003e Person","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Person -up-\u003e \"*\" Tag","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":19,"mayuanxin1234":2}},{"path":"docs/diagrams/Grade.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"!include style.puml","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"package model.person.student \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"class Student","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"class Homework","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"class Test","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"Class \"{abstract}\\nUiPart\" as Assignment","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"Test *--  Student","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"Test --|\u003e Assignment","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"Homework --|\u003e Assignment","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"Homework *-- Student","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"mayuanxin1234":22}},{"path":"docs/diagrams/GradeSequentialDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"!include style.puml","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"participant \":StudentCommandParser\" as StudentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"end box","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"[-\u003e LogicManager : execute(\"student 1A grade in/25 test/CA1 score/75\")","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"activate LogicManager","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"student 1A grade in/25 test/CA1 score/75\")","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"activate AddressBookParser","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"AddressBookParser -\u003e StudentCommandParser : parse(\"student 1A grade in/25 test/CA1 score/75\")","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"activate StudentCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"StudentCommandParser -\u003e : parseTest(\"in/25 test/CA1 score/75\", 75\")","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"StudentCommandParser \u003c--","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"StudentCommandParser -\u003e","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"StudentCommandParser \u003c-- : commandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"mayuanxin1234":24}},{"path":"docs/diagrams/GradeSequentialDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"participant \":StudentGradeCommand\" as StudentGradeCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"participant \"editedStudent:Student\" as editedStudent LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"participant \":ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"participant \":Test\" as Test LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"[-\u003e ParserUtil : parseTest(\"in/25 test/CA1 score/75\", 75\")","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"create Test","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"ParserUtil -\u003e Test: new Test(\"CA1\", 75)","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"activate Test","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"Test --\u003e ParserUtil: test","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"deactivate Test","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"\u003c-- ParserUtil : test","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"-\u003e StudentGradeCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"create StudentGradeCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"activate StudentGradeCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"create editedStudent","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"StudentGradeCommand -\u003e editedStudent","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"activate editedStudent","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"editedStudent --\u003e StudentGradeCommand : editedStudent","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"deactivate editedStudent","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"StudentGradeCommand --\u003e Model : setStudent","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"Model --\u003e StudentGradeCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"StudentGradeCommand --\u003e Model: updateFilteredStudentList","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"Model --\u003e StudentGradeCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"\u003c-- StudentGradeCommand  : commandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"deactivate StudentGradeCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"mayuanxin1234":50}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"Class PowerConnectParser","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"LogicManager -right-\u003e\"1\" PowerConnectParser","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnectParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":43,"mayuanxin1234":3}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyPowerConnect\" as ReadOnlyPowerConnect","lastModifiedDate":"2023-04-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"Class PowerConnect","lastModifiedDate":"2023-04-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class Address","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Email","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect .up.|\u003e ReadOnlyPowerConnect","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"Model .left.\u003e ReadOnlyPowerConnect","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"ModelManager -left-\u003e \"1\" PowerConnect","lastModifiedDate":"2023-04-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Person *--\u003e Name","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Person *--\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"Person *--\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Person *--\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Phone -[hidden]right-\u003e Address","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"Address -[hidden]right-\u003e Email","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"-":44,"mayuanxin1234":6}},{"path":"docs/diagrams/ParentAddActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"@startuml","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"start","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":":User launches the application;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"if () then ([User executes the parent add command])","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"    if () then ([found phone number in \\nexisting parents/NOKs])","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"        : Output message \u003d \\n Error message indicating\\n duplicate parent creation;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    else if () then ([invalid phone number \\n/ name / inputs])","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"        : Output message \u003d \\n Invalid command format \\n + Example of Parent Add Command;","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    else ([else])","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"        : Retrieves parent/NOK information \\n from user\u0027s input;","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        : Creates new parent/NOK with retrieved information;","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        : Automatically saves all changes into storage files \\n (parents.json);","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        : Output message \u003d \\n Parent/NOK has been successfully;","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    endif","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"else ([User executes student add/edit command])","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    if () then ([valid parent/NOK input given])","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        if () then ([parent/NOK info found \\n in existing parents])","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"            : Retrieves the parent/NOK \\n and binds student and parent/NOK;","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"            : Automatically saves all changes into storage file \\n (parents.json and pcclass.json);","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"            : Output message \u003d \\n Student Add Command\u0027s output message;","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        else ([else])","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"            : Retrieves parent/NOK information from user\u0027s input;","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            : Creates new parent/NOK with retrieved information;","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            : Binds student and parent/NOK;","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            : Automatically saves all changes into storage file \\n (parents.json and pcclass.json);","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"            : Output message \u003d \\n Student Add Command\u0027s output message;","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        endif","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"    else ([else)","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        : Output message \u003d \\n Invalid command format \\n + Example of Student Add Command;","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"    endif","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"endif","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"    :PowerConnect displays output message to User;","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"stop","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"@enduml","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"MrTwit99":35}},{"path":"docs/diagrams/ParentAddParserUtilSequentialDiagram .puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"@startuml","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"!include style.puml","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"mainframe sd get parent particulars","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"participant \":ParentCommandParser\" as ParentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"participant \":Phone\" as Phone LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"participant \":Name\" as Name LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"participant \":Address\" as Address LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"participant \":Age\" as Age LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"participant \":Email\" as Email LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"participant \":Image\" as Image LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"participant \":Tags\" as Tags LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"end box","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"[-\u003e ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parsePhone(\"91234567\")","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"create Phone","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Phone","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"Phone --\u003e ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseName(\"Tan Ah Niu\")","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"create Name","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Name","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"Name --\u003e ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseAge(\"Insert parent age here!\")","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"create Age","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Age","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"Age --\u003e ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseAddress(\"Insert Address here!\")","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"create Address","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Address","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"Address --\u003e ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseImage(\"Insert parent image here!\")","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"create Image","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Image","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"Image --\u003e ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseEmail(\"Insert parent email here!\")","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"create Email","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Email","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"Email --\u003e ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseTags(\"\")","lastModifiedDate":"2023-04-03"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"create Tags","lastModifiedDate":"2023-04-03"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Tags","lastModifiedDate":"2023-04-03"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"Tags --\u003e ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"[\u003c--ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"@enduml","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"MrTwit99":100}},{"path":"docs/diagrams/ParentAddSequentialDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"@startuml","lastModifiedDate":"2023-04-03"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"!include style.puml","lastModifiedDate":"2023-04-03"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-03"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"participant \":PowerConnectParser\" as PowerConnectParser LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"participant \":ParentCommandParser\" as ParentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"participant \":ParentAddCommand\" as ParentAddCommand LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"participant \"newParent:Parent\" as Parent LOGIC_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"end box","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"end box","lastModifiedDate":"2023-04-03"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"[-\u003e LogicManager : execute(\"parent add n/Tan Ah Niu pnP/91234567\")","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"activate LogicManager","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"LogicManager -\u003e PowerConnectParser : parseCommand(\"parent add n/Tan Ah Niu pnP/91234567\")","lastModifiedDate":"2023-04-03"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"activate PowerConnectParser","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"create ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"PowerConnectParser -\u003e ParentCommandParser :","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser --\u003e PowerConnectParser:","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"PowerConnectParser -\u003e ParentCommandParser: parse(\"add n/Tan Ah Niu pnP/91234567\")","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParentCommandParser: addCommand(ArgumentMultimap)","lastModifiedDate":"2023-04-03"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"create ParentAddCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"ref over ParentCommandParser, ParserUtil","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    get parent particulars","lastModifiedDate":"2023-04-03"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"end ref","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParentAddCommand: ParentAddCommand(...)","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"activate ParentAddCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"ParentAddCommand --\u003e ParentCommandParser:","lastModifiedDate":"2023-04-03"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentAddCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser --\u003e PowerConnectParser","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"PowerConnectParser --\u003e LogicManager","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"deactivate PowerConnectParser","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"LogicManager -\u003e ParentAddCommand: execute(Model)","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"activate ParentAddCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"ParentAddCommand -\u003e ModelManager: hasParent(Parent)","lastModifiedDate":"2023-04-03"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"activate ModelManager","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"ModelManager --\u003e ParentAddCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"deactivate ModelManager","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"ParentAddCommand -\u003e ModelManager: addParent(Parent)","lastModifiedDate":"2023-04-03"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"activate ModelManager","lastModifiedDate":"2023-04-03"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"ModelManager --\u003e ParentAddCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"deactivate ModelManager","lastModifiedDate":"2023-04-03"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"ParentAddCommand --\u003e LogicManager","lastModifiedDate":"2023-04-03"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentAddCommand","lastModifiedDate":"2023-04-03"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-03"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-03"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"@enduml","lastModifiedDate":"2023-04-03"}],"authorContributionMap":{"MrTwit99":79}},{"path":"docs/diagrams/ParentDeleteSequentialDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"participant \":PowerConnectParser\" as PowerConnectParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"participant \":ParentCommandParser\" as ParentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"participant \":ParentDeleteCommand\" as ParentDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"[-\u003e LogicManager : execute(\"parent delete n/Bob pnP/91234567\")","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"activate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"LogicManager -\u003e PowerConnectParser : parseCommand(\"parent delete n/Bob pnP/91234567\")","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"activate PowerConnectParser","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"create ParentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"PowerConnectParser -\u003e ParentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"ParentCommandParser -\u003e PowerConnectParser","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"PowerConnectParser -\u003e ParentCommandParser : parse(\"delete n/Bob pnP/91234567\")","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"create ParentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"ParentCommandParser -\u003e ParentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"activate ParentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"ParentDeleteCommand --\u003e ParentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"deactivate ParentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"ParentCommandParser --\u003e PowerConnectParser","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"destroy ParentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"PowerConnectParser --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"deactivate PowerConnectParser","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"LogicManager -\u003e ParentDeleteCommand: execute(model)","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"activate ParentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"ParentDeleteCommand -\u003e Model: getParent(parentName, parentNumber)","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"Model --\u003e ParentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"ParentDeleteCommand -\u003e Model: deleteParent(parentToDelete)","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"Model --\u003e ParentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"ParentDeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"activate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"CommandResult --\u003e ParentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"ParentDeleteCommand --\u003e LogicManager:","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"deactivate ParentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"Diatbbin":74}},{"path":"docs/diagrams/ParentEditActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"@startuml","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"start","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":":User executes Parent Edit command;","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"if () then ([found parent/NOK name with matching phone number])","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"    :PowerConnect searches for parent/NOK information to create new parent/NOK;","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"    if () then ([found from user\u0027s input])","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"        :Retrieves parent/NOK information from user\u0027s input;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"    else ([else])","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"        :Retrieves parent/NOK information from original parent/NOK;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    endif","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    :PowerConnect creates new parent/NOK with retrieved information;","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        if () then ([Original parent/NOK has students])","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"            :Unbinds all students bound to original parent/NOK;","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"            :Binds all students of original parent/NOK to new parent/NOK;","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        else ([else)","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        endif","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    :Automatically saves all changes into storage file\\n(parents.json and pcclass.json);","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    :Output message \u003d \\nParent/NOK has been successfully;","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"else ([else])","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    :Output message \u003d \\nNo parent/NOK was found with matching \\nname and phone number;","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"endif","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"    :PowerConnect displays output message to User;","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"stop","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"@enduml","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"MrTwit99":25}},{"path":"docs/diagrams/ParentEditParserUtilSequentialDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"@startuml","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"!include style.puml","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"mainframe sd get parent particulars","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"participant \":ParentCommandParser\" as ParentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"participant \":Phone\" as Phone LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"participant \"newPhone :Phone\" as newPhone LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"participant \":Name\" as Name LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"participant \"newName :Name\" as newName LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"participant \":Address\" as Address LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"participant \":Age\" as Age LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"participant \":Email\" as Email LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"participant \":Image\" as Image LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"participant \":Tags\" as Tags LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"end box","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"[-\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parsePhone(\"91234567\")","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"create Phone","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Phone","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"Phone --\u003e ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parsePhone(\"65656565\")","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"create newPhone","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e newPhone","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"newPhone --\u003e ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseName(\"Tan Ah Niu\")","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"create Name","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Name","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"Name --\u003e ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseName(\"Insert new name here!\")","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"create newName","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e newName","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"newName --\u003e ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseAge(\"Insert parent age here!\")","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"create Age","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Age","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"Age --\u003e ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseAddress(\"Insert Address here!\")","lastModifiedDate":"2023-04-02"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"create Address","lastModifiedDate":"2023-04-02"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Address","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"Address --\u003e ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseImage(\"Insert parent image here!\")","lastModifiedDate":"2023-04-02"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"create Image","lastModifiedDate":"2023-04-02"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Image","lastModifiedDate":"2023-04-02"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"Image --\u003e ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseEmail(\"Insert parent email here!\")","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"create Email","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Email","lastModifiedDate":"2023-04-02"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"Email --\u003e ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParserUtil: parseTags(\"\")","lastModifiedDate":"2023-04-02"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"activate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"create Tags","lastModifiedDate":"2023-04-02"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"ParserUtil -\u003e Tags","lastModifiedDate":"2023-04-02"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"Tags --\u003e ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"ParserUtil --\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"deactivate ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"[\u003c--ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"@enduml","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"MrTwit99":124}},{"path":"docs/diagrams/ParentEditSequentialDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"@startuml","lastModifiedDate":"2023-04-02"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"!include style.puml","lastModifiedDate":"2023-04-02"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-02"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"participant \":PowerConnectParser\" as PowerConnectParser LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"participant \":ParentCommandParser\" as ParentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"participant \"\u003c\u003cclass\u003e\u003e\\n ParserUtil\" as ParserUtil LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"participant \":ParentEditCommand\" as ParentEditCommand LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"participant \"newParent:Parent\" as Parent LOGIC_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"end box","lastModifiedDate":"2023-04-02"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"end box","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"[-\u003e LogicManager : execute(\"parent edit n/Tan Ah Niu pnP/91234567 npnP/65656565\")","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"activate LogicManager","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"LogicManager -\u003e PowerConnectParser : parseCommand(\"parent edit n/Tan Ah Niu pnP/91234567 npnP/65656565\")","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"activate PowerConnectParser","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"create ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"PowerConnectParser -\u003e ParentCommandParser :","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser --\u003e PowerConnectParser:","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"PowerConnectParser -\u003e ParentCommandParser: parse(\"edit n/Tan Ah Niu pnP/91234567 npnP/65656565\")","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParentCommandParser: editCommand(ArgumentMultimap)","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"activate ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"create ParentEditCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"ref over ParentCommandParser, ParserUtil","lastModifiedDate":"2023-04-02"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    get parent particulars","lastModifiedDate":"2023-04-02"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"end ref","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParentEditCommand: ParentEditCommand(...)","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"activate ParentEditCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"ParentEditCommand --\u003e ParentCommandParser:","lastModifiedDate":"2023-04-02"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentEditCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser -\u003e ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"ParentCommandParser --\u003e PowerConnectParser","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentCommandParser","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"PowerConnectParser --\u003e LogicManager","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"deactivate PowerConnectParser","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"LogicManager -\u003e ParentEditCommand: execute(Model)","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"activate ParentEditCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"ParentEditCommand -\u003e ModelManager: getFilteredParentList()","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"activate ModelManager","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"ModelManager --\u003e ParentEditCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"deactivate ModelManager","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"create Parent","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"ParentEditCommand -\u003e Parent","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"activate Parent","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"Parent --\u003e ParentEditCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"deactivate Parent","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"ParentEditCommand -\u003e ParentEditCommand: editParent(Parent, newParent)","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"ParentEditCommand -\u003e ModelManager: setParent(Parent, newParent)","lastModifiedDate":"2023-04-02"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"activate ModelManager","lastModifiedDate":"2023-04-02"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"ModelManager --\u003e ParentEditCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"deactivate ModelManager","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"ParentEditCommand --\u003e LogicManager:","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"deactivate ParentEditCommand","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-02"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-02"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"@enduml","lastModifiedDate":"2023-04-02"}],"authorContributionMap":{"MrTwit99":88}},{"path":"docs/diagrams/StoragePowerConnect.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"!include style.puml","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"package Storage{","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"Class StorageManager","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"package \"Academics Storage\" #F4F6F6{","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonAdaptedAssignment","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonAdaptedAttendance","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonAdaptedHomework","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonAdaptedTest","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"package \"Parents Storage\" #F4F6F6{","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParentStorage\" as ParentStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonParentsStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonSerializableParent","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"package \"Class Storage\" #F4F6F6{","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nPcClassStorage\" as PcClassStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonAdaptedClass","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonPcClassStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonSerializablePcClass","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"package \"Person Storage\" #F4F6F6{","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonAdaptedParent","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonAdaptedStudent","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"StorageManager .left.|\u003e Storage","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"ParentStorage \u003c-up- StorageManager","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"PcClassStorage \u003c-up- StorageManager","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"UserPrefsStorage \u003c-up- StorageManager","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"JsonParentsStorage .up.|\u003e ParentStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"JsonPcClassStorage .up.|\u003e PcClassStorage","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"JsonParentsStorage .down.\u003e JsonSerializableParent","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"JsonPcClassStorage .down.\u003e JsonSerializablePcClass","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"JsonSerializablePcClass -down-\u003e \"*\" JsonAdaptedClass","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"JsonAdaptedClass -down-\u003e \"*\" JsonAdaptedStudent","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"JsonSerializableParent -down-\u003e \"*\" JsonAdaptedParent","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"JsonAdaptedStudent -down-\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"JsonAdaptedStudent -down-\u003e \"*\" JsonAdaptedAttendance","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"JsonAdaptedStudent -down-\u003e \"*\" JsonAdaptedAssignment","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"JsonAdaptedAssignment -down-\u003e \"*\" JsonAdaptedHomework","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"JsonAdaptedAssignment -down-\u003e \"*\" JsonAdaptedTest","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"mayuanxin1234":62}},{"path":"docs/diagrams/StudentDeleteSequentialDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"@startuml","lastModifiedDate":"2023-04-07"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"!include style.puml","lastModifiedDate":"2023-04-07"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"participant \":PowerConnectParser\" as PowerConnectParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"participant \":StudentCommandParser\" as StudentCommandParser LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"participant \":StudentDeleteCommand\" as StudentDeleteCommand LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2023-04-07"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2023-04-07"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"end box","lastModifiedDate":"2023-04-07"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"[-\u003e LogicManager : execute(\"student 1A delete in/25\")","lastModifiedDate":"2023-04-07"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"activate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"LogicManager -\u003e PowerConnectParser : parseCommand(\"student 1A delete in/25\")","lastModifiedDate":"2023-04-07"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"activate PowerConnectParser","lastModifiedDate":"2023-04-07"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"create StudentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"PowerConnectParser -\u003e StudentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"activate StudentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"StudentCommandParser -\u003e PowerConnectParser","lastModifiedDate":"2023-04-07"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"deactivate StudentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"PowerConnectParser -\u003e StudentCommandParser : parse(\"1A delete in/25\")","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"activate StudentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"create StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"StudentCommandParser -\u003e StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"activate StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"StudentDeleteCommand --\u003e StudentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"deactivate StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"StudentCommandParser --\u003e PowerConnectParser","lastModifiedDate":"2023-04-07"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"deactivate StudentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"destroy StudentCommandParser","lastModifiedDate":"2023-04-07"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"PowerConnectParser --\u003e LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"deactivate PowerConnectParser","lastModifiedDate":"2023-04-07"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"LogicManager -\u003e StudentDeleteCommand: execute(model)","lastModifiedDate":"2023-04-07"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"activate StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"StudentDeleteCommand -\u003e Model: getStudent(targetIndex, studentClass)","lastModifiedDate":"2023-04-07"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"Model --\u003e StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"StudentDeleteCommand -\u003e Model: deleteStudent(student)","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"Model --\u003e StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"StudentDeleteCommand -\u003e Model: getParent(parentName, parentNumber)","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"Model --\u003e StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"StudentDeleteCommand -\u003e Model: setParent(parentToUnbind, updatedParent)","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"activate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"Model --\u003e StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"deactivate Model","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"create CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"StudentDeleteCommand -\u003e CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"activate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"CommandResult --\u003e StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"deactivate CommandResult","lastModifiedDate":"2023-04-07"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"StudentDeleteCommand --\u003e LogicManager:","lastModifiedDate":"2023-04-07"},{"lineNumber":82,"author":{"gitId":"Diatbbin"},"content":"deactivate StudentDeleteCommand","lastModifiedDate":"2023-04-07"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"[\u003c--LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"deactivate LogicManager","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"@enduml","lastModifiedDate":"2023-04-07"}],"authorContributionMap":{"Diatbbin":86}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"title: PowerConnect","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T09-1/tp/actions)","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"[![codecov](https://codecov.io/gh/se-edu/addressbook-level3/branch/master/graph/badge.svg)](https://app.codecov.io/gh/AY2223S2-CS2103T-T09-1/tp)","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"* PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact management tasks done faster than traditional GUI apps \u003cbr\u003e","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"  Example usages:","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    * keep track of student grades","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    * adding comments to students","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"* It is named `PowerConnect` (`PC` for short) because it provides teacher a powerful application to connect with their students.","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"-":12,"mayuanxin1234":13}},{"path":"docs/team/diatbbin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"---","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"layout: page","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"title: Lim Diat Bbin\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"---","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"### Project: PowerConnect","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"PowerConnect is a fully customized offline application for tuition and school teachers to manage students\u0027 and parents\u0027 administrative details. While it has limited features at this stage, plans for future PowerConnect releases to update features and usage capabilites have been made with detailed timeline.","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"The aim of this product is to eventually be a useful tool that is used in conjunction with Learning Managment System (LMS) tools currently in the market to aid teachers in managing students. \u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"PowerConnect is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). PowerConnect helps teachers in tracking and updating students\u0027 particulars.","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"* **New Feature**: Added the ability to delete students from PowerConnect.","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"  * What it does: Allows users to delete students from PowerConnect via the Student Delete Command.","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features in allowing teachers to delete students from their student list.","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"  * Highlights: The implementation was slightly challenging as it required changes to the ab3\u0027s deleteCommand to allow deletion of student by their class and index number instead of their index in the list.","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"  * * Credits: *AB3\u0027s delete Command*","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"* **New Feature**: Added the ability to delete parents from PowerConnect.","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"  * What it does: Allows users to delete parents from PowerConnect via the Parent Delete Command.","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features in allowing teachers to delete parents from their parent list.","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"  * Highlights: The implementation was slightly challenging as it required changes to the ab3\u0027s deleteCommand to allow deletion of parent by their name and phone number instead of their index in the list.","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"  * * Credits: *AB3\u0027s delete Command*","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"      \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"* **New Feature**: Added the ability to edit students from PowerConnect.","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"  * What it does: Allows users to edit students from PowerConnect via the Student Edit Command.","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features in allowing teachers to edit students from their students list.","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"    * Highlights: The implementation was challenging as the student class has many prefixes that can be edited. If the parent name or phone number is edited with studentEditCommand, that parent/NOK and all its children has to be updated too.","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"  * * Credits: *AB3\u0027s edit Command*","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"      \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dT09-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026zFR\u003dfalse\u0026tabAuthor\u003dDiatbbin\u0026tabRepo\u003dAY2223S2-CS2103T-T09-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026authorshipIsIgnoredFilesChecked\u003dfalse)","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"* **Project management**:","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"  * Participated in releases `v1.1` - `v1.4` (6 releases) on GitHub \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"    * Wrote additional tests for parent delete to increase coverage from 20.09% to 24.13% (Pull requests [\\#213](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/213))","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    * User Guide:","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"        * Added documentation for the features `student delete`, `student edit` and `parent delete`","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"        * Check and amended errors in User Guide","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-20"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"      * Added implementation details of the `student delete` feature.","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"* **Review Contributions during team project**:","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"  * PRs reviewed and merged: 34\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"  * Reported 13 bugs for PED [[CS2103T-W12-2]](https://github.com/Diatbbin/ped/issues) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"Diatbbin":55}},{"path":"docs/team/mayuanxin1234.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"title: Ma Yuanxin\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"### Project: PowerConnect","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"* **New Feature**: Added the ability to add students to PowerConnect.","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"  * What it does: Allows the user to add a student to PowerConnect.","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features is allowing the user to add students to PowerConnect.","lastModifiedDate":"2023-04-03"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-04-08"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"  * Credits: *AB3\u0027s Add Command*","lastModifiedDate":"2023-04-03"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"* **New Feature**: Added to ability to add comments to students. ","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"  * What it does: Allows the user to add a comment to a student","lastModifiedDate":"2023-04-03"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"  * Justification: This feature allows the user to be able to take notes for each student so that the teacher would know what to take note for each student. ","lastModifiedDate":"2023-04-08"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-04-08"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"  * Credits: *AB3\u0027s Tag Command*","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"* **New Feature**: Added the ability to find students by their names.","lastModifiedDate":"2023-04-03"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"  * What it does: Allows the user to find a student by their name.","lastModifiedDate":"2023-04-03"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features is allowing the user to find a student quickly without scrolling through the student list.","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-04-08"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"  * Credits: *AB3\u0027s find Command*","lastModifiedDate":"2023-04-03"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"* **New Feature**: Added the ability to add student grades to PowerConnect. ","lastModifiedDate":"2023-04-03"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"  * What it does: Allows the user to keep track of homework/tests done by the student. ","lastModifiedDate":"2023-04-03"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features is allowing the user to record student assignments for the user to keep track of. ","lastModifiedDate":"2023-04-03"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-04-08"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"  * Credits: *Nil*","lastModifiedDate":"2023-04-08"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"* **New Feature**: Added the ability to delete student grades to PowerConnect.","lastModifiedDate":"2023-04-03"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"  * What it does: Allows the user to delete homework/tests added to the student. ","lastModifiedDate":"2023-04-03"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features is allowing the user to delete student assignments for the user to keep track of.","lastModifiedDate":"2023-04-03"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-04-08"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"  * Credits: *Nil*","lastModifiedDate":"2023-04-08"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"* **New Feature**: Added the ability to list students by class or list all students.","lastModifiedDate":"2023-04-03"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"  * What it does: Allows the user to filter the students by class or list all students.","lastModifiedDate":"2023-04-03"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features is allowing the user to manage multiple classes of students easily.","lastModifiedDate":"2023-04-03"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-04-08"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"  * Credits: *Nil*","lastModifiedDate":"2023-04-08"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"* **New Feature**: Added the ability to save the student and parent details properly.","lastModifiedDate":"2023-04-03"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"  * What it does: Allows the user to auto-save the students and parents added to PowerConnect. ","lastModifiedDate":"2023-04-08"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features is allowing the user to not worry about saving the application. ","lastModifiedDate":"2023-04-03"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required revamp to the whole storage package. ","lastModifiedDate":"2023-04-08"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"  * Credits: *AB3\u0027s storage package*","lastModifiedDate":"2023-04-03"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"* **New Feature**: Implemented images for students and parents.","lastModifiedDate":"2023-04-03"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"  * What it does: Allows the user to display images for students and parents. ","lastModifiedDate":"2023-04-03"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"  * Justification: Allows the user to remember the students and parents better. This is an intended feature of our application too.","lastModifiedDate":"2023-04-03"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required revamp existing commands.","lastModifiedDate":"2023-04-08"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"  * Credits: *Nil*","lastModifiedDate":"2023-04-08"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dmayuanxin1234\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dmayuanxin1234\u0026zR\u003dAY2223S2-CS2103T-T09-1%2Ftp%5Bmaster%5D\u0026zACS\u003d261.12\u0026zS\u003d2023-02-17\u0026zFS\u003dT09-1\u0026zU\u003d2023-04-03\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse)","lastModifiedDate":"2023-04-08"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"* **Project management**:","lastModifiedDate":"2023-02-17"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"  * Managed releases `v1.1` - `v1.4` (6 releases) on GitHub","lastModifiedDate":"2023-04-03"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-17"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"  * Updated the GUI color scheme (Pull request [\\#77](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/77))","lastModifiedDate":"2023-04-03"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"  * Updated parser for each new added command [\\#44](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/44)","lastModifiedDate":"2023-04-08"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"  * Provided new StudentCommandParser [\\#44](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/44)","lastModifiedDate":"2023-04-08"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"  * User Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    * Added documentation for the features `student add`, `student comment`, `student find`, `student grade`, `student gradedelete`, `student list`, `list` [\\#128](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/128)","lastModifiedDate":"2023-04-08"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    * Added documentation for `Command Summary` [\\#128](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/128)","lastModifiedDate":"2023-04-08"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"    * Enhanced documentation for `help` feature [\\#128](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/128)","lastModifiedDate":"2023-04-08"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    * Added hyperlinks to abbreviations [\\#128](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/128)","lastModifiedDate":"2023-04-08"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    * Added implementation details of the `grade` feature. [\\#110](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/110)","lastModifiedDate":"2023-04-08"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"* **Review Contributions during team project**:","lastModifiedDate":"2023-04-03"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"  * PRs reviewed and merged: 34 \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"* **Tools**:","lastModifiedDate":"2023-02-17"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"  * Integrated a third party library (CodeCov) to the project","lastModifiedDate":"2023-04-08"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"  * Set up GitHub Actions (Java CI) to the project","lastModifiedDate":"2023-04-08"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-08"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"* **Community**:","lastModifiedDate":"2023-04-08"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"  * Reported 14 bugs and suggestions for other teams in the class ([examples](https://github.com/AY2223S2-CS2103-W16-4/tp/issues)","lastModifiedDate":"2023-04-08"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"  * Reviewed 2 other IPs and provided feedback","lastModifiedDate":"2023-04-08"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mayuanxin1234":88}},{"path":"docs/team/mrtwit99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"title: Yeo Wen Jue\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"### Project: PowerConnect","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"PowerConnect is a fully customized offline application for tuition and school teachers to manage students\u0027 and parents\u0027 administrative details. While it has limited features at this stage, plans for future PowerConnect releases to update features and usage capabilites have been made with detailed timeline.","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"The aim of this product is to eventually be a useful tool that is used in conjunction with Learning Managment System (LMS) tools currently in the market to aid teachers in managing students. \u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"PowerConnect is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). PowerConnect helps teachers in tracking and updating students\u0027 particulars.","lastModifiedDate":"2023-04-03"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"* **New Feature**: Added the ability to add new parents/NOKs (Next-of-Kins) to PowerConnect.","lastModifiedDate":"2023-04-02"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"  * What it does: Allows users to add new parents/NOKs to PowerConnect via the Parent Add Command.","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"  * Justification: This feature contributes significantly to the product as one of the intended features is allowing teachers to have the ability to access information on students\u0027 parent/NOK so that they are able to contact them in case of emergencies.","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"  * Highlights: The implementation was slightly challenging as it required changes to the Student Add command to allow parsing in of Parent/NOK information and perform its tasks based on the Binding of Student and Parent/NOK internal feature. This command is also implemented at the same time with the Binding of Student and Parent/NOK internal feature.","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"  * Credits: *AB3\u0027s Add Command, Student Add Command*","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"* **New Feature**: Added the ability to edit new parents/NOKs information","lastModifiedDate":"2023-04-02"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"  * What it does: Allows user to amend existing personal particulars of parents/NOKs in PowerConnect via the Parent Edit Command. It removes the need for users to remove a parent/NOK and re-adding the parent/NOK themselves whenever they want to amend a parent/NOK info.","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"  * Justification: This features contributes slightly to the product as providing users with the ability to edit parents/NOKs information is something that is essential and not a requirement.","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"  * Highlights: This enhancement removes the need for users to manually deleting and re-adding the parent/NOK whenever an amendment must be made.","lastModifiedDate":"2023-04-02"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"  * Credits: *nil*","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"* **New Feature**: Binding of Student and Parent/NOK (internal feature)","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"  * What it does: Binds/Unbinds a student to/from an existing parent/NOK in PowerConnect during Student Add, Edit and Delete Commands. If parent/NOK does not exist when needed for binding, it will get automatically created!","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"  * Justification: This feature contributes significantly to the product as it is crucial for users to be able to see the relationship of parents/NOKs to students and students to parents/NOKs and have the binding of parent/NOK and student be done automatically by the product and not done manually by the user.","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"  * Highlights: The implementation was challenging as it required changes to Student Add/Edit/Delete commands as well as Parent Add/Edit commands during its implementation to ensure the binding of relationship of students and parents/NOKs are performed properly. There were multiple cases to consider during its implementation. This implementation also made use of defensive coding for its implementation.","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"  * Credits: *nil*","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dAY2223S2-CS2103T-T09-1\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17\u0026tabOpen\u003dtrue\u0026tabType\u003dzoom\u0026zA\u003dMrTwit99\u0026zR\u003dAY2223S2-CS2103T-T09-1%2Ftp%5Bmaster%5D\u0026zACS\u003d269.13953488372096\u0026zS\u003d2023-02-17\u0026zFS\u003dAY2223S2-CS2103T-T09-1\u0026zU\u003d2023-04-08\u0026zMG\u003dfalse\u0026zFTF\u003dcommit\u0026zFGS\u003dgroupByRepos\u0026zFR\u003dfalse) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"  * Participated in releases `v1.1` - `v1.4` (6 releases) on GitHub \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"  * Participated in the review of Bug Reports sent by testers in PE-D phase \u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"  * Helped in resolving some of the issues from Bug Reports \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"  * Improved implementation of Student Edit command (Pull request [\\#150]())","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"  * Provided parser for Parent commands by creating ParentCommandParser during the creation of Parent Add Command","lastModifiedDate":"2023-04-02"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"  * Updated logging messages to PowerConnect\u0027s logging messages (Pull request [\\#147]())","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"  * Provided binding of Student and Parent/NOK internal feature for Student and Parent/NOK \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"    * Added documentation for the features `parent add` and `parent edit`","lastModifiedDate":"2023-04-02"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"    * Added documentation for `Prefix summary` [\\#158]()","lastModifiedDate":"2023-04-02"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"    * Added hyperlinks to abbreviations","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"    * Added `Glossary`","lastModifiedDate":"2023-04-02"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"    * Added jump links such as `Back To Table of Contents`","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"    * Amended formatting of User Guide for PDF versions [\\#141]() [\\#142]() [\\#153]() [\\#154]()","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"    * Amended errors in User Guide [\\#129]() [\\#155]() [\\#158]() \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"    * Added implementation details for `parent add`,`parent edit` and `binding of student and parent/NOK` features.","lastModifiedDate":"2023-04-03"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"    * Added UML diagrams for `parent add` and `parent edit` features.","lastModifiedDate":"2023-04-03"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"    * Added Use Cases: UC07, UC08, UC09.","lastModifiedDate":"2023-04-03"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"    * Added Table of Content section with working jump links.","lastModifiedDate":"2023-04-03"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"    * Added Planned Enhancements into Developer Guide.","lastModifiedDate":"2023-04-09"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"    * Amended Saving Data section in Developer Guide.","lastModifiedDate":"2023-04-09"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"    * Amended formatting of Developer Guide for PDF versions","lastModifiedDate":"2023-04-03"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"    * Transferred Glossary, Use Case and User Stories from Google Docs to Developer Guide. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"* **Review Contributions during team project**:","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"  * PRs reviewed and merged: 34\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"* **Contributions beyond the project team**:","lastModifiedDate":"2023-04-02"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"  * iP PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"    * [[Cyrus-Krispin] iP #217](https://github.com/nus-cs2103-AY2223S2/ip/pull/217)","lastModifiedDate":"2023-04-02"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"    * [[gohyongjing] iP #69](https://github.com/nus-cs2103-AY2223S2/ip/pull/69)","lastModifiedDate":"2023-04-02"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"    * [[Anunaya Joshi] iP #79](https://github.com/nus-cs2103-AY2223S2/ip/pull/79)","lastModifiedDate":"2023-04-02"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"    * [[huixuant] iP #82](https://github.com/nus-cs2103-AY2223S2/ip/pull/82)","lastModifiedDate":"2023-04-02"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"    * [[WillCWX] iP #49](https://github.com/nus-cs2103-AY2223S2/ip/pull/49) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"  * tP PRs reviewed (with non-trivial review comments):","lastModifiedDate":"2023-04-02"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"    * [[CS2103-T15-3] Vimification #151](https://github.com/nus-cs2103-AY2223S2/tp/pull/151) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"MrTwit99":60,"-":19}},{"path":"docs/team/securespider.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"layout: page","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"title: Vincent Pang\u0027s Project Portfolio Page","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"[github](https://github.com/securespider)","lastModifiedDate":"2023-04-09"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"### Project: PowerConnect","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"PowerConnect is a fully customized offline application for tuition and school teachers to manage students\u0027 and parents\u0027 administrative details. While it has limited features at this stage, plans for future PowerConnect releases to update features and usage capabilites have been made with detailed timeline.","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"The aim of this product is to eventually be a useful tool that is used in conjunction with Learning Managment System (LMS) tools currently in the market to aid teachers in managing students. \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"PowerConnect is optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). PowerConnect helps teachers in tracking and updating students\u0027 particulars.","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"* **New Feature**: Added the ability to add comments for students and parents/NOKs to PowerConnect.","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"  * What it does: Allows user to add comments for the students and parents/NOKs created in PowerConnect via the Student Comment command. This comment is stored as a string and can be viewed by the user.","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"  * Justification: This feature contributes significantly to the product as it is crucial for users to be able to add comments for students and parents/NOKs and have the comments be displayed in the UI for the user to view.","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"  * Highlights: This implementation was the first command created by following the steps of the tutorial add command and I was not very used to AB3\u0027s codebase. This implementation also made use of defensive coding for its implementation.","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"  * Credits: *Tutorial add command: Remark Command*","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"* **New Feature**: Enhanced the Class class to record additional information about the class.","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"  * What it does: Allows user to add additional information about each class a student is in in PowerConnect.","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"  * Justification: Every student and parent is part of a class, but original implementation simply saves the name of the class. This feature allows the user to add additional information about the class, such as the other students in the class, the parents present and other methods that contribute to knowing about the class.","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"  * Highlights: This implementation was challenging to design and understand as some of the other features were going to use this class. This implementation also made use of defensive coding for its implementation.","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"  * Credits: *nil*","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"  ","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"* **New Feature**: Added the ability to add attendance for the students created. Additionally, implemented the ability to add attendance during add, edit person that fits in with the expected behaviour.","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"  * What it does: Allows user to add attendance for the students created in PowerConnect via the Attendance Add Command. This attendance is stored as a date which will be automatically displayed as present or absent based on current date.","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"  * Justification: This feature contributes significantly to the product as it is crucial for users to be able to add attendance for students and have the attendance be added automatically by the product and not done manually by the user.","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"  * Highlights: The implementation was challenging as it required changes to Attendance Add Command as well as Student Add/Edit commands during its implementation to ensure the attendance of students are performed properly. There were multiple cases to consider during its implementation. This implementation also made use of defensive coding for its implementation.","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"  * Credits: *nil*","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"  ","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"* **New Feature**: Added abstraction of Person class to Student and Parent/NOK classes","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"  * What it does: Store the information of students and parents/NOKs in separate classes that extends from the Person class.","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"  * Justification: This feature contributes significantly to the product as it is crucial for users to be able to add students and parents/NOKs and have the information of students and parents/NOKs contains separate information of each other, but are all persons.","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"  * Highlights: Had to create the class quickly as it is required by almost all the other features. This implementation also made use of defensive coding for its implementation.","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"  * Credits: *Person class in AB3*","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"* **New Feature**: Storage for Student and Parent/NOK classes (internal feature","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"  * What it does: Allows user to store the information of students and parents/NOKs in the storage file. Abstraction for all attributes of Students and parents/NOKs and important information to keep about them. ","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"  * Justification: This feature contributes significantly to the product as it is crucial for users to be able to add students and parents/NOKs and have the information of students and parents/NOKs be stored in the storage file for offline retrieval.","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"  * Highlights: The implementation was challenging as it required changes to the storage file to store the information of students and parents/NOKs. Additionally, the implementation of the storage was done after a lot of the features was already created, meaning I had to change a lot of the implementation of the other features which were coupled together.","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"  * Credits: *AB3 Storage implementation*","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"  \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dsecurespider\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17) \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"* **Project management**:","lastModifiedDate":"2023-02-22"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"  * Participated in releases `v1.1` - `v1.4` (6 releases) on GitHub ","lastModifiedDate":"2023-04-09"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"  * Helped in creation of project board and milestones for the project ","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"  * Managed issue tracking and assigning of issues to team members \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-09"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-22"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"  * Create templates for the grade command in [\\#51](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/51)","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"  * Fixed the student add command bug in [\\#104](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/104)","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"  * Fixed the image implementation in [\\#124](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/124)","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-22"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"    * User Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"        * Improved on the table of contents and the legend [\\#127](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/127)","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        * Updated front page of the user guide [\\#138](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/138)","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"        * Updated formatting issues [\\#157](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/157)","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"        * Added implementation details for the student attendance command [\\#109](https://github.com/AY2223S2-CS2103T-T09-1/tp/pull/109)","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"* **Community**:","lastModifiedDate":"2023-02-22"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"    * Reviewed 20 PRs and provided feedback","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"    * Reported 14 bugs and suggestions for other teams in the class (examples: [1](https://github.com/AY2223S2-CS2103T-W09-1/tp/issues?q\u003dis%3Aissue+securespider))","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"    * Reviewed 4 other IPs and provided feedback","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"securespider":80}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"Let\u0027s walk you through the implementation of a new command — `comment`.","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"`comment INDEX r/REMARK` (e.g., `comment 2 r/Likes baseball`)","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"## Create a new `comment` command","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":" * Changes the comment of an existing person in the address book.","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        return new CommandResult(\"Hello from comment\");","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `comment` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"![Output displayed](../images/add-comment/RemarkHello.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"![The relationship between RemarkCommand and Command](../images/add-comment/CommandInterface.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"            + \": Edits the comment of the person identified \"","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"            + \"Existing comment will be overwritten by the input.\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"    private final String comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"     * @param index of the person in the filtered person list to edit the comment","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"     * @param comment of the person to be updated to","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"    public RemarkCommand(Index index, String comment) {","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"        requireAllNonNull(index, comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), comment));","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 comment.equals(e.comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"securespider"},"content":"Now let’s move on to writing a parser that will extract the index and comment from the input provided by the user.","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"securespider"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-comment/ParserInterface.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"securespider"},"content":"This appears to be what we need to get a String of the comment. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2023-02-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"securespider"},"content":"    String comment \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-02-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"securespider"},"content":"    return new RemarkCommand(index, comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"securespider"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a comment given to a person.","lastModifiedDate":"2023-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"securespider"},"content":"## Add a placeholder element for comment to the UI","lastModifiedDate":"2023-02-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"securespider"},"content":"private Label comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"securespider"},"content":"\u003cLabel fx:id\u003d\"comment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$comment\" /\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"securespider"},"content":"![$comment shows up in each entry](../images/add-comment/$Remark.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"securespider"},"content":"    comment.setText(person.getRemark().value);","lastModifiedDate":"2023-02-24"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"securespider"},"content":"![The comment label is bound properly!](../images/add-comment/RemarkBound.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added comment to Person: %1$s\";","lastModifiedDate":"2023-02-24"},{"lineNumber":336,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed comment from Person: %1$s\";","lastModifiedDate":"2023-02-24"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"securespider"},"content":"                personToEdit.getAddress(), comment, personToEdit.getTags());","lastModifiedDate":"2023-02-24"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"securespider"},"content":"     * the comment is added to or removed from","lastModifiedDate":"2023-02-24"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"securespider"},"content":"        String message \u003d !comment.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-02-24"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"securespider"},"content":"![Congratulations!](../images/add-comment/RemarkComplete.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"securespider"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a comment works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2023-02-24"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"securespider"},"content":"![Using the context menu to jump to tests](../images/add-comment/ContextMenu.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"securespider"},"content":"![Creating a test for `execute`.](../images/add-comment/CreateTest.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"securespider":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"**If you have done the [Add `comment` command tutorial](AddComment.html)  already**, you should know where the code had to be updated to add the field `comment`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"securespider":1,"-":111}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.PcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.Parents;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.parents.JsonParentsStorage;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.parents.ParentsStorage;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.storage.pcclass.JsonPcClassStorage;","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.storage.pcclass.PcClassStorage;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing PowerConnect ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        PcClassStorage pcClassStorage \u003d new JsonPcClassStorage(userPrefs.getPcClassFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"        ParentsStorage parentsStorage \u003d new JsonParentsStorage(userPrefs.getParentsFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"        storage \u003d new StorageManager(pcClassStorage, parentsStorage, userPrefsStorage);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        Optional\u003cReadOnlyPcClass\u003e pcClassOptional;","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"        Optional\u003cReadOnlyParents\u003e parentsOptional;","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        ReadOnlyPcClass initialClasses;","lastModifiedDate":"2023-03-18"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"        ReadOnlyParents initialParents;","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"            pcClassOptional \u003d storage.readPC();","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"            if (!pcClassOptional.isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"                logger.info(\"Data file not found. Will be starting with a sample class\");","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"            initialClasses \u003d pcClassOptional.orElseGet(SampleDataUtil::getSamplePcClass);","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"            parentsOptional \u003d storage.readParents();","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"            if (!parentsOptional.isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"                logger.info(\"Data file not found. Will be starting with a sample parents\");","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"            initialParents \u003d parentsOptional.orElseGet(SampleDataUtil::getSampleParents);","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty PowerConnect\");","lastModifiedDate":"2023-03-30"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"            initialClasses \u003d new PcClass();","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"            initialParents \u003d new Parents();","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PowerConnect\");","lastModifiedDate":"2023-03-30"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"            initialClasses \u003d new PcClass();","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"            initialParents \u003d new Parents();","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"        return new ModelManager(initialClasses, initialParents, userPrefs);","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty PowerConnect\");","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"MrTwit99"},"content":"        logger.info(\"Starting PowerConnect \" + MainApp.VERSION);","lastModifiedDate":"2023-03-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"MrTwit99"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping PowerConnect ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-30"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MrTwit99":6,"securespider":21,"-":163,"mayuanxin1234":10}},{"path":"src/main/java/seedu/address/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    private static final String LOG_FILE \u003d \"PowerConnect.log\";","lastModifiedDate":"2023-03-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MrTwit99":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command. Try \u0027student\u0027 or \u0027parent\u0027 \"","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"            + \"or \u0027list\u0027 or \u0027help\u0027\";","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"            \"The student index provided is invalid/ not found\";","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_INVALID_STUDENT_CLASS \u003d \"The student class provided is invalid/not found\";","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_STUDENT_NOT_FOUND \u003d","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"            \"The student with the corresponding index number and class cannot be not found\";","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_DUPLICATE_HOMEWORK \u003d \"This homework already exists!\";","lastModifiedDate":"2023-04-02"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_DUPLICATE_TEST \u003d \"This test already exists in the address book\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_INVALID_PARENT_DELETE \u003d \"The parent you are trying to delete has a \"","lastModifiedDate":"2023-03-19"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"            + \"student attached! You can\u0027t delete the parent!\";","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_PARENT_NOT_FOUND \u003d \"The parent name and parent number provided does not match \"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"            + \"any of the parents in our parent list!\";","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_DUPLICATE_ATTENDANCE \u003d \"Attendance already marked!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_BLANK_FIND \u003d \"Please enter letters to find a name!\";","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_INVALID_WEIGHTAGE \u003d","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"            \"Error! The weightage should add up to less than or equals to 100%\";","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":3,"securespider":1,"Diatbbin":3,"-":11,"mayuanxin1234":10}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"     * Returns the parents.","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"     * @see Model#getParents()","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    ReadOnlyParents getParents();","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"     * Returns the PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"     * @see Model#getPcClass()","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    ReadOnlyPcClass getPcClass();","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    /** Returns an unmodifiable view of the filtered list of students */","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"    /** Returns an unmodifiable view of the filtered list of parents */","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    ObservableList\u003cParent\u003e getFilteredParentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"     * Returns the user prefs\u0027 PCClass file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    Path getPcClassFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"securespider":13,"-":43,"mayuanxin1234":8}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.PowerConnectParser;","lastModifiedDate":"2023-03-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    private final PowerConnectParser powerConnectParser;","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        powerConnectParser \u003d new PowerConnectParser();","lastModifiedDate":"2023-04-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        Command command \u003d powerConnectParser.parseCommand(commandText);","lastModifiedDate":"2023-04-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"            storage.savePC(model.getPcClass());","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"            storage.saveParents(model.getParents());","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"     * Returns the parents.","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"     * @see Model#getParents()","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"    public ReadOnlyParents getParents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"        return model.getParents();","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"     * Returns the PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"     * @see Model#getPcClass()","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"    public ReadOnlyPcClass getPcClass() {","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"        return model.getPcClass();","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"     * Returns the user prefs\u0027 PCClass file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"    public Path getPcClassFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        return model.getPcClassFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"    public ObservableList\u003cParent\u003e getFilteredParentList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        return model.getFilteredParentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"MrTwit99":1,"securespider":18,"-":71,"mayuanxin1234":16}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    public abstract CommandResult execute(Model model) throws CommandException, ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    private final boolean showFind;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    private final Class studentClass;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        this.showFind \u003d false;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentClass \u003d null;","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public CommandResult(String feedbackToUser, boolean showFind, Class studentClass) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        this.showHelp \u003d false;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        this.exit \u003d false;","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"        this.showFind \u003d showFind;","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentClass \u003d studentClass;","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean isFind() {","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        return showFind;","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    public Class getStudentClass() {","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        return studentClass;","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 showFind \u003d\u003d otherCommandResult.showFind;","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":70,"mayuanxin1234":23}},{"path":"src/main/java/seedu/address/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting PowerConnect as requested ...\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"MrTwit99":1,"-":18}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-28"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-28"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":" * Lists all students or parents in the address book to the user.","lastModifiedDate":"2023-03-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-03-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-03-28"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Lists all students or parents\\n\"","lastModifiedDate":"2023-03-28"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + COMMAND_WORD + \" student\" + \" or \" + COMMAND_WORD + \" parent\";","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String SHOWING_LIST_MESSAGE \u003d \"Listed all \";","lastModifiedDate":"2023-03-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    private String trimmedType;","lastModifiedDate":"2023-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-28"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a ListCommand to list the specified {@code Student} or {@code Parent}","lastModifiedDate":"2023-03-28"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"     * @param type","lastModifiedDate":"2023-03-28"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-28"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public ListCommand(String type) {","lastModifiedDate":"2023-03-28"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedType \u003d type.trim();","lastModifiedDate":"2023-03-28"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        this.trimmedType \u003d trimmedType;","lastModifiedDate":"2023-03-28"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-28"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        if (this.trimmedType.equals(\"student\")) {","lastModifiedDate":"2023-03-28"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredStudentList(Model.PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(SHOWING_LIST_MESSAGE + \"students!\", false, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (this.trimmedType.equals(\"parent\")) {","lastModifiedDate":"2023-03-28"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredParentList(Model.PREDICATE_SHOW_ALL_PARENTS);","lastModifiedDate":"2023-03-28"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(SHOWING_LIST_MESSAGE + \"parents!\", false, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-28"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(\"Invalid command! Try `list student` or `list parent`\",","lastModifiedDate":"2023-03-28"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"                    false, false);","lastModifiedDate":"2023-03-28"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-28"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-28"}],"authorContributionMap":{"-":15,"mayuanxin1234":25}},{"path":"src/main/java/seedu/address/logic/commands/parent/ParentAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.logic.commands.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGEPARENT;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTAGE;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicateParentException;","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":" * A class for \"parent add\" command\"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"public class ParentAddCommand extends ParentCommand {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_USAGE \u003d \"parent \" + COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            + \": Adds a parent to the address book. \\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"PHONE \"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"            + \"[\"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_PARENTAGE + \"AGE \"","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_IMAGEPARENT + \"IMAGE PARENT \"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"            + \"Example: \\n\" + \"parent \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NAME + \"Tan Ah Niu \"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"91234567 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_PARENTAGE + \"30 \"","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_IMAGEPARENT + \"XX.png (where XX is your image name) \"","lastModifiedDate":"2023-03-31"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_EMAIL + \"tanahcow@gmail.com \"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456)\";","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New parent added:\";","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"    private final Parent parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"     * Creates an AddCommand to add the specified {@code Parent}","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"    public ParentAddCommand(Parent parent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"        if (model.hasParent(parent)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicateParentException();","lastModifiedDate":"2023-03-19"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        model.addParent(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, parent));","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"                || (other instanceof ParentAddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 parent.equals(((ParentAddCommand) other).parent));","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":69,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/logic/commands/parent/ParentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.logic.commands.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":" * An abstract class for \"parent\" command","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"public abstract class ParentCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    public static final String COMMAND_WORD \u003d \"parent\";","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_USAGE \u003d \"1. parent add\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"            + \"2. parent delete\\n\" + \"3. parent edit\\n\" + \"4. parent find\\n\";","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":12,"Diatbbin":2}},{"path":"src/main/java/seedu/address/logic/commands/parent/ParentDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.logic.commands.parent;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-19"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":" * Deletes a parent identified using his or her name and phone number displayed on PowerConnect\u0027s parent list.","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"public class ParentDeleteCommand extends ParentCommand {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"            + \": Deletes the parent identified by their name and phone number used.\\n\"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_PHONEPARENT + \"PHONE\\n\"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"            + \"Example: parent \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NAME + \"Tan Ah Niu \"","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_PHONEPARENT + \"91234567\";","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_DELETE_PARENT_SUCCESS \u003d \"Deleted Parent: %1$s; Phone Number: %2$s;\";","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"    private final Phone phoneNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"    private final Name parentName;","lastModifiedDate":"2023-03-19"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"     * Creates a ParentDeleteCommand to delete the specified {@code Parent}","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    public ParentDeleteCommand(Name parentName, Phone phoneNumber) {","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        requireAllNonNull(parentName, phoneNumber);","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"        this.parentName \u003d parentName;","lastModifiedDate":"2023-03-19"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        //@@author diatbbin-reused","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/4ndrelim/tp/blob/master/src/main","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // /java/seedu/sudohr/logic/commands/department/DeleteDepartmentCommand.java","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        //with modifications","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Parent parentToDelete \u003d model.getParent(parentName, phoneNumber);","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (parentToDelete \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_PARENT_NOT_FOUND);","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (parentToDelete.hasStudents()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PARENT_DELETE);","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"        model.deleteParent(parentToDelete);","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"        Name deletedParentName \u003d parentToDelete.getName();","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"        Phone deletedParentPhoneNumber \u003d parentToDelete.getPhone();","lastModifiedDate":"2023-04-07"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PARENT_SUCCESS, deletedParentName,","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"                deletedParentPhoneNumber));","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"                || (other instanceof ParentDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 parentName.equals(((ParentDeleteCommand) other).parentName)","lastModifiedDate":"2023-04-07"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 phoneNumber.equals(((ParentDeleteCommand) other).phoneNumber)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"MrTwit99":9,"Diatbbin":56,"-":13}},{"path":"src/main/java/seedu/address/logic/commands/parent/ParentEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.logic.commands.parent;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGEPARENT;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWNAME;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWPHONEPARENT;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTAGE;","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-01"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-01"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-01"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":" * Edits a parent identified using its name and phone number displayed on PowerConnect\u0027s parent list.","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"public class ParentEditCommand extends ParentCommand {","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"            + \": Edits the parent / NOK identified by their phone number and name used in the displayed parent list.\"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"            + \" Edits the parent\u0027s / NOK\u0027s detail based on the information given.\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"PHONE \"","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"            + \"[\"","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NEWNAME + \"NEW NAME \"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_NEWPHONEPARENT + \"NEW  \"","lastModifiedDate":"2023-04-02"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_PARENTAGE + \"AGE \"","lastModifiedDate":"2023-04-02"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_IMAGEPARENT + \"IMAGE PARENT \"","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"            + \"Example: \\n\" + \"parent \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NAME + \"Tan Ah Niu \"","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"91234567 \"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NEWNAME + \"Tan Ah Seng \"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NEWPHONEPARENT + \"91274444 \"","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_PARENTAGE + \"31 \"","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_IMAGEPARENT + \"XX.png (where XX is your image name) \"","lastModifiedDate":"2023-03-31"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_EMAIL + \"tanahcow@gmail.com \"","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"Blk 245 Ang Mo Kio Avenue 1 #11-800 S(560245)\";","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_EDIT_PARENT_SUCCESS \u003d \"Edited Parent: %1$s; Phone number: %2$s;\";","lastModifiedDate":"2023-04-06"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"    private Address newAddress;","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    private Age newAge;","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"    private Email newEmail;","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"    private Image newImage;","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"    private final Name name;","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"    private Name newName;","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"    private Phone newPhoneNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"    private final Phone phoneNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"    private Set\u003cTag\u003e newTagList;","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"     * Creates a ParentEditCommand to edit the specified {@code Parent}","lastModifiedDate":"2023-03-21"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"    public ParentEditCommand(Name name, Name newName, Age newAge, Image newImage, Email newEmail,","lastModifiedDate":"2023-04-02"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"                             Phone phoneNumber, Phone newPhoneNumber, Address newAddress, Set\u003cTag\u003e newTagList) {","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2023-03-21"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        this.newAge \u003d newAge;","lastModifiedDate":"2023-04-02"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"        this.newImage \u003d newImage;","lastModifiedDate":"2023-03-21"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"        this.newEmail \u003d newEmail;","lastModifiedDate":"2023-03-21"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"        this.newPhoneNumber \u003d newPhoneNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"        this.newAddress \u003d newAddress;","lastModifiedDate":"2023-03-21"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"        this.newTagList \u003d newTagList;","lastModifiedDate":"2023-03-21"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-21"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"        ObservableList\u003cParent\u003e parents \u003d model.getFilteredParentList();","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"        for (Parent parent : parents) {","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"            if ((parent.getPhone().equals(phoneNumber)) \u0026\u0026 (parent.getName().equals(name))) {","lastModifiedDate":"2023-03-21"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"                if (Name.isDefaultName(newName.fullName)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"                    this.newName \u003d this.name;","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"                if (Phone.isDefaultPhone(newPhoneNumber.value)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"                    this.newPhoneNumber \u003d this.phoneNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"                if (Age.isDefaultAge(newAge.value)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"                    this.newAge \u003d parent.getAge();","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"                if (Image.isDefaultImage(newImage.value)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"                    this.newImage \u003d parent.getImage();","lastModifiedDate":"2023-03-21"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"                if (Email.isDefaultEmail(newEmail.value)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"                    this.newEmail \u003d parent.getEmail();","lastModifiedDate":"2023-03-21"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"                if (Address.isDefaultAddress(newAddress.value)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"                    this.newAddress \u003d parent.getAddress();","lastModifiedDate":"2023-03-21"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-03-21"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"                this.newTagList \u003d parent.getTags();","lastModifiedDate":"2023-03-21"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"                Parent newParent \u003d new Parent(this.newName, this.newAge, this.newImage, this.newEmail,","lastModifiedDate":"2023-04-02"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"                        this.newPhoneNumber, this.newAddress, this.newTagList);","lastModifiedDate":"2023-03-21"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"                model.setParent(parent, editParent(parent, newParent, model));","lastModifiedDate":"2023-03-31"},{"lineNumber":116,"author":{"gitId":"Diatbbin"},"content":"                return new CommandResult(String.format(MESSAGE_EDIT_PARENT_SUCCESS, newParent.getName(),","lastModifiedDate":"2023-04-06"},{"lineNumber":117,"author":{"gitId":"Diatbbin"},"content":"                        newParent.getPhone()));","lastModifiedDate":"2023-04-06"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":120,"author":{"gitId":"Diatbbin"},"content":"        throw new CommandException(Messages.MESSAGE_PARENT_NOT_FOUND);","lastModifiedDate":"2023-04-05"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"     * Method that helps transfer and update all students in the original Parent object to the new EDITED Parent object.","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"     * @param parent Original Parent object that is to be edited.","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"     * @param newParent Edited Parent object.","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"     * @return Edited Parent object with list of students in original Parent object and updates all the students.","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"    private Parent editParent(Parent parent, Parent newParent, Model model) {","lastModifiedDate":"2023-03-31"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"        if (parent.hasStudents()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"            List\u003cStudent\u003e students \u003d parent.getStudents();","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"            for (Student student : students) {","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"                Student originalStudent \u003d student;","lastModifiedDate":"2023-03-31"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"                student.setParent(newParent);","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"                model.setStudent(originalStudent, student);","lastModifiedDate":"2023-03-31"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"                newParent.addStudent(student);","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"        return newParent;","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"MrTwit99":122,"Diatbbin":9,"mayuanxin1234":11}},{"path":"src/main/java/seedu/address/logic/commands/parent/ParentFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.parent;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.ParentNameContainsKeywordsPredicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":" * A ParentFindCommand class for parent find command","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"public class ParentFindCommand extends ParentCommand {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all parents whose names contain any of \"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"    private final ParentNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a StudentFindCommand to find the specified {@code Student}","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     * @param predicate","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"    public ParentFindCommand(ParentNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        model.updateFilteredParentList(predicate);","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredParentList().size()));","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof ParentFindCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 predicate.equals(((ParentFindCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Diatbbin":3,"mayuanxin1234":41}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAILSTUDENT;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGEPARENT;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGESTUDENT;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTAGE;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTNAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONESTUDENT;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTAGE;","lastModifiedDate":"2023-04-02"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.exceptions.DuplicateParentException;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-03-19"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":" * A class for \"student Class Name add\" command\"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentAddCommand extends StudentCommand {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"            + \": Adds a student to the address book. \\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"INDEX NUMBER \"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PARENTNAME + \"NOK NAME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"NOK CONTACT NUMBER \"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_RELATIONSHIP + \"NOK RELATIONSHIP TO STUDENT \"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"            + \"[\"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SEX + \"SEX \"","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"RESIDENTIAL ADDRESS \"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_STUDENTAGE + \"AGE \"","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_IMAGESTUDENT + \"IMAGE STUDENT \"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_EMAILSTUDENT + \"EMAIL STUDENT \"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONESTUDENT + \"PHONE STUDENT \"","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_CCA + \"CCA \"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"            + PREFIX_ATTENDANCE + \" T/F \"","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_NAME + \"Tan Ah Cow \"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PARENTNAME + \"Tan Ah Niu \"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"91234567 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_RELATIONSHIP + \"Father \"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SEX + \"M \"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456) \"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_STUDENTAGE + \"14 \"","lastModifiedDate":"2023-04-02"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_IMAGESTUDENT + \"XX.png (where XX is your image name) \"","lastModifiedDate":"2023-03-31"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_EMAILSTUDENT + \"tanahcow@gmail.com \"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONESTUDENT + \"91234567 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"            + PREFIX_CCA + \"Captain Ball \"","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"            + PREFIX_ATTENDANCE + \"T \";","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added:\";","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"    private final Student toAdd;","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentAddCommand(Student student) {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        toAdd \u003d student;","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"     * Returns a CommandResult from adding a New Student to PowerConnect.","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"     * @return CommandResult from adding a New Student.","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"     * @throws CommandException When there\u0027s an unexpected situation occurring.","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-19"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"        /*","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"        if (!model.canInitialize(toAdd.getParentNumber(), toAdd.getParentName())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicatePhoneException();","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"         */","lastModifiedDate":"2023-03-18"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"        ObservableList\u003cParent\u003e parents \u003d model.getFilteredParentList();","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"        setParent(parents, toAdd, model);","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"        model.addStudent(toAdd, toAdd.getStudentClass());","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof StudentAddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 toAdd.equals(((StudentAddCommand) other).toAdd));","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"     * A method that binds the Student\u0027s Parent / NOK to the Student","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"     * @param parents List of existing Parents / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"     * @param student Student that needs the binding of Parent/NOK to.","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(ObservableList\u003cParent\u003e parents, Student student, Model model) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"        Phone parentNumber \u003d student.getParentNumber();","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"        Name parentName \u003d student.getParentName();","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"        for (Parent p : parents) {","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"            if ((p.getPhone().equals(parentNumber)) \u0026\u0026 (p.getName().equals(parentName))) {","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"MrTwit99"},"content":"                student.setParent(p);","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"                Parent newParent \u003d p;","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"MrTwit99"},"content":"                newParent.addStudent(student); //bind student to parent","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"                model.setParent(p, newParent); //update parent in parents","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"                return;","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"        Image image \u003d ParserUtil.parseImage(argMultimap.getValue(PREFIX_IMAGEPARENT).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"        Age age \u003d ParserUtil.parseAge((argMultimap.getValue(PREFIX_PARENTAGE).get()));","lastModifiedDate":"2023-04-02"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"        Parent newParent \u003d new Parent(parentName, age, image, email, parentNumber,","lastModifiedDate":"2023-04-02"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"                address, tagList); //create new parent as there isnt any matching parent","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"        newParent.addStudent(student); //bind student to parent","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"securespider"},"content":"        if (model.hasParent(newParent)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"securespider"},"content":"            throw new DuplicateParentException();","lastModifiedDate":"2023-03-21"},{"lineNumber":157,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":158,"author":{"gitId":"MrTwit99"},"content":"        model.addParent(newParent);","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"MrTwit99"},"content":"        student.setParent(newParent);","lastModifiedDate":"2023-03-23"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":66,"securespider":24,"Diatbbin":5,"mayuanxin1234":66}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentAttendanceCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-31"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import java.util.List;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":" * Adds attendance to a student","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"public class StudentAttendanceCommand extends StudentCommand {","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    public static final String COMMAND_WORD \u003d \"attendance\";","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Attendance marked for student\";","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"            + \": Marks student as present. \\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"            + PREFIX_INDEXNUMBER + \"INDEX NUMBER \"","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"            + \"[\"","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"            + PREFIX_ATTENDANCE + \"DATE \"","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"            + PREFIX_ATTENDANCE + \"15/05/2023\";","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"    private Class sc;","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    private IndexNumber indexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    private Attendance attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"     * Creates an add attendance command for test","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"     * @param indexNumber student to be edited","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"     * @param attendance Date to be added","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    public StudentAttendanceCommand(Class sc, IndexNumber indexNumber, Attendance attendance) {","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"        List\u003cStudent\u003e lastShownList \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"                model.getPcClass().getClassList().get(0).getStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        for (int i \u003d 0; i \u003c model.getPcClass().getClassList().size(); i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"            if (model.getPcClass().getClassList().get(i).getClassName().equals(sc.getClassName())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"                lastShownList \u003d model.getPcClass().getClassList().get(i).getStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"                break;","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"        Student studentToEdit \u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"            Student curr \u003d lastShownList.get(i);","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"            if (i \u003d\u003d lastShownList.size() - 1 \u0026\u0026 !curr.getIndexNumber().equals(indexNumber)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"            if (curr.getIndexNumber().equals(indexNumber) \u0026\u0026 curr.getStudentClass().equals(sc)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"                Set\u003cAttendance\u003e attendanceSet \u003d curr.getAttendance();","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"                if (attendanceSet.contains(attendance)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"                    throw new CommandException(Messages.MESSAGE_DUPLICATE_ATTENDANCE);","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"                }","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"                studentToEdit \u003d curr;","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"                break;","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"        if (studentToEdit \u003d\u003d null) {","lastModifiedDate":"2023-03-31"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-31"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"        Set\u003cAttendance\u003e attendanceSet \u003d studentToEdit.getAttendance();","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"        Set\u003cAttendance\u003e attendanceSetReplaced \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"        if (attendance.isAbsent()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"            LocalDate today \u003d LocalDate.now();","lastModifiedDate":"2023-03-31"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"            for (Attendance att : attendanceSet) {","lastModifiedDate":"2023-03-31"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"                if (!att.isPresent(today)) {","lastModifiedDate":"2023-03-31"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"                    attendanceSetReplaced.add(att);","lastModifiedDate":"2023-03-31"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"        } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"            attendanceSetReplaced.addAll(attendanceSet);","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"            attendanceSetReplaced.add(attendance);","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"        Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"                studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-04-02"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"                studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"securespider"},"content":"                studentToEdit.getCca(), studentToEdit.getAddress(), attendanceSetReplaced,","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"                studentToEdit.getHomework(), studentToEdit.getTest(),","lastModifiedDate":"2023-03-22"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"                studentToEdit.getTags(), studentToEdit.getComment());","lastModifiedDate":"2023-03-22"},{"lineNumber":118,"author":{"gitId":"securespider"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-22"},{"lineNumber":119,"author":{"gitId":"securespider"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":120,"author":{"gitId":"securespider"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, editedStudent));","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":122,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":123,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-03-22"},{"lineNumber":125,"author":{"gitId":"securespider"},"content":"        return super.toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":126,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"securespider":126,"mayuanxin1234":1}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":" * An abstract class for \"student\" command","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"public abstract class StudentCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    public static final String PERSON_WORD \u003d \"student\";","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d \"1. student \u003cCLASS_NAME\u003e add\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"2. student \u003cCLASS_NAME\u003e comment\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"3. student \u003cCLASS_NAME\u003e grade\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"4. student \u003cCLASS_NAME\u003e delete\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"                                              + \"5. student \u003cCLASS_NAME\u003e gradedelete\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"6. student \u003cCLASS_NAME\u003e edit\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"7. student \u003cCLASS_NAME\u003e attendance\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"8. student \u003cCLASS_NAME\u003e list\\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"9. student \u003cCLASS_NAME\u003e find\\n\";","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: \u003cSTUDENT_NAME\u003e\";","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"securespider":1,"Diatbbin":2,"mayuanxin1234":20}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentCommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":" * A StudentCommentCommand class for comment \"student CLASSNAME comment\"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentCommentCommand extends StudentCommand {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_ADD_COMMENT_SUCCESS \u003d \"Added comment to Person: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_DELETE_COMMENT_SUCCESS \u003d \"Removed comment from Person: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a comment to a person in the address book. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"IndexNumber \"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_COMMENT + \"Good Student\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"1 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_COMMENT + \"Good Student\";","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    private final IndexNumber index;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    private final Comment comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"    private final Class studentClass;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"     * @param comment of the person to be updated to","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    public StudentCommentCommand(Class studentClass, IndexNumber index, Comment comment) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(index, comment);","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentClass \u003d studentClass;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"     * Implements the execution of the command.","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"     * @return  the CommandResult of the command execution","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws CommandException If invalid person index is given","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cStudent\u003e lastShownList \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"                model.getPcClass().getClassList().get(0).getStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-19"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c model.getPcClass().getClassList().size(); i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"            if (model.getPcClass().getClassList().get(i).getClassName().equals(studentClass.getClassName())) {","lastModifiedDate":"2023-03-19"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"                lastShownList \u003d model.getPcClass().getClassList().get(i).getStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-19"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        Student studentToEdit \u003d null;","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"            Student curr \u003d lastShownList.get(i);","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"            if (i \u003d\u003d lastShownList.size() - 1 \u0026\u0026 !curr.getIndexNumber().equals(index)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"            if (curr.getIndexNumber().equals(index) \u0026\u0026 curr.getStudentClass().equals(studentClass)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit \u003d curr;","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        if (studentToEdit \u003d\u003d null) {","lastModifiedDate":"2023-04-02"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_CLASS);","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-04-02"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getHomework(), studentToEdit.getTest(), studentToEdit.getTags(), comment);","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"     * the comment is added to or removed from","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"        String message \u003d !comment.value.isEmpty() ? MESSAGE_ADD_COMMENT_SUCCESS : MESSAGE_DELETE_COMMENT_SUCCESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        if (!(other instanceof StudentCommentCommand)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"            return false;","lastModifiedDate":"2023-03-10"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"        StudentCommentCommand e \u003d (StudentCommentCommand) other;","lastModifiedDate":"2023-03-10"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-10"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 comment.equals((e.comment));","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"securespider":3,"Diatbbin":1,"mayuanxin1234":115}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-04-07"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":" * Deletes a student identified using his or her class and index number from PowerConnect.","lastModifiedDate":"2023-04-07"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"public class StudentDeleteCommand extends StudentCommand {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"            + \": Deletes the student identified by their class and index number used.\\n\"","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_INDEXNUMBER + \"INDEX NUMBER\\n\"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"            + \"Example: student 1A delete \"","lastModifiedDate":"2023-04-07"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_INDEXNUMBER + \"25\";","lastModifiedDate":"2023-04-07"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"            \"Deleted Student: %1$s; Class: %2$s; Index Number: %3$s;\";","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"    private final IndexNumber targetIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    private final Class studentClass;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"     * Creates a StudentDeleteCommand to delete the specified {@code Student}","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"    public StudentDeleteCommand(IndexNumber targetIndex, Class studentClass) {","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        requireAllNonNull(targetIndex, studentClass);","lastModifiedDate":"2023-04-07"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        this.studentClass \u003d studentClass;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        //@@author diatbbin-reused","lastModifiedDate":"2023-04-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/4ndrelim/tp/blob/master/src/main","lastModifiedDate":"2023-04-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // /java/seedu/sudohr/logic/commands/department/DeleteDepartmentCommand.java","lastModifiedDate":"2023-04-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        //with modifications","lastModifiedDate":"2023-04-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Student studentToDelete \u003d model.getStudent(targetIndex, studentClass);","lastModifiedDate":"2023-04-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (studentToDelete \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        model.deleteStudent(studentToDelete);","lastModifiedDate":"2023-04-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Parent parentToUnbind \u003d model.getParent(studentToDelete.getParentName(), studentToDelete.getParentNumber());","lastModifiedDate":"2023-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (parentToUnbind \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_PARENT_NOT_FOUND);","lastModifiedDate":"2023-04-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-04-07"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"        Parent updatedParent \u003d parentToUnbind;","lastModifiedDate":"2023-04-07"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"        updatedParent.removeStudent(studentToDelete); //unbind student from parent","lastModifiedDate":"2023-04-07"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"        model.setParent(parentToUnbind, updatedParent); //update parent in parentList","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, studentToDelete.getName(),","lastModifiedDate":"2023-04-07"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"                studentToDelete.getStudentClass(), studentToDelete.getIndexNumber()));","lastModifiedDate":"2023-04-07"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"                || (other instanceof StudentDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 targetIndex.equals(((StudentDeleteCommand) other).targetIndex)","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 studentClass.equals(((StudentDeleteCommand) other).studentClass)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":3,"securespider":3,"Diatbbin":57,"mayuanxin1234":2,"-":16}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentEditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-04-07"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAILSTUDENT;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGESTUDENT;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWCLASS;","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWINDEXNUMBER;","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWNAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWPARENTNAME;","lastModifiedDate":"2023-03-31"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWPHONEPARENT;","lastModifiedDate":"2023-03-31"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONESTUDENT;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTAGE;","lastModifiedDate":"2023-04-02"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-01"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-01"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2023-04-01"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Cca;","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"public class StudentEditCommand extends StudentCommand {","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the student identified by their \"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"            + \"index number and class in the displayed student list \\n\"","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_INDEXNUMBER + \"INDEX NUMBER \"","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"            + \"[\"","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_NEWNAME + \"NEW NAME \"","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_NEWINDEXNUMBER + \"NEW INDEX NUMBER \"","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_NEWCLASS + \"NEW STUDENT CLASS \"","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_SEX + \"SEX \"","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_STUDENTAGE + \"AGE \"","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_IMAGESTUDENT + \"IMAGE STUDENT \"","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_CCA + \"CCA \"","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_COMMENT + \"COMMENT \"","lastModifiedDate":"2023-04-07"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_PHONESTUDENT + \"STUDENT NUMBER \"","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_EMAILSTUDENT + \"STUDENT EMAIL \"","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NEWPARENTNAME + \"PARENT NAME \"","lastModifiedDate":"2023-03-31"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NEWPHONEPARENT + \"PARENT PHONE NUMBER \"","lastModifiedDate":"2023-03-31"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_RELATIONSHIP + \"RELATIONSHIP \"","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"            + \"Example: \\n\" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_INDEXNUMBER + \"02 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_NEWNAME + \"Tan Ah Niu \"","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_NEWINDEXNUMBER + \"03 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_NEWCLASS + \"1B \"","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_SEX + \"M\"","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_STUDENTAGE + \"10 \"","lastModifiedDate":"2023-04-02"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_IMAGESTUDENT + \"XX.png (where XX is your image name) \"","lastModifiedDate":"2023-03-31"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_CCA + \"AIKIDO \"","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_COMMENT + \"Quiet \"","lastModifiedDate":"2023-04-07"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_PHONESTUDENT + \"90909090 \"","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_EMAILSTUDENT + \"tanahcow@gmail.com \"","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_ADDRESS + \"Blk 245 Ang Mo Kio Avenue 1 #11-800 S(560245) \"","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NEWPARENTNAME + \"Tan Ah Seng \"","lastModifiedDate":"2023-03-31"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NEWPHONEPARENT + \"98989898 \"","lastModifiedDate":"2023-03-31"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"            + PREFIX_RELATIONSHIP + \"FATHER\";","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_EDIT_STUDENT_SUCCESS \u003d \"Edited student: %1$s; Class: %2$s; Index Number: %3$s;\";","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"    private IndexNumber indexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"    private IndexNumber newIndexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"    private Class studentClass;","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"    private Class newStudentClass;","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"    private Age newAge;","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"    private Image newImage;","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"    private Cca newCca;","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"    private Set\u003cAttendance\u003e newAttendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"    private Comment newComment;","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"    private Phone newStudentPhoneNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"    private Email newEmail;","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"    private Address newAddress;","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"    private Set\u003cTag\u003e newTagList;","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"    private Set\u003cTest\u003e newTest;","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"    private Set\u003cHomework\u003e newHomework;","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"    private Relationship newRelationship;","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"Diatbbin"},"content":"    private Name newName;","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"Diatbbin"},"content":"    private Sex newSex;","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"    private Phone newParentPhoneNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"Diatbbin"},"content":"    private Name newParentName;","lastModifiedDate":"2023-03-22"},{"lineNumber":115,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":116,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"Diatbbin"},"content":"         * Creates a StudentEditCommand to edit the specified {@code Student}","lastModifiedDate":"2023-04-07"},{"lineNumber":118,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"    public StudentEditCommand(Name newName, IndexNumber indexNumber, IndexNumber newIndexNumber,","lastModifiedDate":"2023-03-23"},{"lineNumber":120,"author":{"gitId":"Diatbbin"},"content":"                              Class studentClass, Class newStudentClass, Sex newSex, Phone newParentPhoneNumber,","lastModifiedDate":"2023-03-22"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"                              Name newParentName, Relationship newRelationship, Age newAge, Image newImage, Cca newCca,","lastModifiedDate":"2023-04-02"},{"lineNumber":122,"author":{"gitId":"Diatbbin"},"content":"                              Comment newComment, Phone newStudentPhoneNumber, Email newEmail, Address newAddress) {","lastModifiedDate":"2023-04-05"},{"lineNumber":123,"author":{"gitId":"Diatbbin"},"content":"        requireNonNull(indexNumber);","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"Diatbbin"},"content":"        requireNonNull(studentClass);","lastModifiedDate":"2023-03-21"},{"lineNumber":125,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"Diatbbin"},"content":"        this.newName \u003d newName;","lastModifiedDate":"2023-03-22"},{"lineNumber":127,"author":{"gitId":"Diatbbin"},"content":"        this.newRelationship \u003d newRelationship;","lastModifiedDate":"2023-03-22"},{"lineNumber":128,"author":{"gitId":"Diatbbin"},"content":"        this.newParentName \u003d newParentName;","lastModifiedDate":"2023-03-22"},{"lineNumber":129,"author":{"gitId":"Diatbbin"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"Diatbbin"},"content":"        this.studentClass \u003d studentClass;","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"Diatbbin"},"content":"        this.newParentPhoneNumber \u003d newParentPhoneNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"        this.newAge \u003d newAge;","lastModifiedDate":"2023-04-02"},{"lineNumber":133,"author":{"gitId":"Diatbbin"},"content":"        this.newImage \u003d newImage;","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"Diatbbin"},"content":"        this.newCca \u003d newCca;","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"Diatbbin"},"content":"        this.newComment \u003d newComment;","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"Diatbbin"},"content":"        this.newStudentPhoneNumber \u003d newStudentPhoneNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"Diatbbin"},"content":"        this.newEmail \u003d newEmail;","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"Diatbbin"},"content":"        this.newAddress \u003d newAddress;","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"Diatbbin"},"content":"        this.newSex \u003d newSex;","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"Diatbbin"},"content":"        this.newIndexNumber \u003d newIndexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"Diatbbin"},"content":"        this.newStudentClass \u003d newStudentClass;","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2023-03-23"},{"lineNumber":146,"author":{"gitId":"Diatbbin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        //@@author diatbbin-reused","lastModifiedDate":"2023-04-07"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        //Reused from https://github.com/4ndrelim/tp/blob/master/src/main","lastModifiedDate":"2023-04-07"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        // /java/seedu/sudohr/logic/commands/department/DeleteDepartmentCommand.java","lastModifiedDate":"2023-04-07"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        //with modifications","lastModifiedDate":"2023-04-07"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        Student studentToEdit \u003d model.getStudent(indexNumber, studentClass);","lastModifiedDate":"2023-04-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        if (studentToEdit \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_STUDENT_NOT_FOUND);","lastModifiedDate":"2023-04-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        //@@author","lastModifiedDate":"2023-04-07"},{"lineNumber":157,"author":{"gitId":"Diatbbin"},"content":"        Student editedStudent \u003d createEditedStudent(studentToEdit);","lastModifiedDate":"2023-04-05"},{"lineNumber":158,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":159,"author":{"gitId":"Diatbbin"},"content":"        model.setStudent(studentToEdit, setParent(editedStudent, model, studentToEdit));","lastModifiedDate":"2023-04-05"},{"lineNumber":160,"author":{"gitId":"Diatbbin"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"Diatbbin"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_STUDENT_SUCCESS, editedStudent.getName(),","lastModifiedDate":"2023-04-05"},{"lineNumber":162,"author":{"gitId":"Diatbbin"},"content":"                editedStudent.getStudentClass(), editedStudent.getIndexNumber()));","lastModifiedDate":"2023-04-05"},{"lineNumber":163,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":164,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":165,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":166,"author":{"gitId":"Diatbbin"},"content":"     * Creates and returns a {@code Student} with the details of {@code student}","lastModifiedDate":"2023-04-05"},{"lineNumber":167,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":168,"author":{"gitId":"Diatbbin"},"content":"    public Student createEditedStudent(Student student) {","lastModifiedDate":"2023-04-05"},{"lineNumber":169,"author":{"gitId":"Diatbbin"},"content":"        if (Name.isDefaultName(newName.fullName)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"Diatbbin"},"content":"            this.newName \u003d student.getName();","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":172,"author":{"gitId":"Diatbbin"},"content":"        if (IndexNumber.isDefaultIndexNumber(newIndexNumber.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"Diatbbin"},"content":"            this.newIndexNumber \u003d this.indexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":175,"author":{"gitId":"Diatbbin"},"content":"        if (Class.isDefaultClass(newStudentClass.getClassName())) {","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"Diatbbin"},"content":"            this.newStudentClass \u003d this.studentClass;","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":178,"author":{"gitId":"Diatbbin"},"content":"        if (Phone.isDefaultPhone(newParentPhoneNumber.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":179,"author":{"gitId":"Diatbbin"},"content":"            this.newParentPhoneNumber \u003d student.getParentNumber();","lastModifiedDate":"2023-03-22"},{"lineNumber":180,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":181,"author":{"gitId":"Diatbbin"},"content":"        if (Phone.isDefaultPhone(newStudentPhoneNumber.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":182,"author":{"gitId":"Diatbbin"},"content":"            this.newStudentPhoneNumber \u003d student.getPhone();","lastModifiedDate":"2023-03-22"},{"lineNumber":183,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"        if (Age.isDefaultAge(newAge.value)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":185,"author":{"gitId":"mayuanxin1234"},"content":"            this.newAge \u003d student.getAge();","lastModifiedDate":"2023-04-02"},{"lineNumber":186,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":187,"author":{"gitId":"Diatbbin"},"content":"        if (Image.isDefaultImage(newImage.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":188,"author":{"gitId":"Diatbbin"},"content":"            this.newImage \u003d student.getImage();","lastModifiedDate":"2023-03-22"},{"lineNumber":189,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":190,"author":{"gitId":"Diatbbin"},"content":"        if (Cca.isDefaultCca(newCca.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":191,"author":{"gitId":"Diatbbin"},"content":"            this.newCca \u003d student.getCca();","lastModifiedDate":"2023-03-22"},{"lineNumber":192,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":193,"author":{"gitId":"Diatbbin"},"content":"        if (Comment.isDefaultComment(newComment.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":194,"author":{"gitId":"Diatbbin"},"content":"            this.newComment \u003d student.getComment();","lastModifiedDate":"2023-03-22"},{"lineNumber":195,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":196,"author":{"gitId":"Diatbbin"},"content":"        if (Image.isDefaultImage(newImage.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":197,"author":{"gitId":"Diatbbin"},"content":"            this.newImage \u003d student.getImage();","lastModifiedDate":"2023-03-22"},{"lineNumber":198,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":199,"author":{"gitId":"Diatbbin"},"content":"        if (Email.isDefaultEmail(newEmail.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":200,"author":{"gitId":"Diatbbin"},"content":"            this.newEmail \u003d student.getEmail();","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":202,"author":{"gitId":"Diatbbin"},"content":"        if (Address.isDefaultAddress(newAddress.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":203,"author":{"gitId":"Diatbbin"},"content":"            this.newAddress \u003d student.getAddress();","lastModifiedDate":"2023-03-22"},{"lineNumber":204,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":205,"author":{"gitId":"Diatbbin"},"content":"        if (Sex.isDefaultSex(newSex.value)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":206,"author":{"gitId":"Diatbbin"},"content":"            this.newSex \u003d student.getSex();","lastModifiedDate":"2023-03-22"},{"lineNumber":207,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":208,"author":{"gitId":"Diatbbin"},"content":"        if (Relationship.isDefaultRelationship(newRelationship.rls)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"Diatbbin"},"content":"            this.newRelationship \u003d student.getRls();","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":211,"author":{"gitId":"Diatbbin"},"content":"        if (Name.isDefaultName(newParentName.fullName)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":212,"author":{"gitId":"Diatbbin"},"content":"            this.newParentName \u003d student.getParentName();","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":214,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":215,"author":{"gitId":"Diatbbin"},"content":"        this.newTagList \u003d student.getTagList();","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"Diatbbin"},"content":"        this.newTest \u003d student.getTest();","lastModifiedDate":"2023-03-22"},{"lineNumber":217,"author":{"gitId":"Diatbbin"},"content":"        this.newHomework \u003d student.getHomeworkSet();","lastModifiedDate":"2023-03-22"},{"lineNumber":218,"author":{"gitId":"mayuanxin1234"},"content":"        this.newAttendance \u003d student.getAttendance();","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":220,"author":{"gitId":"Diatbbin"},"content":"        return new Student(newName, this.newStudentClass, this.newIndexNumber, this.newSex,","lastModifiedDate":"2023-04-05"},{"lineNumber":221,"author":{"gitId":"mayuanxin1234"},"content":"                this.newParentName, this.newParentPhoneNumber, this.newRelationship, this.newAge, this.newImage,","lastModifiedDate":"2023-04-02"},{"lineNumber":222,"author":{"gitId":"mayuanxin1234"},"content":"                this.newEmail, this.newStudentPhoneNumber, this.newCca, this.newAddress, this.newAttendance,","lastModifiedDate":"2023-04-02"},{"lineNumber":223,"author":{"gitId":"mayuanxin1234"},"content":"                newHomework, this.newTest, this.newTagList, this.newComment);","lastModifiedDate":"2023-04-02"},{"lineNumber":224,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":225,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":226,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-24"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"     * A method that binds the Student\u0027s Parent / NOK to the Student","lastModifiedDate":"2023-03-24"},{"lineNumber":228,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-24"},{"lineNumber":229,"author":{"gitId":"MrTwit99"},"content":"     * @param student    Student with edited particulars.","lastModifiedDate":"2023-03-31"},{"lineNumber":230,"author":{"gitId":"mayuanxin1234"},"content":"     * @param model      {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-24"},{"lineNumber":231,"author":{"gitId":"MrTwit99"},"content":"     * @param oldStudent Student with original particulars before being edited.","lastModifiedDate":"2023-03-31"},{"lineNumber":232,"author":{"gitId":"MrTwit99"},"content":"     * @return Edited Student that is bound to its Parent / NOK.","lastModifiedDate":"2023-03-31"},{"lineNumber":233,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-24"},{"lineNumber":234,"author":{"gitId":"Diatbbin"},"content":"    public Student setParent(Student student, Model model, Student oldStudent)","lastModifiedDate":"2023-04-05"},{"lineNumber":235,"author":{"gitId":"mayuanxin1234"},"content":"            throws ParseException {","lastModifiedDate":"2023-03-24"},{"lineNumber":236,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":237,"author":{"gitId":"Diatbbin"},"content":"        ObservableList\u003cParent\u003e parents \u003d model.getFilteredParentList();","lastModifiedDate":"2023-04-05"},{"lineNumber":238,"author":{"gitId":"MrTwit99"},"content":"        if (student.getParentNumber() \u003d\u003d oldStudent.getParentNumber()) { // Parent phone number did not change","lastModifiedDate":"2023-03-31"},{"lineNumber":239,"author":{"gitId":"MrTwit99"},"content":"            if (student.getParentName() !\u003d oldStudent.getParentName()) { // Parent changed his/her name","lastModifiedDate":"2023-03-31"},{"lineNumber":240,"author":{"gitId":"mayuanxin1234"},"content":"                for (Parent p : parents) {","lastModifiedDate":"2023-03-24"},{"lineNumber":241,"author":{"gitId":"mayuanxin1234"},"content":"                    if ((p.getPhone().equals(oldStudent.getParentNumber())) \u0026\u0026 (p.getName().equals(","lastModifiedDate":"2023-03-24"},{"lineNumber":242,"author":{"gitId":"mayuanxin1234"},"content":"                            oldStudent.getParentName()))) {","lastModifiedDate":"2023-03-24"},{"lineNumber":243,"author":{"gitId":"mayuanxin1234"},"content":"                        Parent newParent \u003d new Parent(student.getParentName(), p.getAge(), p.getImage(), p.getEmail(),","lastModifiedDate":"2023-04-02"},{"lineNumber":244,"author":{"gitId":"mayuanxin1234"},"content":"                                p.getPhone(), p.getAddress(), p.getTags());","lastModifiedDate":"2023-04-02"},{"lineNumber":245,"author":{"gitId":"MrTwit99"},"content":"                        newParent \u003d editParent(p, newParent, model);","lastModifiedDate":"2023-03-31"},{"lineNumber":246,"author":{"gitId":"MrTwit99"},"content":"                        model.setParent(p, newParent);","lastModifiedDate":"2023-03-31"},{"lineNumber":247,"author":{"gitId":"mayuanxin1234"},"content":"                        student.setParent(newParent);","lastModifiedDate":"2023-03-24"},{"lineNumber":248,"author":{"gitId":"MrTwit99"},"content":"                        return student;","lastModifiedDate":"2023-03-31"},{"lineNumber":249,"author":{"gitId":"mayuanxin1234"},"content":"                    }","lastModifiedDate":"2023-03-24"},{"lineNumber":250,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-24"},{"lineNumber":251,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-24"},{"lineNumber":252,"author":{"gitId":"mayuanxin1234"},"content":"            Phone parentNumber \u003d student.getParentNumber();","lastModifiedDate":"2023-03-24"},{"lineNumber":253,"author":{"gitId":"mayuanxin1234"},"content":"            Name parentName \u003d student.getParentName();","lastModifiedDate":"2023-03-24"},{"lineNumber":254,"author":{"gitId":"MrTwit99"},"content":"            for (Parent p : parents) { // Parent did not change any particulars","lastModifiedDate":"2023-03-31"},{"lineNumber":255,"author":{"gitId":"mayuanxin1234"},"content":"                if ((p.getPhone().equals(parentNumber)) \u0026\u0026 (p.getName().equals(parentName))) {","lastModifiedDate":"2023-03-24"},{"lineNumber":256,"author":{"gitId":"mayuanxin1234"},"content":"                    student.setParent(p);","lastModifiedDate":"2023-03-24"},{"lineNumber":257,"author":{"gitId":"mayuanxin1234"},"content":"                    Parent newParent \u003d p;","lastModifiedDate":"2023-03-24"},{"lineNumber":258,"author":{"gitId":"mayuanxin1234"},"content":"                    newParent.addStudent(student); //bind student to parent","lastModifiedDate":"2023-03-24"},{"lineNumber":259,"author":{"gitId":"mayuanxin1234"},"content":"                    newParent.removeStudent(oldStudent);","lastModifiedDate":"2023-03-24"},{"lineNumber":260,"author":{"gitId":"mayuanxin1234"},"content":"                    model.setParent(p, newParent); //update parent in parents","lastModifiedDate":"2023-03-24"},{"lineNumber":261,"author":{"gitId":"MrTwit99"},"content":"                    return student;","lastModifiedDate":"2023-03-31"},{"lineNumber":262,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-24"},{"lineNumber":263,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":264,"author":{"gitId":"MrTwit99"},"content":"        } else { // Parent phone number changed (NEW PARENT)","lastModifiedDate":"2023-03-31"},{"lineNumber":265,"author":{"gitId":"MrTwit99"},"content":"            for (Parent p : parents) {","lastModifiedDate":"2023-03-31"},{"lineNumber":266,"author":{"gitId":"MrTwit99"},"content":"                if ((p.getPhone().equals(oldStudent.getParentNumber())) \u0026\u0026 (p.getName().equals(","lastModifiedDate":"2023-03-31"},{"lineNumber":267,"author":{"gitId":"MrTwit99"},"content":"                        oldStudent.getParentName()))) {","lastModifiedDate":"2023-03-31"},{"lineNumber":268,"author":{"gitId":"MrTwit99"},"content":"                    if (p.getStudents().size() \u003d\u003d 1) { // Removes parent if this is the only student binded to him/her","lastModifiedDate":"2023-03-31"},{"lineNumber":269,"author":{"gitId":"MrTwit99"},"content":"                        model.deleteParent(p);","lastModifiedDate":"2023-03-31"},{"lineNumber":270,"author":{"gitId":"MrTwit99"},"content":"                    } else { // Remove student binding to original parent","lastModifiedDate":"2023-03-31"},{"lineNumber":271,"author":{"gitId":"MrTwit99"},"content":"                        Parent originalParent \u003d p;","lastModifiedDate":"2023-03-31"},{"lineNumber":272,"author":{"gitId":"MrTwit99"},"content":"                        p.removeStudent(oldStudent);","lastModifiedDate":"2023-03-31"},{"lineNumber":273,"author":{"gitId":"MrTwit99"},"content":"                        model.setParent(originalParent, p);","lastModifiedDate":"2023-03-31"},{"lineNumber":274,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-03-31"},{"lineNumber":275,"author":{"gitId":"MrTwit99"},"content":"                    for (Parent np : parents) { // Locating new parent in existing parents","lastModifiedDate":"2023-03-31"},{"lineNumber":276,"author":{"gitId":"MrTwit99"},"content":"                        if ((np.getPhone().equals(student.getParentNumber())) \u0026\u0026 (np.getName().equals(","lastModifiedDate":"2023-03-31"},{"lineNumber":277,"author":{"gitId":"MrTwit99"},"content":"                                student.getParentName()))) {","lastModifiedDate":"2023-03-31"},{"lineNumber":278,"author":{"gitId":"MrTwit99"},"content":"                            student.setParent(np);","lastModifiedDate":"2023-03-31"},{"lineNumber":279,"author":{"gitId":"MrTwit99"},"content":"                            Parent newParent \u003d np;","lastModifiedDate":"2023-03-31"},{"lineNumber":280,"author":{"gitId":"MrTwit99"},"content":"                            np.addStudent(student);","lastModifiedDate":"2023-03-31"},{"lineNumber":281,"author":{"gitId":"MrTwit99"},"content":"                            model.setParent(newParent, np);","lastModifiedDate":"2023-03-31"},{"lineNumber":282,"author":{"gitId":"MrTwit99"},"content":"                            return student;","lastModifiedDate":"2023-03-31"},{"lineNumber":283,"author":{"gitId":"MrTwit99"},"content":"                        }","lastModifiedDate":"2023-03-31"},{"lineNumber":284,"author":{"gitId":"MrTwit99"},"content":"                    }","lastModifiedDate":"2023-03-31"},{"lineNumber":285,"author":{"gitId":"mayuanxin1234"},"content":"                    Parent newParent \u003d new Parent(student.getParentName(), new Age(\"Insert parent age here!\"),","lastModifiedDate":"2023-04-02"},{"lineNumber":286,"author":{"gitId":"MrTwit99"},"content":"                            new Image(\"Insert parent image here!\"), new Email(\"Insert parent email here!\"),","lastModifiedDate":"2023-03-31"},{"lineNumber":287,"author":{"gitId":"MrTwit99"},"content":"                            student.getParentNumber(), new Address(\"Insert Address here!\"), p.getTags());","lastModifiedDate":"2023-03-31"},{"lineNumber":288,"author":{"gitId":"MrTwit99"},"content":"                    // Created new parent since it does not exist in existing parents","lastModifiedDate":"2023-03-31"},{"lineNumber":289,"author":{"gitId":"MrTwit99"},"content":"                    newParent.addStudent(student);","lastModifiedDate":"2023-03-31"},{"lineNumber":290,"author":{"gitId":"mayuanxin1234"},"content":"                    student.setParent(newParent);","lastModifiedDate":"2023-03-24"},{"lineNumber":291,"author":{"gitId":"MrTwit99"},"content":"                    model.addParent(newParent);","lastModifiedDate":"2023-03-31"},{"lineNumber":292,"author":{"gitId":"MrTwit99"},"content":"                    return student;","lastModifiedDate":"2023-03-31"},{"lineNumber":293,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-03-31"},{"lineNumber":294,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":295,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":296,"author":{"gitId":"MrTwit99"},"content":"        assert false : \"The program should not ever reach this line!\";","lastModifiedDate":"2023-03-31"},{"lineNumber":297,"author":{"gitId":"MrTwit99"},"content":"        return student;","lastModifiedDate":"2023-03-31"},{"lineNumber":298,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-31"},{"lineNumber":299,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":300,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-31"},{"lineNumber":301,"author":{"gitId":"MrTwit99"},"content":"     * Method that helps transfer and update all students in the original Parent object to the new EDITED Parent object.","lastModifiedDate":"2023-03-31"},{"lineNumber":302,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-31"},{"lineNumber":303,"author":{"gitId":"MrTwit99"},"content":"     * @param parent    Original Parent object that is to be edited.","lastModifiedDate":"2023-03-31"},{"lineNumber":304,"author":{"gitId":"MrTwit99"},"content":"     * @param newParent Edited Parent object.","lastModifiedDate":"2023-03-31"},{"lineNumber":305,"author":{"gitId":"MrTwit99"},"content":"     * @return Edited Parent object with list of students in original Parent object and updates all the students.","lastModifiedDate":"2023-03-31"},{"lineNumber":306,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"MrTwit99"},"content":"    private Parent editParent(Parent parent, Parent newParent, Model model) {","lastModifiedDate":"2023-03-31"},{"lineNumber":308,"author":{"gitId":"Diatbbin"},"content":"        List\u003cStudent\u003e students \u003d null;","lastModifiedDate":"2023-04-07"},{"lineNumber":309,"author":{"gitId":"MrTwit99"},"content":"        if (parent.hasStudents()) {","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"Diatbbin"},"content":"            students \u003d parent.getStudents();","lastModifiedDate":"2023-04-07"},{"lineNumber":311,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":312,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":313,"author":{"gitId":"Diatbbin"},"content":"        if (students \u003d\u003d null) {","lastModifiedDate":"2023-04-07"},{"lineNumber":314,"author":{"gitId":"Diatbbin"},"content":"            return newParent;","lastModifiedDate":"2023-04-07"},{"lineNumber":315,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-04-07"},{"lineNumber":316,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":317,"author":{"gitId":"MrTwit99"},"content":"        for (Student student : students) {","lastModifiedDate":"2023-03-31"},{"lineNumber":318,"author":{"gitId":"MrTwit99"},"content":"            Student originalStudent \u003d student;","lastModifiedDate":"2023-03-31"},{"lineNumber":319,"author":{"gitId":"MrTwit99"},"content":"            student.setParent(newParent);","lastModifiedDate":"2023-03-31"},{"lineNumber":320,"author":{"gitId":"MrTwit99"},"content":"            model.setStudent(originalStudent, student);","lastModifiedDate":"2023-03-31"},{"lineNumber":321,"author":{"gitId":"MrTwit99"},"content":"            newParent.addStudent(student);","lastModifiedDate":"2023-03-31"},{"lineNumber":322,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":323,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-07"},{"lineNumber":324,"author":{"gitId":"MrTwit99"},"content":"        return newParent;","lastModifiedDate":"2023-03-31"},{"lineNumber":325,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":326,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"MrTwit99":70,"Diatbbin":204,"mayuanxin1234":43,"-":9}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentFindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.StudentNameContainsKeywordsPredicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":" * Finds and lists all students in address book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentFindCommand extends StudentCommand {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all students whose names contain any of \"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"    private final StudentNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    private final Class studentClass;","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a StudentFindCommand to find the specified {@code Student}","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentClass","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     * @param predicate","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"    public StudentFindCommand(String studentClass, StudentNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentClass \u003d Class.of(studentClass);","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        model.updateFilteredStudentListFind(predicate, studentClass);","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredStudentList().size()),","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"                true, studentClass);","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof StudentFindCommand // instanceof handles nulls","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 predicate.equals(((StudentFindCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Diatbbin":3,"mayuanxin1234":47}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentGradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORKDONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEST;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHTAGE;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":" * A class for \"student \u0027Class Name\u0027 \u0027Index number\u0027 grade\" command\"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"public class StudentGradeCommand extends StudentCommand {","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    public static final String COMMAND_WORD \u003d \"grade\";","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"            + \": Adds a grade to a student in the address book. \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"INDEX NUMBER \"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_TEST + \"TEST NAME OR \"","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORK + \"HOMEWORK NAME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            + \"[\"","lastModifiedDate":"2023-03-19"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SCORE + \"SCORE \"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_DEADLINE + \"DEADLINE (DD/MM/YYYY) \"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_WEIGHTAGE + \"WEIGHTAGE \"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORKDONE + \"HOMEWORK DONE? \"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_TEST + \"CA1 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SCORE + \"75 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_DEADLINE + \"15/05/2023 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_WEIGHTAGE + \"20\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"            + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORK + \"Chapter 1 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SCORE + \"90 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_DEADLINE + \"20/03/2023 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_WEIGHTAGE + \"10\";","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_SUCCESSTEST \u003d \"New test added:\";","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_SUCCESSHOMEWORK \u003d \"New homework added:\";","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    private IndexNumber indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    private Test test;","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    private Homework homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"    private Class sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates an add grade command for test","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber student to be edited","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"     * @param test test to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeCommand(Class sc, IndexNumber indexNumber, Test test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"        this.test \u003d test;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates an add grade command for homework","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"     * @param sc","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"     * @param homework","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeCommand(Class sc, IndexNumber indexNumber, Homework homework) {","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"        this.homework \u003d homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cStudent\u003e lastShownList \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"                model.getPcClass().getClassList().get(0).getStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c model.getPcClass().getClassList().size(); i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"            if (model.getPcClass().getClassList().get(i).getClassName().equals(sc.getClassName())) {","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"                lastShownList \u003d model.getPcClass().getClassList().get(i).getStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        Student studentToEdit \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"            Student curr \u003d lastShownList.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"            if (i \u003d\u003d lastShownList.size() - 1 \u0026\u0026 !curr.getIndexNumber().equals(indexNumber)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"            if (curr.getIndexNumber().equals(indexNumber) \u0026\u0026 curr.getStudentClass().equals(sc)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"                Set\u003cHomework\u003e homeworkSet \u003d curr.getHomework();","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"                for (Homework hw : homeworkSet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"                    if (hw.equals(homework)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"                        throw new CommandException(Messages.MESSAGE_DUPLICATE_HOMEWORK);","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"                    }","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"                Set\u003cTest\u003e testSet \u003d curr.getTest();","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"                for (Test test : testSet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"                    if (test.equals(this.test)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"                        throw new CommandException(Messages.MESSAGE_DUPLICATE_TEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"                    }","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit \u003d curr;","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"        if (this.homework !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cHomework\u003e homeworkSet \u003d studentToEdit.getHomework();","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cHomework\u003e homeworkSetReplaced \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"            homeworkSetReplaced.addAll(homeworkSet);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"            int weightage \u003d 0;","lastModifiedDate":"2023-04-02"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"            for (Homework hw:homeworkSetReplaced) {","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"                if (hw.getName().equals(\"Insert student homework here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"                    homeworkSetReplaced.remove(hw);","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"                    break;","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"                weightage +\u003d hw.getWeightage();","lastModifiedDate":"2023-04-02"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"            if (weightage + homework.getWeightage() \u003e 100) {","lastModifiedDate":"2023-04-02"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_WEIGHTAGE);","lastModifiedDate":"2023-04-02"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"            homeworkSetReplaced.add(homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"            Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-04-02"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"                    homeworkSetReplaced, studentToEdit.getTest(), studentToEdit.getTags(), studentToEdit.getComment());","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(MESSAGE_SUCCESSHOMEWORK);","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cTest\u003e testSet \u003d studentToEdit.getTest();","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cTest\u003e testSetReplaced \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"            testSetReplaced.addAll(testSet);","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"            int weightage \u003d 0;","lastModifiedDate":"2023-04-02"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"            for (Test t: testSetReplaced) {","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"                if (t.getName().equals(\"Insert student test here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"                    testSetReplaced.remove(t);","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"                    break;","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"                weightage +\u003d t.getWeightage();","lastModifiedDate":"2023-04-02"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-04-02"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"            if (weightage + test.getWeightage() \u003e 100) {","lastModifiedDate":"2023-04-02"},{"lineNumber":168,"author":{"gitId":"mayuanxin1234"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_WEIGHTAGE);","lastModifiedDate":"2023-04-02"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"            testSetReplaced.add(test);","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"            Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":173,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-04-02"},{"lineNumber":174,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getHomework(), testSetReplaced, studentToEdit.getTags(), studentToEdit.getComment());","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"mayuanxin1234"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(MESSAGE_SUCCESSTEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":183,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":185,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"securespider":31,"mayuanxin1234":154}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentGradeDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEST;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":" * A class for \"student \u0027Class Name\u0027 \u0027Index number\u0027 grade delete\" command\"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentGradeDeleteCommand extends StudentCommand {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String COMMAND_WORD \u003d \"gradedelete\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"            + \": Adds a grade to the student in the address book. \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"INDEX NUMBER \"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"            + \"[\"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_TEST + \"TEST NAME OR \"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORK + \"HOMEWORK NAME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_TEST + \"CA1\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            + \"student 1A\" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORK + \"Chapter 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_SUCCESSTEST \u003d \"Test deleted successfully\";","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_SUCCESSHOMEWORK \u003d \"Homework deleted successfully\";","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    private IndexNumber indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    private Test test;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    private Homework homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    private Class sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a delete command for test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber student to be edited","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"     * @param test test to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeDeleteCommand(Class sc, IndexNumber indexNumber, Test test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        this.test \u003d test;","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a delete command for homework","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"     * @param sc","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"     * @param homework","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeDeleteCommand(Class sc, IndexNumber indexNumber, Homework homework) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        this.homework \u003d homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cStudent\u003e lastShownList \u003d","lastModifiedDate":"2023-03-19"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"                model.getPcClass().getClassList().get(0).getStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-19"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c model.getPcClass().getClassList().size(); i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"            if (model.getPcClass().getClassList().get(i).getClassName().equals(sc.getClassName())) {","lastModifiedDate":"2023-03-19"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"                lastShownList \u003d model.getPcClass().getClassList().get(i).getStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-19"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-03-19"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        Student studentToEdit \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"            Student curr \u003d lastShownList.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"            if (i \u003d\u003d lastShownList.size() - 1 \u0026\u0026 !curr.getIndexNumber().equals(indexNumber)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"            if (curr.getIndexNumber().equals(indexNumber) \u0026\u0026 curr.getStudentClass().equals(sc)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit \u003d curr;","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        if (this.homework !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cHomework\u003e homeworkSet \u003d studentToEdit.getHomework();","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cHomework\u003e homeworkSetReplaced \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"            homeworkSetReplaced.addAll(homeworkSet);","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"            for (Homework hw:homeworkSetReplaced) {","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"                if (hw.getName().equals(this.homework.getName())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"                    homeworkSetReplaced.remove(hw);","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"                    break;","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"            Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-04-02"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"                    homeworkSetReplaced, studentToEdit.getTest(), studentToEdit.getTags(), studentToEdit.getComment());","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(MESSAGE_SUCCESSHOMEWORK);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cTest\u003e testSet \u003d studentToEdit.getTest();","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cTest\u003e testSetReplaced \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"            testSetReplaced.addAll(testSet);","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"            for (Test t: testSetReplaced) {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"                if (t.getName().equals(this.test.getName())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"                    testSetReplaced.remove(t);","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"                    break;","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"            Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-04-02"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getHomework(), testSetReplaced, studentToEdit.getTags(), studentToEdit.getComment());","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(MESSAGE_SUCCESSTEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"mayuanxin1234":144}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.ClassContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":" * A class for the creation of Student list command","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentListCommand extends StudentCommand {","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"            + \": Lists all the students in the specified class \\n\"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD;","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Students from Class \";","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_NO_STUDENTS \u003d \"There are no students in this class!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    private final ClassContainsKeywordsPredicate predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    private Class sc;","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a command for student list command.","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"     * @param sc","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentListCommand(Class sc, ClassContainsKeywordsPredicate predicate) {","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        model.updateFilteredStudentList(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        if (model.getFilteredStudentList().size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(MESSAGE_NO_STUDENTS,","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"                    true, this.sc);","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"        return new CommandResult(MESSAGE_SUCCESS + this.sc.getClassName() + \" listed!\",","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"                true, this.sc);","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof StudentListCommand // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 sc.equals(((StudentListCommand) other).sc)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"mayuanxin1234":53}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            switch(prefix.getPrefix()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"            case \"rls/\":","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"                Optional\u003cString\u003e missingRelationship \u003d Optional.of(\"Insert parent relationship to student here!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"                return missingRelationship;","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"            case \"s/\":","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"                Optional\u003cString\u003e missingStudentSex \u003d Optional.of(\"Insert student sex here!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"                return missingStudentSex;","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"            case \"nc/\":","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"                Optional\u003cString\u003e missingStudentNewClass \u003d Optional.of(\"Insert student class here!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"                return missingStudentNewClass;","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"            case \"nin/\":","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"                Optional\u003cString\u003e missingStudentNewIndexNumber \u003d Optional.of(\"Insert student index number here!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"                return missingStudentNewIndexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"            case \"npnP/\":","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"                Optional\u003cString\u003e missingParentNewNumber \u003d Optional.of(\"Insert parent phone here!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"                return missingParentNewNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"            case \"nn/\":","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"                Optional\u003cString\u003e missingNewName \u003d Optional.of(\"Insert new name here!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"                return missingNewName;","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"            case \"npn/\":","lastModifiedDate":"2023-03-31"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"                Optional\u003cString\u003e missingNewParentName \u003d Optional.of(\"Insert new name here!\");","lastModifiedDate":"2023-03-31"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"                return missingNewParentName;","lastModifiedDate":"2023-03-31"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"            case \"ageS/\":","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingStudentAge \u003d Optional.of(\"Insert student age here!\");","lastModifiedDate":"2023-04-02"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"                return missingStudentAge;","lastModifiedDate":"2023-04-02"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"            case \"ageP/\":","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingParentAge \u003d Optional.of(\"Insert parent age here!\");","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"                return missingParentAge;","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            case \"imgS/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingImage \u003d Optional.of(\"Insert student image here!\");","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"                return missingImage;","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"            case \"eS/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingEmail \u003d Optional.of(\"Insert student email here!\");","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"                return missingEmail;","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"            case \"pnS/\":","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingPhoneNumber \u003d Optional.of(\"Insert student phone number here!\");","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"                return missingPhoneNumber;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"            case \"cca/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingCca \u003d Optional.of(\"Insert student CCA here!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"                return missingCca;","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"            case \"a/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"                Optional\u003cString\u003e missingAddress \u003d Optional.of(\"Insert Address here!\");","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"                return missingAddress;","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"            case \"att/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"                Optional\u003cString\u003e missingAttendance \u003d Optional.of(\"F\");","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"                return missingAttendance;","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"            case \"com/\":","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingComment \u003d Optional.of(\"Insert student comment here!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"                return missingComment;","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"            case \"score/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingScore \u003d Optional.of(\"Insert student score here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"                return missingScore;","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"            case \"weightage/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingWeightage \u003d Optional.of(\"Insert student weightage here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"                return missingWeightage;","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"            case \"deadline/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingDeadline \u003d Optional.of(\"Insert student deadline here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"                return missingDeadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"            case \"hwdone/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingHwDone \u003d Optional.of(\"Insert student homework done here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"                return missingHwDone;","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"            case \"imgP/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingParentImage \u003d Optional.of(\"Insert parent image here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"                return missingParentImage;","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"            case \"e/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingParentEmail \u003d Optional.of(\"Insert parent email here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"                return missingParentEmail;","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"            default:","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"                List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"                return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"MrTwit99":9,"securespider":1,"Diatbbin":14,"-":60,"mayuanxin1234":49}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_ADD \u003d new Prefix(\"add\");","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    public static final Prefix PREFIX_DELETE \u003d new Prefix(\"delete\");","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"    public static final Prefix PREFIX_EDIT \u003d new Prefix(\"edit\");","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_GRADE \u003d new Prefix(\"grade\");","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_PARENTAGE \u003d new Prefix(\"ageP/\");","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_STUDENTAGE \u003d new Prefix(\"ageS/\");","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_ATTENDANCE \u003d new Prefix(\"att/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_CCA \u003d new Prefix(\"cca/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    public static final Prefix PREFIX_COMMENT \u003d new Prefix(\"com/\");","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_COMMENTCOMMAND \u003d new Prefix(\"comment\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_EMAILSTUDENT \u003d new Prefix(\"eS/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_HOMEWORK \u003d new Prefix(\"hw/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_IMAGESTUDENT \u003d new Prefix(\"imgS/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_IMAGEPARENT \u003d new Prefix(\"imgP/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_INDEXNUMBER \u003d new Prefix(\"in/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"    public static final Prefix PREFIX_NEWCLASS \u003d new Prefix(\"nc/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"    public static final Prefix PREFIX_NEWINDEXNUMBER \u003d new Prefix(\"nin/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_NEWNAME \u003d new Prefix(\"nn/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_NEWPARENTNAME \u003d new Prefix(\"npn/\");","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_NEWPHONEPARENT \u003d new Prefix(\"npnP/\");","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_PARENTNAME \u003d new Prefix(\"pn/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_PHONEPARENT \u003d new Prefix(\"pnP/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_PHONESTUDENT \u003d new Prefix(\"pnS/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_RELATIONSHIP \u003d new Prefix(\"rls/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_SEX \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_TEST \u003d new Prefix(\"test/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_SCORE \u003d new Prefix(\"score/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"deadline/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_WEIGHTAGE \u003d new Prefix(\"weightage/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_HOMEWORKDONE \u003d new Prefix(\"hwdone/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_GRADEDELETE \u003d new Prefix(\"gradedelete\");","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_FIND \u003d new Prefix(\"find\");","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"    public static final Prefix PREFIX_ADDATTENDANCE \u003d new Prefix(\"attendance\");","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_LIST \u003d new Prefix(\"list\");","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"MrTwit99":15,"securespider":2,"Diatbbin":4,"-":13,"mayuanxin1234":14}},{"path":"src/main/java/seedu/address/logic/parser/ParentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDIT;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIND;","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWNAME;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWPHONEPARENT;","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTAGE;","lastModifiedDate":"2023-04-02"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.parent.ParentAddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.parent.ParentCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.parent.ParentDeleteCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.parent.ParentEditCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-01"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-01"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-01"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":" * ParentCommandParser that parses commands starting with \"parent\"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"public class ParentCommandParser {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    public static final String HELP_MESSAGE \u003d \"Parent command has to include an action.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"            + ParentCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     * Parse the parent commands into their respective prefixes","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"     * @param args User input.","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"     * @return ParentCommand with an ArgumentMultimap object that is derived from tokenizing the input with Prefixes","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"     * @throws ParseException when there\u0027s an unexpected error in parsing the user input","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"    public ParentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HELP_MESSAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        ArgumentMultimap argMultimapFind \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_FIND);","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"        ArgumentMultimap argMultimapAdd \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"                        PREFIX_NAME, PREFIX_PARENTAGE, PREFIX_IMAGEPARENT, PREFIX_PHONEPARENT,","lastModifiedDate":"2023-04-02"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_EMAIL);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"        ArgumentMultimap argMultimapDelete \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DELETE, PREFIX_NAME, PREFIX_PHONEPARENT);","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        ArgumentMultimap argMultimapEdit \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_EDIT, PREFIX_ADDRESS, PREFIX_NAME, PREFIX_PARENTAGE,","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_IMAGEPARENT, PREFIX_PHONEPARENT, PREFIX_EMAIL, PREFIX_NEWNAME, PREFIX_NEWPHONEPARENT);","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"        if (argMultimapAdd.getValue(PREFIX_ADD).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"            return addCommand(argMultimapAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"        } else if (argMultimapDelete.getValue(PREFIX_DELETE).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"            return deleteCommand(argMultimapDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"        } else if (argMultimapEdit.getValue(PREFIX_EDIT).isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"            return editCommand(argMultimapEdit);","lastModifiedDate":"2023-03-21"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (argMultimapFind.getValue(PREFIX_FIND).isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"            return new ParentFindCommandParser().parse(arguments);","lastModifiedDate":"2023-03-21"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"            //Rest of logic (Need to edit)","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HELP_MESSAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"     * Retrieve the relevant information to create a new Parent object from user input and parse it to create a new","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"     * Parent object and returns ParentAddCommand with the new Parent object.","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"     * @param argMultimap An ArgumentMultimap object that is derived from tokenizing the user input with Prefixes.","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"     * @return ParentAddCommand to add the new Parent into PowerConnect.","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"     * @throws ParseException when there\u0027s an unexpected error in parsing the user input.","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"    private ParentAddCommand addCommand(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONEPARENT)","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ParentAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"        Age age \u003d ParserUtil.parseAge((argMultimap.getValue(PREFIX_PARENTAGE).get()));","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        Image image \u003d ParserUtil.parseImage(argMultimap.getValue(PREFIX_IMAGEPARENT).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONEPARENT).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"        Parent parent \u003d new Parent(name, age, image, email, phone, address, tagList);","lastModifiedDate":"2023-04-02"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"        return new ParentAddCommand(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"Diatbbin"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"Diatbbin"},"content":"     * trimmed.","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"Diatbbin"},"content":"    public ParentDeleteCommand deleteCommand(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"Diatbbin"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONEPARENT)","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"Diatbbin"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"Diatbbin"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ParentDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"Diatbbin"},"content":"        Phone phoneNumber \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONEPARENT).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-19"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"        return new ParentDeleteCommand(name, phoneNumber);","lastModifiedDate":"2023-03-19"},{"lineNumber":124,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"     * Retrieve the relevant information to edit an existing Parent object from user input and","lastModifiedDate":"2023-03-21"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"     * returns ParentEditCommand with the edited Parent object.","lastModifiedDate":"2023-03-21"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"     * @param argMultimap An ArgumentMultimap object that is derived from tokenizing the user input with Prefixes.","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"     * @return ParentEditCommand to edit a Parent in PowerConnect.","lastModifiedDate":"2023-03-21"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"     * @throws ParseException when there\u0027s an unexpected error in parsing the user input.","lastModifiedDate":"2023-03-21"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"    public ParentEditCommand editCommand(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONEPARENT)","lastModifiedDate":"2023-03-21"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ParentEditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"        Phone phoneNumber \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONEPARENT).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":141,"author":{"gitId":"MrTwit99"},"content":"        Phone newPhoneNumber \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_NEWPHONEPARENT).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"        Name newName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NEWNAME).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"        Age newAge \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_PARENTAGE).get());","lastModifiedDate":"2023-04-02"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"        Address newAddress \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"        Image newImage \u003d ParserUtil.parseImage(argMultimap.getValue(PREFIX_IMAGEPARENT).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"        Email newEmail \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"        Set\u003cTag\u003e newTagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-21"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"        return new ParentEditCommand(name, newName, newAge, newImage, newEmail, phoneNumber, newPhoneNumber,","lastModifiedDate":"2023-04-02"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"                newAddress, newTagList);","lastModifiedDate":"2023-03-21"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"MrTwit99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"MrTwit99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"MrTwit99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-12"},{"lineNumber":159,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":102,"Diatbbin":41,"mayuanxin1234":17}},{"path":"src/main/java/seedu/address/logic/parser/ParentFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.parent.ParentFindCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.ParentNameContainsKeywordsPredicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":" * a ParentFindCommandParser to parse the parent find command","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"public class ParentFindCommandParser implements Parser\u003cParentFindCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses the given {@code String} of arguments in the context of the StudentFindCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"     * and returns a StudentFindCommand object for execution.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    public ParentFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        String[] argList \u003d args.split(\"find\", 2);","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        String trimmedArgs \u003d argList[1].trim();","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, ParentFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"        return new ParentFindCommand(new ParentNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"MrTwit99":2,"Diatbbin":2,"mayuanxin1234":28}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Cca;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses indexNumber into an IndexNumber","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"     * @return An IndexNumber","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"    public static IndexNumber parseIndexNumber(String indexNumber) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedIndexNumber \u003d indexNumber.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"        if (!IndexNumber.isValidIndexNumber(trimmedIndexNumber)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(IndexNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"        return new IndexNumber(trimmedIndexNumber);","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses sex into Sex","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"     * @param sex","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A Sex","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"    public static Sex parseSex(String sex) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"        String trimmedSex \u003d sex.trim();","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Sex.isValidSex(trimmedSex)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"        return new Sex(trimmedSex);","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"MrTwit99"},"content":"     * Parses relationship of Parent object.","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"MrTwit99"},"content":"     * @param relationship Relation of Parent object to Student (parent / next-of-kin [NOK]).","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"     * @return Relationship object stating the relationship of a Parent object to a Student object.","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"MrTwit99"},"content":"    public static Relationship parseRelationship(String relationship) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(relationship);","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"MrTwit99"},"content":"        String trimmedRelationship \u003d relationship.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"MrTwit99"},"content":"        if (!Relationship.isValidRelationship(trimmedRelationship)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"MrTwit99"},"content":"            throw new ParseException(Relationship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"MrTwit99"},"content":"        return new Relationship(trimmedRelationship);","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses age to Age","lastModifiedDate":"2023-04-02"},{"lineNumber":185,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentAge","lastModifiedDate":"2023-04-02"},{"lineNumber":186,"author":{"gitId":"mayuanxin1234"},"content":"     * @return an Age","lastModifiedDate":"2023-04-02"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"mayuanxin1234"},"content":"    public static Age parseAge(String studentAge) throws ParseException {","lastModifiedDate":"2023-04-02"},{"lineNumber":191,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(studentAge);","lastModifiedDate":"2023-04-02"},{"lineNumber":192,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedStudentAge \u003d studentAge.trim();","lastModifiedDate":"2023-04-02"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Age.isValidAge(trimmedStudentAge)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":195,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"mayuanxin1234"},"content":"        return new Age(trimmedStudentAge);","lastModifiedDate":"2023-04-02"},{"lineNumber":197,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses studentImage to Image","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentImage","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a studentImage","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"mayuanxin1234"},"content":"    public static Image parseImage(String studentImage) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(studentImage);","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedStudentImage \u003d studentImage.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Image.isValidImage(trimmedStudentImage)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Image.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"mayuanxin1234"},"content":"        return new Image(trimmedStudentImage);","lastModifiedDate":"2023-03-06"},{"lineNumber":213,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"mayuanxin1234"},"content":"     * Parse cca to CCA","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"     * @param cca","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a CCA","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"mayuanxin1234"},"content":"    public static Cca parseCca(String cca) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(cca);","lastModifiedDate":"2023-03-06"},{"lineNumber":224,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedCca \u003d cca.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Cca.isValidCca(trimmedCca)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Cca.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"mayuanxin1234"},"content":"        return new Cca(trimmedCca);","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":230,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":231,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses sc to StudentClass","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"securespider"},"content":"     * @param sc The name of the student class","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"securespider"},"content":"     * @return a Class","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"securespider"},"content":"    public static Class parseStudentClass(String sc) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(sc);","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedSc \u003d sc.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"securespider"},"content":"        if (!Class.isValidClass(trimmedSc)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"securespider"},"content":"            throw new ParseException(Class.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":244,"author":{"gitId":"securespider"},"content":"        return Class.of(trimmedSc);","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses test to Test","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"mayuanxin1234"},"content":"     * @param test","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a Test","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"mayuanxin1234"},"content":"    public static Test parseTest(String test, String score, String deadline, String weightage) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(test);","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedTest \u003d test.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Test.isValidTest(trimmedTest)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Test.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":260,"author":{"gitId":"mayuanxin1234"},"content":"        //check if score is less than 100","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"mayuanxin1234"},"content":"        if (!trimmedScore.matches(\"^([0-9]|[1-9][0-9]|100)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !trimmedScore.equals(\"Insert student score here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Score cannot be more than 100 and must contain numbers only\");","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"mayuanxin1234"},"content":"        LocalDate localDate \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":266,"author":{"gitId":"mayuanxin1234"},"content":"        if (deadline !\u003d \"Insert student deadline here!\") {","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"mayuanxin1234"},"content":"            try {","lastModifiedDate":"2023-03-14"},{"lineNumber":268,"author":{"gitId":"mayuanxin1234"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"mayuanxin1234"},"content":"                localDate \u003d LocalDate.parse(deadline, formatter);","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"mayuanxin1234"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":272,"author":{"gitId":"mayuanxin1234"},"content":"                throw new ParseException(\"Date must be in the format dd/mm/yyyy\");","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedWeightage \u003d weightage.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"mayuanxin1234"},"content":"        //check if weightage is less than 100","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"mayuanxin1234"},"content":"        if (!trimmedWeightage.matches(\"^([0-9]|[1-9][0-9]|100)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":278,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !trimmedWeightage.equals(\"Insert student weightage here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":279,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Weightage(%) cannot be more than 100 and must contain numbers only\");","lastModifiedDate":"2023-03-14"},{"lineNumber":280,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":281,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedWeightage.equals(\"Insert student weightage here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":282,"author":{"gitId":"mayuanxin1234"},"content":"            trimmedWeightage \u003d \"-100\";","lastModifiedDate":"2023-03-14"},{"lineNumber":283,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":284,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedScore.equals(\"Insert student score here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":285,"author":{"gitId":"mayuanxin1234"},"content":"            trimmedScore \u003d \"-100\";","lastModifiedDate":"2023-03-14"},{"lineNumber":286,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":287,"author":{"gitId":"mayuanxin1234"},"content":"        return new Test(trimmedTest, localDate, Integer.parseInt(trimmedWeightage), Integer.parseInt(trimmedScore));","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":289,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":290,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":291,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses attendance to Attendance","lastModifiedDate":"2023-03-08"},{"lineNumber":292,"author":{"gitId":"mayuanxin1234"},"content":"     * @param attendance","lastModifiedDate":"2023-03-08"},{"lineNumber":293,"author":{"gitId":"mayuanxin1234"},"content":"     * @return An Attendance","lastModifiedDate":"2023-03-08"},{"lineNumber":294,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":295,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":296,"author":{"gitId":"mayuanxin1234"},"content":"    public static Attendance parseAttendance(String attendance) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":297,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(attendance);","lastModifiedDate":"2023-03-06"},{"lineNumber":298,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedAttendance \u003d attendance.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":299,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Attendance.isValidAttendance(trimmedAttendance)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":300,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":301,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":302,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-03-31"},{"lineNumber":303,"author":{"gitId":"securespider"},"content":"            return new Attendance(LocalDate.parse(trimmedAttendance, DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));","lastModifiedDate":"2023-03-31"},{"lineNumber":304,"author":{"gitId":"securespider"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-31"},{"lineNumber":305,"author":{"gitId":"securespider"},"content":"            if (trimmedAttendance.equals(\"T\") || trimmedAttendance.equals(\"F\")) {","lastModifiedDate":"2023-03-31"},{"lineNumber":306,"author":{"gitId":"securespider"},"content":"                return new Attendance(trimmedAttendance);","lastModifiedDate":"2023-03-31"},{"lineNumber":307,"author":{"gitId":"securespider"},"content":"            } else {","lastModifiedDate":"2023-03-31"},{"lineNumber":308,"author":{"gitId":"securespider"},"content":"                throw new ParseException(\"Date must be in the format dd/mm/yyyy\");","lastModifiedDate":"2023-03-31"},{"lineNumber":309,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-31"},{"lineNumber":310,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":311,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-31"},{"lineNumber":312,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":313,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":314,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":315,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses homework to Homework","lastModifiedDate":"2023-03-08"},{"lineNumber":316,"author":{"gitId":"mayuanxin1234"},"content":"     * @param homework","lastModifiedDate":"2023-03-08"},{"lineNumber":317,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A Homework","lastModifiedDate":"2023-03-08"},{"lineNumber":318,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":319,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":320,"author":{"gitId":"mayuanxin1234"},"content":"    public static Homework parseHomework(String homework, String score, String deadline,","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"mayuanxin1234"},"content":"                                         String weightage, String homeworkDone) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":322,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(homework);","lastModifiedDate":"2023-03-06"},{"lineNumber":323,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedHomework \u003d homework.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":324,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Homework.isValidHomework(trimmedHomework)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":325,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Homework.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":326,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":327,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":328,"author":{"gitId":"mayuanxin1234"},"content":"        //check if score is less than 100","lastModifiedDate":"2023-03-14"},{"lineNumber":329,"author":{"gitId":"mayuanxin1234"},"content":"        if (!trimmedScore.matches(\"^([0-9]|[1-9][0-9]|100)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":330,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !trimmedScore.equals(\"Insert student score here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":331,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Score cannot be more than 100 and must contain numbers only\");","lastModifiedDate":"2023-03-14"},{"lineNumber":332,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":333,"author":{"gitId":"mayuanxin1234"},"content":"        LocalDate localDate \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":334,"author":{"gitId":"mayuanxin1234"},"content":"        if (deadline !\u003d \"Insert student deadline here!\") {","lastModifiedDate":"2023-03-14"},{"lineNumber":335,"author":{"gitId":"mayuanxin1234"},"content":"            try {","lastModifiedDate":"2023-03-14"},{"lineNumber":336,"author":{"gitId":"mayuanxin1234"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-14"},{"lineNumber":337,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":338,"author":{"gitId":"mayuanxin1234"},"content":"                localDate \u003d LocalDate.parse(deadline, formatter);","lastModifiedDate":"2023-03-14"},{"lineNumber":339,"author":{"gitId":"mayuanxin1234"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":340,"author":{"gitId":"mayuanxin1234"},"content":"                throw new ParseException(\"Date must be in the format dd/mm/yyyy\");","lastModifiedDate":"2023-03-14"},{"lineNumber":341,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":342,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":343,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedWeightage \u003d weightage.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":344,"author":{"gitId":"mayuanxin1234"},"content":"        //check if weightage is less than 100","lastModifiedDate":"2023-03-14"},{"lineNumber":345,"author":{"gitId":"mayuanxin1234"},"content":"        if (!trimmedWeightage.matches(\"^([0-9]|[1-9][0-9]|100)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":346,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !trimmedWeightage.equals(\"Insert student weightage here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":347,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Weightage(%) cannot be more than 100 and must contain numbers only\");","lastModifiedDate":"2023-03-14"},{"lineNumber":348,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":349,"author":{"gitId":"mayuanxin1234"},"content":"        String homeworkDoneTrimmed \u003d homeworkDone.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":350,"author":{"gitId":"mayuanxin1234"},"content":"        if (!homeworkDoneTrimmed.matches(\"^(true|false)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":351,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !homeworkDoneTrimmed.equals(\"Insert student homework done here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":352,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Homework done must be \u0027true\u0027 or \u0027false\u0027\");","lastModifiedDate":"2023-03-14"},{"lineNumber":353,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":354,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedHomework.equals(\"Insert student homework done here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":355,"author":{"gitId":"mayuanxin1234"},"content":"            homeworkDoneTrimmed \u003d \"false\";","lastModifiedDate":"2023-03-14"},{"lineNumber":356,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":357,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedWeightage.equals(\"Insert student weightage here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":358,"author":{"gitId":"mayuanxin1234"},"content":"            trimmedWeightage \u003d \"-100\";","lastModifiedDate":"2023-03-14"},{"lineNumber":359,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":360,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedScore.equals(\"Insert student score here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":361,"author":{"gitId":"mayuanxin1234"},"content":"            trimmedScore \u003d \"-100\";","lastModifiedDate":"2023-03-14"},{"lineNumber":362,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":363,"author":{"gitId":"mayuanxin1234"},"content":"        return new Homework(homework, localDate, Integer.parseInt(trimmedWeightage),","lastModifiedDate":"2023-03-14"},{"lineNumber":364,"author":{"gitId":"mayuanxin1234"},"content":"                Integer.parseInt(trimmedScore), Boolean.parseBoolean(homeworkDoneTrimmed));","lastModifiedDate":"2023-03-14"},{"lineNumber":365,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":366,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":367,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":368,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses comment to Comment","lastModifiedDate":"2023-03-10"},{"lineNumber":369,"author":{"gitId":"mayuanxin1234"},"content":"     * @param comment","lastModifiedDate":"2023-03-10"},{"lineNumber":370,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A Comment","lastModifiedDate":"2023-03-10"},{"lineNumber":371,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-10"},{"lineNumber":372,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":373,"author":{"gitId":"mayuanxin1234"},"content":"    public static Comment parseComment(String comment) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":374,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(comment);","lastModifiedDate":"2023-03-10"},{"lineNumber":375,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedComment \u003d comment.trim();","lastModifiedDate":"2023-03-10"},{"lineNumber":376,"author":{"gitId":"mayuanxin1234"},"content":"        return new Comment(trimmedComment);","lastModifiedDate":"2023-03-10"},{"lineNumber":377,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":378,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"MrTwit99":18,"securespider":17,"Diatbbin":2,"-":124,"mayuanxin1234":217}},{"path":"src/main/java/seedu/address/logic/parser/PowerConnectParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-28"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.parent.ParentCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"public class PowerConnectParser {","lastModifiedDate":"2023-03-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        case ParentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"            return new ParentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        case StudentCommand.PERSON_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"            return new StudentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-28"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"            return new ListCommand(arguments);","lastModifiedDate":"2023-03-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":5,"-":49,"mayuanxin1234":5}},{"path":"src/main/java/seedu/address/logic/parser/StudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_BLANK_FIND;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDATTENDANCE;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENTCOMMAND;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EDIT;","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAILSTUDENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_FIND;","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADEDELETE;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORKDONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGESTUDENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_LIST;","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWCLASS;","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWINDEXNUMBER;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWNAME;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWPARENTNAME;","lastModifiedDate":"2023-03-31"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NEWPHONEPARENT;","lastModifiedDate":"2023-03-31"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTNAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONESTUDENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTAGE;","lastModifiedDate":"2023-04-02"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEST;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHTAGE;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentAddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.student.StudentAttendanceCommand;","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentCommentCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.student.StudentDeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.student.StudentEditCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentGradeCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentGradeDeleteCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentListCommand;","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-01"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-04-01"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-01"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-01"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2023-04-01"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Cca;","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.ClassContainsKeywordsPredicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":" * StudentCommandParser that parses commands starting with \"student\"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentCommandParser implements Parser\u003cStudentCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String HELP_MESSAGE \u003d \"Student command has to include a class and action.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"            + StudentCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cclass\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"     * Parse the command into their respective prefixes","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"     * @param args the command input by user","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A StudentCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HELP_MESSAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"        final String studentClass \u003d matcher.group(\"class\");","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"        ArgumentMultimap argMultimapAdd \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_ADD, PREFIX_NAME, PREFIX_INDEXNUMBER, PREFIX_SEX,","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"                        PREFIX_PARENTNAME, PREFIX_PHONEPARENT, PREFIX_RELATIONSHIP, PREFIX_STUDENTAGE,","lastModifiedDate":"2023-04-02"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_IMAGESTUDENT, PREFIX_EMAILSTUDENT, PREFIX_PHONESTUDENT, PREFIX_CCA, PREFIX_TEST,","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_ATTENDANCE, PREFIX_HOMEWORK, PREFIX_SCORE, PREFIX_DEADLINE, PREFIX_WEIGHTAGE,","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_ADDRESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"        ArgumentMultimap argMultimapDelete \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_DELETE, PREFIX_INDEXNUMBER);","lastModifiedDate":"2023-04-05"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_LIST, PREFIX_COMMENTCOMMAND, PREFIX_FIND, PREFIX_COMMENT,","lastModifiedDate":"2023-03-25"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"                        PREFIX_ADD, PREFIX_INDEXNUMBER, PREFIX_SEX, PREFIX_PARENTNAME, PREFIX_PHONEPARENT,","lastModifiedDate":"2023-03-25"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"                        PREFIX_RELATIONSHIP, PREFIX_STUDENTAGE, PREFIX_IMAGESTUDENT, PREFIX_EMAILSTUDENT,","lastModifiedDate":"2023-04-02"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_PHONESTUDENT, PREFIX_CCA, PREFIX_TEST, PREFIX_ATTENDANCE, PREFIX_HOMEWORK,","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_ADDRESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"        ArgumentMultimap argMultimapGrade \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_GRADE, PREFIX_INDEXNUMBER, PREFIX_TEST,","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"                        PREFIX_HOMEWORK, PREFIX_SCORE, PREFIX_DEADLINE, PREFIX_WEIGHTAGE, PREFIX_HOMEWORKDONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"        ArgumentMultimap argMultimapGradeDelete \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_GRADEDELETE, PREFIX_INDEXNUMBER, PREFIX_TEST,","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"                        PREFIX_HOMEWORK);","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Diatbbin"},"content":"        ArgumentMultimap argMultimapEdit \u003d","lastModifiedDate":"2023-03-21"},{"lineNumber":126,"author":{"gitId":"Diatbbin"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_EDIT, PREFIX_NAME, PREFIX_INDEXNUMBER, PREFIX_SEX,","lastModifiedDate":"2023-03-21"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"                        PREFIX_NEWPARENTNAME, PREFIX_NEWPHONEPARENT, PREFIX_RELATIONSHIP, PREFIX_STUDENTAGE,","lastModifiedDate":"2023-04-02"},{"lineNumber":128,"author":{"gitId":"Diatbbin"},"content":"                        PREFIX_IMAGESTUDENT, PREFIX_EMAILSTUDENT, PREFIX_PHONESTUDENT, PREFIX_CCA, PREFIX_ADDRESS,","lastModifiedDate":"2023-04-05"},{"lineNumber":129,"author":{"gitId":"Diatbbin"},"content":"                        PREFIX_NEWCLASS, PREFIX_NEWINDEXNUMBER, PREFIX_NEWNAME, PREFIX_COMMENT);","lastModifiedDate":"2023-04-05"},{"lineNumber":130,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":131,"author":{"gitId":"securespider"},"content":"        ArgumentMultimap argumentMultimapAtt \u003d","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"securespider"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_ADDATTENDANCE, PREFIX_INDEXNUMBER, PREFIX_ATTENDANCE);","lastModifiedDate":"2023-03-22"},{"lineNumber":133,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":134,"author":{"gitId":"Diatbbin"},"content":"        if (argMultimapAdd.getValue(PREFIX_ADD).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"Diatbbin"},"content":"            return addCommand(studentClass, argMultimapAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"Diatbbin"},"content":"        } else if (argMultimapDelete.getValue(PREFIX_DELETE).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"Diatbbin"},"content":"            return deleteCommand(studentClass, argMultimapDelete);","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (argMultimap.getValue(PREFIX_COMMENTCOMMAND).isPresent()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"            return commentCommand(studentClass, argMultimap);","lastModifiedDate":"2023-03-10"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (argMultimapGrade.getValue(PREFIX_GRADE).isPresent()","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"            \u0026\u0026 !argMultimapGradeDelete.getValue(PREFIX_GRADEDELETE).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"            return gradeCommand(studentClass, argMultimapGrade);","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (argMultimapGradeDelete.getValue(PREFIX_GRADEDELETE).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"            return gradeDeleteCommand(studentClass, argMultimapGradeDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"Diatbbin"},"content":"        } else if (argMultimapEdit.getValue(PREFIX_EDIT).isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":146,"author":{"gitId":"Diatbbin"},"content":"            return editCommand(studentClass, argMultimapEdit);","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"securespider"},"content":"        } else if (argumentMultimapAtt.getValue(PREFIX_ADDATTENDANCE).isPresent()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"securespider"},"content":"            return attCommand(studentClass, argumentMultimapAtt);","lastModifiedDate":"2023-03-22"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (argMultimap.getValue(PREFIX_FIND).isPresent()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"            if (arguments.trim().equals(PREFIX_FIND.toString())) {","lastModifiedDate":"2023-03-25"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"                throw new ParseException(MESSAGE_BLANK_FIND);","lastModifiedDate":"2023-03-25"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"            return new StudentFindCommandParser().parse(studentClass + arguments);","lastModifiedDate":"2023-03-21"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (argMultimap.getValue(PREFIX_LIST).isPresent()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"            return new StudentListCommand(Class.of(studentClass),","lastModifiedDate":"2023-03-25"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"                    new ClassContainsKeywordsPredicate(Class.of(studentClass)));","lastModifiedDate":"2023-03-25"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"            //Rest of logic (Need to  edit)","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HELP_MESSAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"securespider"},"content":"    private StudentAttendanceCommand attCommand(String studentClass,","lastModifiedDate":"2023-03-22"},{"lineNumber":164,"author":{"gitId":"securespider"},"content":"                                                ArgumentMultimap argumentMultimapAtt) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":165,"author":{"gitId":"securespider"},"content":"        if (!arePrefixesPresent(argumentMultimapAtt, PREFIX_INDEXNUMBER, PREFIX_ATTENDANCE)","lastModifiedDate":"2023-03-22"},{"lineNumber":166,"author":{"gitId":"securespider"},"content":"                || !argumentMultimapAtt.getPreamble().isEmpty()","lastModifiedDate":"2023-03-22"},{"lineNumber":167,"author":{"gitId":"securespider"},"content":"                || studentClass.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-22"},{"lineNumber":168,"author":{"gitId":"securespider"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-22"},{"lineNumber":169,"author":{"gitId":"securespider"},"content":"                    StudentAttendanceCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-22"},{"lineNumber":170,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":171,"author":{"gitId":"securespider"},"content":"        Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-22"},{"lineNumber":172,"author":{"gitId":"securespider"},"content":"        IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argumentMultimapAtt.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":173,"author":{"gitId":"securespider"},"content":"        Attendance attendance \u003d ParserUtil.parseAttendance(argumentMultimapAtt.getValue(PREFIX_ATTENDANCE).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":174,"author":{"gitId":"securespider"},"content":"        return new StudentAttendanceCommand(sc, indexNumber, attendance);","lastModifiedDate":"2023-03-22"},{"lineNumber":175,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":176,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":177,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"mayuanxin1234"},"content":"     * Function to parse the \"student class add\" command","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentClass class of student","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"mayuanxin1234"},"content":"     * @param argMultimap mapper for each prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A StudentAddCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"    private StudentAddCommand addCommand(String studentClass, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"MrTwit99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEXNUMBER, PREFIX_SEX, PREFIX_PARENTNAME,","lastModifiedDate":"2023-03-15"},{"lineNumber":186,"author":{"gitId":"MrTwit99"},"content":"                PREFIX_PHONEPARENT, PREFIX_RELATIONSHIP)","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"mayuanxin1234"},"content":"                || studentClass.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StudentAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"securespider"},"content":"        Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"mayuanxin1234"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"        IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"        Sex sex \u003d ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"MrTwit99"},"content":"        Name parentName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_PARENTNAME).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":196,"author":{"gitId":"MrTwit99"},"content":"        Phone parentNumber \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONEPARENT).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"MrTwit99"},"content":"        Relationship rls \u003d ParserUtil.parseRelationship(argMultimap.getValue(PREFIX_RELATIONSHIP).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"mayuanxin1234"},"content":"        Age age \u003d ParserUtil.parseAge((argMultimap.getValue(PREFIX_STUDENTAGE).get()));","lastModifiedDate":"2023-04-02"},{"lineNumber":199,"author":{"gitId":"mayuanxin1234"},"content":"        Image image \u003d ParserUtil.parseImage(argMultimap.getValue(PREFIX_IMAGESTUDENT).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"mayuanxin1234"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAILSTUDENT).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"mayuanxin1234"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONESTUDENT).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"mayuanxin1234"},"content":"        Cca cca \u003d ParserUtil.parseCca(argMultimap.getValue(PREFIX_CCA).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"mayuanxin1234"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"mayuanxin1234"},"content":"        Attendance attendance \u003d ParserUtil.parseAttendance(argMultimap.getValue(PREFIX_ATTENDANCE).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"        String score \u003d argMultimap.getValue(PREFIX_SCORE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"mayuanxin1234"},"content":"        String deadline \u003d argMultimap.getValue(PREFIX_DEADLINE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":207,"author":{"gitId":"mayuanxin1234"},"content":"        String weightage \u003d argMultimap.getValue(PREFIX_WEIGHTAGE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":208,"author":{"gitId":"mayuanxin1234"},"content":"        String homeworkDone \u003d argMultimap.getValue(PREFIX_HOMEWORKDONE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":209,"author":{"gitId":"mayuanxin1234"},"content":"        Homework homework \u003d ParserUtil.parseHomework(\"Insert student homework here!\", score, deadline,","lastModifiedDate":"2023-03-15"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"                weightage, homeworkDone);","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"        Test test \u003d ParserUtil.parseTest(\"Insert student test here!\", score, deadline, weightage);","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"mayuanxin1234"},"content":"        Comment comment \u003d ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":213,"author":{"gitId":"mayuanxin1234"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"mayuanxin1234"},"content":"        Set\u003cHomework\u003e homeworkSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"mayuanxin1234"},"content":"        homeworkSet.add(homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"mayuanxin1234"},"content":"        Set\u003cTest\u003e testSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"        testSet.add(test);","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"securespider"},"content":"        Set\u003cAttendance\u003e attendanceSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":219,"author":{"gitId":"securespider"},"content":"        attendanceSet.add(attendance);","lastModifiedDate":"2023-03-22"},{"lineNumber":220,"author":{"gitId":"MrTwit99"},"content":"        Student student \u003d new Student(name, sc, indexNumber, sex, parentName, parentNumber, rls,","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"mayuanxin1234"},"content":"                age, image, email, phone, cca, address, attendanceSet, homeworkSet, testSet, tagList, comment);","lastModifiedDate":"2023-04-02"},{"lineNumber":222,"author":{"gitId":"mayuanxin1234"},"content":"        return new StudentAddCommand(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":223,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":224,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"Diatbbin"},"content":"     * Function to parse the \"student class comment\" command","lastModifiedDate":"2023-03-21"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentClass","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"mayuanxin1234"},"content":"     * @param argMultimap","lastModifiedDate":"2023-03-14"},{"lineNumber":229,"author":{"gitId":"Diatbbin"},"content":"     * @return A StudentCommentCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":230,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"mayuanxin1234"},"content":"    private StudentCommentCommand commentCommand(String studentClass, ArgumentMultimap argMultimap)","lastModifiedDate":"2023-03-10"},{"lineNumber":233,"author":{"gitId":"mayuanxin1234"},"content":"            throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":234,"author":{"gitId":"mayuanxin1234"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_COMMENT)","lastModifiedDate":"2023-03-10"},{"lineNumber":235,"author":{"gitId":"mayuanxin1234"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":236,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":237,"author":{"gitId":"mayuanxin1234"},"content":"                    StudentCommentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":238,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":239,"author":{"gitId":"securespider"},"content":"        Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"mayuanxin1234"},"content":"        IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":241,"author":{"gitId":"mayuanxin1234"},"content":"        Comment comment \u003d ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":242,"author":{"gitId":"mayuanxin1234"},"content":"        return new StudentCommentCommand(sc, indexNumber, comment);","lastModifiedDate":"2023-03-10"},{"lineNumber":243,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":244,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":245,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":246,"author":{"gitId":"Diatbbin"},"content":"     * Function to parse the \"student class delete\" command","lastModifiedDate":"2023-03-21"},{"lineNumber":247,"author":{"gitId":"Diatbbin"},"content":"     * @param studentClass class of student","lastModifiedDate":"2023-03-21"},{"lineNumber":248,"author":{"gitId":"Diatbbin"},"content":"     * @param argMultimap mapper for each prefix","lastModifiedDate":"2023-03-21"},{"lineNumber":249,"author":{"gitId":"Diatbbin"},"content":"     * @return A StudentDeleteCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":250,"author":{"gitId":"Diatbbin"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-21"},{"lineNumber":251,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":252,"author":{"gitId":"Diatbbin"},"content":"    public StudentDeleteCommand deleteCommand(String studentClass, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":253,"author":{"gitId":"mayuanxin1234"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER)","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"mayuanxin1234"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"mayuanxin1234"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, StudentDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"securespider"},"content":"        Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"Diatbbin"},"content":"        IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":260,"author":{"gitId":"Diatbbin"},"content":"        return new StudentDeleteCommand(indexNumber, sc);","lastModifiedDate":"2023-03-12"},{"lineNumber":261,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":262,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":263,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"mayuanxin1234"},"content":"     * Function to parse the \"student class grade\" command","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentClass","lastModifiedDate":"2023-03-14"},{"lineNumber":266,"author":{"gitId":"mayuanxin1234"},"content":"     * @param argMultimap","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A StudentGradeCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":268,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeCommand gradeCommand(String studentClass, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"mayuanxin1234"},"content":"        if ((arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_TEST)","lastModifiedDate":"2023-03-14"},{"lineNumber":272,"author":{"gitId":"mayuanxin1234"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_HOMEWORK))","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"mayuanxin1234"},"content":"            Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"mayuanxin1234"},"content":"            IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"mayuanxin1234"},"content":"            String score \u003d argMultimap.getValue(PREFIX_SCORE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"mayuanxin1234"},"content":"            String deadline \u003d argMultimap.getValue(PREFIX_DEADLINE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":278,"author":{"gitId":"mayuanxin1234"},"content":"            String weightage \u003d argMultimap.getValue(PREFIX_WEIGHTAGE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":279,"author":{"gitId":"mayuanxin1234"},"content":"            String homeworkDone \u003d argMultimap.getValue(PREFIX_HOMEWORKDONE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":280,"author":{"gitId":"mayuanxin1234"},"content":"            Test test;","lastModifiedDate":"2023-03-15"},{"lineNumber":281,"author":{"gitId":"mayuanxin1234"},"content":"            Homework homework;","lastModifiedDate":"2023-03-15"},{"lineNumber":282,"author":{"gitId":"mayuanxin1234"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_TEST)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":283,"author":{"gitId":"mayuanxin1234"},"content":"                test \u003d ParserUtil.parseTest(argMultimap.getValue(PREFIX_TEST).get(), score, deadline, weightage);","lastModifiedDate":"2023-03-15"},{"lineNumber":284,"author":{"gitId":"mayuanxin1234"},"content":"                return new StudentGradeCommand(sc, indexNumber, test);","lastModifiedDate":"2023-03-15"},{"lineNumber":285,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":286,"author":{"gitId":"mayuanxin1234"},"content":"                homework \u003d ParserUtil.parseHomework(argMultimap.getValue(PREFIX_HOMEWORK).get(), score, deadline,","lastModifiedDate":"2023-03-15"},{"lineNumber":287,"author":{"gitId":"mayuanxin1234"},"content":"                        weightage, homeworkDone);","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"mayuanxin1234"},"content":"                return new StudentGradeCommand(sc, indexNumber, homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":289,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":290,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":291,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":292,"author":{"gitId":"mayuanxin1234"},"content":"                    StudentGradeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":293,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":294,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":295,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":296,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":297,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":298,"author":{"gitId":"mayuanxin1234"},"content":"     * Function to parse the \"student class grade delete\" command","lastModifiedDate":"2023-03-14"},{"lineNumber":299,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentClass","lastModifiedDate":"2023-03-14"},{"lineNumber":300,"author":{"gitId":"mayuanxin1234"},"content":"     * @param argMultimap","lastModifiedDate":"2023-03-14"},{"lineNumber":301,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A StudentGradeDeleteCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":302,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-14"},{"lineNumber":303,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":304,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeDeleteCommand gradeDeleteCommand(String studentClass, ArgumentMultimap argMultimap)","lastModifiedDate":"2023-03-14"},{"lineNumber":305,"author":{"gitId":"mayuanxin1234"},"content":"            throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":306,"author":{"gitId":"mayuanxin1234"},"content":"        if ((arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_TEST)","lastModifiedDate":"2023-03-14"},{"lineNumber":307,"author":{"gitId":"mayuanxin1234"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_HOMEWORK))","lastModifiedDate":"2023-03-14"},{"lineNumber":308,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":309,"author":{"gitId":"mayuanxin1234"},"content":"            Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-14"},{"lineNumber":310,"author":{"gitId":"mayuanxin1234"},"content":"            IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":311,"author":{"gitId":"mayuanxin1234"},"content":"            Test test;","lastModifiedDate":"2023-03-15"},{"lineNumber":312,"author":{"gitId":"mayuanxin1234"},"content":"            Homework homework;","lastModifiedDate":"2023-03-15"},{"lineNumber":313,"author":{"gitId":"mayuanxin1234"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_TEST)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":314,"author":{"gitId":"mayuanxin1234"},"content":"                test \u003d ParserUtil.parseTest(argMultimap.getValue(PREFIX_TEST).get(),","lastModifiedDate":"2023-03-15"},{"lineNumber":315,"author":{"gitId":"mayuanxin1234"},"content":"                        \"Insert student score here!\", argMultimap.getValue(PREFIX_DEADLINE).get(),","lastModifiedDate":"2023-03-14"},{"lineNumber":316,"author":{"gitId":"mayuanxin1234"},"content":"                        \"Insert student weightage here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":317,"author":{"gitId":"mayuanxin1234"},"content":"                return new StudentGradeDeleteCommand(sc, indexNumber, test);","lastModifiedDate":"2023-03-15"},{"lineNumber":318,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":319,"author":{"gitId":"mayuanxin1234"},"content":"                homework \u003d ParserUtil.parseHomework(argMultimap.getValue(PREFIX_HOMEWORK).get(),","lastModifiedDate":"2023-03-15"},{"lineNumber":320,"author":{"gitId":"mayuanxin1234"},"content":"                        \"Insert student score here!\", argMultimap.getValue(PREFIX_DEADLINE).get(),","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"mayuanxin1234"},"content":"                        \"Insert student weightage here!\", \"Insert student homework done here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":322,"author":{"gitId":"mayuanxin1234"},"content":"                return new StudentGradeDeleteCommand(sc, indexNumber, homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":323,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":324,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":325,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":326,"author":{"gitId":"mayuanxin1234"},"content":"                    StudentGradeDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":327,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":328,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":329,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":330,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":331,"author":{"gitId":"Diatbbin"},"content":"     * Function to parse the \"student class edit\" command","lastModifiedDate":"2023-03-21"},{"lineNumber":332,"author":{"gitId":"Diatbbin"},"content":"     * @param sc class of student","lastModifiedDate":"2023-03-21"},{"lineNumber":333,"author":{"gitId":"Diatbbin"},"content":"     * @param argMultimap mapper for each prefix","lastModifiedDate":"2023-03-21"},{"lineNumber":334,"author":{"gitId":"Diatbbin"},"content":"     * @return A StudentEditCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":335,"author":{"gitId":"Diatbbin"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-21"},{"lineNumber":336,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":337,"author":{"gitId":"Diatbbin"},"content":"    private StudentEditCommand editCommand(String sc, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-22"},{"lineNumber":338,"author":{"gitId":"Diatbbin"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER)","lastModifiedDate":"2023-03-22"},{"lineNumber":339,"author":{"gitId":"Diatbbin"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2023-03-21"},{"lineNumber":340,"author":{"gitId":"Diatbbin"},"content":"                || sc.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-21"},{"lineNumber":341,"author":{"gitId":"Diatbbin"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StudentEditCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":342,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":343,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":344,"author":{"gitId":"Diatbbin"},"content":"        Name newName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NEWNAME).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":345,"author":{"gitId":"Diatbbin"},"content":"        Phone newStudentPhoneNumber \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONESTUDENT).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":346,"author":{"gitId":"Diatbbin"},"content":"        Email newEmail \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAILSTUDENT).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":347,"author":{"gitId":"Diatbbin"},"content":"        Address newAddress \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":348,"author":{"gitId":"Diatbbin"},"content":"        IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":349,"author":{"gitId":"Diatbbin"},"content":"        IndexNumber newIndexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_NEWINDEXNUMBER).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":350,"author":{"gitId":"Diatbbin"},"content":"        Sex newSex \u003d ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":351,"author":{"gitId":"mayuanxin1234"},"content":"        Age newAge \u003d ParserUtil.parseAge(argMultimap.getValue(PREFIX_STUDENTAGE).get());","lastModifiedDate":"2023-04-02"},{"lineNumber":352,"author":{"gitId":"Diatbbin"},"content":"        Image newImage \u003d ParserUtil.parseImage(argMultimap.getValue(PREFIX_IMAGESTUDENT).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":353,"author":{"gitId":"Diatbbin"},"content":"        Cca newCca \u003d ParserUtil.parseCca(argMultimap.getValue(PREFIX_CCA).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":354,"author":{"gitId":"Diatbbin"},"content":"        Class studentClass \u003d ParserUtil.parseStudentClass(sc);","lastModifiedDate":"2023-03-22"},{"lineNumber":355,"author":{"gitId":"Diatbbin"},"content":"        Class newStudentClass \u003d ParserUtil.parseStudentClass(argMultimap.getValue(PREFIX_NEWCLASS).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":356,"author":{"gitId":"Diatbbin"},"content":"        Comment newComment \u003d ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT).get());","lastModifiedDate":"2023-03-21"},{"lineNumber":357,"author":{"gitId":"MrTwit99"},"content":"        Name newParentName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NEWPARENTNAME).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":358,"author":{"gitId":"MrTwit99"},"content":"        Phone newParentPhoneNumber \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_NEWPHONEPARENT).get());","lastModifiedDate":"2023-03-31"},{"lineNumber":359,"author":{"gitId":"Diatbbin"},"content":"        Relationship newRelationship \u003d ParserUtil.parseRelationship(argMultimap.getValue(PREFIX_RELATIONSHIP).get());","lastModifiedDate":"2023-03-22"},{"lineNumber":360,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":361,"author":{"gitId":"MrTwit99"},"content":"        return new StudentEditCommand(newName, indexNumber, newIndexNumber, studentClass, newStudentClass, newSex,","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"mayuanxin1234"},"content":"                newParentPhoneNumber, newParentName, newRelationship, newAge, newImage, newCca,","lastModifiedDate":"2023-04-02"},{"lineNumber":363,"author":{"gitId":"Diatbbin"},"content":"                newComment, newStudentPhoneNumber, newEmail, newAddress);","lastModifiedDate":"2023-04-05"},{"lineNumber":364,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":365,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":366,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":367,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-06"},{"lineNumber":368,"author":{"gitId":"mayuanxin1234"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-06"},{"lineNumber":369,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":370,"author":{"gitId":"mayuanxin1234"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-06"},{"lineNumber":371,"author":{"gitId":"mayuanxin1234"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-06"},{"lineNumber":372,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":373,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":19,"securespider":27,"Diatbbin":76,"mayuanxin1234":251}},{"path":"src/main/java/seedu/address/logic/parser/StudentFindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentFindCommand;","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.StudentNameContainsKeywordsPredicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":" * Parses input arguments and creates a new StudentFindCommand object","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentFindCommandParser implements Parser\u003cStudentFindCommand\u003e {","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses the given {@code String} of arguments in the context of the StudentFindCommand","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     * and returns a StudentFindCommand object for execution.","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentFindCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        String studentClass \u003d trimmedArgs.split(\" \")[0];","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"        trimmedArgs \u003d trimmedArgs.replaceFirst(studentClass, \"\").trim();","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, StudentFindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"        return new StudentFindCommand(studentClass,","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"                new StudentNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Diatbbin":3,"mayuanxin1234":30}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    Predicate\u003cParent\u003e PREDICATE_SHOW_ALL_PARENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"     * Returns the user prefs\u0027 pcclass file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    Path getPcClassFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"     * Replaces parent data with the data in {@code parent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    void setParents(ReadOnlyParents readOnlyParents);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"    /** Returns the PCClass */","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    ReadOnlyPcClass getPcClass();","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"    /** Returns the Parents */","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    ReadOnlyParents getParents();","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"     * @param student must not be null.","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"     * @return true if a student with the same identity as {@code student} exists in the PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"     * Returns student with the same index number and class as {@code student} exists in the PCClass.","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"     * @param indexNumber must not be null.","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"     * @param studentClass must not be null.","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"     * @return student with the same index number and class as {@code student} exists in the PCClass.","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"    Student getStudent(IndexNumber indexNumber, Class studentClass);","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a parent with the same identity as {@code parent} exists in the PowerConnect.","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"     * @param parent must not be null.","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"     * @return true if a parent with the same identity as {@code parent} exists in the PowerConnect.","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"    boolean hasParent(Parent parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a parent with the same name and phone number as {@code parent} exists in the PowerConnect.","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"     * @param name must not be null.","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"     * @param phone must not be null.","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"     * @return true if a parent with the same name and phone number as {@code parent} exists in the PowerConnect.","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"    Parent getParent(Name name, Phone phone);","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"     * Deletes the given student.","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"     * Deletes the given parent.","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"     * @param parent must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"    void deleteParent(Parent parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"     * Adds the given student.","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"    void addStudent(Student student, Class c);","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"     * Adds the given parent.","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"     * @param parent must not already exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"    void addParent(Parent parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":115,"author":{"gitId":"securespider"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"     * {@code target} must exist in the PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the pcclass.","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"securespider"},"content":"     * @param target must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"securespider"},"content":"     * @param editedStudent must not be the same as another existing student in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":123,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"     * Replaces the given parent {@code target} with {@code editedParent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"securespider"},"content":"     * The parent identity of {@code editedParent} must not be the same as another existing parent in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"     * @param target must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"securespider"},"content":"     * @param editedParent must not be the same as another existing parent in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"    void setParent(Parent target, Parent editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"securespider"},"content":"    /** Returns an unmodifiable view of the filtered student list */","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"    /** Returns an unmodifiable view of the filtered parent list */","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"    ObservableList\u003cParent\u003e getFilteredParentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":137,"author":{"gitId":"securespider"},"content":"     * Updates the filter of the filtered student list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"securespider"},"content":"     * @param predicate must not be null.","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"securespider"},"content":"     * Updates the filter of the filtered parent list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"securespider"},"content":"     * @param predicate must not be null.","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"    void updateFilteredParentList(Predicate\u003cParent\u003e predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"    void updateFilteredStudentListFind(Predicate\u003cStudent\u003e predicate, Class sc);","lastModifiedDate":"2023-03-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"MrTwit99":8,"securespider":42,"Diatbbin":17,"-":69,"mayuanxin1234":13}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.PcClass;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.Parents;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.UniqueStudentList;","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":" * Represents the in-memory model of the PowerConnect data.","lastModifiedDate":"2023-03-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    private Parents parents;","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    private final PcClass pcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    private FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    private FilteredList\u003cParent\u003e filteredParents;","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"     * Initializes a ModelManager with the given PowerConnect and userPrefs.","lastModifiedDate":"2023-03-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    public ModelManager(ReadOnlyPcClass readOnlyPcClass, ReadOnlyParents readOnlyParents, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(readOnlyParents, readOnlyPcClass, userPrefs);","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        logger.fine(\"Initializing with classes: \" + readOnlyPcClass","lastModifiedDate":"2023-03-18"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"                + \" and parents: \" + readOnlyParents","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        this.pcClass \u003d new PcClass(readOnlyPcClass);","lastModifiedDate":"2023-03-18"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        this.parents \u003d new Parents(readOnlyParents);","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(Class.getAllStudents().asUnmodifiableObservableList());","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"        filteredParents \u003d new FilteredList\u003c\u003e(this.parents.getParentList());","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"     * Initializes a ModelManager with the given PowerConnect and userPrefs.","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    public ModelManager(ReadOnlyPcClass readOnlyPcClass, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(readOnlyPcClass, userPrefs);","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        logger.fine(\"Initializing with classes: \" + readOnlyPcClass","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"        this.pcClass \u003d new PcClass(readOnlyPcClass);","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(Class.getAllStudents().asUnmodifiableObservableList());","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"    public ModelManager(ReadOnlyParents readOnlyParents, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"        requireAllNonNull(readOnlyParents, userPrefs);","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"        logger.fine(\"parents: \" + readOnlyParents","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"        this.pcClass \u003d null;","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"        this.parents \u003d new Parents(readOnlyParents);","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"        filteredParents \u003d new FilteredList\u003c\u003e(this.parents.getParentList());","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"        this(new PcClass(), new Parents(), new UserPrefs());","lastModifiedDate":"2023-03-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"securespider"},"content":"     * Returns the user prefs\u0027 pcclass file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"    public Path getPcClassFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"        return userPrefs.getPcClassFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"securespider"},"content":"     * Replaces parent data with the data in {@code parent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"securespider"},"content":"     * @param readOnlyParents","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"securespider"},"content":"    public void setParents(ReadOnlyParents readOnlyParents) {","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"securespider"},"content":"        this.parents.resetData(readOnlyParents);","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-31"},{"lineNumber":133,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"     * Returns the PCClass","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"    public ReadOnlyPcClass getPcClass() {","lastModifiedDate":"2023-03-18"},{"lineNumber":138,"author":{"gitId":"securespider"},"content":"        return pcClass;","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"securespider"},"content":"     * Returns the Parents","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"securespider"},"content":"    public ReadOnlyParents getParents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"securespider"},"content":"        return parents;","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"securespider"},"content":"     * Returns true if a student with the same identity as {@code student} exists in the PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"securespider"},"content":"     * @param student must not be null.","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"securespider"},"content":"     * @return true if a student with the same identity as {@code student} exists in the PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":156,"author":{"gitId":"securespider"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"securespider"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"securespider"},"content":"        return Class.getAllStudents().contains(student);","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":162,"author":{"gitId":"Diatbbin"},"content":"     * Returns student with the same index number and Class as {@code student} exists in the PCClass.","lastModifiedDate":"2023-04-07"},{"lineNumber":163,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":164,"author":{"gitId":"Diatbbin"},"content":"     * @param indexNumber must not be null.","lastModifiedDate":"2023-04-05"},{"lineNumber":165,"author":{"gitId":"Diatbbin"},"content":"     * @param studentClass must not be null.","lastModifiedDate":"2023-04-05"},{"lineNumber":166,"author":{"gitId":"Diatbbin"},"content":"     * @return stuent with the same index number and Class as {@code student} exists in the PCClass.","lastModifiedDate":"2023-04-07"},{"lineNumber":167,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":169,"author":{"gitId":"Diatbbin"},"content":"    public Student getStudent(IndexNumber indexNumber, Class studentClass) {","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"Diatbbin"},"content":"        requireAllNonNull(indexNumber, studentClass);","lastModifiedDate":"2023-04-07"},{"lineNumber":171,"author":{"gitId":"Diatbbin"},"content":"        UniqueStudentList students \u003d Class.getAllStudents();","lastModifiedDate":"2023-04-05"},{"lineNumber":172,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":173,"author":{"gitId":"Diatbbin"},"content":"        for (Student student : students) {","lastModifiedDate":"2023-04-05"},{"lineNumber":174,"author":{"gitId":"Diatbbin"},"content":"            IndexNumber currStudentIndexNumber \u003d student.getIndexNumber();","lastModifiedDate":"2023-04-05"},{"lineNumber":175,"author":{"gitId":"Diatbbin"},"content":"            Class currStudentClass \u003d student.getStudentClass();","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":177,"author":{"gitId":"Diatbbin"},"content":"            if (currStudentIndexNumber.equals(indexNumber) \u0026\u0026 currStudentClass.equals(studentClass)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":178,"author":{"gitId":"Diatbbin"},"content":"                return student;","lastModifiedDate":"2023-04-05"},{"lineNumber":179,"author":{"gitId":"Diatbbin"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":180,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"Diatbbin"},"content":"        return null;","lastModifiedDate":"2023-04-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":184,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"securespider"},"content":"     * Returns true if a parent with the same identity as {@code parent} exists in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"securespider"},"content":"     * @param parent must not be null.","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"securespider"},"content":"     * @return true if a parent with the same identity as {@code parent} exists in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"securespider"},"content":"    public boolean hasParent(Parent parent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"securespider"},"content":"        requireNonNull(parent);","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"securespider"},"content":"        return parents.getParentList().contains(parent);","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":197,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a parent with the same identity as {@code parent} exists in the PowerConnect.","lastModifiedDate":"2023-04-05"},{"lineNumber":198,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":199,"author":{"gitId":"Diatbbin"},"content":"     * @param name must not be null.","lastModifiedDate":"2023-04-05"},{"lineNumber":200,"author":{"gitId":"Diatbbin"},"content":"     * @param phone must not be null.","lastModifiedDate":"2023-04-05"},{"lineNumber":201,"author":{"gitId":"Diatbbin"},"content":"     * @return true if a parent with the same identity as {@code parent} exists in the PowerConnect.","lastModifiedDate":"2023-04-05"},{"lineNumber":202,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-04-05"},{"lineNumber":204,"author":{"gitId":"Diatbbin"},"content":"    public Parent getParent(Name name, Phone phone) {","lastModifiedDate":"2023-04-05"},{"lineNumber":205,"author":{"gitId":"Diatbbin"},"content":"        requireAllNonNull(name, phone);","lastModifiedDate":"2023-04-07"},{"lineNumber":206,"author":{"gitId":"Diatbbin"},"content":"        ObservableList\u003cParent\u003e parentList \u003d parents.getParentList();","lastModifiedDate":"2023-04-05"},{"lineNumber":207,"author":{"gitId":"Diatbbin"},"content":"        for (Parent parent : parentList) {","lastModifiedDate":"2023-04-05"},{"lineNumber":208,"author":{"gitId":"Diatbbin"},"content":"            Name currParentName \u003d parent.getName();","lastModifiedDate":"2023-04-05"},{"lineNumber":209,"author":{"gitId":"Diatbbin"},"content":"            Phone currParentPhoneNumber \u003d parent.getPhone();","lastModifiedDate":"2023-04-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":211,"author":{"gitId":"Diatbbin"},"content":"            if (currParentName.equals(name) \u0026\u0026 currParentPhoneNumber.equals(phone)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":212,"author":{"gitId":"Diatbbin"},"content":"                return parent;","lastModifiedDate":"2023-04-05"},{"lineNumber":213,"author":{"gitId":"Diatbbin"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":214,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":215,"author":{"gitId":"Diatbbin"},"content":"        return null;","lastModifiedDate":"2023-04-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":218,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":219,"author":{"gitId":"securespider"},"content":"     * Deletes the given student.","lastModifiedDate":"2023-03-17"},{"lineNumber":220,"author":{"gitId":"securespider"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":221,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"securespider"},"content":"     * @param target","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":224,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":225,"author":{"gitId":"securespider"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":226,"author":{"gitId":"securespider"},"content":"        for (Class c : pcClass.getClassList()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"            if (c.isSameClass(target.getStudentClass())) {","lastModifiedDate":"2023-03-18"},{"lineNumber":228,"author":{"gitId":"securespider"},"content":"                c.removeStudent(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":229,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":230,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":234,"author":{"gitId":"securespider"},"content":"     * Deletes the given parent.","lastModifiedDate":"2023-03-17"},{"lineNumber":235,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":236,"author":{"gitId":"securespider"},"content":"     * @param parent must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":237,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"securespider"},"content":"    public void deleteParent(Parent parent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":240,"author":{"gitId":"securespider"},"content":"        parents.removeParent(parent);","lastModifiedDate":"2023-03-17"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":244,"author":{"gitId":"securespider"},"content":"     * Adds the given student.","lastModifiedDate":"2023-03-17"},{"lineNumber":245,"author":{"gitId":"securespider"},"content":"     * {@code student} must not already exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":246,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":247,"author":{"gitId":"securespider"},"content":"     * @param student","lastModifiedDate":"2023-03-17"},{"lineNumber":248,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":250,"author":{"gitId":"securespider"},"content":"    public void addStudent(Student student, Class c) {","lastModifiedDate":"2023-03-17"},{"lineNumber":251,"author":{"gitId":"securespider"},"content":"        c.addStudent(student);","lastModifiedDate":"2023-03-17"},{"lineNumber":252,"author":{"gitId":"securespider"},"content":"        pcClass.addClass(c);","lastModifiedDate":"2023-03-17"},{"lineNumber":253,"author":{"gitId":"mayuanxin1234"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-21"},{"lineNumber":254,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":255,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":256,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":257,"author":{"gitId":"securespider"},"content":"     * Adds the given parent.","lastModifiedDate":"2023-03-17"},{"lineNumber":258,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":259,"author":{"gitId":"securespider"},"content":"     * @param parent must not already exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":260,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":262,"author":{"gitId":"securespider"},"content":"    public void addParent(Parent parent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":263,"author":{"gitId":"securespider"},"content":"        parents.addParent(parent);","lastModifiedDate":"2023-03-17"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":266,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":267,"author":{"gitId":"securespider"},"content":"     * Replaces the given student {@code target} with {@code editedStudent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":268,"author":{"gitId":"securespider"},"content":"     * {@code target} must exist in the PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":269,"author":{"gitId":"securespider"},"content":"     * The student identity of {@code editedStudent} must not be the same as another existing student in the pcclass.","lastModifiedDate":"2023-03-17"},{"lineNumber":270,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-17"},{"lineNumber":271,"author":{"gitId":"securespider"},"content":"     * @param target        must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":272,"author":{"gitId":"securespider"},"content":"     * @param editedStudent must not be the same as another existing student in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":273,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":274,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":275,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-06"},{"lineNumber":276,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":277,"author":{"gitId":"mayuanxin1234"},"content":"        Class cTarget \u003d Class.of(target.getStudentClass().getClassName());","lastModifiedDate":"2023-03-24"},{"lineNumber":278,"author":{"gitId":"mayuanxin1234"},"content":"        cTarget.removeStudent(target);","lastModifiedDate":"2023-03-24"},{"lineNumber":279,"author":{"gitId":"mayuanxin1234"},"content":"        Class cEdit \u003d Class.of(editedStudent.getStudentClass().getClassName());","lastModifiedDate":"2023-03-24"},{"lineNumber":280,"author":{"gitId":"mayuanxin1234"},"content":"        cEdit.addStudent(editedStudent);","lastModifiedDate":"2023-03-24"},{"lineNumber":281,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":282,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":284,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":285,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":286,"author":{"gitId":"securespider"},"content":"     * Replaces the given parent {@code target} with {@code editedParent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":287,"author":{"gitId":"securespider"},"content":"     * @param target must exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":288,"author":{"gitId":"securespider"},"content":"     * @param editedParent must not be the same as another existing parent in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":289,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":290,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":291,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":292,"author":{"gitId":"MrTwit99"},"content":"        requireAllNonNull(target, editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":293,"author":{"gitId":"securespider"},"content":"        parents.setParent(target, editedParent);","lastModifiedDate":"2023-03-17"},{"lineNumber":294,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":295,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":296,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":299,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":300,"author":{"gitId":"MrTwit99"},"content":"        return filteredStudents;","lastModifiedDate":"2023-03-08"},{"lineNumber":301,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":302,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":303,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":304,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cParent\u003e getFilteredParentList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":305,"author":{"gitId":"MrTwit99"},"content":"        return filteredParents;","lastModifiedDate":"2023-03-12"},{"lineNumber":306,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":307,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":308,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":309,"author":{"gitId":"mayuanxin1234"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":310,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":311,"author":{"gitId":"mayuanxin1234"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(Class.getAllStudents().asUnmodifiableObservableList());","lastModifiedDate":"2023-03-21"},{"lineNumber":312,"author":{"gitId":"mayuanxin1234"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":313,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":314,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":315,"author":{"gitId":"mayuanxin1234"},"content":"    public void updateFilteredStudentListFind(Predicate\u003cStudent\u003e predicate, Class sc) {","lastModifiedDate":"2023-03-25"},{"lineNumber":316,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-25"},{"lineNumber":317,"author":{"gitId":"mayuanxin1234"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(sc.getStudents().asUnmodifiableObservableList());","lastModifiedDate":"2023-03-25"},{"lineNumber":318,"author":{"gitId":"mayuanxin1234"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":319,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":320,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":321,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":322,"author":{"gitId":"MrTwit99"},"content":"    public void updateFilteredParentList(Predicate\u003cParent\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":323,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":324,"author":{"gitId":"MrTwit99"},"content":"        filteredParents.setPredicate(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":328,"author":{"gitId":"securespider"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-17"},{"lineNumber":329,"author":{"gitId":"mayuanxin1234"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-18"},{"lineNumber":330,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":331,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":332,"author":{"gitId":"mayuanxin1234"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":333,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":334,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":335,"author":{"gitId":"securespider"},"content":"        ModelManager that \u003d (ModelManager) o;","lastModifiedDate":"2023-03-17"},{"lineNumber":336,"author":{"gitId":"securespider"},"content":"        return Objects.equals(parents, that.parents)","lastModifiedDate":"2023-03-17"},{"lineNumber":337,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 Objects.equals(pcClass, that.pcClass)","lastModifiedDate":"2023-03-17"},{"lineNumber":338,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 Objects.equals(userPrefs, that.userPrefs)","lastModifiedDate":"2023-03-17"},{"lineNumber":339,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 Objects.equals(filteredStudents, that.filteredStudents)","lastModifiedDate":"2023-03-17"},{"lineNumber":340,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 Objects.equals(filteredParents, that.filteredParents);","lastModifiedDate":"2023-03-17"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":343,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":344,"author":{"gitId":"securespider"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-17"},{"lineNumber":345,"author":{"gitId":"securespider"},"content":"        return Objects.hash(parents, pcClass, userPrefs, filteredStudents, filteredParents);","lastModifiedDate":"2023-03-17"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MrTwit99":25,"securespider":101,"Diatbbin":53,"-":115,"mayuanxin1234":53}},{"path":"src/main/java/seedu/address/model/PowerConnect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.UniqueParentList;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.UniqueStudentList;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"public class PowerConnect implements ReadOnlyPowerConnect {","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"    private final UniqueParentList parents;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        parents \u003d new UniqueParentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    public PowerConnect() {}","lastModifiedDate":"2023-04-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a PowerConnect using the Persons in the {@code toBeCopied}","lastModifiedDate":"2023-04-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    public PowerConnect(ReadOnlyPowerConnect toBeCopied) {","lastModifiedDate":"2023-04-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"        resetParentData(toBeCopied);","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"    public void setParents(List\u003cParent\u003e parents) {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"        this.parents.setParents(parents);","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"     * Resets the existing data of this {@code PowerConnect} with {@code newData}.","lastModifiedDate":"2023-04-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    public void resetParentData(ReadOnlyPowerConnect newData) {","lastModifiedDate":"2023-04-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"        setParents(newData.getParentList());","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"     * Returns boolean value true if a student with the same identity as {@code student} exists in PowerConnect.","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"     * @param student Student object that needs to be checked for duplication.","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value indicating whether the student already exists in PowerConnect.","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"        return students.contains(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"     * Adds a person to PowerConnect.","lastModifiedDate":"2023-04-09"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"     * The person must not already exist in PowerConnect.","lastModifiedDate":"2023-04-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"     * Adds a student to PowerConnect","lastModifiedDate":"2023-04-09"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"     * @param s of student","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"    public void addStudent(Student s) {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"        students.add(s);","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"    public void addParent(Parent p) {","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"        parents.add(p);","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"        parents.setParent(target, editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cParent\u003e getParentList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"        return parents.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof PowerConnect // instanceof handles nulls","lastModifiedDate":"2023-04-09"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 persons.equals(((PowerConnect) other).persons));","lastModifiedDate":"2023-04-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MrTwit99":38,"Diatbbin":1,"-":75,"mayuanxin1234":33}},{"path":"src/main/java/seedu/address/model/ReadOnlyPowerConnect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"public interface ReadOnlyPowerConnect {","lastModifiedDate":"2023-04-09"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    ObservableList\u003cParent\u003e getParentList();","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":8,"mayuanxin1234":6}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    Path getPcClassFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    Path getParentsFilePath();","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"securespider":2,"-":15,"mayuanxin1234":1}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    private Path pcClassFilePath \u003d Paths.get(\"data\" , \"pcclass.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    private Path parentsFilePath \u003d Paths.get(\"data\" , \"parents.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        setParentsFilePath(newUserPrefs.getParentsFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        setPcClassFilePath(newUserPrefs.getPcClassFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"     * Returns the PCClass file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"     * @return the PCClass file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    public Path getPcClassFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"        return pcClassFilePath;","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"     * Returns the parents file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"     * @return the parents file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"    public Path getParentsFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"        return parentsFilePath;","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"     * Sets the PCClass file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"     * @param pcClassFilePath the new PCClass file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPcClassFilePath(Path pcClassFilePath) {","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"        requireNonNull(pcClassFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        this.pcClassFilePath \u003d pcClassFilePath;","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"     * Sets the parents file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"     * @param parentsFilePath the new parents file path.","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"    public void setParentsFilePath(Path parentsFilePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"        requireNonNull(parentsFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"        this.parentsFilePath \u003d parentsFilePath;","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"     * Returns true if both user prefs have the same data.","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"     * @param o the other object to compare with.","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"     * @return true if both user prefs have the same data.","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"        UserPrefs userPrefs \u003d (UserPrefs) o;","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        return Objects.equals(guiSettings, userPrefs.guiSettings)","lastModifiedDate":"2023-03-18"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 Objects.equals(pcClassFilePath, userPrefs.pcClassFilePath)","lastModifiedDate":"2023-03-18"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 Objects.equals(parentsFilePath, userPrefs.parentsFilePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"     * Returns the hashcode of the user prefs.","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"     * @return the hashcode of the user prefs.","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"        return Objects.hash(guiSettings, pcClassFilePath, parentsFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"securespider"},"content":"        sb.append(\"\\nLocal data file location : \" + pcClassFilePath + \" \" + parentsFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"securespider":40,"-":74,"mayuanxin1234":8}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        if (isDefaultAddress(test)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if a given string is the default string given when an Address isn\u0027t given by user.","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"    public static boolean isDefaultAddress(String test) {","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        if (test.equals(\"Insert Address here!\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":14,"-":57,"mayuanxin1234":2}},{"path":"src/main/java/seedu/address/model/person/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the Age of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class Age {","lastModifiedDate":"2023-04-02"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Age must be digits (0-9)\";","lastModifiedDate":"2023-04-02"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2023-04-02"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * @param age A valid student age.","lastModifiedDate":"2023-04-02"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public Age(String age) {","lastModifiedDate":"2023-04-02"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-04-02"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d age;","lastModifiedDate":"2023-04-02"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidAge(String test) {","lastModifiedDate":"2023-04-02"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        if (isDefaultAge(test)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is the default string given when an Age isn\u0027t given by user.","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isDefaultAge(String test) {","lastModifiedDate":"2023-04-02"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student age here!\")) {","lastModifiedDate":"2023-04-02"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert parent age here!\")) {","lastModifiedDate":"2023-04-02"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"        return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"                || (other instanceof Age// instanceof handles nulls","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 value.equals(((Age) other).value)); // state check","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":18,"Diatbbin":1,"mayuanxin1234":54}},{"path":"src/main/java/seedu/address/model/person/Class.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.exceptions.DuplicateClassException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.UniqueParentList;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.UniqueStudentList;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":" * Represents a Class in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"public class Class {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"            \"Class name must contain letters and/or digits with no spaces in between\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    private static List\u003cClass\u003e classes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    // TODO: Change type to Name","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    private final String className;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    private UniqueStudentList students;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    private UniqueParentList parents;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     * @param className A valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"     * @param students A list of students in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"     * @param parents A list of parents in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    public Class(String className,","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"                  UniqueStudentList students,","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"                  UniqueParentList parents) throws DuplicateClassException {","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"        requireNonNull(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        checkArgument(isValidClass(className), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"        this.students \u003d students;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"        this.parents \u003d parents;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"        if (classes.contains(this)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"            classes.remove(this);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"            classes.add(this);","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"            throw new DuplicateClassException();","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        classes.add(this);","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"     * @param className A valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    public Class(String className) throws DuplicateClassException {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"        requireNonNull(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"        checkArgument(isValidClass(className), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"        this.students \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"        this.parents \u003d new UniqueParentList();","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"        if (classes.contains(this)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"            throw new DuplicateClassException();","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"        classes.add(this);","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"     * @param className A valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"     * @return The class with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"    public static Class of(String className) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"            return new Class(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"        } catch (DuplicateClassException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"            return getClass(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"     * @param className A valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"     * @param students A list of students in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"     * @param parents A list of parents in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"     * @return The class with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"    public static Class of(String className, UniqueStudentList students, UniqueParentList parents) {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"            return new Class(className, students, parents);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"        } catch (DuplicateClassException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"            return getClass(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"     * @param c The class to be added to static list.","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"     * @return The class with the given name.","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"    public static Class of(Class c) {","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"            return new Class(c.getClassName(), c.getStudents(), c.getParents());","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"        } catch (DuplicateClassException e) {","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"            return getClass(c.getClassName());","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"     * Updates the list of classes.","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"     * @param classes The new list of classes.","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"securespider"},"content":"    public static void setClasses(List\u003cClass\u003e classes) {","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"securespider"},"content":"        Class.classes \u003d classes;","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"     * Returns true if a given string is a valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"securespider"},"content":"     * @param className Test string to be checked.","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"securespider"},"content":"    public static boolean isValidClass(String className) {","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"Diatbbin"},"content":"        if (isDefaultClass(className)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":130,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":131,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":132,"author":{"gitId":"securespider"},"content":"        return className.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":136,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a given string is the default string given when the class isn\u0027t given by user.","lastModifiedDate":"2023-03-22"},{"lineNumber":137,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":138,"author":{"gitId":"Diatbbin"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-22"},{"lineNumber":139,"author":{"gitId":"Diatbbin"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-22"},{"lineNumber":140,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":141,"author":{"gitId":"Diatbbin"},"content":"    public static boolean isDefaultClass(String test) {","lastModifiedDate":"2023-03-22"},{"lineNumber":142,"author":{"gitId":"Diatbbin"},"content":"        if (test.equals(\"Insert student class here!\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":143,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":144,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":145,"author":{"gitId":"Diatbbin"},"content":"        return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":146,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":147,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":148,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"securespider"},"content":"     * Get the class with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"securespider"},"content":"     * @param className The name of the class to be retrieved.","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"securespider"},"content":"     * @return The class with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"securespider"},"content":"    public static Class getClass(String className) {","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"securespider"},"content":"        for (Class c : classes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"securespider"},"content":"            if (c.getClassName().equals(className)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"securespider"},"content":"                return c;","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"securespider"},"content":"        return null;","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"securespider"},"content":"     * Get the list of all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"securespider"},"content":"     * @return The list of all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"securespider"},"content":"    public static List\u003cClass\u003e getClasses() {","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"securespider"},"content":"        return classes;","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"securespider"},"content":"     * Get the list of all people in all classes","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"securespider"},"content":"     * @return The list of all people in all classes","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"securespider"},"content":"    public static ObservableList\u003cPerson\u003e getPersons() {","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"securespider"},"content":"        ObservableList\u003cPerson\u003e persons \u003d new UniquePersonList().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"securespider"},"content":"        for (Class c : classes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"securespider"},"content":"            persons.addAll(c.getStudents().asUnmodifiableObservableList());","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"securespider"},"content":"            persons.addAll(c.getParents().asUnmodifiableObservableList());","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"securespider"},"content":"        return persons;","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"securespider"},"content":"     * Get the list of all students in all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"securespider"},"content":"     * @return The list of all students in all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"securespider"},"content":"    public static UniqueStudentList getAllStudents() {","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"securespider"},"content":"        UniqueStudentList allStudents \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"securespider"},"content":"        for (Class c : classes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"            for (Student student : c.getStudents()) {","lastModifiedDate":"2023-03-25"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"                allStudents.add(student);","lastModifiedDate":"2023-03-25"},{"lineNumber":195,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-25"},{"lineNumber":196,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"securespider"},"content":"        return allStudents;","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"securespider"},"content":"     * Remove the class from the list of classes.","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"securespider"},"content":"     * @param c The class to be removed.","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"securespider"},"content":"    public static void removeClass(Class c) {","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"securespider"},"content":"        classes.remove(c);","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"securespider"},"content":"     * Get the name of the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"securespider"},"content":"     * @return The name of the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"securespider"},"content":"    public String getClassName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"securespider"},"content":"        return className;","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"securespider"},"content":"     * Get the list of students in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"securespider"},"content":"     * @return The list of students in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"securespider"},"content":"    public UniqueStudentList getStudents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"securespider"},"content":"        return students;","lastModifiedDate":"2023-03-17"},{"lineNumber":224,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"securespider"},"content":"     * Get the list of parents in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"securespider"},"content":"     * @return The list of parents in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"securespider"},"content":"    public UniqueParentList getParents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":232,"author":{"gitId":"securespider"},"content":"        return parents;","lastModifiedDate":"2023-03-17"},{"lineNumber":233,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"securespider"},"content":"     * Add a student to the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"securespider"},"content":"     * @param student The student to be added.","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"securespider"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"securespider"},"content":"        students.add(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"securespider"},"content":"     * Add a parent to the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"securespider"},"content":"     * @param parent The parent to be added.","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"securespider"},"content":"    public void addParent(Parent parent) {","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"securespider"},"content":"        parents.add(parent);","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"securespider"},"content":"     * Remove a student from the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"securespider"},"content":"     * @param student The student to be removed.","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"securespider"},"content":"    public void removeStudent(Student student) {","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"securespider"},"content":"        students.remove(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"securespider"},"content":"     * Replaces students in the class with another list.","lastModifiedDate":"2023-03-13"},{"lineNumber":263,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":264,"author":{"gitId":"securespider"},"content":"     * @param students The UniqueStudentList of students to be replaced with.","lastModifiedDate":"2023-03-13"},{"lineNumber":265,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"securespider"},"content":"    public void setStudents(UniqueStudentList students) {","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"securespider"},"content":"        this.students \u003d students;","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":269,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":270,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":271,"author":{"gitId":"securespider"},"content":"     * Overloaded method if user inputs List instead of UniqueStudentList.","lastModifiedDate":"2023-03-13"},{"lineNumber":272,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":273,"author":{"gitId":"securespider"},"content":"     * @param students The List of students to be replaced with.","lastModifiedDate":"2023-03-13"},{"lineNumber":274,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":275,"author":{"gitId":"securespider"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-13"},{"lineNumber":276,"author":{"gitId":"securespider"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2023-03-13"},{"lineNumber":277,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":278,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":279,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":280,"author":{"gitId":"securespider"},"content":"     * Update a student in the class.","lastModifiedDate":"2023-03-17"},{"lineNumber":281,"author":{"gitId":"securespider"},"content":"     * @param target The student to be updated.","lastModifiedDate":"2023-03-17"},{"lineNumber":282,"author":{"gitId":"securespider"},"content":"     * @param editedStudent The student to be updated to.","lastModifiedDate":"2023-03-17"},{"lineNumber":283,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":284,"author":{"gitId":"securespider"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":285,"author":{"gitId":"securespider"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2023-03-17"},{"lineNumber":286,"author":{"gitId":"securespider"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2023-03-17"},{"lineNumber":287,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":288,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":289,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":290,"author":{"gitId":"securespider"},"content":"     * Replaces parents in the class with another list.","lastModifiedDate":"2023-03-13"},{"lineNumber":291,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":292,"author":{"gitId":"securespider"},"content":"     * @param parents The UniqueParentList of parents to be replaced with.","lastModifiedDate":"2023-03-13"},{"lineNumber":293,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":294,"author":{"gitId":"securespider"},"content":"    public void setParents(UniqueParentList parents) {","lastModifiedDate":"2023-03-13"},{"lineNumber":295,"author":{"gitId":"securespider"},"content":"        this.parents \u003d parents;","lastModifiedDate":"2023-03-13"},{"lineNumber":296,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":297,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":298,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":299,"author":{"gitId":"securespider"},"content":"     * Overloaded method if user inputs List instead of UniqueParentList.","lastModifiedDate":"2023-03-13"},{"lineNumber":300,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":301,"author":{"gitId":"securespider"},"content":"     * @param parents The List of parents to be replaced with.","lastModifiedDate":"2023-03-13"},{"lineNumber":302,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":303,"author":{"gitId":"securespider"},"content":"    public void setParents(List\u003cParent\u003e parents) {","lastModifiedDate":"2023-03-13"},{"lineNumber":304,"author":{"gitId":"securespider"},"content":"        this.parents.setParents(parents);","lastModifiedDate":"2023-03-13"},{"lineNumber":305,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":306,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":307,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":308,"author":{"gitId":"securespider"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-13"},{"lineNumber":309,"author":{"gitId":"securespider"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-13"},{"lineNumber":310,"author":{"gitId":"securespider"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":311,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":312,"author":{"gitId":"securespider"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":313,"author":{"gitId":"securespider"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":314,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":315,"author":{"gitId":"securespider"},"content":"        Class aClass \u003d (Class) o;","lastModifiedDate":"2023-03-13"},{"lineNumber":316,"author":{"gitId":"securespider"},"content":"        return className.equals(aClass.className);","lastModifiedDate":"2023-03-13"},{"lineNumber":317,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":318,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":319,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":320,"author":{"gitId":"securespider"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":321,"author":{"gitId":"securespider"},"content":"        return Objects.hash(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":322,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":323,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":324,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":325,"author":{"gitId":"mayuanxin1234"},"content":"     * A method to check if both are of same class","lastModifiedDate":"2023-03-18"},{"lineNumber":326,"author":{"gitId":"mayuanxin1234"},"content":"     * @param aClass","lastModifiedDate":"2023-03-18"},{"lineNumber":327,"author":{"gitId":"mayuanxin1234"},"content":"     * @return true if same class, false otherwise","lastModifiedDate":"2023-03-18"},{"lineNumber":328,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":329,"author":{"gitId":"securespider"},"content":"    public boolean isSameClass(Class aClass) {","lastModifiedDate":"2023-03-17"},{"lineNumber":330,"author":{"gitId":"securespider"},"content":"        if (aClass \u003d\u003d this) {","lastModifiedDate":"2023-03-17"},{"lineNumber":331,"author":{"gitId":"securespider"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":332,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":333,"author":{"gitId":"securespider"},"content":"        return aClass !\u003d null \u0026\u0026 aClass.getClassName().equals(getClassName());","lastModifiedDate":"2023-03-17"},{"lineNumber":334,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":335,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":336,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":337,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-27"},{"lineNumber":338,"author":{"gitId":"mayuanxin1234"},"content":"        return this.className;","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":340,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"securespider":307,"Diatbbin":16,"mayuanxin1234":17}},{"path":"src/main/java/seedu/address/model/person/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":" * Represents a Person\u0027s comment in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"public class Comment {","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"\";","lastModifiedDate":"2023-03-30"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Comment is invalid. Please try again.\";","lastModifiedDate":"2023-03-30"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    /** Represents the comment of a person */","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    public final String value;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     * Constructs a Comment.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     * @param comment A valid comment.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    public Comment(String comment) {","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"        requireNonNull(comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"        value \u003d comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"     * Constructs a Comment with no comment.","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    public Comment() {","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"        value \u003d \"No comment\";","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        return value;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"                || (other instanceof Comment // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 value.equals(((Comment) other).value)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a given string is the default string given when the comment isn\u0027t given by user.","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"    public static boolean isDefaultComment(String test) {","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"        if (test.equals(\"Insert student comment here!\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"securespider":45,"Diatbbin":13,"mayuanxin1234":2}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        if (isDefaultEmail(test)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if a given string is the default string given when an Email isn\u0027t given by user.","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"    public static boolean isDefaultEmail(String test) {","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        if (test.equals(\"Insert student email here!\") || test.equals(\"Insert parent email here!\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":14,"-":71,"mayuanxin1234":2}},{"path":"src/main/java/seedu/address/model/person/Image.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.ParentName;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":" * Represents the Image of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class Image {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Image must be in png format (.png)\";","lastModifiedDate":"2023-03-30"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \".*\\\\.png$\";","lastModifiedDate":"2023-03-30"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     * @param image A valid student image file destination.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    public Image(String image) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(image);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidImage(image), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d image;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidImage(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        if (isDefaultImage(test)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if a given string is the default string given when an Image isn\u0027t given by user.","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"    public static boolean isDefaultImage(String test) {","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        if (test.equals(\"Insert student image here!\") || test.equals(\"Insert parent image here!\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof ParentName// instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((ParentName) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":17,"Diatbbin":1,"mayuanxin1234":54}},{"path":"src/main/java/seedu/address/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        if (isDefaultName(test)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if a given string is the default string given when a name isn\u0027t given by user.","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"    public static boolean isDefaultName(String test) {","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        return test.equals(\"Insert new name here!\");","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":12,"-":59}},{"path":"src/main/java/seedu/address/model/person/PcClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":" * A PcClass","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class PcClass implements ReadOnlyPcClass {","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    private List\u003cClass\u003e classes \u003d Class.getClasses();","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public PcClass() {}","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     * Creates a PCClass using the Students in the {@code toBeCopied}","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public PcClass(ReadOnlyPcClass toBeCopied) {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"        this();","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     * Replaces the contents of the student list with {@code students}.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"     * {@code students} must not contain duplicate students.","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    public void setPcClass(List\u003cClass\u003e pcClasses) {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        this.classes \u003d pcClasses;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"        Class.setClasses(pcClasses);","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     * Resets the existing data of this {@code PCClass} with {@code newData}.","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    public void resetData(ReadOnlyPcClass newData) {","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        setPcClass(newData.getClassList());","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    //// class-level operations","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"     * Returns true if a class with the same identity as {@code class} exists in the class.","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"    public boolean hasClass(Class pcClass) {","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"        requireNonNull(pcClass);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        for (Class c : classes) {","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"            if (c.equals(pcClass)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"                return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"     * Adds a class to the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"     * The class must not already exist in the class.","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"    public void addClass(Class p) {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"        if (Class.of(p).equals(p)) {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"            return;","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"            classes.add(Class.of(p));","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"     * Replaces the given class {@code target} in the list with {@code editedStudent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"     * {@code target} must exist in the class.","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"     * The class identity of {@code editedStudent} must not be the same as another existing class in","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"     * the class.","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"    public void setClass(Class target, Class editedClass) {","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"        requireNonNull(editedClass);","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"        classes.remove(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"        addClass(editedClass);","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"     * Removes {@code key} from this {@code PCClass}.","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"     * {@code key} must exist in the class.","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"    public void removeClass(Class key) {","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"        Class.removeClass(key);","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"        this.classes.remove(key);","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"    //// util methods","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"        return classes.size() + \" students\";","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"    public List\u003cClass\u003e getClassList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"        return classes;","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-18"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-18"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-18"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"            return false;","lastModifiedDate":"2023-03-18"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"        PcClass pcClass \u003d (PcClass) o;","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"        return Objects.equals(classes, pcClass.classes);","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"securespider"},"content":"        return Objects.hash(classes);","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":96,"mayuanxin1234":21}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"    protected Phone phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    private final Comment comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"    private final Email email;","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"    private final Name name;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"    private Class sc;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    private IndexNumber indexNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Comment comment) {","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        this.comment \u003d new Comment();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Class sc,","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"                  IndexNumber indexNumber) {","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        requireAllNonNull(name, phone, email, address, tags, sc, indexNumber);","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        this.comment \u003d new Comment();","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"    public Comment getComment() {","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"        return comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"    public Class getStudentClass() {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"        return sc;","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"    public IndexNumber getIndexNumber() {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"        return indexNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"        if (otherPerson instanceof Student) {","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"                    \u0026\u0026 otherPerson.getStudentClass().equals(getStudentClass())","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"                    \u0026\u0026 otherPerson.getIndexNumber().equals(getIndexNumber());","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"        if (otherPerson instanceof Parent) {","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"            return otherPerson !\u003d null","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"Diatbbin"},"content":"                    \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"                    \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"        //Need to rethink what constitutes same student","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":35,"securespider":15,"Diatbbin":4,"-":124}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        if (isDefaultPhone(test)) {","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if a given string is the default string given when a phone number isn\u0027t given by user.","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-21"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-21"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"    public static boolean isDefaultPhone(String test) {","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"        if (test.equals(\"Insert student phone number here!\") || test.equals(\"Insert parent phone here!\")) {","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"        return false;","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":14,"-":53,"mayuanxin1234":2}},{"path":"src/main/java/seedu/address/model/person/ReadOnlyPcClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":" * A interface for ReadOnlyPcClass","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"public interface ReadOnlyPcClass {","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"     * Returns an unmodifiable view of the students list.","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"     * This list will not contain any duplicate students.","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    List\u003cClass\u003e getClassList();","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":10,"mayuanxin1234":4}},{"path":"src/main/java/seedu/address/model/person/Sex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the gender of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class Sex {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Sex can only be \u0027M\u0027 or \u0027F\u0027, and it should not be blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"    public static final String VALIDATION_REGEX \u003d \"[MFmf]\";","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * @param sex A valid gender.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public Sex(String sex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(sex);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidSex(sex), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        if (isDefaultSex(sex)) {","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"            value \u003d \"Insert student sex here!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            return;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d sex;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidSex(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"        if (isDefaultSex(test)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a given string is the default string given when student\u0027s gender isn\u0027t given by user.","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"    public static boolean isDefaultSex(String test) {","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        return test.equals(\"Insert student sex here!\");","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Sex // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((Sex) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":6,"Diatbbin":13,"mayuanxin1234":52}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":" * Signals that the operation will result in duplicate Classes (Classes are considered duplicates if they have the same","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"public class DuplicateClassException extends Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"     * Constructs a DuplicateClassException with the specified detail message.","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    public DuplicateClassException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"        super(\"Operation would result in duplicate classes\");","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"securespider":13}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateParentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":" * Signals that the operation will result in duplicate Parents (Parents are considered duplicates if they have the same","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":" * phone number).","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"public class DuplicateParentException extends RuntimeException {","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    public DuplicateParentException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"        super(\"ERROR, operation would result in duplicate parents!\");","lastModifiedDate":"2023-03-19"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"MrTwit99":11}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePhoneException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":" * Signals that the operation will result in duplicate phone usage (Phones are considered duplicates if they are used by","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":" * two different Parents).","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"public class DuplicatePhoneException extends RuntimeException {","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"     * A constructor that creates a new DuplicatePhoneException when a Phone is already being used by another Parent","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    public DuplicatePhoneException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        super(\"Unable to perform the following operation as you are trying to use \"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"                + \"a phone number that is already used by existing parent to create a new parent!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"MrTwit99":15}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateStudentException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-19"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":" * Signals that the operation will result in duplicate Students (Students are considered duplicates if they have the","lastModifiedDate":"2023-03-19"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":" * same name \u0026 class \u0026 index number).","lastModifiedDate":"2023-03-19"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"public class DuplicateStudentException extends RuntimeException {","lastModifiedDate":"2023-03-19"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-03"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs a new DuplicateStudentException with the default message.","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-03"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    public DuplicateStudentException() {","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"        super(\"ERROR, operation would result in duplicate students!\"","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"                + \" Please enter a student with a different Index Number!\");","lastModifiedDate":"2023-04-03"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-19"}],"authorContributionMap":{"MrTwit99":10,"mayuanxin1234":5}},{"path":"src/main/java/seedu/address/model/person/parent/Parent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person.parent;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":" * A Parent Class that creates a Parent / Next-of-kin who is also a Person","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"public class Parent extends Person {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    public static final String VALIDATION_NUMBER_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    private final Age age;","lastModifiedDate":"2023-04-02"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"    private final Image image;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"    private final List\u003cStudent\u003e children \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"     * A constructor that creates a Parent Object with particulars about the Parent.","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"     * @param name Parent\u0027s / NOK\u0027s name.","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"     * @param age Parent\u0027s / NOK\u0027s age.","lastModifiedDate":"2023-04-02"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"     * @param image Image of Parent / NOK.","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"     * @param email Email Address of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"     * @param phone Phone number of Parent / NOK.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"     * @param address Residential Address of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"     * @param tags Tags given to Parent.","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    public Parent(Name name, Age age, Image image,","lastModifiedDate":"2023-04-02"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"                  Email email, Phone phone, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"        this.image \u003d image;","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"     * A method that is used to change the parent\u0027s number","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"     * @param phone Phone that is related to a Parent / NOK.","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"    public void setPhone(Phone phone) {","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"     * Method to check if the Parent\u0027s phone number is valid.","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"     * @param test Phone number of Parent / NOK.","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"     * @return Returns true if the phone number is valid.","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    public static boolean isValidParentNumber(String test) {","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"        return test.matches(VALIDATION_NUMBER_REGEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Age of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"     * @return Age of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    public Age getAge() {","lastModifiedDate":"2023-04-02"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        return age;","lastModifiedDate":"2023-04-02"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Image of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"     * @return Image of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"    public Image getImage() {","lastModifiedDate":"2023-03-07"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"        return image;","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns a list of Students the Parent / NOK is related to.","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"     * @return All Students that the Parent / NOK has relations to.","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"    public List\u003cStudent\u003e getStudents() {","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"        return children;","lastModifiedDate":"2023-03-07"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-19"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"     * A boolean method that checks if the current Parent / NOK has students attached to him / her.","lastModifiedDate":"2023-03-19"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-19"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value indicating if there is at least one Student attached to this Parent.","lastModifiedDate":"2023-03-19"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"    public boolean hasStudents() {","lastModifiedDate":"2023-03-19"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"        return (children.size() \u003e 0);","lastModifiedDate":"2023-03-19"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-19"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"     * A method that adds a Student to the Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"     * @param student Student who is related to this Parent object.","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"        children.add(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"     * A method that adds a list of Students to the Parent / NOK.","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"     * @param students List of Students who are related to this Parent object.","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"    public void addStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"        children.addAll(students);","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"     * A method that removes a Student from the Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"     * @param student Student who is related to this Parent object.","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"    public void removeStudent(Student student) {","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"        if (children.contains(student)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"            children.remove(student);","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":127,"author":{"gitId":"Diatbbin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"Diatbbin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"Diatbbin"},"content":"        if (!(other instanceof Parent)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"Diatbbin"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"Diatbbin"},"content":"        Parent otherParent \u003d (Parent) other;","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"Diatbbin"},"content":"        return otherParent.getName().equals(getName())","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 otherParent.getAge().equals(getAge())","lastModifiedDate":"2023-04-02"},{"lineNumber":139,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 otherParent.getImage().equals(getImage())","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 otherParent.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 otherParent.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-07"},{"lineNumber":142,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 otherParent.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-07"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 otherParent.getTags().equals(getTags())","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 otherParent.getStudents().equals(getStudents());","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":146,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"Diatbbin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"Diatbbin"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"Diatbbin"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-07"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Parent Age: \")","lastModifiedDate":"2023-04-02"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getAge())","lastModifiedDate":"2023-04-02"},{"lineNumber":154,"author":{"gitId":"Diatbbin"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":155,"author":{"gitId":"Diatbbin"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-07"},{"lineNumber":156,"author":{"gitId":"Diatbbin"},"content":"                .append(\"; Image Path: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":157,"author":{"gitId":"Diatbbin"},"content":"                .append(getImage())","lastModifiedDate":"2023-03-07"},{"lineNumber":158,"author":{"gitId":"Diatbbin"},"content":"                .append(\"; Parent Email: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":159,"author":{"gitId":"Diatbbin"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-07"},{"lineNumber":160,"author":{"gitId":"Diatbbin"},"content":"                .append(\"; Parent Phone: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":161,"author":{"gitId":"Diatbbin"},"content":"                .append(getPhone())","lastModifiedDate":"2023-03-07"},{"lineNumber":162,"author":{"gitId":"MrTwit99"},"content":"                .append(\"; Parent/NOK of:\");","lastModifiedDate":"2023-03-15"},{"lineNumber":163,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":164,"author":{"gitId":"MrTwit99"},"content":"        List\u003cStudent\u003e children \u003d getStudents();","lastModifiedDate":"2023-03-19"},{"lineNumber":165,"author":{"gitId":"Diatbbin"},"content":"        for (Student child : children) {","lastModifiedDate":"2023-03-07"},{"lineNumber":166,"author":{"gitId":"Diatbbin"},"content":"            builder.append(\" \")","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"Diatbbin"},"content":"                    .append(child);","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"Diatbbin"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"Diatbbin"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":172,"author":{"gitId":"Diatbbin"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-07"},{"lineNumber":173,"author":{"gitId":"Diatbbin"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-07"},{"lineNumber":174,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":175,"author":{"gitId":"Diatbbin"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-07"},{"lineNumber":176,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":177,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"MrTwit99":51,"securespider":17,"Diatbbin":86,"mayuanxin1234":23}},{"path":"src/main/java/seedu/address/model/person/parent/ParentNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.parent;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":" * Tests that a {@code Parent}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"public class ParentNameContainsKeywordsPredicate implements Predicate\u003cParent\u003e {","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"    public ParentNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean test(Parent parent) {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(parent.getName().fullName, keyword));","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                || (other","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"                instanceof ParentNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 keywords.equals(((ParentNameContainsKeywordsPredicate) other)","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"                .keywords)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Diatbbin":5,"mayuanxin1234":27}},{"path":"src/main/java/seedu/address/model/person/parent/Parents.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person.parent;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" * A Parents class","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"public class Parents implements ReadOnlyParents {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    private final UniqueParentList parents;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    /*","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    {","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        parents \u003d new UniqueParentList();","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    public Parents() {}","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"     * Creates a Parents using the Parents in the {@code toBeCopied}","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    public Parents(ReadOnlyParents toBeCopied) {","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"        this();","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"     * Replaces the contents of the parent list with {@code parents}.","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"     * {@code parents} must not contain duplicate parents.","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    public void setParents(List\u003cParent\u003e parents) {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"        this.parents.setParents(parents);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"     * Resets the existing data of this {@code Parents} with {@code newData}.","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"    public void resetData(ReadOnlyParents newData) {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"        setParents(newData.getParentList());","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"    //// parent-level operations","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a parent with the same identity as {@code parent} exists in powerConnect.","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"    public boolean hasParent(Parent parent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        requireNonNull(parent);","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        return parents.contains(parent);","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a parent with the same identity as {@code parent} exists in powerConnect.","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"    public boolean hasParentName(String parent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"        requireNonNull(parent);","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        boolean contains \u003d false;","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"        for (Parent stu : parents) {","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"            if (stu.getName().fullName.equals(parent)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"                contains \u003d true;","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"        return contains;","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a parent with the same identity as {@code parent} exists in powerConnect.","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"    public boolean hasParentNameNonCaseSensitive(String parent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"        requireNonNull(parent);","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"        boolean contains \u003d false;","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"        for (Parent stu : parents) {","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"            if (stu.getName().fullName.toLowerCase().equals(parent.toLowerCase())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"                contains \u003d true;","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"        return contains;","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"     * Adds a parent to tea pet.","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"     * The parent must not already exist in tea pet.","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"    public void addParent(Parent p) {","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"        parents.add(p);","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"     * Replaces the given parent {@code target} in the list with {@code editedParent}.","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"     * {@code target} must exist in powerConnect.","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"     * The parent identity of {@code editedParent} must not be the same as another existing parent in","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"     * tea pet.","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"    public void setParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"        requireNonNull(editedParent);","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"        parents.setParent(target, editedParent);","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"     * Removes {@code key} from this {@code Parents}.","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"     * {@code key} must exist in powerConnect.","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"securespider"},"content":"    public void removeParent(Parent key) {","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"        parents.remove(key);","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"securespider"},"content":"    //// util methods","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"securespider"},"content":"        return parents.asUnmodifiableObservableList().size() + \" parents\";","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"    public ObservableList\u003cParent\u003e getParentList() {","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"securespider"},"content":"        return parents.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"securespider"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"securespider"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"                || (other instanceof Parents // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 parents.equals(((Parents) other).parents));","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"securespider"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"securespider"},"content":"        return parents.hashCode();","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":132,"Diatbbin":5,"mayuanxin1234":5}},{"path":"src/main/java/seedu/address/model/person/parent/ReadOnlyParents.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person.parent;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":" * A ReadOnlyParents interface","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"public interface ReadOnlyParents {","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"    ObservableList\u003cParent\u003e getParentList();","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":7,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/model/person/parent/Relationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person.parent;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":" * A relationship class","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"public class Relationship {","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Relationship must be letters\";","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    /*","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    public final String rls;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"     * @param relationship A valid student age.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    public Relationship(String relationship) {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"        requireNonNull(relationship);","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"        checkArgument(isValidRelationship(relationship), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        rls \u003d relationship;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a given string is a valid relationship.","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"    public static boolean isValidRelationship(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"        if (isDefaultRelationship(test)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a given string is the default string given when a relationship isn\u0027t given by user.","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"    public static boolean isDefaultRelationship(String test) {","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"        return test.equals(\"Insert parent relationship to student here!\");","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        return rls;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"                || (other instanceof Relationship// instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 rls.equals(((Relationship) other).rls)); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"        return rls.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"MrTwit99":5,"Diatbbin":59,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/model/person/parent/UniqueParentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.model.person.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicateParentException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":" * Represents a parent list containing Parent objects of Student objects in the same class / cca.","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"public class UniqueParentList implements Iterable\u003cParent\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    private final ObservableList\u003cParent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    private final ObservableList\u003cParent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"    public boolean contains(Parent toCheck) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"    public void add(Parent toAdd) {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicateParentException();","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        requireAllNonNull(target, editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        if (!target.isSamePerson(editedParent) \u0026\u0026 contains(editedParent)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicateParentException();","lastModifiedDate":"2023-03-19"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"        internalList.set(index, editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"    public void remove(Parent toRemove) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"    public void setParents(UniqueParentList replacement) {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"    public void setParents(List\u003cParent\u003e parents) {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"        requireAllNonNull(parents);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"        if (!parentsAreUnique(parents)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicateParentException();","lastModifiedDate":"2023-03-19"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"        internalList.setAll(parents);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cParent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"    public Iterator\u003cParent\u003e iterator() {","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"                || (other instanceof UniqueParentList // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 internalList.equals(((UniqueParentList) other).internalList));","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"    private boolean parentsAreUnique(List\u003cParent\u003e parents) {","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"        for (int i \u003d 0; i \u003c parents.size() - 1; i++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"            for (int j \u003d i + 1; j \u003c parents.size(); j++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"                if (parents.get(i).isSamePerson(parents.get(j))) {","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"                    return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"        return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":127}},{"path":"src/main/java/seedu/address/model/person/student/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents an Assignment that is assigned to the Student.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public abstract class Assignment {","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Assignment name should be alphanumeric\";","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    protected final String assignmentName;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    protected final int weightage;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    protected int score;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"     * Returns an Assignment object that stores information about the assignment description.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"     * @param assignmentName Assignment name.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"     * @param deadline Due date for the assignment.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"     * @param weightage Weightage of the assignment.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public Assignment(String assignmentName, LocalDate deadline, int weightage, int score) {","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"     * Returns a boolean value to indicate if the assignment name is valid.","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * @param test Assignment name.","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     * @return boolean value to indicate if the assignment name is valid.","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"    public static boolean isValidAssignmentName(String test) {","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student homework here!\") || test.equals(\"Insert student test here!\")) {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"     * Returns the assignment name.","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"     * @return assignment name.","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"    public String getAssignmentName() {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"        return assignmentName;","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"     * Returns the deadline of the assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"     * @return deadline of the assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"        return deadline;","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"     * Returns the weightage of the assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"     * @return weightage of the assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"    public int getWeightage() {","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"        return weightage;","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"     * Returns the score of the assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"     * @return score of the assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"    public int getScore() {","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        return score;","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"        Assignment that \u003d (Assignment) o;","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        return weightage \u003d\u003d that.weightage \u0026\u0026 assignmentName.equals(that.assignmentName)","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 Objects.equals(deadline, that.deadline);","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        return Objects.hash(assignmentName, deadline, weightage);","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":17,"securespider":48,"mayuanxin1234":29}},{"path":"src/main/java/seedu/address/model/person/student/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":" * Represents the Attendance of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"public class Attendance {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Attendance must be a date in the format of dd/mm/yyyy or T/F\";","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{2}/\\\\d{2}/\\\\d{4}\";","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    public static final String VALIDATION_REGEX2 \u003d \"[TF]\";","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    private String value;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    private LocalDate date;","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"     * @param value A string representation of a date","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    public Attendance(String value) {","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"        checkArgument(isValidAttendance(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        this.value \u003d value;","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        if (value.equals(\"T\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"            this.date \u003d LocalDate.now();","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"            this.value \u003d this.date.format(java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        } else if (!value.equals(\"F\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"            this.date \u003d LocalDate.parse(value, java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"     * @param value A LocalDate representation of an attendance","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    public Attendance(LocalDate value) {","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        this.value \u003d value.format(java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"        this.date \u003d value;","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"     * Returns true if a given string is a valid date","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidAttendance(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        // Default address","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student attendance here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"        if (test.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"            try {","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"                LocalDate.parse(test, java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"                return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"                return false;","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"        return test.matches(VALIDATION_REGEX2);","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"     * Returns true if the attendance is present on the given date.","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"     * @param currDate The date to check against","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"     * @return boolean value to indicate if the attendance is present on the given date.","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"    public boolean isPresent(LocalDate currDate) {","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        if (value.equals(\"F\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"            return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"        return currDate.isEqual(date);","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"     * Returns true if there is a localdate associated with the attendance.","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"     * @return boolean value to indicate if there is a localdate associated with the attendance.","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"    public boolean isDate() {","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"        return this.date !\u003d null;","lastModifiedDate":"2023-03-22"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"     * Notes that the student is absent","lastModifiedDate":"2023-03-22"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"     * @return Attendance object with value \"F\"","lastModifiedDate":"2023-03-22"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"    public boolean isAbsent() {","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"        return value.equals(\"F\");","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a given string is the default string given when the attendance isn\u0027t given by user.","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"    public static boolean isDefaultAttendance(String test) {","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"        if (test.equals(\"Insert student attendance here!\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"        return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"        return this.value;","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Attendance// instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((Attendance) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":3,"securespider":64,"Diatbbin":13,"mayuanxin1234":45}},{"path":"src/main/java/seedu/address/model/person/student/Cca.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the CCA (Co-curricular Activity) of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class Cca {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"CCA must be letters\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     * @param cca A valid cca in String.","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public Cca(String cca) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(cca);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidCca(cca), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d cca;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * @param test String to be tested","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     * @return true if the string is a valid cca (alphanumeric value)","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidCca(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student CCA here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a given string is the default string given when the cca isn\u0027t given by user.","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"    public static boolean isDefaultCca(String test) {","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"        if (test.equals(\"Insert student CCA here!\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"        return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Cca// instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((Cca) other).value)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":3,"securespider":4,"Diatbbin":13,"mayuanxin1234":53}},{"path":"src/main/java/seedu/address/model/person/student/ClassContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":" * A predicate class that checks if the student belongs to this class","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"public class ClassContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    private final Class sc;","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    public ClassContainsKeywordsPredicate(Class sc) {","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        return sc.equals(student.getStudentClass());","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"                || (other","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"                instanceof seedu.address.model.person.student.ClassContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 sc.equals(((seedu.address.model.person.student.ClassContainsKeywordsPredicate) other)","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"                .sc)); // state check","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"mayuanxin1234":30}},{"path":"src/main/java/seedu/address/model/person/student/Homework.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":" * Represents a homework that is given to the Student.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"public class Homework extends Assignment {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Homework must be letters or numbers\";","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"     * Returns a Homework object that stores information about the homework description.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"     * @param assignmentName Homework name.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"     * @param deadline Due date for the homework.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"     * @param weightage Weightage of the homework.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"     * @param isDone Boolean value indicating the completion status of the homework.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public Homework(String assignmentName, LocalDate deadline, int weightage, int score, boolean isDone) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        super(assignmentName, deadline, weightage, score);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"     * Checks if a particular task to do is a Homework object.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"     * @param test String description of the task to check if it is a Homework object.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value indicating whether the task is a Homework object.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidHomework(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student homework here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        return super.assignmentName;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Homework// instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 super.assignmentName.equals(((Homework) other).assignmentName)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    public String getName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        return super.assignmentName;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    public int getScore() {","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        return super.score;","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    public int getWeightage() {","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        return super.weightage;","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        return super.deadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        return this.isDone;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"        return isDone;","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":17,"securespider":1,"mayuanxin1234":63}},{"path":"src/main/java/seedu/address/model/person/student/IndexNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the index number of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class IndexNumber {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"            \"Index Number can only be digits (0-9), and it should not be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber A valid indexNumber.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    public IndexNumber(String indexNumber) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(indexNumber);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidIndexNumber(indexNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        String strPattern \u003d \"^0+(?!$)\";","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        indexNumber \u003d indexNumber.replaceAll(strPattern, \"\");","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d indexNumber;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidIndexNumber(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"        if (isDefaultIndexNumber(test)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a given string is the default string given when the index number isn\u0027t given by user.","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"     * @param test String value to test.","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"     * @return Boolean value true if the string given is the default string by the system.","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"    public static boolean isDefaultIndexNumber(String test) {","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"        if (test.equals(\"Insert student index number here!\")) {","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"        return false;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof IndexNumber // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((IndexNumber) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":5,"Diatbbin":16,"mayuanxin1234":53}},{"path":"src/main/java/seedu/address/model/person/student/ParentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the name of the Parent object of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class ParentName {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Parent Name must be letters\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * @param parentName A valid parent name.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public ParentName(String parentName) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(parentName);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidParentName(parentName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d parentName;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidParentName(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert parent name here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof ParentName// instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((ParentName) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":3,"mayuanxin1234":55}},{"path":"src/main/java/seedu/address/model/person/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-01"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":" * Represents a Student object extends from Person class.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"public class Student extends Person {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"    protected Phone parentNumber;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    protected Name parentName;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    protected Relationship rls;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    protected Phone studentNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"    private final IndexNumber indexNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    private final Sex sex;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    private final Age age;","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    private final Image image;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    private final Cca cca;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    private final Class sc;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    private Set\u003cAttendance\u003e attendanceDates;","lastModifiedDate":"2023-04-09"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    private Set\u003cHomework\u003e homework \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    private Set\u003cTest\u003e test \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    private Comment comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    private Parent parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"     * Returns a Student object that stores information about the student particulars.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     * @param name Student\u0027s name.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"     * @param sc Student\u0027s class.","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"     * @param indexNumber Student\u0027s index number.","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"     * @param sex Student\u0027s gender.","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"     * @param parentName Student\u0027s Parent / NOK name.","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"     * @param parentPhone Student\u0027s Parent / NOK contact number.","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"     * @param rls Parent / NOK relationship to student.","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"     * @param age Student\u0027s age.","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"     * @param image Student\u0027s image.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"     * @param email Student\u0027s email address.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"     * @param phone Student\u0027s contact number.","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"     * @param cca Student\u0027s CCA.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"     * @param address Student\u0027s residential address.","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"     * @param attendance Student\u0027s attendance.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"     * @param homework Homework given to student.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"     * @param test Tests student took.","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"     * @param tags Tag given to student.","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"    public Student(Name name, Class sc, IndexNumber indexNumber, Sex sex, Name parentName, Phone parentPhone,","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"                   Relationship rls, Age age, Image image, Email email, Phone phone, Cca cca, Address address,","lastModifiedDate":"2023-04-02"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"                   Set\u003cAttendance\u003e attendance, Set\u003cHomework\u003e homework, Set\u003cTest\u003e test, Set\u003cTag\u003e tags, Comment comment) {","lastModifiedDate":"2023-04-02"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-04-02"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        this.image \u003d image;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"        this.cca \u003d cca;","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        this.attendanceDates \u003d attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"        this.homework.addAll(homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"        this.test.addAll(test);","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"        this.parentName \u003d parentName;","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"        this.parentNumber \u003d parentPhone;","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"        this.rls \u003d rls;","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"     * A method that is used to bind a Parent / NOK to the student.","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"     * @param parent Parent / NOK that is related to the Student.","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(Parent parent) {","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"        this.parentName \u003d parent.getName();","lastModifiedDate":"2023-03-21"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"        this.parentNumber \u003d parent.getPhone();","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"     * A method that is used to change the parent\u0027s number in student","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"     * @param parentNumber Phone that is related to a Parent / NOK.","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"    public void setPhone(Phone parentNumber) {","lastModifiedDate":"2023-03-22"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"        this.parentNumber \u003d parentNumber;","lastModifiedDate":"2023-03-22"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"     * A method that returns the Parent.","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"     * @return Parent.","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"    public Parent getParent() {","lastModifiedDate":"2023-03-22"},{"lineNumber":111,"author":{"gitId":"Diatbbin"},"content":"        return this.parent;","lastModifiedDate":"2023-03-22"},{"lineNumber":112,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Parent / NOK name.","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"     * @return Parent / NOK name.","lastModifiedDate":"2023-03-15"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"    public Name getParentName() {","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"        return this.parentName;","lastModifiedDate":"2023-03-15"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the relationship of the Parent / NOK to student.","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"     * @return Relationship of the Parent / NOK to student.","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"    public Relationship getRls() {","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"        return this.rls;","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Parent / NOK contact number.","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"     * @return Parent / NOK contact number.","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"    public Phone getParentNumber() {","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"        return this.parentNumber;","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Index Number.","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s Index Number.","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"    public IndexNumber getIndexNumber() {","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"        return indexNumber;","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Gender.","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s Gender.","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"MrTwit99"},"content":"    public Sex getSex() {","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"        return sex;","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Age.","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s Age.","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"    public Age getAge() {","lastModifiedDate":"2023-04-02"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"        return age;","lastModifiedDate":"2023-04-02"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Image.","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s Image.","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"mayuanxin1234"},"content":"    public Image getImage() {","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"mayuanxin1234"},"content":"        return image;","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s CCA.","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s CCA.","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"mayuanxin1234"},"content":"    public Cca getCca() {","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"mayuanxin1234"},"content":"        return cca;","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s class.","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s class.","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"securespider"},"content":"    public Class getStudentClass() {","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"MrTwit99"},"content":"        return sc;","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s attendance.","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s attendance.","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"securespider"},"content":"    public Set\u003cAttendance\u003e getAttendance() {","lastModifiedDate":"2023-03-22"},{"lineNumber":201,"author":{"gitId":"securespider"},"content":"        return Collections.unmodifiableSet(attendanceDates);","lastModifiedDate":"2023-03-22"},{"lineNumber":202,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":203,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns information about the homework the Student was given.","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"MrTwit99"},"content":"     * @return Homework information.","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"mayuanxin1234"},"content":"    public Set\u003cHomework\u003e getHomework() {","lastModifiedDate":"2023-03-14"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"        return Collections.unmodifiableSet(homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":212,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns information about the test the Student took.","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"MrTwit99"},"content":"     * @return Test information related to the Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"    public Set\u003cTest\u003e getTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"mayuanxin1234"},"content":"        return Collections.unmodifiableSet(test);","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":220,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the comment given to this Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"MrTwit99"},"content":"     * @return Comments given to this Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"mayuanxin1234"},"content":"    public Comment getComment() {","lastModifiedDate":"2023-03-10"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"        return comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":228,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":229,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":230,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":231,"author":{"gitId":"securespider"},"content":"     * A method that returns the Student\u0027s class.","lastModifiedDate":"2023-04-05"},{"lineNumber":232,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":233,"author":{"gitId":"securespider"},"content":"     * @return Student\u0027s class.","lastModifiedDate":"2023-04-05"},{"lineNumber":234,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":235,"author":{"gitId":"securespider"},"content":"    public Class getSc() {","lastModifiedDate":"2023-03-16"},{"lineNumber":236,"author":{"gitId":"securespider"},"content":"        return sc;","lastModifiedDate":"2023-03-16"},{"lineNumber":237,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":238,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":239,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":240,"author":{"gitId":"securespider"},"content":"     * A method that returns the Student\u0027s phone number.","lastModifiedDate":"2023-04-05"},{"lineNumber":241,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":242,"author":{"gitId":"securespider"},"content":"     * @return Student\u0027s phone number.","lastModifiedDate":"2023-04-05"},{"lineNumber":243,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":244,"author":{"gitId":"Diatbbin"},"content":"    public Phone getStudentNumber() {","lastModifiedDate":"2023-03-21"},{"lineNumber":245,"author":{"gitId":"Diatbbin"},"content":"        return studentNumber;","lastModifiedDate":"2023-03-21"},{"lineNumber":246,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":247,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":248,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":249,"author":{"gitId":"securespider"},"content":"     * A method that returns the Student\u0027s tags.","lastModifiedDate":"2023-04-05"},{"lineNumber":250,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":251,"author":{"gitId":"securespider"},"content":"     * @return Student\u0027s tags.","lastModifiedDate":"2023-04-05"},{"lineNumber":252,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":253,"author":{"gitId":"Diatbbin"},"content":"    public Set\u003cTag\u003e getTagList() {","lastModifiedDate":"2023-03-21"},{"lineNumber":254,"author":{"gitId":"Diatbbin"},"content":"        return tags;","lastModifiedDate":"2023-03-21"},{"lineNumber":255,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":256,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":257,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":258,"author":{"gitId":"securespider"},"content":"     * A method that returns the Student\u0027s homework set.","lastModifiedDate":"2023-04-05"},{"lineNumber":259,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":260,"author":{"gitId":"securespider"},"content":"     * @return Student\u0027s homework set.","lastModifiedDate":"2023-04-05"},{"lineNumber":261,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":262,"author":{"gitId":"Diatbbin"},"content":"    public Set\u003cHomework\u003e getHomeworkSet() {","lastModifiedDate":"2023-03-21"},{"lineNumber":263,"author":{"gitId":"Diatbbin"},"content":"        return homework;","lastModifiedDate":"2023-03-21"},{"lineNumber":264,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":265,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":266,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":267,"author":{"gitId":"securespider"},"content":"     * A method that checks if the student is the same.","lastModifiedDate":"2023-04-05"},{"lineNumber":268,"author":{"gitId":"securespider"},"content":"     * Adapted from: isSamePerson in Person class.","lastModifiedDate":"2023-04-05"},{"lineNumber":269,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-04-05"},{"lineNumber":270,"author":{"gitId":"securespider"},"content":"     * @param otherStudent Student to be compared with.","lastModifiedDate":"2023-04-05"},{"lineNumber":271,"author":{"gitId":"securespider"},"content":"     * @return boolean value to indicate if the student is the same.","lastModifiedDate":"2023-04-05"},{"lineNumber":272,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":273,"author":{"gitId":"securespider"},"content":"    public boolean isSameStudent(Student otherStudent) {","lastModifiedDate":"2023-04-05"},{"lineNumber":274,"author":{"gitId":"securespider"},"content":"        if (otherStudent \u003d\u003d this) {","lastModifiedDate":"2023-04-05"},{"lineNumber":275,"author":{"gitId":"securespider"},"content":"            return true;","lastModifiedDate":"2023-04-05"},{"lineNumber":276,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":277,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":278,"author":{"gitId":"securespider"},"content":"        return otherStudent !\u003d null","lastModifiedDate":"2023-04-05"},{"lineNumber":279,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 otherStudent.getStudentClass().equals(getStudentClass())","lastModifiedDate":"2023-04-05"},{"lineNumber":280,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 otherStudent.getIndexNumber().equals(getIndexNumber());","lastModifiedDate":"2023-04-05"},{"lineNumber":281,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":282,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":283,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":284,"author":{"gitId":"securespider"},"content":"     * A method that returns a boolean value to indicate if other is equal to this Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":285,"author":{"gitId":"securespider"},"content":"     * Note that this method only checks for attributes that are unique and unchanging to Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":286,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":287,"author":{"gitId":"securespider"},"content":"     * @param other Other object to be compared with.","lastModifiedDate":"2023-04-05"},{"lineNumber":288,"author":{"gitId":"securespider"},"content":"     * @return boolean value to indicate if other is equal to this Student.","lastModifiedDate":"2023-04-05"},{"lineNumber":289,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":290,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":291,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":292,"author":{"gitId":"mayuanxin1234"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":293,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":294,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":295,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":296,"author":{"gitId":"mayuanxin1234"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":297,"author":{"gitId":"mayuanxin1234"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":298,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":299,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":300,"author":{"gitId":"mayuanxin1234"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":301,"author":{"gitId":"mayuanxin1234"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":302,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 otherStudent.getStudentClass().equals(getStudentClass())","lastModifiedDate":"2023-03-31"},{"lineNumber":303,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 otherStudent.getIndexNumber().equals(getIndexNumber())","lastModifiedDate":"2023-03-06"},{"lineNumber":304,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 otherStudent.getSex().equals(getSex());","lastModifiedDate":"2023-03-13"},{"lineNumber":305,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":306,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":307,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":308,"author":{"gitId":"mayuanxin1234"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":309,"author":{"gitId":"mayuanxin1234"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":310,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Student Class: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":311,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getStudentClass().getClassName())","lastModifiedDate":"2023-03-27"},{"lineNumber":312,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Index Number: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":313,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getIndexNumber())","lastModifiedDate":"2023-03-06"},{"lineNumber":314,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Sex: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":315,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getSex())","lastModifiedDate":"2023-03-06"},{"lineNumber":316,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Student Age: \")","lastModifiedDate":"2023-04-02"},{"lineNumber":317,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getAge())","lastModifiedDate":"2023-04-02"},{"lineNumber":318,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Image Path: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":319,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getImage())","lastModifiedDate":"2023-03-06"},{"lineNumber":320,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Student Email: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":321,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-06"},{"lineNumber":322,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Student Phone: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":323,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getPhone())","lastModifiedDate":"2023-03-06"},{"lineNumber":324,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; CCA: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":325,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getCca());","lastModifiedDate":"2023-03-08"},{"lineNumber":326,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":327,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":328,"author":{"gitId":"mayuanxin1234"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-06"},{"lineNumber":329,"author":{"gitId":"mayuanxin1234"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":330,"author":{"gitId":"mayuanxin1234"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-06"},{"lineNumber":331,"author":{"gitId":"mayuanxin1234"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-06"},{"lineNumber":332,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":333,"author":{"gitId":"mayuanxin1234"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":334,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":335,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":137,"securespider":55,"Diatbbin":42,"mayuanxin1234":101}},{"path":"src/main/java/seedu/address/model/person/student/StudentNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-21"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-21"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":" * Tests that a {@code Student}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"public class StudentNameContainsKeywordsPredicate implements Predicate\u003cStudent\u003e {","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"    public StudentNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean test(Student student) {","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        return keywords.stream()","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(student.getName().fullName, keyword));","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-21"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-21"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                || (other","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"                instanceof StudentNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 keywords.equals(((StudentNameContainsKeywordsPredicate) other)","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"                .keywords)); // state check","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-21"}],"authorContributionMap":{"Diatbbin":4,"mayuanxin1234":28}},{"path":"src/main/java/seedu/address/model/person/student/Test.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"public class Test extends Assignment {","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Test must be numbers\";","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"     * Returns a Test object that stores information about the test description.","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"     * @param assignmentName Test name.","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"     * @param deadline Due date for the test.","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     * @param weightage Weightage of the test.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     * @param score Score attained for the test.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public Test(String assignmentName, LocalDate deadline, int weightage, int score) {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        super(assignmentName, deadline, weightage, score);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     * Returns true if a given string is a valid test.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidTest(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student test here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"        return Integer.toString(super.score);","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Test// instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 super.assignmentName.equals(((Test) other).assignmentName)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    public String getName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        return super.assignmentName;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    public int getScore() {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        return super.score;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    public int getWeightage() {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        return super.weightage;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        return super.deadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    public void setScore(int score) {","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"        super.score \u003d score;","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"securespider":14,"mayuanxin1234":47}},{"path":"src/main/java/seedu/address/model/person/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-03-19"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":" * Represents a student list containing Student objects in the same class / CCA / tag.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-19"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        if (!target.isSamePerson(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicateStudentException();","lastModifiedDate":"2023-03-19"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"        internalList.setAll(students);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"                if (students.get(i).isSamePerson(students.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"                    return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"        return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":12,"mayuanxin1234":115}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.PcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.Parents;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"     * Returns a sample PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"     * @return a sample PCClass.","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public static ReadOnlyPcClass getSamplePcClass() {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        PcClass sampleClasses \u003d new PcClass();","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"        return sampleClasses;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"     * Returns a sample parents list.","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"     * @return a sample parents list.","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    public static ReadOnlyParents getSampleParents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"        Parents sampleParents \u003d new Parents();","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        return sampleParents;","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"securespider":14,"-":27,"mayuanxin1234":4}},{"path":"src/main/java/seedu/address/storage/JsonAdapted.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":" * A interface of JsonAdapted","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":" * @param \u003cT\u003e","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"public interface JsonAdapted\u003cT\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"    T toModelType() throws IllegalValueException;","lastModifiedDate":"2023-04-09"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":11,"mayuanxin1234":5}},{"path":"src/main/java/seedu/address/storage/JsonSerializablePowerConnect.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.PowerConnect;","lastModifiedDate":"2023-04-09"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.ReadOnlyPowerConnect;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.storage.person.JsonAdaptedStudent;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":" * An Immutable PowerConnect that is serializable to JSON format.","lastModifiedDate":"2023-04-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"@JsonRootName(value \u003d \"powerconnect\")","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"class JsonSerializablePowerConnect {","lastModifiedDate":"2023-04-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs a {@code JsonSerializablePowerConnect} with the given persons.","lastModifiedDate":"2023-04-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonSerializablePowerConnect(@JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        this.students.addAll(students);","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePowerConnect}.","lastModifiedDate":"2023-04-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonSerializablePowerConnect(ReadOnlyPowerConnect source) {","lastModifiedDate":"2023-04-09"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        students.addAll(source.getStudentList().stream().map(JsonAdaptedStudent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"     * Converts this address book into the model\u0027s {@code PowerConnect} object.","lastModifiedDate":"2023-04-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    public PowerConnect toModelType() throws IllegalValueException {","lastModifiedDate":"2023-04-09"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        PowerConnect powerConnect \u003d new PowerConnect();","lastModifiedDate":"2023-04-09"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        for (JsonAdaptedStudent jsonAdaptedStudent : students) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            Student student \u003d jsonAdaptedStudent.toModelType();","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"            if (powerConnect.hasStudent(student)) {","lastModifiedDate":"2023-04-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"            powerConnect.addStudent(student);","lastModifiedDate":"2023-04-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        return powerConnect;","lastModifiedDate":"2023-04-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":39,"mayuanxin1234":22}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.parents.ParentsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.storage.pcclass.PcClassStorage;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"public interface Storage extends ParentsStorage, PcClassStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    Path getPcFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    Optional\u003cReadOnlyPcClass\u003e readPC() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    void savePC(ReadOnlyPcClass readOnlyPcClass) throws IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"securespider":1,"-":24,"mayuanxin1234":6}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.parents.ParentsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.storage.pcclass.PcClassStorage;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":" * Manages storage of PCClass data in local storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    private PcClassStorage pcClassStorage;","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    private ParentsStorage parentsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"     * Creates a {@code StorageManager} with the given {@code PCClassStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    public StorageManager(PcClassStorage pcClassStorage, ParentsStorage parentsStorage,","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"                          UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"        this.pcClassStorage \u003d pcClassStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        this.parentsStorage \u003d parentsStorage;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d PCClass methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    public Path getPcFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        return pcClassStorage.getPcFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"        public Optional\u003cReadOnlyPcClass\u003e readPC() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        return readPC(pcClassStorage.getPcFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    public Optional\u003cReadOnlyPcClass\u003e readPC(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        return pcClassStorage.readPC(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"    public void savePC(ReadOnlyPcClass readOnlyPcClass) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"        savePC(readOnlyPcClass, pcClassStorage.getPcFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"    public void savePC(ReadOnlyPcClass readOnlyPcClass, Path filePath) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        pcClassStorage.savePC(readOnlyPcClass, filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Parents methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"    public Path getParentsFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"        return parentsStorage.getParentsFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"    public Optional\u003cReadOnlyParents\u003e readParents() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"        return readParents(parentsStorage.getParentsFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"    public Optional\u003cReadOnlyParents\u003e readParents(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"        return parentsStorage.readParents(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"    public void saveParents(ReadOnlyParents readOnlyParents) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"        saveParents(readOnlyParents, parentsStorage.getParentsFilePath());","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"    public void saveParents(ReadOnlyParents readOnlyParents, Path filePath) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"        parentsStorage.saveParents(readOnlyParents, filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"securespider":36,"-":61,"mayuanxin1234":14}},{"path":"src/main/java/seedu/address/storage/academics/JsonAdaptedAssignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.academics;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Assignment;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.JsonAdapted;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"abstract class JsonAdaptedAssignment implements JsonAdapted\u003cAssignment\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    private final String assignmentName;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    private final String deadline;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    private final int weightage;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    private final int score;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given {@code assignmentName}.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedAssignment(@JsonProperty(\"name\") String assignmentName, @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"                                 @JsonProperty(\"weightage\") int weightage, @JsonProperty(\"score\") int score) {","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code Assignment} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedAssignment(Assignment source) {","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"        this(source.getAssignmentName(), JsonAdaptedAssignment.parseDeadline(source.getDeadline()),","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"            source.getWeightage(), source.getScore());","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code LocalDate} into a String for Jackson use.","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    private static String parseDeadline(LocalDate deadline) {","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"            return \"no deadline\";","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"     * Returns the assignment name of the assignment.","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"     * @return assignment name of the assignment.","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"    public String getAssignmentName() {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        return assignmentName;","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"     * Returns the deadline of the assignment.","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"     * @return deadline of the assignment.","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"    public String getDeadline() {","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"        return deadline;","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"     * Returns the weightage of the assignment.","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"     * @return weightage of the assignment.","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"    public int getWeightage() {","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"        return weightage;","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"     * Returns the score of the assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"     * @return score of the assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"    public int getScore() {","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"        return score;","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Assignment} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"    public abstract Assignment toModelType() throws IllegalValueException;","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"securespider":88,"mayuanxin1234":7}},{"path":"src/main/java/seedu/address/storage/academics/JsonAdaptedAttendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.academics;","lastModifiedDate":"2023-03-22"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-22"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-22"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.JsonAdapted;","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":" * Jackson-friendly version of {@link Attendance}.","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-22"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"public class JsonAdaptedAttendance implements JsonAdapted\u003cAttendance\u003e {","lastModifiedDate":"2023-03-22"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    private final String attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code JsonAdaptedAttendance} with the given {@code attendance}.","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedAttendance(String attendance) {","lastModifiedDate":"2023-03-22"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code Attendance} into this class for Jackson use.","lastModifiedDate":"2023-03-22"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"     * @param source future changes to this will not affect the created JsonAdaptedAttendance","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedAttendance(Attendance source) {","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        this.attendance \u003d source.toString();","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Attendance} object.","lastModifiedDate":"2023-03-22"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     * @return the model\u0027s Attendance object","lastModifiedDate":"2023-03-22"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Attendance.","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"    public Attendance toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"        return new Attendance(attendance);","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"     * Returns the attendance of the student.","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"     * @return the attendance of the student","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"    @JsonValue","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    public String getAttendance() {","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        return attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-22"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        return attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-22"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-22"}],"authorContributionMap":{"securespider":56}},{"path":"src/main/java/seedu/address/storage/academics/JsonAdaptedHomework.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.academics;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Assignment;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"public class JsonAdaptedHomework extends JsonAdaptedAssignment {","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    private final boolean isDone;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given {@code assignmentName}.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @JsonCreator","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonAdaptedHomework(@JsonProperty(\"assignmentName\") String assignmentName,","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"                               @JsonProperty(\"deadline\")String deadline,","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                               @JsonProperty(\"weightage\") int weightage,","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"                               @JsonProperty(\"score\")int score,","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"                               @JsonProperty(\"isDone\")boolean isDone) {","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        super(assignmentName, deadline, weightage, score);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given {@code assignmentName}.","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     * @param assignmentName","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonAdaptedHomework(String assignmentName) {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        super(assignmentName, \"No Deadline\", -100, -100);","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code Assignment} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedHomework(Homework source) {","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"        super(source);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        this.isDone \u003d source.getIsDone();","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Assignment} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"    public Homework toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"        if (!Assignment.isValidAssignmentName(super.getAssignmentName())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"        if (!super.getDeadline().equals(\"no deadline\")) {","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"            LocalDate deadline \u003d LocalDate.parse(super.getDeadline(), DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"            return new Homework(super.getAssignmentName(), deadline, super.getWeightage(),","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"                    super.getScore(), this.isDone);","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            return new Homework(super.getAssignmentName(), null, super.getWeightage(),","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"                    super.getScore(), this.isDone);","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":42,"mayuanxin1234":30}},{"path":"src/main/java/seedu/address/storage/academics/JsonAdaptedTest.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.academics;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Assignment;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":" * Jackson-friendly version of {@link Assignment}.","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"public class JsonAdaptedTest extends JsonAdaptedAssignment {","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonAdaptedTest(String assignmentName) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        super(assignmentName, \"No Deadline\", -100, -100);","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code JsonAdaptedAssignment} with the given {@code assignmentName}.","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonAdaptedTest(@JsonProperty(\"assignmentName\") String assignmentName,","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                           @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"                           @JsonProperty(\"weightage\") int weightage,","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"                           @JsonProperty(\"score\") int score) {","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        super(assignmentName, deadline, weightage, score);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code Assignment} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedTest(Assignment source) {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        super(source);","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Assignment} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Assignment.","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"    public Test toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"        if (!Assignment.isValidAssignmentName(super.getAssignmentName())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Assignment.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        if (!super.getDeadline().equals(\"no deadline\")) {","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"            LocalDate deadline \u003d LocalDate.parse(super.getDeadline(), DateTimeFormatter.ofPattern(\"dd-MM-yyyy\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"            return new Test(super.getAssignmentName(), deadline, super.getWeightage(), super.getScore());","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"            return new Test(super.getAssignmentName(), null, super.getWeightage(), super.getScore());","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":39,"mayuanxin1234":18}},{"path":"src/main/java/seedu/address/storage/parents/JsonParentsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.parents;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":" * A class to access Parents data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"public class JsonParentsStorage implements ParentsStorage {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonParentsStorage.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    public JsonParentsStorage(Path filePath) {","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    public Path getParentsFilePath() {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        return filePath;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    public Optional\u003cReadOnlyParents\u003e readParents() throws DataConversionException {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"        return readParents(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"     * Similar to {@link #readParents()}.","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    public Optional\u003cReadOnlyParents\u003e readParents(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"        Optional\u003cJsonSerializableParents\u003e jsonParents \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"                filePath, JsonSerializableParents.class);","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        if (!jsonParents.isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"            return Optional.of(jsonParents.get().toModelType());","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"    public void saveParents(ReadOnlyParents readOnlyParents) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"        saveParents(readOnlyParents, filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"     * Similar to {@link #saveParents(ReadOnlyParents)}.","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"    public void saveParents(ReadOnlyParents readOnlyParents, Path filePath) throws IOException {","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"        requireNonNull(readOnlyParents);","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableParents(readOnlyParents), filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":71,"mayuanxin1234":7}},{"path":"src/main/java/seedu/address/storage/parents/JsonSerializableParents.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.parents;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.Parents;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.person.JsonAdaptedParent;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":" * An Immutable Parents that is serializable to JSON format.","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"@JsonRootName(value \u003d \"parents\")","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"public class JsonSerializableParents {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_DUPLICATE_PARENT \u003d \"Parents list contains duplicate student(s).\";","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    private final List\u003cJsonAdaptedParent\u003e parents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code JsonSerializableParents} with the given parents.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    public JsonSerializableParents(@JsonProperty(\"parents\") List\u003cJsonAdaptedParent\u003e parents) {","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        this.parents.addAll(parents);","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code ReadOnlyParents} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableParents}.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    public JsonSerializableParents(ReadOnlyParents source) {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        parents.addAll(source.getParentList().stream().map(JsonAdaptedParent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"     * Converts this tea pet into the model\u0027s {@code Parents} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"    public Parents toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"        Parents parents \u003d new Parents();","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        for (JsonAdaptedParent jsonAdaptedParent : this.parents) {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"            Parent parent \u003d jsonAdaptedParent.toModelType();","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"            if (parents.hasParent(parent)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PARENT);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"            parents.addParent(parent);","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"        return parents;","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":53,"mayuanxin1234":5}},{"path":"src/main/java/seedu/address/storage/parents/ParentsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.parents;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":" * A interface of ParentsStorage","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"public interface ParentsStorage {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    Path getParentsFilePath();","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"     * Returns Parent data as a {@link ReadOnlyParents}.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    Optional\u003cReadOnlyParents\u003e readParents() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"     * @see #getParentsFilePath()","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    Optional\u003cReadOnlyParents\u003e readParents(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"     * Saves the given {@link ReadOnlyParents} to the storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * @param parents cannot be null.","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"    void saveParents(ReadOnlyParents parents) throws IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"     * @see #saveParents(ReadOnlyParents)","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    void saveParents(ReadOnlyParents parents, Path filePath) throws IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":40,"mayuanxin1234":4}},{"path":"src/main/java/seedu/address/storage/pcclass/JsonAdaptedClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.pcclass;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.UniqueParentList;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.UniqueStudentList;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.JsonAdapted;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.person.JsonAdaptedParent;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.person.JsonAdaptedStudent;","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":" * A JsonAdapted Class","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"public class JsonAdaptedClass implements JsonAdapted\u003cClass\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    private final String className;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    private final List\u003cJsonAdaptedStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    private List\u003cJsonAdaptedParent\u003e parents \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code JsonAdaptedClass} with the given {@code className} and {@code students}.","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"     * @param className Name of the class","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"     * @param students List of students in the class","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonAdaptedClass(@JsonProperty(\"className\") String className,","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"                            @JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e students) {","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"        this.students.addAll(students);","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"     * A Constructor for JsonAdaptedClass","lastModifiedDate":"2023-03-18"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"     * @param pcClass","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedClass(Class pcClass) {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        this.className \u003d pcClass.getClassName();","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        this.students.addAll(pcClass.getStudents()","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"                        .asUnmodifiableObservableList()","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"                        .stream()","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"                        .map(JsonAdaptedStudent::new)","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"                        .collect(Collectors.toList()));","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code JsonAdaptedClass} into a Class.","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"     * @return Class","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted class.","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    public Class toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"        if (className \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(\"Class name cannot be null\");","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"        if (!Class.isValidClass(className)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Class.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"        final List\u003cStudent\u003e students \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"        for (JsonAdaptedStudent student : this.students) {","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"            students.add(student.toModelType());","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        final UniqueStudentList uniqueStudentList \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"        uniqueStudentList.setStudents(students);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"        // TODO: parents are empty for now","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"        return Class.of(className, uniqueStudentList, new UniqueParentList());","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":62,"mayuanxin1234":13}},{"path":"src/main/java/seedu/address/storage/pcclass/JsonPcClassStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.pcclass;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":" * A class handling PCClass Storage","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"public class JsonPcClassStorage implements PcClassStorage {","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonPcClassStorage.class);","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonPcClassStorage(Path filePath) {","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    public Path getPcFilePath() {","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    public Optional\u003cReadOnlyPcClass\u003e readPC() throws DataConversionException {","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"        return readPC(filePath);","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"     * Similar to {@link #readPC()}.","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    public Optional\u003cReadOnlyPcClass\u003e readPC(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        Optional\u003cJsonSerializablePcClass\u003e jsonPC \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"                filePath, JsonSerializablePcClass.class);","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"        if (!jsonPC.isPresent()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"            return Optional.of(jsonPC.get().toModelType());","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    public void savePC(ReadOnlyPcClass powerConnect) throws IOException {","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        savePC(powerConnect, filePath);","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"     * Similar to {@link #savePC(ReadOnlyPcClass)}.","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    public void savePC(ReadOnlyPcClass readOnlyPcClass, Path filePath) throws IOException {","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(readOnlyPcClass);","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"        JsonUtil.saveJsonFile(new JsonSerializablePcClass(readOnlyPcClass), filePath);","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"securespider":5,"-":57,"mayuanxin1234":16}},{"path":"src/main/java/seedu/address/storage/pcclass/JsonSerializablePcClass.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.pcclass;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.PcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":" * An Immutable PCClass that is serializable to JSON format.","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"public class JsonSerializablePcClass {","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    private final List\u003cJsonAdaptedClass\u003e jsonAdaptedClasses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code JsonSerializablePCClass} with the given students.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonSerializablePcClass(@JsonProperty(\"jsonAdaptedClasses\") List\u003cJsonAdaptedClass\u003e jsonAdaptedClass) {","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        this.jsonAdaptedClasses.addAll(jsonAdaptedClass);","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code ReadOnlyPCClass} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializablePCClass}.","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    public JsonSerializablePcClass(ReadOnlyPcClass source) {","lastModifiedDate":"2023-03-18"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        this.jsonAdaptedClasses.addAll(source.getClassList().stream().map(JsonAdaptedClass::new)","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"     * Converts this serializable class into the model\u0027s {@code PCClass} object.","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    public PcClass toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        PcClass pcClass \u003d new PcClass();","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"        for (JsonAdaptedClass jsonAdaptedClass : this.jsonAdaptedClasses) {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"            Class classToAdd \u003d jsonAdaptedClass.toModelType();","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"            if (pcClass.hasClass(classToAdd)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"                continue;","lastModifiedDate":"2023-03-18"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"            pcClass.addClass(classToAdd);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"        return pcClass;","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":44,"mayuanxin1234":15}},{"path":"src/main/java/seedu/address/storage/pcclass/PcClassStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.pcclass;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.ReadOnlyPcClass;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":" * A Interface for PCClassStorage","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"public interface PcClassStorage {","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    Path getPcFilePath();","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns PCClass data as a {@link ReadOnlyPcClass}.","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    Optional\u003cReadOnlyPcClass\u003e readPC() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     * @see #getPcFilePath()","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    Optional\u003cReadOnlyPcClass\u003e readPC(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     * Saves the given {@link ReadOnlyPcClass} to the storage.","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"     * @param readOnlyPcClass cannot be null.","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    void savePC(ReadOnlyPcClass readOnlyPcClass) throws IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    void savePC(ReadOnlyPcClass readOnlyPcClass, Path filePath) throws IOException;","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":24,"mayuanxin1234":16}},{"path":"src/main/java/seedu/address/storage/person/JsonAdaptedParent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":" * Jackson-friendly version of {@link Parent}.","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"public class JsonAdaptedParent extends JsonAdaptedPerson {","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Parent\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    private final String age;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    private final String image;","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"    private final List\u003cJsonAdaptedStudent\u003e children \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code JsonAdaptedParent} with the given person details.","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedParent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"                             @JsonProperty(\"comment\") String comment, @JsonProperty(\"age\") String age,","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"                             @JsonProperty(\"image\") String image,","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"                             @JsonProperty(\"students\") List\u003cJsonAdaptedStudent\u003e children) {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        super(name, phone, email, address, tagged, comment);","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"        this.image \u003d image;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"        if (children !\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"            this.children.addAll(children);","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code Parent} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedParent(Parent parent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"        super(parent);","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        this.age \u003d parent.getAge().value;","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        this.image \u003d parent.getImage().value;","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        for (Student student : parent.getStudents()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"            children.add(new JsonAdaptedStudent(student));","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"    public Parent toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"        Person person \u003d super.toModelType();","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        if (age \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Age\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(IndexNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"        final Age modelAge \u003d new Age(age);","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"        if (image \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"image\"));","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"        if (!Image.isValidImage(image)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Image.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"        final Image modelImage \u003d new Image(image);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"        final List\u003cStudent\u003e modelChildren \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"        for (JsonAdaptedStudent child : children) {","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"            modelChildren.add(child.toModelType());","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"        Parent parent \u003d new Parent(person.getName(), modelAge, modelImage, person.getEmail(), person.getPhone(),","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"                person.getAddress(), person.getTags());","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"        parent.addStudents(modelChildren);","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"        return parent;","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"MrTwit99":1,"securespider":86,"Diatbbin":2,"mayuanxin1234":5}},{"path":"src/main/java/seedu/address/storage/person/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.storage.person;","lastModifiedDate":"2023-03-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.storage.JsonAdapted;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"public class JsonAdaptedPerson implements JsonAdapted\u003cPerson\u003e {","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    protected final String name;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    protected final String phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    protected final String email;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    protected final String address;","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    protected final String comment;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    protected final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"                             @JsonProperty(\"comment\") String comment) {","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"        comment \u003d source.getComment().value;","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"        if (comment \u003d\u003d null) {","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Comment.class.getSimpleName()));","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"        final Comment modelComment \u003d new Comment(comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelComment);","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"securespider":17,"mayuanxin1234":3,"-":100}},{"path":"src/main/java/seedu/address/storage/person/JsonAdaptedStudent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-01"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-01"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2023-04-01"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-04-01"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Cca;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.academics.JsonAdaptedAttendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.academics.JsonAdaptedHomework;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.academics.JsonAdaptedTest;","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-02"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":" * Jackson-friendly version of {@link Student}.","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"public class JsonAdaptedStudent extends JsonAdaptedPerson {","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Student\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"    private final String indexNumber;","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    private final String sex;","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"    private final String age;","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    private final String image;","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    private final String cca;","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    private final String sc;","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"    private final Set\u003cJsonAdaptedAttendance\u003e attendance \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"    private final Set\u003cJsonAdaptedHomework\u003e homework \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"    private final Set\u003cJsonAdaptedTest\u003e test \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    private final String parentNumber;","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"    private final String parentName;","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"    private final String rls;","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code JsonAdaptedStudent} with the given person details.","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedStudent(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"                              @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"                              @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"                              @JsonProperty(\"comment\") String comment,","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"                              @JsonProperty(\"sex\") String sex, @JsonProperty(\"age\") String age,","lastModifiedDate":"2023-03-16"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"                              @JsonProperty(\"image\") String image, @JsonProperty(\"cca\") String cca,","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"                              @JsonProperty(\"attendance\") Set\u003cJsonAdaptedAttendance\u003e attendance,","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"                              @JsonProperty(\"homework\") Set\u003cJsonAdaptedHomework\u003e homework,","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"                              @JsonProperty(\"test\") Set\u003cJsonAdaptedTest\u003e test,","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"                              @JsonProperty(\"parentNumber\") String parentNumber,","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"                              @JsonProperty(\"parentName\") String parentName,","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"                              @JsonProperty(\"rls\") String rls,","lastModifiedDate":"2023-03-18"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"                              @JsonProperty(\"class\") String sc,","lastModifiedDate":"2023-03-18"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"                              @JsonProperty(\"id\") String indexNumber) {","lastModifiedDate":"2023-03-18"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"        super(name, phone, email, address, tagged, comment);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"        this.image \u003d image;","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"        this.cca \u003d cca;","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"        this.parentNumber \u003d parentNumber;","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"        this.parentName \u003d parentName;","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"        this.rls \u003d rls;","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"        if (attendance !\u003d null) {","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"            this.attendance.addAll(attendance);","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"        if (homework !\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"            this.homework.addAll(homework);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"        if (test !\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"            this.test.addAll(test);","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"    public JsonAdaptedStudent(Student student) {","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"        super(student);","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"        this.indexNumber \u003d student.getIndexNumber().value;","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"        this.sex \u003d student.getSex().value;","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"        this.age \u003d student.getAge().value;","lastModifiedDate":"2023-04-02"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"        this.image \u003d student.getImage().value;","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"        this.cca \u003d student.getCca().value;","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"        this.sc \u003d student.getSc().getClassName();","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"        this.parentNumber \u003d student.getParentNumber().value;","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"        this.parentName \u003d student.getParentName().fullName;","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"        this.rls \u003d student.getRls().rls;","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"        attendance.addAll(student.getAttendance().stream()","lastModifiedDate":"2023-03-22"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"                .filter(attendance1 -\u003e !attendance1.isAbsent())","lastModifiedDate":"2023-03-22"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"                .map(JsonAdaptedAttendance::new)","lastModifiedDate":"2023-03-22"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-22"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        homework.addAll(student.getHomework().stream()","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"                .map(JsonAdaptedHomework::new)","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"        test.addAll(student.getTest().stream()","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"                .map(JsonAdaptedTest::new)","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"securespider"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"securespider"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"securespider"},"content":"    public Student toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"        Person person \u003d super.toModelType();","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"securespider"},"content":"        if (indexNumber \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Index Number\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"securespider"},"content":"        if (!IndexNumber.isValidIndexNumber(indexNumber)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(IndexNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"securespider"},"content":"        final IndexNumber modelIndexNumber \u003d new IndexNumber(indexNumber);","lastModifiedDate":"2023-03-16"},{"lineNumber":133,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"        if (sex \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":135,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Sex\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":136,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":137,"author":{"gitId":"securespider"},"content":"        if (!Sex.isValidSex(sex)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":141,"author":{"gitId":"securespider"},"content":"        final Sex modelSex \u003d new Sex(sex);","lastModifiedDate":"2023-03-16"},{"lineNumber":142,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"securespider"},"content":"        if (age \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Index Number\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Age.isValidAge(age)) {","lastModifiedDate":"2023-04-02"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"            throw new IllegalValueException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-04-02"},{"lineNumber":148,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"        final Age modelAge \u003d new Age(age);","lastModifiedDate":"2023-04-02"},{"lineNumber":150,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"securespider"},"content":"        if (image \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":152,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Image\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":153,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":154,"author":{"gitId":"securespider"},"content":"        if (!Image.isValidImage(image)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":155,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Image.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":156,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"securespider"},"content":"        final Image modelImage \u003d new Image(image);","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"securespider"},"content":"        if (cca \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"CCA\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":162,"author":{"gitId":"securespider"},"content":"        if (!Cca.isValidCca(cca)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":163,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Cca.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":164,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":165,"author":{"gitId":"securespider"},"content":"        final Cca modelCca \u003d new Cca(cca);","lastModifiedDate":"2023-03-16"},{"lineNumber":166,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":167,"author":{"gitId":"securespider"},"content":"        if (sc \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":168,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"SC\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":169,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":170,"author":{"gitId":"securespider"},"content":"        if (!Class.isValidClass(sc)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":171,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Class.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":172,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":173,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":174,"author":{"gitId":"securespider"},"content":"        if (parentNumber \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":175,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Parent Number\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":177,"author":{"gitId":"securespider"},"content":"        if (!Phone.isValidPhone(parentNumber)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":178,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":179,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":180,"author":{"gitId":"securespider"},"content":"        final Phone modelParentNumber \u003d new Phone(parentNumber);","lastModifiedDate":"2023-03-16"},{"lineNumber":181,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":182,"author":{"gitId":"securespider"},"content":"        if (parentName \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":183,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"Parent Name\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":184,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":185,"author":{"gitId":"securespider"},"content":"        if (!Name.isValidName(parentName)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":186,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":187,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":188,"author":{"gitId":"securespider"},"content":"        final Name modelParentName \u003d new Name(parentName);","lastModifiedDate":"2023-03-16"},{"lineNumber":189,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":190,"author":{"gitId":"securespider"},"content":"        if (rls \u003d\u003d null) {","lastModifiedDate":"2023-03-16"},{"lineNumber":191,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, \"RLS\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":192,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":193,"author":{"gitId":"securespider"},"content":"        if (!Relationship.isValidRelationship(rls)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":194,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(Relationship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":196,"author":{"gitId":"securespider"},"content":"        final Relationship modelRls \u003d new Relationship(rls);","lastModifiedDate":"2023-03-16"},{"lineNumber":197,"author":{"gitId":"securespider"},"content":"        final List\u003cTest\u003e studentTest \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":198,"author":{"gitId":"securespider"},"content":"        for (JsonAdaptedTest jsonAdaptedTest : test) {","lastModifiedDate":"2023-03-16"},{"lineNumber":199,"author":{"gitId":"securespider"},"content":"            studentTest.add(jsonAdaptedTest.toModelType());","lastModifiedDate":"2023-03-16"},{"lineNumber":200,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":201,"author":{"gitId":"securespider"},"content":"        final Set\u003cTest\u003e modelTest \u003d new HashSet\u003c\u003e(studentTest);","lastModifiedDate":"2023-03-16"},{"lineNumber":202,"author":{"gitId":"securespider"},"content":"        final List\u003cHomework\u003e studentHomework \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-16"},{"lineNumber":203,"author":{"gitId":"securespider"},"content":"        for (JsonAdaptedHomework jsonAdaptedHomework : homework) {","lastModifiedDate":"2023-03-16"},{"lineNumber":204,"author":{"gitId":"securespider"},"content":"            studentHomework.add(jsonAdaptedHomework.toModelType());","lastModifiedDate":"2023-03-16"},{"lineNumber":205,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"securespider"},"content":"        final Set\u003cHomework\u003e modelHomework \u003d new HashSet\u003c\u003e(studentHomework);","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":208,"author":{"gitId":"securespider"},"content":"        final List\u003cAttendance\u003e studentAttendance \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":209,"author":{"gitId":"securespider"},"content":"        for (JsonAdaptedAttendance jsonAdaptedAttendance : attendance) {","lastModifiedDate":"2023-03-22"},{"lineNumber":210,"author":{"gitId":"securespider"},"content":"            if (!(jsonAdaptedAttendance.getAttendance().equals(\"F\"))) {","lastModifiedDate":"2023-03-22"},{"lineNumber":211,"author":{"gitId":"securespider"},"content":"                studentAttendance.add(jsonAdaptedAttendance.toModelType());","lastModifiedDate":"2023-03-22"},{"lineNumber":212,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":213,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":214,"author":{"gitId":"securespider"},"content":"        final Set\u003cAttendance\u003e modelAttendance \u003d new HashSet\u003c\u003e(studentAttendance);","lastModifiedDate":"2023-03-22"},{"lineNumber":215,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":216,"author":{"gitId":"mayuanxin1234"},"content":"        return new Student(person.getName(), Class.of(sc), modelIndexNumber, modelSex, modelParentName,","lastModifiedDate":"2023-03-17"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"                modelParentNumber, modelRls, modelAge, modelImage, person.getEmail(), person.getPhone(), modelCca,","lastModifiedDate":"2023-04-02"},{"lineNumber":218,"author":{"gitId":"securespider"},"content":"                person.getAddress(), modelAttendance, modelHomework, modelTest, person.getTags(), person.getComment());","lastModifiedDate":"2023-03-16"},{"lineNumber":219,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":220,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":221,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"securespider":188,"Diatbbin":6,"mayuanxin1234":27}},{"path":"src/main/java/seedu/address/storage/person/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.storage.person;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.JsonAdapted;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"public class JsonAdaptedTag implements JsonAdapted\u003cTag\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"securespider":3,"-":46}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String USERGUIDE_URL \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"            \"https://ay2223s2-cs2103t-t09-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        //webEngine.load(USERGUIDE_URL);","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":101,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicateParentException;","lastModifiedDate":"2023-03-19"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicatePhoneException;","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicateStudentException;","lastModifiedDate":"2023-03-19"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-19"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.UniqueStudentList;","lastModifiedDate":"2023-03-19"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.ui.parent.ParentListPanel;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.ui.student.StudentListPanel;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"    private ParentListPanel parentListPanel;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"    private StackPane parentListPanelPlaceholder;","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"        //personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"securespider"},"content":"        //personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"        UniqueStudentList list \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c logic.getPcClass().getClassList().size(); i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"            UniqueStudentList curr \u003d logic.getPcClass().getClassList().get(i).getStudents();","lastModifiedDate":"2023-03-19"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"            Iterator\u003cStudent\u003e it \u003d curr.iterator();","lastModifiedDate":"2023-03-19"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"            while (it.hasNext()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"                list.add(it.next());","lastModifiedDate":"2023-03-19"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-19"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-18"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"        try {","lastModifiedDate":"2023-03-19"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"            studentListPanel \u003d new StudentListPanel(list.asUnmodifiableObservableList());","lastModifiedDate":"2023-03-19"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"            studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2023-03-19"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"        } catch (IndexOutOfBoundsException id) {","lastModifiedDate":"2023-03-19"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"            studentListPanel \u003d new StudentListPanel(null);","lastModifiedDate":"2023-03-19"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"            studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2023-03-19"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-19"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"        parentListPanel \u003d new ParentListPanel(logic.getFilteredParentList());","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"        parentListPanelPlaceholder.getChildren().add(parentListPanel.getRoot());","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getPcClassFilePath());","lastModifiedDate":"2023-03-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"mayuanxin1234"},"content":"            UniqueStudentList list \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-19"},{"lineNumber":221,"author":{"gitId":"mayuanxin1234"},"content":"            if (commandResult.isFind()) {","lastModifiedDate":"2023-03-21"},{"lineNumber":222,"author":{"gitId":"mayuanxin1234"},"content":"                studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2023-03-21"},{"lineNumber":223,"author":{"gitId":"mayuanxin1234"},"content":"                studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2023-03-21"},{"lineNumber":224,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-03-21"},{"lineNumber":225,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":226,"author":{"gitId":"mayuanxin1234"},"content":"                for (int i \u003d 0; i \u003c logic.getPcClass().getClassList().size(); i++) {","lastModifiedDate":"2023-03-19"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"                    UniqueStudentList curr \u003d logic.getPcClass().getClassList().get(i).getStudents();","lastModifiedDate":"2023-03-19"},{"lineNumber":228,"author":{"gitId":"mayuanxin1234"},"content":"                    Iterator\u003cStudent\u003e it \u003d curr.iterator();","lastModifiedDate":"2023-03-19"},{"lineNumber":229,"author":{"gitId":"mayuanxin1234"},"content":"                    while (it.hasNext()) {","lastModifiedDate":"2023-03-19"},{"lineNumber":230,"author":{"gitId":"mayuanxin1234"},"content":"                        list.add(it.next());","lastModifiedDate":"2023-03-19"},{"lineNumber":231,"author":{"gitId":"mayuanxin1234"},"content":"                    }","lastModifiedDate":"2023-03-19"},{"lineNumber":232,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-19"},{"lineNumber":233,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":234,"author":{"gitId":"mayuanxin1234"},"content":"                studentListPanel \u003d new StudentListPanel(list.asUnmodifiableObservableList());","lastModifiedDate":"2023-03-19"},{"lineNumber":235,"author":{"gitId":"mayuanxin1234"},"content":"                studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2023-03-19"},{"lineNumber":236,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-21"},{"lineNumber":237,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":240,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":241,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":242,"author":{"gitId":"mayuanxin1234"},"content":"        } catch (DuplicatePersonException d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"mayuanxin1234"},"content":"            logger.info(\"Duplicate person: \" + commandText);","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"mayuanxin1234"},"content":"            resultDisplay.setFeedbackToUser(d.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"mayuanxin1234"},"content":"            throw d;","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"MrTwit99"},"content":"        } catch (DuplicatePhoneException dp) {","lastModifiedDate":"2023-03-16"},{"lineNumber":247,"author":{"gitId":"MrTwit99"},"content":"            logger.info(\"Duplicate phone number: \" + commandText);","lastModifiedDate":"2023-03-16"},{"lineNumber":248,"author":{"gitId":"MrTwit99"},"content":"            resultDisplay.setFeedbackToUser(dp.getMessage());","lastModifiedDate":"2023-03-16"},{"lineNumber":249,"author":{"gitId":"MrTwit99"},"content":"            throw dp;","lastModifiedDate":"2023-03-16"},{"lineNumber":250,"author":{"gitId":"MrTwit99"},"content":"        } catch (DuplicateStudentException dse) {","lastModifiedDate":"2023-03-19"},{"lineNumber":251,"author":{"gitId":"MrTwit99"},"content":"            logger.info(\"Duplicate student: \" + commandText);","lastModifiedDate":"2023-03-19"},{"lineNumber":252,"author":{"gitId":"MrTwit99"},"content":"            resultDisplay.setFeedbackToUser(dse.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":253,"author":{"gitId":"MrTwit99"},"content":"            throw dse;","lastModifiedDate":"2023-03-19"},{"lineNumber":254,"author":{"gitId":"MrTwit99"},"content":"        } catch (DuplicateParentException dpe) {","lastModifiedDate":"2023-03-19"},{"lineNumber":255,"author":{"gitId":"MrTwit99"},"content":"            logger.info(\"Duplicate parent: \" + commandText);","lastModifiedDate":"2023-03-19"},{"lineNumber":256,"author":{"gitId":"MrTwit99"},"content":"            resultDisplay.setFeedbackToUser(dpe.getMessage());","lastModifiedDate":"2023-03-19"},{"lineNumber":257,"author":{"gitId":"MrTwit99"},"content":"            throw dpe;","lastModifiedDate":"2023-03-19"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":260,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"MrTwit99":21,"securespider":1,"-":190,"mayuanxin1234":48}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    @FXML","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    private Label comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    private final Person person;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    private Label index;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        comment.setText(person.getComment().value);","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"securespider":5,"-":76,"mayuanxin1234":2}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/PowerConnect_Label.png\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":87,"mayuanxin1234":1}},{"path":"src/main/java/seedu/address/ui/parent/ParentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.ui.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import java.io.File;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":" * A parent card feature in the UI representing parent information.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"public class ParentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"    private static final String FXML \u003d \"ParentCard.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"    public final Parent parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    private Label name;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"    private Label phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"    private Label address;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"    private Label email;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    private Label age;","lastModifiedDate":"2023-04-02"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    // @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    // private Label image;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"    private Circle circle;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"    private Label id;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    private GridPane students;","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"    public ParentCard(Parent parent, int displayedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        super(FXML);","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"        name.setText(parent.getName().fullName);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        phone.setText(parent.getPhone().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"        email.setText(parent.getEmail().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"        address.setText(parent.getAddress().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        age.setText(parent.getAge().value);","lastModifiedDate":"2023-04-02"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        //image.setText(student.getImage().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        parent.getTags().stream()","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"        AtomicInteger rowCounter \u003d new AtomicInteger();","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"        parent.getStudents().stream()","lastModifiedDate":"2023-03-19"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"                .sorted(Comparator.comparing(Student -\u003e Student.getName().fullName))","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"                .forEach(Student -\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"                    students.add(new Label(\" Student Name: \"), 0, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"                    students.add(new Label(Student.getName().fullName), 1, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"                    students.add(new Label(\"\\n\"), 2, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"                    students.add(new Label(\" Student Class: \"), 3, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"                    students.add(new Label(Student.getStudentClass().getClassName()), 4, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"                    students.add(new Label(\"\\n\"), 5, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"                    students.add(new Label(\" Index Number: \"), 6, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"                    students.add(new Label(Student.getIndexNumber().value), 7, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"                    rowCounter.getAndIncrement();","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"                });","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"        String strImage \u003d parent.getImage().value;","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"        if (!strImage.equals(\"Insert parent image here!\")) {","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"            File file \u003d new File(strImage);","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"                Image image \u003d new Image(file.toURI().toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"                circle.setFill(new ImagePattern(image));","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"                return;","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        String path \u003d \"images/parent/\" + parent.getName() + \".png\";","lastModifiedDate":"2023-03-23"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"            Image defaultImage \u003d new Image(\"images/defaultParent.png\");","lastModifiedDate":"2023-03-23"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"            circle.setFill(new ImagePattern(defaultImage));","lastModifiedDate":"2023-03-23"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"            Image newImage \u003d new Image(file.toURI().toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"            circle.setFill(new ImagePattern(newImage));","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"        return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":80,"securespider":9,"mayuanxin1234":18}},{"path":"src/main/java/seedu/address/ui/parent/ParentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.ui.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":" * A Parent List Panel for UI","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"public class ParentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    private static final String FXML \u003d \"ParentListPanel.fxml\";","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    private ListView\u003cParent\u003e parentListView;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    public ParentListPanel(ObservableList\u003cParent\u003e parentList) {","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"        super(FXML);","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        parentListView.setItems(parentList);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        parentListView.setCellFactory(listView -\u003e new ParentListPanel.ParentListViewCell());","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"    class ParentListViewCell extends ListCell\u003cParent\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        protected void updateItem(Parent parent, boolean empty) {","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"            super.updateItem(parent, empty);","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            if (empty || parent \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"                setText(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"            } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"                setGraphic(new ParentCard(parent, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":44}},{"path":"src/main/java/seedu/address/ui/student/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.ui.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.io.File;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-22"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.concurrent.atomic.AtomicInteger;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.GridPane;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":" * A student card feature in the UI representing student information.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String FXML \u003d \"StudentCard.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    public final Student student;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    private Label name;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    private Label index;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    private Label sex;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    private Label id;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    private Label attendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"    @FXML","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    private Label phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    private Label address;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    private Label email;","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"    private Label parentPhoneNumber;","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    private Label parentName;","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"    private Label rls;","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"    private Label age;","lastModifiedDate":"2023-04-02"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    // @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    // private Label image;","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    private Label cca;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    private Circle circle;","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    private Label className;","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    private Label comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    private GridPane tests;","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"    private GridPane homework;","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        super(FXML);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"        this.student \u003d student;","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"        className.setText(student.getStudentClass().getClassName());","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        index.setText(student.getIndexNumber().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        sex.setText(student.getSex().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"        LocalDate currDate \u003d LocalDate.now();","lastModifiedDate":"2023-03-22"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"        attendance.setText(\"F\");","lastModifiedDate":"2023-03-22"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"        for (Attendance attendance : student.getAttendance()) {","lastModifiedDate":"2023-03-22"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"            if (attendance.isPresent(currDate)) {","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"                this.attendance.setText(\"T\");","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-22"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-22"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        phone.setText(student.getPhone().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"        address.setText(student.getAddress().value);","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"        parentName.setText(student.getParentName().fullName);","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"        parentPhoneNumber.setText(student.getParentNumber().value);","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"        rls.setText(student.getRls().toString());","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"        age.setText(student.getAge().value);","lastModifiedDate":"2023-04-02"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"        //image.setText(student.getImage().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"        cca.setText(student.getCca().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"        comment.setText(student.getComment().value);","lastModifiedDate":"2023-03-10"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        AtomicInteger rowCounter \u003d new AtomicInteger();","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        student.getTest().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"                .sorted(Comparator.comparing(test -\u003e test.getName()))","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"                .forEach(test -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"                    tests.add(new Label(\"Name: \"), 0, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"                    tests.add(new Label(test.getName()), 1, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"                    tests.add(new Label(\" Score: \"), 2, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"                    tests.add(new Label(Integer.toString(test.getScore())), 3, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"                    tests.add(new Label(\" Weightage: \"), 4, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"                    tests.add(new Label(Integer.toString(test.getWeightage())), 5, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"                    tests.add(new Label(\" Deadline: \"), 6, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"                    if (test.getDeadline() !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"                        tests.add(new Label(test.getDeadline().toString()), 7, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"                    } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"                        tests.add(new Label(\"No Deadline\"), 7, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"                    }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"                    rowCounter.getAndIncrement();","lastModifiedDate":"2023-03-20"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"                });","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"        rowCounter.set(0);","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"        student.getHomework().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"                .sorted(Comparator.comparing(hw -\u003e hw.getName()))","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"                .forEach(hw -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.add(new Label(\"Name: \"), 0, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.add(new Label(hw.getName()), 1, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.add(new Label(\" Score: \"), 2, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.add(new Label(Integer.toString(hw.getScore())), 3, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.add(new Label(\" Weightage: \"), 4, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.add(new Label(Integer.toString(hw.getWeightage())), 5, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.add(new Label(\" Deadline: \"), 6, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"                    if (hw.getDeadline() !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"                        homework.add(new Label(hw.getDeadline().toString()), 7, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"                    } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"                        homework.add(new Label(\"No Deadline\"), 7, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"                    }","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.add(new Label(\" Is Done: \"), 8, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.add(new Label(Boolean.toString(hw.getIsDone())), 9, rowCounter.get());","lastModifiedDate":"2023-03-20"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"                    rowCounter.getAndIncrement();","lastModifiedDate":"2023-03-20"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"                });","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"        student.getTags().stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"        updateImage();","lastModifiedDate":"2023-03-20"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"     * Updates the image of the student.","lastModifiedDate":"2023-03-20"},{"lineNumber":157,"author":{"gitId":"securespider"},"content":"     * If the student has an image, it will be displayed, else it will check the image folder for the student\u0027s image.","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"    public void updateImage() {","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"securespider"},"content":"        String strImage \u003d student.getImage().value;","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"securespider"},"content":"        File file \u003d new File(strImage);","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"securespider"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"securespider"},"content":"            Image image \u003d new Image(file.toURI().toString());","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"            if (image.isError()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"                Image defaultImage \u003d new Image(\"images/defaultStudent.png\");","lastModifiedDate":"2023-03-30"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"                circle.setFill(new ImagePattern(defaultImage));","lastModifiedDate":"2023-03-30"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"                return;","lastModifiedDate":"2023-03-30"},{"lineNumber":168,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-30"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"            circle.setFill(new ImagePattern(image));","lastModifiedDate":"2023-04-03"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"            ;","lastModifiedDate":"2023-04-03"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-30"},{"lineNumber":173,"author":{"gitId":"mayuanxin1234"},"content":"            String path \u003d \"images/student/\" + student.getName()","lastModifiedDate":"2023-03-23"},{"lineNumber":174,"author":{"gitId":"mayuanxin1234"},"content":"                    + student.getStudentClass().getClassName() + student.getIndexNumber().toString() + \".png\";","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"mayuanxin1234"},"content":"            File files \u003d new File(path);","lastModifiedDate":"2023-03-30"},{"lineNumber":176,"author":{"gitId":"mayuanxin1234"},"content":"            if (!files.exists()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":177,"author":{"gitId":"mayuanxin1234"},"content":"                Image defaultImage \u003d new Image(\"images/defaultStudent.png\");","lastModifiedDate":"2023-03-23"},{"lineNumber":178,"author":{"gitId":"mayuanxin1234"},"content":"                circle.setFill(new ImagePattern(defaultImage));","lastModifiedDate":"2023-03-23"},{"lineNumber":179,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"mayuanxin1234"},"content":"                Image newImage \u003d new Image(files.toURI().toString());","lastModifiedDate":"2023-04-03"},{"lineNumber":181,"author":{"gitId":"mayuanxin1234"},"content":"                if (newImage.isError()) {","lastModifiedDate":"2023-03-30"},{"lineNumber":182,"author":{"gitId":"mayuanxin1234"},"content":"                    Image defaultImage \u003d new Image(\"images/defaultStudent.png\");","lastModifiedDate":"2023-03-30"},{"lineNumber":183,"author":{"gitId":"mayuanxin1234"},"content":"                    circle.setFill(new ImagePattern(defaultImage));","lastModifiedDate":"2023-03-30"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"                    return;","lastModifiedDate":"2023-03-30"},{"lineNumber":185,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-30"},{"lineNumber":186,"author":{"gitId":"mayuanxin1234"},"content":"                circle.setFill(new ImagePattern(newImage));","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-30"},{"lineNumber":190,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-30"},{"lineNumber":191,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"mayuanxin1234"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"mayuanxin1234"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"mayuanxin1234"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"mayuanxin1234"},"content":"        // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"mayuanxin1234"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-06"},{"lineNumber":206,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":8,"securespider":19,"mayuanxin1234":181}},{"path":"src/main/java/seedu/address/ui/student/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.ui.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":" * A Student List Panel for UI","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        super(FXML);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListPanel.StudentListViewCell());","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"                setText(null);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"mayuanxin1234":44}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003cStackPane style\u003d\"-fx-text-inner-color: blue;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" style\u003d\"-fx-prompt-text-fill: black;\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":4,"mayuanxin1234":4}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#FDEFBC, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"    background-color: #FDEFBC; /* Used in the default.html file */","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#FDEFBC, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: #FCE9A3;","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: #FDEFBC;","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: #FBDD72;","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-style: solid solid solid solid;","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-width: 5;","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-background-color: derive(#FDEFBC, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":".label {","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-font-size: 13px;","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-background-color: derive(#FDEFBC, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-font-size: 13px;","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-text-fill: #010504;","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#FDEFBC, 30%);","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#d1d1d1, 30%);","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#FDEFBC, 30%);","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#D3AC22, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2023-03-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#fce38a,20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#fad13f, 0%);","lastModifiedDate":"2023-03-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-style: hidden hidden solid hidden;","lastModifiedDate":"2023-03-15"},{"lineNumber":321,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":322,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-15"},{"lineNumber":323,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":337,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: transparent, #FDEFBC, transparent, #FDEFBC;","lastModifiedDate":"2023-03-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":365,"author":{"gitId":"mayuanxin1234"},"content":"#tests .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":366,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-21"},{"lineNumber":367,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-21"},{"lineNumber":368,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":369,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-opacity: 0.9","lastModifiedDate":"2023-03-21"},{"lineNumber":370,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":371,"author":{"gitId":"mayuanxin1234"},"content":"#homework .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":372,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2023-03-21"},{"lineNumber":373,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-21"},{"lineNumber":374,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":375,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-opacity: 0.9","lastModifiedDate":"2023-03-21"},{"lineNumber":376,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":377,"author":{"gitId":"mayuanxin1234"},"content":"#students .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":378,"author":{"gitId":"mayuanxin1234"},"content":"   -fx-font-size: 10pt;","lastModifiedDate":"2023-03-21"},{"lineNumber":379,"author":{"gitId":"mayuanxin1234"},"content":"   -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-21"},{"lineNumber":380,"author":{"gitId":"mayuanxin1234"},"content":"   -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":381,"author":{"gitId":"mayuanxin1234"},"content":"   -fx-opacity: 0.9","lastModifiedDate":"2023-03-21"},{"lineNumber":382,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":383,"author":{"gitId":"mayuanxin1234"},"content":".students {","lastModifiedDate":"2023-03-24"},{"lineNumber":384,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-size: 15pt;","lastModifiedDate":"2023-03-24"},{"lineNumber":385,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-24"},{"lineNumber":386,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-24"},{"lineNumber":387,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2023-03-24"},{"lineNumber":388,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2023-03-24"},{"lineNumber":389,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-24"},{"lineNumber":390,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"-":319,"mayuanxin1234":71}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: #FDEFBC;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"mayuanxin1234":1}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.web.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"         \u003cVBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cchildren\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cHBox fx:id\u003d\"helpMessageContainer\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                      \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                                  \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                              \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                                  \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                              \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                      \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                      \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                      \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                      \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                      \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/children\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"         \u003c/VBox\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"-":34,"mayuanxin1234":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"         title\u003d\"PowerConnect\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cImage url\u003d\"@/images/PowerConnect_Label.png\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #2EB39B;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                   style\u003d\"-fx-background-color: #2EB39B;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" style\u003d\"-fx-background-color: #2EB39B;\"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"              VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"          \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"          \u003cStackPane fx:id\u003d\"parentListPanelPlaceholder\"  VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"MrTwit99":1,"-":40,"mayuanxin1234":19}},{"path":"src/main/resources/view/ParentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.shape.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"50.0\" prefWidth\u003d\"85.0\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"            \u003cCircle fx:id\u003d\"circle\" radius\u003d\"70\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"id\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"name\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Residential Address:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"address\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Age:    \" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"age\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Email:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"email\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Phone:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"phone\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Parent/NOK of Students:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cGridPane fx:id\u003d\"students\" style\u003d\"-fx-text-fill: black;\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":44,"mayuanxin1234":18}},{"path":"src/main/resources/view/ParentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cLabel styleClass\u003d\"students\" text\u003d\"Parents/Next Of Kins (NOK): \" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cListView fx:id\u003d\"parentListView\"  VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":4,"mayuanxin1234":5}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cLabel fx:id\u003d\"index\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$index\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"      \u003cLabel fx:id\u003d\"comment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$comment\" /\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"securespider":1,"-":36,"mayuanxin1234":2}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":8,"mayuanxin1234":1}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":5,"mayuanxin1234":3}},{"path":"src/main/resources/view/StudentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.shape.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cVBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cCircle fx:id\u003d\"circle\" radius\u003d\"70\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cColumnConstraints hgrow\u003d\"ALWAYS\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\"  GridPane.hgrow\u003d\"ALWAYS\" GridPane.rowIndex\u003d\"1\" GridPane.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"id\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"               \u003c/font\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"name\" style\u003d\"-fx-text-fill: black;\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Index:\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"index\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$index\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Class:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"className\" lineSpacing\u003d\"100.0\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$class\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"                \u003cText text\u003d\"    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Age:    \" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"age\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-04-02"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"                \u003cText text\u003d\"Attendance:    \" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"                \u003cLabel fx:id\u003d\"attendance\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$attendance\" /\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Gender:   \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"sex\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$sex\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Email:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"email\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"NOK name:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"parentName\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$parentName\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"NOK phone number:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"parentPhoneNumber\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$parentPhoneNumber\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Relationship:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"rls\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$rls\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Phone:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"phone\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Residential Address:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"address\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"CCA:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"cca\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cca\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Comments:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"comment\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cca\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Tests:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cGridPane fx:id\u003d\"tests\" prefHeight\u003d\"11.0\" prefWidth\u003d\"285.0\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Homework:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cGridPane fx:id\u003d\"homework\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"         \u003cpadding\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"         \u003c/padding\u003e","lastModifiedDate":"2023-04-03"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":10,"securespider":4,"mayuanxin1234":102}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"   \u003cLabel styleClass\u003d\"students\" text\u003d\"Students: \" /\u003e","lastModifiedDate":"2023-03-24"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cListView fx:id\u003d\"studentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"mayuanxin1234":9}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"        assertNotNull(AppUtil.getImage(\"/images/PowerConnect_Label.png\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"mayuanxin1234":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"        String deleteCommand \u003d \"student 1A delete in/1\";","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Diatbbin":3,"-":154,"mayuanxin1234":15}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"//import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"//import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"-":35,"mayuanxin1234":16}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.PcClass;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.ParentNameContainsKeywordsPredicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parents;","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.StudentNameContainsKeywordsPredicate;","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    public static final String VALID_CLASS_AMY \u003d \"1A\";","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    public static final String VALID_CLASS_BOB \u003d \"1B\";","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    public static final String VALID_INDEX_AMY \u003d \"11\";","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"    public static final String VALID_INDEX_BOB \u003d \"12\";","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"    public static final String VALID_AGE_AMY \u003d \"20\";","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"    public static final String VALID_AGE_BOB \u003d \"21\";","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"    public static final String VALID_TAG_QUIET \u003d \"quiet\";","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"    public static final String VALID_TAG_FRIENDLY \u003d \"friendly\";","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIENDLY;","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_QUIET;","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"    /*","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"    }*/","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"            throw new AssertionError(\"Parsing of command should not fail.\", pe);","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"Diatbbin"},"content":"    public static void assertStudentCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"Diatbbin"},"content":"        PcClass expectedPcClass \u003d new PcClass(actualModel.getPcClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"Diatbbin"},"content":"        List\u003cStudent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredStudentList());","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":122,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedPcClass, actualModel.getPcClass());","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredStudentList());","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"Diatbbin"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"Diatbbin"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"Diatbbin"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"Diatbbin"},"content":"     * - the address book, filtered student list and selected student in {@code actualModel} remain unchanged","lastModifiedDate":"2023-04-04"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":132,"author":{"gitId":"Diatbbin"},"content":"    public static void assertParentCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"Diatbbin"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"Diatbbin"},"content":"        // only do so by copying its components.","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"Diatbbin"},"content":"        Parents expectedParent \u003d new Parents(actualModel.getParents());","lastModifiedDate":"2023-04-04"},{"lineNumber":136,"author":{"gitId":"Diatbbin"},"content":"        List\u003cParent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredParentList());","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":138,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedParent, actualModel.getParents());","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredParentList());","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":144,"author":{"gitId":"Diatbbin"},"content":"     * Updates {@code model}\u0027s filtered list to show only the student at the given {@code targetIndex} in the","lastModifiedDate":"2023-04-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":147,"author":{"gitId":"Diatbbin"},"content":"    public static void showStudentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredStudentList().size());","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":150,"author":{"gitId":"Diatbbin"},"content":"        Student student \u003d model.getFilteredStudentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-04-04"},{"lineNumber":151,"author":{"gitId":"Diatbbin"},"content":"        final String[] splitName \u003d student.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-04-04"},{"lineNumber":152,"author":{"gitId":"Diatbbin"},"content":"        model.updateFilteredStudentList(new StudentNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":154,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(1, model.getFilteredStudentList().size());","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":158,"author":{"gitId":"Diatbbin"},"content":"     * Updates {@code model}\u0027s filtered list to show only the parent at the given {@code targetIndex} in the","lastModifiedDate":"2023-04-04"},{"lineNumber":159,"author":{"gitId":"Diatbbin"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2023-04-04"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":161,"author":{"gitId":"Diatbbin"},"content":"    public static void showParentAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-04-04"},{"lineNumber":162,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredParentList().size());","lastModifiedDate":"2023-04-04"},{"lineNumber":163,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"Diatbbin"},"content":"        Parent parent \u003d model.getFilteredParentList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-04-04"},{"lineNumber":165,"author":{"gitId":"Diatbbin"},"content":"        final String[] splitName \u003d parent.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-04-04"},{"lineNumber":166,"author":{"gitId":"Diatbbin"},"content":"        model.updateFilteredParentList(new ParentNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-04-04"},{"lineNumber":167,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(1, model.getFilteredParentList().size());","lastModifiedDate":"2023-04-04"},{"lineNumber":168,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"MrTwit99":2,"securespider":4,"Diatbbin":54,"-":106,"mayuanxin1234":3}},{"path":"src/test/java/seedu/address/logic/commands/EditParentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"public class EditParentDescriptorTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"mayuanxin1234":61}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":53,"mayuanxin1234":8}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-18"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"//import seedu.address.model.Model;","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"//import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"public class ListCommandTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    */","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"-":26,"mayuanxin1234":18}},{"path":"src/test/java/seedu/address/logic/commands/parent/ParentDeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.logic.commands.parent;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertParentCommandFailure;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showParentAtIndex;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.BENSON;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.HOON;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.getTypicalPowerConnectParents;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"public class ParentDeleteCommandTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"    private Model model \u003d new ModelManager(getTypicalPowerConnectParents(), new UserPrefs());","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    public void execute_validNameAndNumberUnfilteredList_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"        Parent parentToDelete \u003d model.getFilteredParentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"        assert parentToDelete !\u003d null : \"Parent to delete should not be null!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"        ParentDeleteCommand parentDeleteCommand \u003d new ParentDeleteCommand(ALICE.getName(), ALICE.getPhone());","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"        String expectedMessage \u003d String.format(ParentDeleteCommand.MESSAGE_DELETE_PARENT_SUCCESS,","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"                parentToDelete.getName(), parentToDelete.getPhone());","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getParents(), new UserPrefs());","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        expectedModel.deleteParent(parentToDelete);","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        assertCommandSuccess(parentDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"    public void execute_invalidNameUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"        ParentDeleteCommand parentDeleteCommand \u003d new ParentDeleteCommand(HOON.getName(), ALICE.getPhone());","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"        assertParentCommandFailure(parentDeleteCommand, model, Messages.MESSAGE_PARENT_NOT_FOUND);","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"    public void execute_invalidPhoneNumberUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        ParentDeleteCommand parentDeleteCommand \u003d new ParentDeleteCommand(ALICE.getName(), HOON.getPhone());","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"        assertParentCommandFailure(parentDeleteCommand, model, Messages.MESSAGE_PARENT_NOT_FOUND);","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"        showParentAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"        Parent parentToDelete \u003d model.getFilteredParentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"        assert parentToDelete !\u003d null : \"Parent to delete should not be null!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"        ParentDeleteCommand parentDeleteCommand \u003d new ParentDeleteCommand(ALICE.getName(), ALICE.getPhone());","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"        String expectedMessage \u003d String.format(ParentDeleteCommand.MESSAGE_DELETE_PARENT_SUCCESS,","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"                parentToDelete.getName(), parentToDelete.getPhone());","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"        Model expectedModel \u003d new ModelManager(model.getParents(), new UserPrefs());","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"        expectedModel.deleteParent(parentToDelete);","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"        showNoParent(expectedModel);","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"        assertCommandSuccess(parentDeleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"    public void equals() {","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"        ParentDeleteCommand deleteFirstCommand \u003d new ParentDeleteCommand(ALICE.getName(), ALICE.getPhone());","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"        ParentDeleteCommand deleteSecondCommand \u003d new ParentDeleteCommand(BENSON.getName(), BENSON.getPhone());","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"        ParentDeleteCommand deleteFirstCommandCopy \u003d new ParentDeleteCommand(ALICE.getName(), ALICE.getPhone());","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"Diatbbin"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"    private void showNoParent(Model model) {","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"        model.updateFilteredParentList(p -\u003e false);","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(model.getFilteredParentList().isEmpty());","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"Diatbbin":104}},{"path":"src/test/java/seedu/address/logic/commands/student/StudentAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-19"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.parent.UniqueParentList;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.UniqueStudentList;","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-19"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"class StudentAddCommandTest {","lastModifiedDate":"2023-03-19"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-19"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    void execute_studentAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        StudentAddCommandTest.ModelStubAcceptingStudentAdded modelStub \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"                new StudentAddCommandTest.ModelStubAcceptingStudentAdded();","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        Student validStudent \u003d new StudentBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(validStudent);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        CommandResult commandResult \u003d new StudentAddCommand(validStudent).execute(modelStub);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(String.format(StudentAddCommand.MESSAGE_SUCCESS, validStudent), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(Arrays.asList(validStudent), modelStub.studentsAdded);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"    void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    void testExecute() {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-19"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"        public void addParent(Parent parent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"        public boolean hasParent(Parent parent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"            return false;","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"        public boolean canInitialize(Phone phone, Name parentName) {","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"        public void deleteParent(Parent target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"        public void setParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"        public ObservableList\u003cParent\u003e getFilteredParentList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"mayuanxin1234"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"mayuanxin1234"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":179,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":180,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"mayuanxin1234"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"mayuanxin1234"},"content":"        public void updateFilteredParentList(Predicate\u003cParent\u003e predicate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":188,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"mayuanxin1234"},"content":"    private class ModelStubAcceptingStudentAdded extends StudentAddCommandTest.ModelStub {","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"mayuanxin1234"},"content":"        final ArrayList\u003cStudent\u003e studentsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"        private final UniqueStudentList students \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"mayuanxin1234"},"content":"        private final UniqueParentList parents \u003d new UniqueParentList();","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"mayuanxin1234"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"mayuanxin1234"},"content":"            requireNonNull(student);","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"mayuanxin1234"},"content":"            return studentsAdded.stream().anyMatch(student::isSamePerson);","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"mayuanxin1234"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"            requireNonNull(student);","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"mayuanxin1234"},"content":"            studentsAdded.add(student);","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"mayuanxin1234"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"            return students.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":213,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":214,"author":{"gitId":"mayuanxin1234"},"content":"        public ObservableList\u003cParent\u003e getFilteredParentList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":215,"author":{"gitId":"mayuanxin1234"},"content":"            return parents.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-17"},{"lineNumber":216,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":218,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":219,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-17"},{"lineNumber":220,"author":{"gitId":"mayuanxin1234"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":221,"author":{"gitId":"mayuanxin1234"},"content":"            return new AddressBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":224,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-19"},{"lineNumber":225,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-19"},{"lineNumber":226,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Diatbbin":11,"mayuanxin1234":215}},{"path":"src/test/java/seedu/address/logic/commands/student/StudentCommentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.TypicalStudents.getTypicalPowerConnectStudents;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"class StudentCommentCommandTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    private Model model \u003d new ModelManager(getTypicalPowerConnectStudents(), new UserPrefs());","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    public void execute_validIndexAndCommentUnfilteredList_success() {","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        Student studentToComment \u003d model.getFilteredStudentList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        assert studentToComment !\u003d null : \"Student to comment should not be null!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        StudentCommentCommand studentCommentCommand \u003d new StudentCommentCommand(Class.of(\"1A\"),","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"               new IndexNumber(\"1\"), new Comment(\"Good Student!\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d String.format(StudentCommentCommand.MESSAGE_ADD_COMMENT_SUCCESS,","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"                studentToComment);","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getPcClass(), new UserPrefs());","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        Student editedStudent \u003d new Student(studentToComment.getName(), studentToComment.getStudentClass(),","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"                studentToComment.getIndexNumber(), studentToComment.getSex(), studentToComment.getParentName(),","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"                studentToComment.getParentNumber(), studentToComment.getRls(), studentToComment.getAge(),","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"                studentToComment.getImage(), studentToComment.getEmail(), studentToComment.getPhone(),","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"                studentToComment.getCca(), studentToComment.getAddress(), studentToComment.getAttendance(),","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"                studentToComment.getHomework(), studentToComment.getTest(), studentToComment.getTags(),","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"                studentToComment.getComment());","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cStudent\u003e lastShownList \u003d","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                expectedModel.getPcClass().getClassList().get(0).getStudents().asUnmodifiableObservableList();","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c expectedModel.getPcClass().getClassList().size(); i++) {","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            if (expectedModel.getPcClass().getClassList().get(i).getClassName().equals(","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToComment.getStudentClass().getClassName())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"                lastShownList \u003d expectedModel.getPcClass().getClassList().get(i).getStudents()","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"                        .asUnmodifiableObservableList();","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        Student studentToEdit \u003d null;","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            Student curr \u003d lastShownList.get(i);","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"            if (curr.getIndexNumber().equals(studentToComment.getIndexNumber())","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"                    \u0026\u0026 curr.getStudentClass().equals(studentToComment.getStudentClass())) {","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit \u003d curr;","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(model, expectedModel);","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"mayuanxin1234":63}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"    private static final IndexNumber TEST_INDEX \u003d new IndexNumber(\"1\");","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    private static final Class TEST_CLASS \u003d Class.of(\"1A\");","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"        StudentCommandParser studentCommandParser \u003d new StudentCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        StudentDeleteCommand command \u003d (StudentDeleteCommand) studentCommandParser.parse(","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"                PERSON_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"                + \" \" + TEST_CLASS","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"                + \" \" + StudentDeleteCommand.COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"                + \" \" + PREFIX_INDEXNUMBER","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"                + TEST_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(new StudentDeleteCommand(TEST_INDEX, TEST_CLASS), command);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"securespider":2,"Diatbbin":10,"-":90,"mayuanxin1234":9}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"    */","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"    */","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"mayuanxin1234":9}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"public class ModelManagerTest {","lastModifiedDate":"2023-03-18"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"-":130,"mayuanxin1234":6}},{"path":"src/test/java/seedu/address/model/PowerConnectParentsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.getTypicalPowerConnectParents;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import java.util.Collection;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import java.util.Collections;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import java.util.List;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.exceptions.DuplicateParentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parents;","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.ReadOnlyParents;","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.testutil.ParentBuilder;","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"public class PowerConnectParentsTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"    private final Parents parents \u003d new Parents();","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    public void constructor() {","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(Collections.emptyList(), parents.getParentList());","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(NullPointerException.class, () -\u003e parents.resetData(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        Parents newData \u003d getTypicalPowerConnectParents();","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"        parents.resetData(newData);","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(newData, parents);","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"    public void resetData_withDuplicateParents_throwsDuplicatePersonException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"        Parent editedAlice \u003d new ParentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET)","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"                .build();","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"        List\u003cParent\u003e newParents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        PowerConnectParentsStub newData \u003d new PowerConnectParentsStub(newParents);","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(DuplicateParentException.class, () -\u003e parents.resetData(newData));","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"    public void hasParent_nullParent_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(NullPointerException.class, () -\u003e parents.hasParent(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"    public void hasParent_parentNotInAddressBook_returnsFalse() {","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(parents.hasParent(ALICE));","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"    public void hasParent_parentInAddressBook_returnsTrue() {","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"        parents.addParent(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(parents.hasParent(ALICE));","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"    public void hasParent_parentWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"        parents.addParent(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"        Parent editedAlice \u003d new ParentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET)","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"                .build();","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(parents.hasParent(editedAlice));","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"    public void getParentList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e parents.getParentList().remove(0));","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"     * A stub ReadOnlyParents whose parents list can violate interface constraints.","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"Diatbbin"},"content":"    private static class PowerConnectParentsStub implements ReadOnlyParents {","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"        private final ObservableList\u003cParent\u003e parents \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"        PowerConnectParentsStub(Collection\u003cParent\u003e parents) {","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"            this.parents.setAll(parents);","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"        @Override","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"        public ObservableList\u003cParent\u003e getParentList() {","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"            return parents;","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"Diatbbin":102}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    */","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"-":20,"mayuanxin1234":2}},{"path":"src/test/java/seedu/address/model/parent/ParentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.parent;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_AGE_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"import java.util.List;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.testutil.ParentBuilder;","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.testutil.TypicalStudents;","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"public class ParentTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"    private Name nameTest \u003d new Name(\"test\");","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    private Age ageTest \u003d new Age(\"15\");","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"    private Image imageTest \u003d new Image(\"defaultParent.png\");","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    private Email emailTest \u003d new Email(\"testing123@gmail.com\");","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    private Phone phoneTest \u003d new Phone(\"91234567\");","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    private Address addrTest \u003d new Address(\"21 Lower Kent Ridge Rd\");","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"    private Parent parent \u003d new Parent(nameTest, ageTest, imageTest, emailTest, phoneTest, addrTest, tags);","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"        Person person \u003d new ParentBuilder().build();","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"        // same name and phone number, different age -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"        Person editedAliceAge \u003d new ParentBuilder(ALICE).withAge(VALID_AGE_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(ALICE.isSamePerson(editedAliceAge));","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"        // same name and phone number, different email -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"        Person editedAliceEmail \u003d new ParentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(ALICE.isSamePerson(editedAliceEmail));","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"        // same name and phone number, different Address -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"        Person editedAliceAddress \u003d new ParentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(ALICE.isSamePerson(editedAliceAddress));","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"        // same name and phone number, different tags -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"        Person editedAliceTags \u003d new ParentBuilder(ALICE).withTags(VALID_TAG_QUIET).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(ALICE.isSamePerson(editedAliceTags));","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"        // same name and phone number, different email -\u003e returns true","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"        Person editedAlice \u003d new ParentBuilder(ALICE).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"        editedAlice \u003d new ParentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"        // different phone number, all other attributes same -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"        editedAlice \u003d new ParentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"        Person editedBob \u003d new ParentBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"        editedBob \u003d new ParentBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"        Person aliceCopy \u003d new ParentBuilder(ALICE).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Diatbbin"},"content":"        Person editedAlice \u003d new ParentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"Diatbbin"},"content":"        // different age -\u003e returns false","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"Diatbbin"},"content":"        editedAlice \u003d new ParentBuilder(ALICE).withAge(VALID_AGE_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"Diatbbin"},"content":"        editedAlice \u003d new ParentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"Diatbbin"},"content":"        editedAlice \u003d new ParentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"Diatbbin"},"content":"        editedAlice \u003d new ParentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"Diatbbin"},"content":"        editedAlice \u003d new ParentBuilder(ALICE).withTags(VALID_TAG_QUIET).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"    public void constructorTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"        // Throws error due to empty input for COMPULSORY inputs","lastModifiedDate":"2023-04-05"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Parent(new Name(\"\"), ageTest, imageTest, emailTest,","lastModifiedDate":"2023-04-05"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"                phoneTest, addrTest, tags));","lastModifiedDate":"2023-04-05"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"        // No error thrown as empty input is for OPTIONAL inputs","lastModifiedDate":"2023-04-05"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Parent(nameTest, new Age(\"Insert parent age here!\"), imageTest, emailTest,","lastModifiedDate":"2023-04-05"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"                phoneTest, addrTest, tags));","lastModifiedDate":"2023-04-05"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"        // No Error thrown due to correct inputs","lastModifiedDate":"2023-04-05"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Parent(nameTest, ageTest, imageTest, emailTest, phoneTest, addrTest, tags));","lastModifiedDate":"2023-04-05"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":155,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":157,"author":{"gitId":"MrTwit99"},"content":"    public void setPhoneTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":158,"author":{"gitId":"MrTwit99"},"content":"        Phone newPhone \u003d new Phone(\"95557333\");","lastModifiedDate":"2023-04-05"},{"lineNumber":159,"author":{"gitId":"MrTwit99"},"content":"        Phone currPhone \u003d phoneTest;","lastModifiedDate":"2023-04-05"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"        // currPhone \u003d\u003d currPhone","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getPhone().equals(currPhone));","lastModifiedDate":"2023-04-05"},{"lineNumber":162,"author":{"gitId":"MrTwit99"},"content":"        // currPhone \u003d\u003d newPhone","lastModifiedDate":"2023-04-05"},{"lineNumber":163,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getPhone().equals(newPhone));","lastModifiedDate":"2023-04-05"},{"lineNumber":164,"author":{"gitId":"MrTwit99"},"content":"        parent.setPhone(newPhone);","lastModifiedDate":"2023-04-05"},{"lineNumber":165,"author":{"gitId":"MrTwit99"},"content":"        // newPhone \u003d\u003d currPhone","lastModifiedDate":"2023-04-05"},{"lineNumber":166,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getPhone().equals(currPhone));","lastModifiedDate":"2023-04-05"},{"lineNumber":167,"author":{"gitId":"MrTwit99"},"content":"        // newPhone \u003d\u003d newPhone","lastModifiedDate":"2023-04-05"},{"lineNumber":168,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getPhone().equals(newPhone));","lastModifiedDate":"2023-04-05"},{"lineNumber":169,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"    public void isValidParentNumberTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":173,"author":{"gitId":"MrTwit99"},"content":"        // invalid Parent Number","lastModifiedDate":"2023-04-05"},{"lineNumber":174,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Parent.isValidParentNumber(\"\")); // empty string","lastModifiedDate":"2023-04-05"},{"lineNumber":175,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Parent.isValidParentNumber(\" \")); // spaces ONLY","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Parent.isValidParentNumber(\"^\")); // only non-numeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":177,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Parent.isValidParentNumber(\"1*\")); // contains non-numeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":178,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Parent.isValidParentNumber(\"22\")); // insufficient values given (minimum 3)","lastModifiedDate":"2023-04-05"},{"lineNumber":179,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Parent.isValidParentNumber(\"twenty\")); // alphabets","lastModifiedDate":"2023-04-05"},{"lineNumber":180,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Parent.isValidParentNumber(\"999s\")); // contains non-numeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Parent.isValidParentNumber(\"-11111\")); // contains non-numeric characters (NEGATIVE VALUES)","lastModifiedDate":"2023-04-05"},{"lineNumber":182,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":183,"author":{"gitId":"MrTwit99"},"content":"        // valid Parent Number","lastModifiedDate":"2023-04-05"},{"lineNumber":184,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":185,"author":{"gitId":"MrTwit99"},"content":"        // 3 digits phone number (Minimum)","lastModifiedDate":"2023-04-05"},{"lineNumber":186,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(Parent.isValidParentNumber(\"999\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":187,"author":{"gitId":"MrTwit99"},"content":"        // 8 digits phone number","lastModifiedDate":"2023-04-05"},{"lineNumber":188,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(Parent.isValidParentNumber(\"91234567\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":189,"author":{"gitId":"MrTwit99"},"content":"        // LONG phone number","lastModifiedDate":"2023-04-05"},{"lineNumber":190,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(Parent.isValidParentNumber(String.valueOf(Integer.MAX_VALUE)));","lastModifiedDate":"2023-04-05"},{"lineNumber":191,"author":{"gitId":"MrTwit99"},"content":"        // Phone number with only 0s","lastModifiedDate":"2023-04-05"},{"lineNumber":192,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(Parent.isValidParentNumber(\"000000\"));","lastModifiedDate":"2023-04-05"},{"lineNumber":193,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":194,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":195,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":196,"author":{"gitId":"MrTwit99"},"content":"    public void getParticularsTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":197,"author":{"gitId":"MrTwit99"},"content":"        Parent parent \u003d new Parent(nameTest, ageTest, imageTest, emailTest, phoneTest, addrTest, tags);","lastModifiedDate":"2023-04-05"},{"lineNumber":198,"author":{"gitId":"MrTwit99"},"content":"        // Invalid particulars retrieval","lastModifiedDate":"2023-04-05"},{"lineNumber":199,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getName() \u003d\u003d null);","lastModifiedDate":"2023-04-05"},{"lineNumber":200,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getPhone() \u003d\u003d null);","lastModifiedDate":"2023-04-05"},{"lineNumber":201,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getAge() \u003d\u003d null);","lastModifiedDate":"2023-04-05"},{"lineNumber":202,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getStudents() \u003d\u003d null);","lastModifiedDate":"2023-04-05"},{"lineNumber":203,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getImage() \u003d\u003d null);","lastModifiedDate":"2023-04-05"},{"lineNumber":204,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getEmail() \u003d\u003d null);","lastModifiedDate":"2023-04-05"},{"lineNumber":205,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getAddress() \u003d\u003d null);","lastModifiedDate":"2023-04-05"},{"lineNumber":206,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getTags() \u003d\u003d null);","lastModifiedDate":"2023-04-05"},{"lineNumber":207,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(parent.getComment() \u003d\u003d null);","lastModifiedDate":"2023-04-05"},{"lineNumber":208,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":209,"author":{"gitId":"MrTwit99"},"content":"        // Valid particulars retrieval","lastModifiedDate":"2023-04-05"},{"lineNumber":210,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getComment().equals(new Comment(\"No comment\"))); // Does not have args for Parent","lastModifiedDate":"2023-04-05"},{"lineNumber":211,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getStudentClass() \u003d\u003d null); // Does not have args for Parent","lastModifiedDate":"2023-04-05"},{"lineNumber":212,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getIndexNumber() \u003d\u003d null); // Does not have args for Parent","lastModifiedDate":"2023-04-05"},{"lineNumber":213,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getName().equals(nameTest));","lastModifiedDate":"2023-04-05"},{"lineNumber":214,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getPhone().equals(phoneTest));","lastModifiedDate":"2023-04-05"},{"lineNumber":215,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getAge().equals(ageTest));","lastModifiedDate":"2023-04-05"},{"lineNumber":216,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getStudents().equals(new ArrayList\u003cStudent\u003e()));","lastModifiedDate":"2023-04-05"},{"lineNumber":217,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getImage().equals(imageTest));","lastModifiedDate":"2023-04-05"},{"lineNumber":218,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getEmail().equals(emailTest));","lastModifiedDate":"2023-04-05"},{"lineNumber":219,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getAddress().equals(addrTest));","lastModifiedDate":"2023-04-05"},{"lineNumber":220,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(parent.getTags().equals(tags));","lastModifiedDate":"2023-04-05"},{"lineNumber":221,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":222,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":223,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":224,"author":{"gitId":"MrTwit99"},"content":"    public void addRemoveStudentTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":225,"author":{"gitId":"MrTwit99"},"content":"        List\u003cStudent\u003e sampleStudentList \u003d TypicalStudents.getTypicalStudents();","lastModifiedDate":"2023-04-05"},{"lineNumber":226,"author":{"gitId":"MrTwit99"},"content":"        Student student \u003d sampleStudentList.get(1);","lastModifiedDate":"2023-04-05"},{"lineNumber":227,"author":{"gitId":"MrTwit99"},"content":"        // Initial state with 0 student","lastModifiedDate":"2023-04-05"},{"lineNumber":228,"author":{"gitId":"MrTwit99"},"content":"        List\u003cStudent\u003e studentList \u003d parent.getStudents();","lastModifiedDate":"2023-04-05"},{"lineNumber":229,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(studentList.size() \u003d\u003d 0);","lastModifiedDate":"2023-04-05"},{"lineNumber":230,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":231,"author":{"gitId":"MrTwit99"},"content":"        // Add 1 student to list","lastModifiedDate":"2023-04-05"},{"lineNumber":232,"author":{"gitId":"MrTwit99"},"content":"        parent.addStudent(student);","lastModifiedDate":"2023-04-05"},{"lineNumber":233,"author":{"gitId":"MrTwit99"},"content":"        studentList \u003d parent.getStudents();","lastModifiedDate":"2023-04-05"},{"lineNumber":234,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(studentList.size() \u003e 0);","lastModifiedDate":"2023-04-05"},{"lineNumber":235,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":236,"author":{"gitId":"MrTwit99"},"content":"        // Remove 1 student from list","lastModifiedDate":"2023-04-05"},{"lineNumber":237,"author":{"gitId":"MrTwit99"},"content":"        parent.removeStudent(student);","lastModifiedDate":"2023-04-05"},{"lineNumber":238,"author":{"gitId":"MrTwit99"},"content":"        studentList \u003d parent.getStudents();","lastModifiedDate":"2023-04-05"},{"lineNumber":239,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(studentList.size() \u003d\u003d 0);","lastModifiedDate":"2023-04-05"},{"lineNumber":240,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(studentList.contains(student));","lastModifiedDate":"2023-04-05"},{"lineNumber":241,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":242,"author":{"gitId":"MrTwit99"},"content":"        // Add students from sampleStudentList to parent\u0027s student list","lastModifiedDate":"2023-04-05"},{"lineNumber":243,"author":{"gitId":"MrTwit99"},"content":"        parent.addStudents(sampleStudentList);","lastModifiedDate":"2023-04-05"},{"lineNumber":244,"author":{"gitId":"MrTwit99"},"content":"        studentList \u003d parent.getStudents();","lastModifiedDate":"2023-04-05"},{"lineNumber":245,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(studentList.equals(sampleStudentList));","lastModifiedDate":"2023-04-05"},{"lineNumber":246,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":247,"author":{"gitId":"MrTwit99"},"content":"        // Remove particular student from sampleStudentList from parent\u0027s student list","lastModifiedDate":"2023-04-05"},{"lineNumber":248,"author":{"gitId":"MrTwit99"},"content":"        Student studentToRemove \u003d sampleStudentList.get(3);","lastModifiedDate":"2023-04-05"},{"lineNumber":249,"author":{"gitId":"MrTwit99"},"content":"        parent.removeStudent(studentToRemove);","lastModifiedDate":"2023-04-05"},{"lineNumber":250,"author":{"gitId":"MrTwit99"},"content":"        studentList \u003d parent.getStudents();","lastModifiedDate":"2023-04-05"},{"lineNumber":251,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(studentList.contains(studentToRemove));","lastModifiedDate":"2023-04-05"},{"lineNumber":252,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(sampleStudentList.contains(studentToRemove));","lastModifiedDate":"2023-04-05"},{"lineNumber":253,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":254,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":137,"Diatbbin":48,"mayuanxin1234":69}},{"path":"src/test/java/seedu/address/model/parent/RelationshipTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.model.parent;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"public class RelationshipTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    public void constructorTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"        String validRls1 \u003d \"mother\";","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        String validRls2 \u003d \"123\";","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"        String validRls3 \u003d \"Guardian 1\";","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"        String sampleRls \u003d \"Insert parent relationship to student here!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        String invalidRls1 \u003d \"\"; // Empty string","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"        String invalidRls2 \u003d \" \"; // Spaces only","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        String invalidRls3 \u003d \"^\"; // Non-alphanumeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        String invalidRls4 \u003d \"*\"; // Non-alphanumeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"        // invalid inputs","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Relationship(invalidRls1));","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Relationship(invalidRls2));","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Relationship(invalidRls3));","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Relationship(invalidRls4));","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        // valid inputs","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Relationship(validRls1));","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Relationship(validRls2));","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Relationship(validRls3));","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Relationship(sampleRls));","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        Relationship testRls1 \u003d new Relationship(\"hello\");","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"        Relationship testRls2 \u003d new Relationship(\"hello\");","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"        Relationship testRls3 \u003d new Relationship(\"HELLO\");","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(testRls1.equals(testRls2));","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(testRls1.equals(testRls3));","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(testRls2.equals(testRls3));","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"        String rls1 \u003d \"mother\";","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        String rls2 \u003d \"father\";","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        Relationship testRls1 \u003d new Relationship(rls1);","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(testRls1.toString().equals(rls1)); // Comparing \"mother\" with \"mother\"","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(testRls1.toString().equals(rls2)); // Comparing \"father\" with \"mother\"","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"    public void isValidRelationshipTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"        String rls1 \u003d \"mother\";","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"        String rls2 \u003d \"Insert parent relationship to student here!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(Relationship.isDefaultRelationship(rls2));","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Relationship.isDefaultRelationship(rls1));","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(rls1.matches(Relationship.VALIDATION_REGEX));","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(\"\".matches(Relationship.VALIDATION_REGEX));","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"MrTwit99":65}},{"path":"src/test/java/seedu/address/model/person/AgeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"public class AgeTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    private String validAge1 \u003d \"0\";","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    private String validAge2 \u003d \"57\";","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    private String validAge3 \u003d String.valueOf(Integer.MAX_VALUE);","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    private String sampleAge1 \u003d \"Insert parent age here!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    private String sampleAge2 \u003d \"Insert student age here!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"    private String invalidAge1 \u003d \"\"; // Empty string","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    private String invalidAge2 \u003d \" \"; // Spaces only","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    private String invalidAge3 \u003d \"^\"; // Non-alphanumeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    private String invalidAge4 \u003d \"*\"; // Non-alphanumeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    private String invalidAge5 \u003d \"abc\"; // Alphabets","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    private String invalidAge6 \u003d \"-1\"; // Mixture of symbols with numbers","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    private String invalidAge7 \u003d \"1a\"; // Mixture of alphabets with numbers","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"    public void constructorTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        // invalid inputs","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge1));","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge2));","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge3));","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge4));","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge5));","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge6));","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Age(invalidAge7));","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"        // valid inputs","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Age(sampleAge1));","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Age(sampleAge2));","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Age(validAge1));","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Age(validAge2));","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Age(validAge3));","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        Age testAge1 \u003d new Age(validAge1);","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"        Age testAge2 \u003d new Age(validAge1);","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"        Age testAge3 \u003d new Age(validAge2);","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(testAge1.equals(testAge2));","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(testAge2.equals(testAge3));","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(testAge1.equals(testAge3));","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"        Age testAge1 \u003d new Age(validAge1);","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(testAge1.toString().equals(validAge1)); // Comparing \"0\" with \"0\"","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(testAge1.toString().equals(validAge2)); // Comparing \"57\" with \"0\"","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"    public void isValidAgeTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        String age1 \u003d \"Insert parent age here!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        String age2 \u003d \"Insert student age here!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(Age.isDefaultAge(age2));","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(Age.isDefaultAge(age1));","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Age.isDefaultAge(validAge1));","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(validAge1.matches(Age.VALIDATION_REGEX));","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(invalidAge1.matches(Age.VALIDATION_REGEX));","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"MrTwit99":69}},{"path":"src/test/java/seedu/address/model/person/ParentStudentNameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.testutil.ParentBuilder;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"public class ParentStudentNameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(predicate.test(new ParentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(predicate.test(new ParentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(predicate.test(new ParentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(predicate.test(new ParentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(predicate.test(new ParentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(predicate.test(new ParentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(predicate.test(new ParentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Diatbbin":9,"-":66}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_QUIET).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Diatbbin":3,"-":88}},{"path":"src/test/java/seedu/address/model/person/SexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"class SexTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    private String male1 \u003d \"M\";","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    private String male2 \u003d \"m\";","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    private String female1 \u003d \"F\";","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    private String female2 \u003d \"f\";","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    private String sampleGender \u003d \"Insert student sex here!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"    private String invalidGender1 \u003d \"\"; // Empty string","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    private String invalidGender2 \u003d \" \"; // Spaces only","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    private String invalidGender3 \u003d \"^\"; // Non-alphanumeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    private String invalidGender4 \u003d \"*\"; // Non-alphanumeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    private String invalidGender5 \u003d \"abc\"; // Alphabets","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    private String invalidGender6 \u003d \"1\"; // Mixture of symbols with numbers","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"    public void constructorTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"        // invalid inputs","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidGender1));","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidGender2));","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidGender3));","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidGender4));","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidGender5));","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Sex(invalidGender6));","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        // valid inputs","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Sex(male1));","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Sex(male2));","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Sex(female1));","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Sex(female2));","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        assertDoesNotThrow(() -\u003e new Sex(sampleGender));","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    public void equalsTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"        Sex testSex1 \u003d new Sex(male1);","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"        Sex testSex2 \u003d new Sex(male1);","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"        Sex testSex3 \u003d new Sex(female1);","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(testSex1.equals(testSex2));","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(testSex2.equals(testSex3));","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(testSex1.equals(testSex3));","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"    public void toStringTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        Sex testSex1 \u003d new Sex(male1);","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(testSex1.toString().equals(male1)); // Comparing \"M\" with \"M\"","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(testSex1.toString().equals(female2)); // Comparing \"F\" with \"M\"","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"    public void isValidSexTest() {","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"        String emptyInput \u003d \"Insert student sex here!\";","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(Sex.isDefaultSex(emptyInput));","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(Sex.isDefaultSex(male1));","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        assertTrue(male1.matches(Sex.VALIDATION_REGEX));","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        assertFalse(invalidGender1.matches(Sex.VALIDATION_REGEX));","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"MrTwit99":66}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.testutil.ParentBuilder;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"        Person editedAlice \u003d new ParentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET)","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"        Person editedAlice \u003d new ParentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET)","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"Diatbbin":6,"-":164}},{"path":"src/test/java/seedu/address/model/student/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class AddressTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        // null address","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // invalid addresses","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        // valid addresses","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":37}},{"path":"src/test/java/seedu/address/model/student/AttendanceTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"public class AttendanceTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    public void constructor_invalidAttendance_throwsIllegalArgumentException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"        String invalidAttendance \u003d \"\";","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Attendance(invalidAttendance));","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    public void isValidAttendance() {","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"        // invalid attendance","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"        assertFalse(Attendance.isValidAttendance(\"\")); // empty string","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"        assertFalse(Attendance.isValidAttendance(\" \")); // spaces only","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        assertFalse(Attendance.isValidAttendance(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"        assertFalse(Attendance.isValidAttendance(\"*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"        assertFalse(Attendance.isValidAttendance(\"35/01/2022\")); // contains invalid dates","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"        assertFalse(Attendance.isValidAttendance(\"01/20/2022\")); // contains invalid months","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        // valid attendance","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"        assertTrue(Attendance.isValidAttendance(\"12/12/2020\")); // valid date, month and year","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"        assertTrue(Attendance.isValidAttendance(\"T\")); // present","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        assertTrue(Attendance.isValidAttendance(\"F\")); // absent","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"securespider":35}},{"path":"src/test/java/seedu/address/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class EmailTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public void isValidEmail() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        // null email","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // blank email","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        // missing parts","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        // invalid parts","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        // valid email","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":69}},{"path":"src/test/java/seedu/address/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.testutil.ParentBuilder;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(predicate.test(new ParentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(predicate.test(new ParentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(predicate.test(new ParentBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(predicate.test(new ParentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(predicate.test(new ParentBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(predicate.test(new ParentBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(predicate.test(new ParentBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":9,"mayuanxin1234":1,"-":66}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class NameTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public void isValidName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        // null name","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // invalid name","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        // valid name","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":41}},{"path":"src/test/java/seedu/address/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class PhoneTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public void isValidPhone() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        // null phone number","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        // valid phone numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":41}},{"path":"src/test/java/seedu/address/model/student/StudentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASS_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INDEX_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import static seedu.address.testutil.TypicalStudents.ALICE;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"import static seedu.address.testutil.TypicalStudents.BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"import seedu.address.testutil.StudentBuilder;","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"public class StudentTest {","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"        Student student \u003d new StudentBuilder().build();","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e student.getTags().remove(0));","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    public void isSameStudent() {","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"        assertTrue(ALICE.isSameStudent(ALICE));","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        assertFalse(ALICE.isSameStudent(null));","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        // same index, same class all other attributes different -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"        assertTrue(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        // different index, same class, all other attributes same -\u003e returns false","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).withIndexNumber(VALID_INDEX_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"        // different index, same class, all other attributes same -\u003e returns false","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).withClass(VALID_CLASS_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"        assertFalse(ALICE.isSameStudent(editedAlice));","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"    public void equals() {","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"        Student aliceCopy \u003d new StudentBuilder(ALICE).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"        assertEquals(ALICE, aliceCopy);","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        assertEquals(ALICE, ALICE);","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"        assertNotEquals(null, ALICE);","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"        assertNotEquals(5, ALICE);","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        assertNotEquals(ALICE, BOB);","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"        Student editedAlice \u003d new StudentBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"        // different class -\u003e returns false","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withClass(VALID_CLASS_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"        // different index number -\u003e returns false","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withIndexNumber(VALID_INDEX_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"        assertNotEquals(ALICE, editedAlice);","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"        // different phone -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"        assertEquals(ALICE, editedAlice);","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"        // different email -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"        assertEquals(ALICE, editedAlice);","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"        // different address -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"        assertEquals(ALICE, editedAlice);","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"        editedAlice \u003d new StudentBuilder(ALICE).withTags(VALID_TAG_QUIET).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"        assertEquals(ALICE, editedAlice);","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"securespider":101}},{"path":"src/test/java/seedu/address/model/student/UniqueParentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.ALICE;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.testutil.TypicalParents.BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.exceptions.DuplicateParentException;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.UniqueParentList;","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.testutil.ParentBuilder;","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"public class UniqueParentListTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"    private final UniqueParentList uniqueParentList \u003d new UniqueParentList();","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    public void contains_nullParent_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParentList.contains(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"    public void contains_parentNotInList_returnsFalse() {","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"        assertFalse(uniqueParentList.contains(ALICE));","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"    public void contains_parentInList_returnsTrue() {","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(uniqueParentList.contains(ALICE));","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    public void contains_parentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"        Parent editedAlice \u003d new ParentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET)","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"        assertTrue(uniqueParentList.contains(editedAlice));","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"    public void add_nullParent_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParentList.add(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"    public void add_duplicateParent_throwsDuplicateParentException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(DuplicateParentException.class, () -\u003e uniqueParentList.add(ALICE));","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"    public void setParent_nullTargetParent_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParentList.setParent(null, ALICE));","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"    public void setParent_nullEditedParent_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParentList.setParent(ALICE, null));","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"    public void setParent_targetParentNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueParentList.setParent(ALICE, ALICE));","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"    public void setParent_editedParentIsSameParent_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.setParent(ALICE, ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"Diatbbin"},"content":"        UniqueParentList expectedUniqueParentList \u003d new UniqueParentList();","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"        expectedUniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedUniqueParentList, uniqueParentList);","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"    public void setParent_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"Diatbbin"},"content":"        Parent editedAlice \u003d new ParentBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET)","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.setParent(ALICE, editedAlice);","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"        UniqueParentList expectedUniqueParentList \u003d new UniqueParentList();","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"        expectedUniqueParentList.add(editedAlice);","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedUniqueParentList, uniqueParentList);","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"    public void setParent_editedParentHasDifferentIdentity_success() {","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.setParent(ALICE, BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"        UniqueParentList expectedUniqueParentList \u003d new UniqueParentList();","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"        expectedUniqueParentList.add(BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedUniqueParentList, uniqueParentList);","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"    public void setParent_editedParentHasNonUniqueIdentity_throwsDuplicateParentException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(DuplicateParentException.class, () -\u003e uniqueParentList.setParent(ALICE, BOB));","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"Diatbbin"},"content":"    public void remove_nullParent_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParentList.remove(null));","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"Diatbbin"},"content":"    public void remove_parentDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniqueParentList.remove(ALICE));","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"Diatbbin"},"content":"    public void remove_existingParent_removesParent() {","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":127,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.remove(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":128,"author":{"gitId":"Diatbbin"},"content":"        UniqueParentList expectedUniqueParentList \u003d new UniqueParentList();","lastModifiedDate":"2023-04-04"},{"lineNumber":129,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedUniqueParentList, uniqueParentList);","lastModifiedDate":"2023-04-04"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"Diatbbin"},"content":"    public void setParents_nullUniqueParentList_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":134,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParentList.setParents((UniqueParentList) null));","lastModifiedDate":"2023-04-04"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"Diatbbin"},"content":"    public void setParents_uniqueParentList_replacesOwnListWithProvidedUniqueParentList() {","lastModifiedDate":"2023-04-04"},{"lineNumber":139,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":140,"author":{"gitId":"Diatbbin"},"content":"        UniqueParentList expectedUniqueParentList \u003d new UniqueParentList();","lastModifiedDate":"2023-04-04"},{"lineNumber":141,"author":{"gitId":"Diatbbin"},"content":"        expectedUniqueParentList.add(BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":142,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.setParents(expectedUniqueParentList);","lastModifiedDate":"2023-04-04"},{"lineNumber":143,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedUniqueParentList, uniqueParentList);","lastModifiedDate":"2023-04-04"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"Diatbbin"},"content":"    public void setParents_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":148,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueParentList.setParents((List\u003cParent\u003e) null));","lastModifiedDate":"2023-04-04"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"Diatbbin"},"content":"    public void setParents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-04-04"},{"lineNumber":153,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.add(ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":154,"author":{"gitId":"Diatbbin"},"content":"        List\u003cParent\u003e parentList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":155,"author":{"gitId":"Diatbbin"},"content":"        uniqueParentList.setParents(parentList);","lastModifiedDate":"2023-04-04"},{"lineNumber":156,"author":{"gitId":"Diatbbin"},"content":"        UniqueParentList expectedUniqueParentList \u003d new UniqueParentList();","lastModifiedDate":"2023-04-04"},{"lineNumber":157,"author":{"gitId":"Diatbbin"},"content":"        expectedUniqueParentList.add(BOB);","lastModifiedDate":"2023-04-04"},{"lineNumber":158,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(expectedUniqueParentList, uniqueParentList);","lastModifiedDate":"2023-04-04"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"Diatbbin"},"content":"    public void setParents_listWithDuplicateParents_throwsDuplicateParentException() {","lastModifiedDate":"2023-04-04"},{"lineNumber":163,"author":{"gitId":"Diatbbin"},"content":"        List\u003cParent\u003e listWithDuplicateParents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-04-04"},{"lineNumber":164,"author":{"gitId":"Diatbbin"},"content":"        assertThrows(DuplicateParentException.class, () -\u003e uniqueParentList.setParents(listWithDuplicateParents));","lastModifiedDate":"2023-04-04"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"mayuanxin1234"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"Diatbbin"},"content":"            -\u003e uniqueParentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-04-04"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":84,"mayuanxin1234":88}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedParentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static seedu.address.storage.person.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.person.JsonAdaptedPerson;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.storage.person.JsonAdaptedTag;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"public class JsonAdaptedParentTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    private static final String VALID_COMMENT \u003d BENSON.getComment().toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"securespider":16,"Diatbbin":4,"mayuanxin1234":97}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static seedu.address.storage.person.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"import seedu.address.storage.person.JsonAdaptedPerson;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.storage.person.JsonAdaptedTag;","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    private static final String VALID_COMMENT \u003d BENSON.getComment().toString();","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"securespider":16,"-":100,"mayuanxin1234":1}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":101,"mayuanxin1234":12}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    */","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     /*","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"      */","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"-":36,"mayuanxin1234":9}},{"path":"src/test/java/seedu/address/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"            userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"-":122,"mayuanxin1234":7}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"//import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-18"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"//import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-03-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"//import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-18"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"//import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"//import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-18"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"//import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":38,"author":{"gitId":"-"},"content":"             * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"             * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"             * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"             */","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":57,"mayuanxin1234":17}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.PowerConnect;","lastModifiedDate":"2023-04-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    private PowerConnect powerConnect;","lastModifiedDate":"2023-04-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"        powerConnect \u003d new PowerConnect();","lastModifiedDate":"2023-04-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public AddressBookBuilder(PowerConnect powerConnect) {","lastModifiedDate":"2023-04-09"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        this.powerConnect \u003d powerConnect;","lastModifiedDate":"2023-04-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        powerConnect.addPerson(person);","lastModifiedDate":"2023-04-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    public PowerConnect build() {","lastModifiedDate":"2023-04-09"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        return powerConnect;","lastModifiedDate":"2023-04-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":26,"mayuanxin1234":8}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"-":83,"mayuanxin1234":11}},{"path":"src/test/java/seedu/address/testutil/ParentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import java.util.Set;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"public class ParentBuilder {","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"    public static final String DEFAULT_AGE \u003d \"20\";","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    public static final String DEFAULT_IMAGE \u003d \"Insert parent image here!\";","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"    private Name name;","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    private Age age;","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"    private Image image;","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"    private Email email;","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"    private Phone phone;","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"    private Address address;","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"     * Creates a {@code ParentBuilder} with the default details.","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"    public ParentBuilder() {","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"        image \u003d new Image(DEFAULT_IMAGE);","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"     * Initializes the ParentBuilder with the data of {@code parentToCopy}.","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"    public ParentBuilder(Parent parentToCopy) {","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"        name \u003d parentToCopy.getName();","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"        age \u003d parentToCopy.getAge();","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"        image \u003d parentToCopy.getImage();","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"        phone \u003d parentToCopy.getPhone();","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"        email \u003d parentToCopy.getEmail();","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"        address \u003d parentToCopy.getAddress();","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"        tags \u003d new HashSet\u003c\u003e(parentToCopy.getTags());","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"     * Sets the {@code Name} of the {@code Parent} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"    public ParentBuilder withName(String name) {","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"        return this;","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"     * Sets the {@code Age} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"     * @param age","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"    public ParentBuilder withAge(String age) {","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"        return this;","lastModifiedDate":"2023-04-04"},{"lineNumber":79,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":81,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":82,"author":{"gitId":"Diatbbin"},"content":"     * Parses the {@code image} into a {@code image} and set it to the {@code Parent} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"    public ParentBuilder withImage(String image) {","lastModifiedDate":"2023-04-04"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"        this.image \u003d new Image(image);","lastModifiedDate":"2023-04-04"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"        return this;","lastModifiedDate":"2023-04-04"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":89,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":90,"author":{"gitId":"Diatbbin"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Parent} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"    public ParentBuilder withTags(String ... tags) {","lastModifiedDate":"2023-04-04"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-04-04"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"        return this;","lastModifiedDate":"2023-04-04"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"     * Sets the {@code Address} of the {@code Parent} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"    public ParentBuilder withAddress(String address) {","lastModifiedDate":"2023-04-04"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2023-04-04"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"        return this;","lastModifiedDate":"2023-04-04"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"    public ParentBuilder withPhone(String phone) {","lastModifiedDate":"2023-04-04"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2023-04-04"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"        return this;","lastModifiedDate":"2023-04-04"},{"lineNumber":111,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":112,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":114,"author":{"gitId":"Diatbbin"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-04"},{"lineNumber":115,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":116,"author":{"gitId":"Diatbbin"},"content":"    public ParentBuilder withEmail(String email) {","lastModifiedDate":"2023-04-04"},{"lineNumber":117,"author":{"gitId":"Diatbbin"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2023-04-04"},{"lineNumber":118,"author":{"gitId":"Diatbbin"},"content":"        return this;","lastModifiedDate":"2023-04-04"},{"lineNumber":119,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":120,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":121,"author":{"gitId":"Diatbbin"},"content":"    public Parent build() {","lastModifiedDate":"2023-04-04"},{"lineNumber":122,"author":{"gitId":"Diatbbin"},"content":"        return new Parent(name, age, image, email, phone, address, tags);","lastModifiedDate":"2023-04-04"},{"lineNumber":123,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":124,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":125,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":126,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"Diatbbin":126}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    public static final String DEFAULT_COMMENT \u003d \"This is a comment\";","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    private Comment comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"        comment \u003d personToCopy.getComment();","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"     * Sets the {@code Comment} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"     * @param comment","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"     * @return","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"    public PersonBuilder withComment(String comment) {","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"        this.comment \u003d new Comment(comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"        return this;","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"        return new Person(name, phone, email, address, tags, comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"securespider":19,"-":95}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"         * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"-":58,"mayuanxin1234":9}},{"path":"src/test/java/seedu/address/testutil/StudentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-17"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-04-01"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-04-02"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-04-01"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-04-01"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-04-01"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-04-01"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-04-01"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2023-04-01"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Cca;","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":" * A utility class to help with building Student objects.","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentBuilder {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_NAME \u003d \"Tan Ah Cow\";","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_INDEXNUMBER \u003d \"13\";","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_SEX \u003d \"M\";","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_PARENTNAME \u003d \"Tan Ah Niu\";","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_PARENTPHONE \u003d \"91234567\";","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_RELATIONSHIP \u003d \"Father\";","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456)\";","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_AGE \u003d \"14\";","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_IMAGESTUDENT \u003d \"Insert student image here!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_IMAGEPARENT \u003d \"Insert parent image here!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_PARENTAGE \u003d \"41\";","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_STUDENTPHONE \u003d \"91234567\";","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_CCA \u003d \"Captain Ball\";","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_PARENTEMAIL \u003d \"Insert parent email here!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_PARENTADDRESS \u003d \"Insert Address here!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_CLASS \u003d \"1A\";","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_STUDENTEMAIL \u003d \"tanahcow@gmail.com\";","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    public static final String DEFAULT_ATTENDANCE \u003d \"01/01/2019\";","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String DEFAULT_COMMENT \u003d \"Insert student comment here!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    private Name name;","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    private Name parentName;","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    private IndexNumber indexNumber;","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    private Sex sex;","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    private Parent parent;","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    private Age age;","lastModifiedDate":"2023-04-02"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    private Age parentAge;","lastModifiedDate":"2023-04-02"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    private Phone studentPhone;","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    private Phone parentPhone;","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    private Cca cca;","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    private Image studentImage;","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    private Image parentImage;","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    private Email parentEmail;","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"    private Address parentAddress;","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    private Student student;","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    private Class studentClass;","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    private Relationship relationship;","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    private Email studentEmail;","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    private Address studentAddress;","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"    private Set\u003cAttendance\u003e studentAttendance;","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    private Set\u003cHomework\u003e homework;","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    private Set\u003cTest\u003e test;","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"    private Comment comment;","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a {@code StudentBuilder} with the default details.","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder() {","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        parentName \u003d new Name(DEFAULT_PARENTNAME);","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        indexNumber \u003d new IndexNumber(DEFAULT_INDEXNUMBER);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"        sex \u003d new Sex(DEFAULT_SEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        age \u003d new Age(DEFAULT_AGE);","lastModifiedDate":"2023-04-02"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        parentAge \u003d new Age(DEFAULT_PARENTAGE);","lastModifiedDate":"2023-04-02"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"        studentPhone \u003d new Phone(DEFAULT_STUDENTPHONE);","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        parentPhone \u003d new Phone(DEFAULT_PARENTPHONE);","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"        cca \u003d new Cca(DEFAULT_CCA);","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        parentImage \u003d new Image(DEFAULT_IMAGEPARENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        parentEmail \u003d new Email(DEFAULT_PARENTEMAIL);","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"        parentAddress \u003d new Address(DEFAULT_PARENTADDRESS);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        relationship \u003d new Relationship(DEFAULT_RELATIONSHIP);","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"        studentEmail \u003d new Email(DEFAULT_STUDENTEMAIL);","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        studentAddress \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"        studentAttendance \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-22"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"        studentAttendance.add(new Attendance(DEFAULT_ATTENDANCE));","lastModifiedDate":"2023-03-22"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"        homework \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"        test \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        studentClass \u003d Class.of(DEFAULT_CLASS);","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        parent \u003d new Parent(parentName, parentAge, parentImage, parentEmail, parentPhone, parentAddress, tags);","lastModifiedDate":"2023-04-02"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"        //student \u003d new Student(name, studentClass, indexNumber, sex, parentName, parentPhone, relationship, age,","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        // studentImage, studentEmail, studentPhone, cca, studentAddress, studentAttendance, homework, test,","lastModifiedDate":"2023-04-05"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"        // tags, comment);","lastModifiedDate":"2023-04-05"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder(Student studentToCopy) {","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        name \u003d studentToCopy.getName();","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"        studentClass \u003d studentToCopy.getStudentClass();","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"        indexNumber \u003d studentToCopy.getIndexNumber();","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"        sex \u003d studentToCopy.getSex();","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"        parentName \u003d studentToCopy.getParentName();","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"        parentPhone \u003d studentToCopy.getParentNumber();","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"        relationship \u003d studentToCopy.getRls();","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"        age \u003d studentToCopy.getAge();","lastModifiedDate":"2023-04-02"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"        studentImage \u003d studentToCopy.getImage();","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"        studentEmail \u003d studentToCopy.getEmail();","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"        studentPhone \u003d studentToCopy.getPhone();","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"        cca \u003d studentToCopy.getCca();","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"        studentAddress \u003d studentToCopy.getAddress();","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"        studentAttendance \u003d studentToCopy.getAttendance();","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"        homework \u003d new HashSet\u003c\u003e(studentToCopy.getHomework());","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"        test \u003d new HashSet\u003c\u003e(studentToCopy.getTest());","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"        tags \u003d new HashSet\u003c\u003e(studentToCopy.getTags());","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"        comment \u003d studentToCopy.getComment();","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withName(String name) {","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-05"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withAddress(String address) {","lastModifiedDate":"2023-04-05"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentAddress \u003d new Address(address);","lastModifiedDate":"2023-04-05"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-04-05"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-05"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withEmail(String email) {","lastModifiedDate":"2023-04-05"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentEmail \u003d new Email(email);","lastModifiedDate":"2023-04-05"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-04-05"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-05"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withPhone(String phone) {","lastModifiedDate":"2023-04-05"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentPhone \u003d new Phone(phone);","lastModifiedDate":"2023-04-05"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-04-05"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-05"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withAge(String age) {","lastModifiedDate":"2023-04-05"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"        this.age \u003d new Age(age);","lastModifiedDate":"2023-04-05"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-04-05"},{"lineNumber":168,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-05"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withImage(String image) {","lastModifiedDate":"2023-04-05"},{"lineNumber":173,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentImage \u003d new Image(image);","lastModifiedDate":"2023-04-05"},{"lineNumber":174,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-04-05"},{"lineNumber":175,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":176,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":177,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-05"},{"lineNumber":178,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":179,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withClass(String studentClass) {","lastModifiedDate":"2023-04-05"},{"lineNumber":180,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentClass \u003d Class.of(studentClass);","lastModifiedDate":"2023-04-05"},{"lineNumber":181,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-04-05"},{"lineNumber":182,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":183,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2023-04-05"},{"lineNumber":185,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":186,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withIndexNumber(String indexNumber) {","lastModifiedDate":"2023-04-05"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d new IndexNumber(indexNumber);","lastModifiedDate":"2023-04-05"},{"lineNumber":188,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-04-05"},{"lineNumber":189,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":190,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":191,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"mayuanxin1234"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":201,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Comment} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":202,"author":{"gitId":"mayuanxin1234"},"content":"     * @param comment","lastModifiedDate":"2023-03-17"},{"lineNumber":203,"author":{"gitId":"mayuanxin1234"},"content":"     * @return","lastModifiedDate":"2023-03-17"},{"lineNumber":204,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentBuilder withComment(String comment) {","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"mayuanxin1234"},"content":"        this.comment \u003d new Comment(comment);","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"mayuanxin1234"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":209,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"     * Sets the {@code Test} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"mayuanxin1234"},"content":"     * @return Student","lastModifiedDate":"2023-03-17"},{"lineNumber":213,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":214,"author":{"gitId":"mayuanxin1234"},"content":"    public Student build() {","lastModifiedDate":"2023-03-17"},{"lineNumber":215,"author":{"gitId":"mayuanxin1234"},"content":"        return new Student(name, studentClass, indexNumber, sex, parentName, parentPhone, relationship, age,","lastModifiedDate":"2023-04-02"},{"lineNumber":216,"author":{"gitId":"mayuanxin1234"},"content":"                studentImage, studentEmail, studentPhone, cca, studentAddress, studentAttendance, homework, test,","lastModifiedDate":"2023-03-17"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"                tags, comment);","lastModifiedDate":"2023-03-17"},{"lineNumber":218,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":219,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"securespider":4,"Diatbbin":7,"mayuanxin1234":208}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"/*","lastModifiedDate":"2023-03-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":52,"mayuanxin1234":13}},{"path":"src/test/java/seedu/address/testutil/TypicalParents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-04-04"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-04-04"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-04-04"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-04-04"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-04-04"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-04-04"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIENDLY;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-04"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-04"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import java.util.List;","lastModifiedDate":"2023-04-04"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-04-04"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parents;","lastModifiedDate":"2023-04-04"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-04-04"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":" * A utility class containing a list of {@code Parent} objects to be used in tests.","lastModifiedDate":"2023-04-04"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-04-04"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"public class TypicalParents {","lastModifiedDate":"2023-04-04"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent ALICE \u003d new ParentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-04-04"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-04-04"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent BENSON \u003d new ParentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"            .withAge(\"20\")","lastModifiedDate":"2023-04-04"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-04-04"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"            .withImage(\"Insert parent image here!\")","lastModifiedDate":"2023-04-04"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-04-04"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent CARL \u003d new ParentBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-04-04"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent DANIEL \u003d new ParentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-04-04"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent ELLE \u003d new ParentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-04-04"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent FIONA \u003d new ParentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-04-04"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent GEORGE \u003d new ParentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-04-04"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"    // Parents not in the PowerConnectParentList","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent HOON \u003d new ParentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-04-04"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent IDA \u003d new ParentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-04-04"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent AMY \u003d new ParentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIENDLY).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"    public static final Parent BOB \u003d new ParentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-04-04"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET, VALID_TAG_FRIENDLY)","lastModifiedDate":"2023-04-04"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"            .build();","lastModifiedDate":"2023-04-04"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-04-04"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"    private TypicalParents() {} // prevents instantiation","lastModifiedDate":"2023-04-04"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-04-04"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"     * Returns an {@code Parents} with all the typical parents.","lastModifiedDate":"2023-04-04"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-04-04"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"    public static Parents getTypicalPowerConnectParents() {","lastModifiedDate":"2023-04-04"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"        Parents parents \u003d new Parents();","lastModifiedDate":"2023-04-04"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"        for (Parent parent : getTypicalParents()) {","lastModifiedDate":"2023-04-04"},{"lineNumber":70,"author":{"gitId":"Diatbbin"},"content":"            parents.addParent(parent);","lastModifiedDate":"2023-04-04"},{"lineNumber":71,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-04-04"},{"lineNumber":72,"author":{"gitId":"Diatbbin"},"content":"        return parents;","lastModifiedDate":"2023-04-04"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":74,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-04-04"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"    public static List\u003cParent\u003e getTypicalParents() {","lastModifiedDate":"2023-04-04"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-04-04"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-04-04"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-04-04"}],"authorContributionMap":{"Diatbbin":78}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIENDLY;","lastModifiedDate":"2023-04-04"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2023-04-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-04-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-04-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-04-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-04-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2018-03-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-04-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-04-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-04-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-04-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-04-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-04-04"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIENDLY).build();","lastModifiedDate":"2023-04-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-04-04"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET, VALID_TAG_FRIENDLY)","lastModifiedDate":"2023-04-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-18"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Diatbbin":4,"-":71,"mayuanxin1234":3}},{"path":"src/test/java/seedu/address/testutil/TypicalStudents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-04-05"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASS_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_CLASS_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INDEX_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_INDEX_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-04-05"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-04-05"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIENDLY;","lastModifiedDate":"2023-04-05"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_QUIET;","lastModifiedDate":"2023-04-05"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-04-05"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-04-05"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-04-05"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-04-05"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.PcClass;","lastModifiedDate":"2023-04-05"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-04-05"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-04-05"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":" * A utility class containing a list of {@code Student} objects to be used in tests.","lastModifiedDate":"2023-04-05"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-04-05"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"public class TypicalStudents {","lastModifiedDate":"2023-04-05"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student ALICE \u003d new StudentBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-04-05"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2023-04-05"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-04-05"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"            .withClass(\"1A\")","lastModifiedDate":"2023-04-05"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            .withComment(\"Good Student!\")","lastModifiedDate":"2023-04-05"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            .withIndexNumber(\"1\")","lastModifiedDate":"2023-04-05"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student BENSON \u003d new StudentBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-04-05"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"            .withAge(\"20\")","lastModifiedDate":"2023-04-05"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2023-04-05"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"            .withImage(\"Insert student image here!\")","lastModifiedDate":"2023-04-05"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"            .withEmail(\"johnd@example.com\")","lastModifiedDate":"2023-04-05"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-04-05"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"            .withClass(\"1A\")","lastModifiedDate":"2023-04-05"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"            .withIndexNumber(\"2\")","lastModifiedDate":"2023-04-05"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student CARL \u003d new StudentBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-04-05"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"            .withEmail(\"heinz@example.com\").withClass(\"1A\")","lastModifiedDate":"2023-04-05"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"            .withAddress(\"wall street\").withIndexNumber(\"3\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student DANIEL \u003d new StudentBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-04-05"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            .withEmail(\"cornelia@example.com\").withClass(\"1A\").withAddress(\"10th street\")","lastModifiedDate":"2023-04-05"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"            .withTags(\"friends\").withIndexNumber(\"4\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student ELLE \u003d new StudentBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-04-05"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"            .withEmail(\"werner@example.com\").withIndexNumber(\"5\")","lastModifiedDate":"2023-04-05"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"            .withClass(\"1A\").withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student FIONA \u003d new StudentBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-04-05"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"            .withEmail(\"lydia@example.com\").withIndexNumber(\"6\")","lastModifiedDate":"2023-04-05"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"            .withClass(\"1A\").withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student GEORGE \u003d new StudentBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-04-05"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"            .withEmail(\"anna@example.com\").withIndexNumber(\"7\")","lastModifiedDate":"2023-04-05"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"            .withClass(\"1A\").withAddress(\"4th street\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"    // Students not in the PowerConnectParentList","lastModifiedDate":"2023-04-05"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student HOON \u003d new StudentBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-04-05"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"            .withEmail(\"stefan@example.com\").withClass(\"1A\").withAddress(\"little india\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student IDA \u003d new StudentBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-04-05"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"            .withEmail(\"hans@example.com\").withClass(\"1A\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-04-05"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-04-05"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student AMY \u003d new StudentBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-04-05"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"            .withEmail(VALID_EMAIL_AMY).withClass(VALID_CLASS_AMY).withIndexNumber(VALID_INDEX_AMY)","lastModifiedDate":"2023-04-05"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"            .withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIENDLY).build();","lastModifiedDate":"2023-04-05"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Student BOB \u003d new StudentBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-04-05"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"            .withEmail(VALID_EMAIL_BOB).withClass(VALID_CLASS_BOB).withIndexNumber(VALID_INDEX_BOB)","lastModifiedDate":"2023-04-05"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_QUIET, VALID_TAG_FRIENDLY)","lastModifiedDate":"2023-04-05"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"            .build();","lastModifiedDate":"2023-04-05"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-04-05"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"    private TypicalStudents() {} // prevents instantiation","lastModifiedDate":"2023-04-05"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-04-05"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns an {@code Parents} with all the typical parents.","lastModifiedDate":"2023-04-05"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-04-05"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"    public static PcClass getTypicalPowerConnectStudents() {","lastModifiedDate":"2023-04-05"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"        PcClass classes \u003d new PcClass();","lastModifiedDate":"2023-04-05"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        for (Student student : getTypicalStudents()) {","lastModifiedDate":"2023-04-05"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"            Class curr \u003d student.getStudentClass();","lastModifiedDate":"2023-04-05"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"            if (!classes.hasClass(curr)) {","lastModifiedDate":"2023-04-05"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"                curr.addStudent(student);","lastModifiedDate":"2023-04-05"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"                classes.addClass(curr);","lastModifiedDate":"2023-04-05"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-04-05"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"                curr.addStudent(student);","lastModifiedDate":"2023-04-05"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-04-05"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-04-05"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"        return classes;","lastModifiedDate":"2023-04-05"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-04-05"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"    public static List\u003cStudent\u003e getTypicalStudents() {","lastModifiedDate":"2023-04-05"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-04-05"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-04-05"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-04-05"}],"authorContributionMap":{"securespider":8,"mayuanxin1234":95}}]
