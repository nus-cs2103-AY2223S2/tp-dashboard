[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T09-1/tp/actions)","lastModifiedDate":"2023-02-25"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"# PowerConnect","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"* PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact management tasks done faster than traditional GUI apps \u003cbr\u003e","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  Example usages:","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"  * keep track of student grades","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"  * adding comments to students","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"* The project simulates an ongoing software project for a desktop application (called _AddressBook_) used for managing contact details.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  * It is **written in OOP fashion**. It provides a **reasonably well-written** code base **bigger** (around 6 KLoC) than what students usually write in beginner-level SE modules, without being overwhelmingly big.","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  * It comes with a **reasonable level of user and developer documentation**.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"* It is named `PowerConnect` (`PC` for short) because it provides teacher a powerful application to connect with their students.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* For the detailed documentation of this project, see the **[Address Book Product Website](https://se-education.org/addressbook-level3)**.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"mayuanxin1234":8,"-":7}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"### Pang Chin Kiat, Vincent","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"\u003cimg src\u003d\"images/securespider.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"[[github](https://github.com/securespider)]","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"[[portfolio](team/securespider.md)]","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"* Role: Developer","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"* Responsibilities: Scheduling and tracking","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"### Ma Yuanxin","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"\u003cimg src\u003d\"./images/mayuanxin1234.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"[[github](https://github.com/mayuanxin1234)]","lastModifiedDate":"2023-02-18"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"[[portfolio](team/mayuanxin1234.md)]","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"*  Role: Developer","lastModifiedDate":"2023-02-18"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"*  Responsibilities: Deliverables and deadlines, and Integration","lastModifiedDate":"2023-02-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"### Lim Diat Bhin","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"\u003cimg src\u003d\"./images/diatbbin.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"[[github](https://github.com/Diatbbin)]","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"[[portfolio](team/diatbbin.md)]","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"* Responsibilities: Code quality and Model component","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"### Yeo Wen Jue","lastModifiedDate":"2023-02-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"\u003cimg src\u003d\"images/mrtwit99.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"[[github](https://github.com/MrTwit99)]","lastModifiedDate":"2023-02-22"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"[[portfolio](team/mrtwit99.md)]","lastModifiedDate":"2023-02-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"* Responsibilities: Testing","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"MrTwit99":10,"securespider":5,"-":30,"mayuanxin1234":7}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"### PowerConnect Developer Guide","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"##### Table of Contents","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"1. [Quick Start](#quickstart)","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"2. [Features](#features)","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    1. [Student Features](#student)","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"        1. [Add student: `add`](#addstudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"        2. [Add students\u0027 grade: `grade`](#gradestudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"        3. [Add comments to students: `comment`](#commentstudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"        4. [Listing all students in a particular class: `list`](#liststudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"        5. [Editing a student\u0027s particulars: `edit`](#editstudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"        6. [Searching students: `find`](#findstudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        7. [Deleting a student: `delete`](#deletestudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    2. [Parent Features](#parent)","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"        1. [Add parent/guardian: `add`](#addparent)","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"        2. [Listing all parents: `list`](#listparent)","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        3. [Delete a parent/ parent information: `delete`](#deleteparent)","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"3. [Viewing help: `help`](#help)","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"4. [Exiting program: `exit`](#exit)","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"5. [FAQ](#faq)","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"6. [Command Summary](#summary)","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"mayuanxin1234"},"content":"* This product mainly targets secondary school teachers that prefer CLI over GUI,  manage large groups of students and require ease of access to students\u0027 information.","lastModifiedDate":"2023-02-25"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"mayuanxin1234"},"content":"**Value proposition**:","lastModifiedDate":"2023-02-25"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"mayuanxin1234"},"content":"* Have many students in different classes / co-curricular activities (CCAs) that have different phone number that needs to be kept track of","lastModifiedDate":"2023-02-25"},{"lineNumber":282,"author":{"gitId":"mayuanxin1234"},"content":"* Need to keep track of students’ parents / next-of-kins’ contact details for consent forms","lastModifiedDate":"2023-02-25"},{"lineNumber":283,"author":{"gitId":"mayuanxin1234"},"content":"* Teachers may not be able to match students names and faces well and so this app serves as an easy way to identify students (since there are too many students)","lastModifiedDate":"2023-02-25"},{"lineNumber":284,"author":{"gitId":"mayuanxin1234"},"content":"* Keep track of homework given and deadline","lastModifiedDate":"2023-02-25"},{"lineNumber":285,"author":{"gitId":"mayuanxin1234"},"content":"* Streamline administration processes because they have a lot of stuff to keep track of (eg. Attendance, assignments, grades, contact details)","lastModifiedDate":"2023-02-25"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2023-02-25"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"MrTwit99"},"content":"| No  | As a...                     | I can...                                                                    | So that...                                                                                                                                 | Notes                                                                                                                                     | Priority |","lastModifiedDate":"2023-03-07"},{"lineNumber":291,"author":{"gitId":"MrTwit99"},"content":"|-----|-----------------------------|-----------------------------------------------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------|----------|","lastModifiedDate":"2023-03-07"},{"lineNumber":292,"author":{"gitId":"MrTwit99"},"content":"| 1   | Teacher                     | Record student’s attendance                                                 | I know that my student is present in class (in school).                                                                                    |                                                                                                                                           | High     |","lastModifiedDate":"2023-03-07"},{"lineNumber":293,"author":{"gitId":"MrTwit99"},"content":"| 2   | Teacher                     | Record students’ assessment and test grades.                                | I am able to manage my students’ performance                                                                                               |                                                                                                                                           | High     |","lastModifiedDate":"2023-03-07"},{"lineNumber":294,"author":{"gitId":"MrTwit99"},"content":"| 3   | Teacher                     | Have an efficient way to view and track my students’ attendance.            | I will have an easier time managing my students’ attendance over the year                                                                  |                                                                                                                                           | High     |","lastModifiedDate":"2023-03-07"},{"lineNumber":295,"author":{"gitId":"MrTwit99"},"content":"| 4   | Teacher                     | Have the option to leave some details empty                                 | I am able to key in my students’ information when there’s missing information                                                              |                                                                                                                                           | High     |","lastModifiedDate":"2023-03-07"},{"lineNumber":296,"author":{"gitId":"MrTwit99"},"content":"| 5   | Teacher                     | Document students’ progress                                                 | I am able to record easily the students’ performance                                                                                       |                                                                                                                                           | High     |","lastModifiedDate":"2023-03-07"},{"lineNumber":297,"author":{"gitId":"MrTwit99"},"content":"| 6   | Teacher                     | Organise my students by class                                               | I am able to identify which class they belong to                                                                                           | Determine whether to create separate classes: “class” class and “student” class or merge                                                  | High     |","lastModifiedDate":"2023-03-07"},{"lineNumber":298,"author":{"gitId":"MrTwit99"},"content":"| 7   | Non tech-savvy teacher      | Learn about new commands                                                    | I am able to use the application effectively and save unnecessary time and effort in recording students’ particulars and searching for it. | Provide User Guide that is easy to understand                                                                                             | High     |","lastModifiedDate":"2023-03-07"},{"lineNumber":299,"author":{"gitId":"MrTwit99"},"content":"| 8   | Teacher                     | Recognise my students from different classes through their photos           | I am able to recognise my students\u0027 looks                                                                                                  | Long setup process for user as they need to manually input images for individual student\u003cp\u003e\u003c/p\u003e Keeping separate file / folder for images | Medium   |","lastModifiedDate":"2023-03-07"},{"lineNumber":300,"author":{"gitId":"MrTwit99"},"content":"| 9   | Caring Teacher              | Provide comments for each student                                           | I am able to keep track of students who need meaningful feedback and support.                                                              | (comments section on each student)                                                                                                        | Medium   |","lastModifiedDate":"2023-03-07"},{"lineNumber":301,"author":{"gitId":"MrTwit99"},"content":"| 10  | Teacher / teacher assistant | Have an efficient way to retrieve my students’ contact details.             | I am able to contact them easily                                                                                                           | Assumption: student details are known to teachers / TAs                                                                                   | Medium   |","lastModifiedDate":"2023-03-07"},{"lineNumber":302,"author":{"gitId":"MrTwit99"},"content":"| 11  | Teacher                     | Keep track of students who have submitted assignment                        | I am aware of which student missed the deadline for their work                                                                             |                                                                                                                                           | Medium   |","lastModifiedDate":"2023-03-07"},{"lineNumber":303,"author":{"gitId":"MrTwit99"},"content":"| 12  | Motivational teacher        | Sort my students by overall grades                                          | I am able to foster a positive and supportive learning environment                                                                         |                                                                                                                                           | Medium   |","lastModifiedDate":"2023-03-07"},{"lineNumber":304,"author":{"gitId":"MrTwit99"},"content":"| 13  | Teacher                     | Use an application that is easy to navigate about and has a nice interface. | I am able to save unnecessary time and effort in recording students’ particulars and searching for it.                                     | Issue under designs                                                                                                                       | Low      |","lastModifiedDate":"2023-03-07"},{"lineNumber":305,"author":{"gitId":"MrTwit99"},"content":"| 14  | Responsible Teacher         | Access student records, such as grades and attendance                       | I will be able to make informed decisions about student progress                                                                           | Summary of all students grades for a particular test / class                                                                              | Low      |","lastModifiedDate":"2023-03-07"},{"lineNumber":306,"author":{"gitId":"MrTwit99"},"content":"| 15  | Busy teacher                | Have a todo list                                                            | I am able to keep track of what to do                                                                                                      |                                                                                                                                           | Low / NA |","lastModifiedDate":"2023-03-07"},{"lineNumber":307,"author":{"gitId":"MrTwit99"},"content":"| 16  | Teacher                     | Use an application with a reminder system                                   | I am able to track the things that needs to be done                                                                                        |                                                                                                                                           | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":308,"author":{"gitId":"MrTwit99"},"content":"| 17  | Teacher                     | Efficiently and effectively assign assessments and assignments              | I am able to better assess my students’ learning and progress                                                                              |                                                                                                                                           | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":309,"author":{"gitId":"MrTwit99"},"content":"| 18  | Teacher                     | Managing students’ behaviours and actions                                   | I am able to promote a safe and productive learning space for all                                                                          |                                                                                                                                           | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":310,"author":{"gitId":"MrTwit99"},"content":"| 19  | Teacher                     | Add individual feedback to students                                         | I am able to provide feedback to parents/guardians effectively                                                                             | Duplicate point to Point 7                                                                                                                | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":311,"author":{"gitId":"MrTwit99"},"content":"| 20  | Teacher                     | Access my students contacts conveniently                                    | I am able to build a closer relationship with my students and their next of kin                                                            | Too vague                                                                                                                                 | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":312,"author":{"gitId":"MrTwit99"},"content":"| 21  | Busy Teacher                | Keep track of my teaching feedback                                          | I can keep improving my teaching practices                                                                                                 | Hard to get school admin team on board                                                                                                    | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":313,"author":{"gitId":"MrTwit99"},"content":"| 22  | Efficient Teacher           | Integrate technology into my teaching                                       | I am able to enrich my student learning                                                                                                    | Vague                                                                                                                                     | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":314,"author":{"gitId":"MrTwit99"},"content":"| 23  | Teacher assistant           | Retrieve my students contact                                                | I am able to look them up easily                                                                                                           | Duplicate Point to Point 10                                                                                                               | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":315,"author":{"gitId":"MrTwit99"},"content":"| 24  | Teacher                     | Track the date and time of my classes                                       | I will be able to reach my classes on time                                                                                                 |                                                                                                                                           | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":316,"author":{"gitId":"MrTwit99"},"content":"| 25  | Forgetful teacher           | Record attendance                                                           | I am able to keep track of my students                                                                                                     | Duplicate to Point 5                                                                                                                      | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":317,"author":{"gitId":"MrTwit99"},"content":"| 26  | Teacher                     | Identify weaker students                                                    | I can give them more attention in class                                                                                                    | Duplicate to Point 20                                                                                                                     | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":318,"author":{"gitId":"MrTwit99"},"content":"| 27  | Teacher                     | Manage my consultation timings                                              | I am able to organise my schedule                                                                                                          |                                                                                                                                           | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":319,"author":{"gitId":"MrTwit99"},"content":"| 28  | Teacher                     | Set reminders for my consultation timings                                   | I am able to ensure I am not late for consultations                                                                                        |                                                                                                                                           | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":320,"author":{"gitId":"MrTwit99"},"content":"| 29  | Teacher                     | Marks my students’ assignments automatically                                | I am able to use time and effort spent on it on other use, such as thinking of ways to improve my students’ learning                       | Difficult to implement Autograder                                                                                                         | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":321,"author":{"gitId":"MrTwit99"},"content":"| 30  | Teacher                     | Have an application that is used as CLI instead of GUI                      | I am able to make use of my fast typing speed to sort out all the administrative work                                                      | Too Vague                                                                                                                                 | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":322,"author":{"gitId":"MrTwit99"},"content":"| 31  | Busy Teacher                | Easily manage my schedule                                                   | I am able to spend more time on other things                                                                                               | Out of scope                                                                                                                              | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":323,"author":{"gitId":"MrTwit99"},"content":"| 32  | Busy Teacher                | Know which tasks to prioritise                                              | I am able to ensure all of my responsibilities are taken care of in a timely and efficient manner.                                         |                                                                                                                                           | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":324,"author":{"gitId":"MrTwit99"},"content":"| 33  | Teacher                     | Track the date and time of the classes that I have                          | I am able to reach on time and teach the correct module for the particular lesson slot.                                                    | Out of scope                                                                                                                              | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":325,"author":{"gitId":"MrTwit99"},"content":"| 34  | Teacher                     | Amend date and time of certain lesson timings                               | I am able to change lesson dates and timings easily when lessons shift                                                                     |                                                                                                                                           | NA       |","lastModifiedDate":"2023-03-07"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"mayuanxin1234"},"content":"***For all use cases below, the System is PowerConnect and the Actor is the teacher, unless specified otherwise***","lastModifiedDate":"2023-02-25"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":331,"author":{"gitId":"Diatbbin"},"content":"**Preconditions:** `class` and `index number` of the `student`","lastModifiedDate":"2023-03-01"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"Diatbbin"},"content":"**Use Case: UC01 - Adding `grade` for a `student`**","lastModifiedDate":"2023-03-01"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"mayuanxin1234"},"content":"**MSS:**","lastModifiedDate":"2023-02-25"},{"lineNumber":336,"author":{"gitId":"mayuanxin1234"},"content":"1. User keys in the `test` name, `index number` of student and corresponding `grade`","lastModifiedDate":"2023-02-25"},{"lineNumber":337,"author":{"gitId":"mayuanxin1234"},"content":"2. System displays feedback to the user that grade has been successfully added for the student","lastModifiedDate":"2023-02-25"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"mayuanxin1234"},"content":"**Extensions:**","lastModifiedDate":"2023-02-25"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"mayuanxin1234"},"content":"+ 1a. User keyed in invalid `index number` / does not **SATISFY** Precondition.","lastModifiedDate":"2023-02-25"},{"lineNumber":344,"author":{"gitId":"mayuanxin1234"},"content":"    + 1a1. System displays an error message indicating `index number` is invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":345,"author":{"gitId":"mayuanxin1234"},"content":"    + 1a2. System output of all `students` particulars in his/her class.","lastModifiedDate":"2023-02-25"},{"lineNumber":346,"author":{"gitId":"mayuanxin1234"},"content":"    + 1a3. User checks for the `index number` of the `student` and keys into the system.","lastModifiedDate":"2023-02-25"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":348,"author":{"gitId":"mayuanxin1234"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-25"},{"lineNumber":349,"author":{"gitId":"mayuanxin1234"},"content":"+ 1b. Test name is invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":350,"author":{"gitId":"mayuanxin1234"},"content":"    + 1b1. System displays an error message indicating wrong test name.","lastModifiedDate":"2023-02-25"},{"lineNumber":351,"author":{"gitId":"mayuanxin1234"},"content":"    + 1b2. User adds a new test name.","lastModifiedDate":"2023-02-25"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":353,"author":{"gitId":"mayuanxin1234"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-02-25"},{"lineNumber":354,"author":{"gitId":"mayuanxin1234"},"content":"+ 1c. User gave a `Grade` value that is not of an integer.","lastModifiedDate":"2023-02-25"},{"lineNumber":355,"author":{"gitId":"mayuanxin1234"},"content":"    + 1c1. System displays an error message indicating the wrong grade given.","lastModifiedDate":"2023-02-25"},{"lineNumber":356,"author":{"gitId":"mayuanxin1234"},"content":"    + 1c2. User checks and adds the `grade` input again.","lastModifiedDate":"2023-02-25"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":358,"author":{"gitId":"mayuanxin1234"},"content":"      Use case resumes at step 2. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"mayuanxin1234"},"content":"**Use Case: UC02 - Adding `comment` for a `student`**","lastModifiedDate":"2023-02-25"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":362,"author":{"gitId":"mayuanxin1234"},"content":"**MSS:**","lastModifiedDate":"2023-02-25"},{"lineNumber":363,"author":{"gitId":"mayuanxin1234"},"content":"1. User keys in the `index number` of student and the corresponding `comment` for the student","lastModifiedDate":"2023-02-25"},{"lineNumber":364,"author":{"gitId":"mayuanxin1234"},"content":"2. If the student has an existing `comment`, the system will request the user to confirm the change of comments. Otherwise, skip to step 3.","lastModifiedDate":"2023-02-25"},{"lineNumber":365,"author":{"gitId":"mayuanxin1234"},"content":"3. System displays feedback to the user that the comment has been successfully added for the `student`.","lastModifiedDate":"2023-02-25"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"mayuanxin1234"},"content":"**Extensions:**","lastModifiedDate":"2023-02-25"},{"lineNumber":370,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":371,"author":{"gitId":"mayuanxin1234"},"content":"+ 1a. User keyed in invalid `index number` / does not **SATISFY** Precondition.","lastModifiedDate":"2023-02-25"},{"lineNumber":372,"author":{"gitId":"mayuanxin1234"},"content":"    + 1a1. System displays an error message indicating the `index number` is invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":373,"author":{"gitId":"mayuanxin1234"},"content":"    + 1a2. System output of all `students` particulars in his/her class.","lastModifiedDate":"2023-02-25"},{"lineNumber":374,"author":{"gitId":"mayuanxin1234"},"content":"    + 1a3. User checks for the index number of the `student` and keys into the system.","lastModifiedDate":"2023-02-25"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":376,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"mayuanxin1234"},"content":"+ 2a. User informs the system to **NOT** change the existing comment for the `student`.","lastModifiedDate":"2023-02-25"},{"lineNumber":379,"author":{"gitId":"mayuanxin1234"},"content":"    + 2a1. System displays an error message indicating the current process of adding a new comment for the `student` has","lastModifiedDate":"2023-02-25"},{"lineNumber":380,"author":{"gitId":"mayuanxin1234"},"content":"      ended.","lastModifiedDate":"2023-02-25"},{"lineNumber":381,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":382,"author":{"gitId":"mayuanxin1234"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":383,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":384,"author":{"gitId":"mayuanxin1234"},"content":"**Use Case: UC03 - Adding a new `student` to an existing `class`**","lastModifiedDate":"2023-02-25"},{"lineNumber":385,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":386,"author":{"gitId":"mayuanxin1234"},"content":"**MSS:**","lastModifiedDate":"2023-02-25"},{"lineNumber":387,"author":{"gitId":"mayuanxin1234"},"content":"1. User keys in **ALL COMPULSORY** details and any other **OPTIONAL** details as part of student’s particulars","lastModifiedDate":"2023-02-25"},{"lineNumber":388,"author":{"gitId":"mayuanxin1234"},"content":"2. System displays feedback to the user that the `student` has been successfully been created and added to the respective `class`","lastModifiedDate":"2023-02-25"},{"lineNumber":389,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":390,"author":{"gitId":"mayuanxin1234"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":391,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":392,"author":{"gitId":"mayuanxin1234"},"content":"**Extensions:**","lastModifiedDate":"2023-02-25"},{"lineNumber":393,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":394,"author":{"gitId":"mayuanxin1234"},"content":"+ 1a. User did not enter **ALL COMPULSORY** details.","lastModifiedDate":"2023-02-25"},{"lineNumber":395,"author":{"gitId":"mayuanxin1234"},"content":"    + 1a1. System displays an error message to the user indicating that there is insufficient information given to create the new `student`.","lastModifiedDate":"2023-02-25"},{"lineNumber":396,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":397,"author":{"gitId":"mayuanxin1234"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":398,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":399,"author":{"gitId":"mayuanxin1234"},"content":"+ 1b. User keys in invalid **COMPULSORY** or **OPTIONAL** information","lastModifiedDate":"2023-02-25"},{"lineNumber":400,"author":{"gitId":"Diatbbin"},"content":"    + 1b1. User keys in invalid `SEX` type not supported by system or `SEX` type contain numbers.","lastModifiedDate":"2023-03-01"},{"lineNumber":401,"author":{"gitId":"Diatbbin"},"content":"    + 1b2. User keys the same information for the student\u0027s `name` and NOK’s `name`.","lastModifiedDate":"2023-03-01"},{"lineNumber":402,"author":{"gitId":"Diatbbin"},"content":"    + 1b3. User keys in `age` or `phone number` that are not of an integer.","lastModifiedDate":"2023-03-01"},{"lineNumber":403,"author":{"gitId":"Diatbbin"},"content":"    + 1b4. User keys in invalid path to `image`.","lastModifiedDate":"2023-03-01"},{"lineNumber":404,"author":{"gitId":"Diatbbin"},"content":"    + 1b5. System displays an error message to the user indicating that he/she has keyed in wrong information for the `student` along with a sample of the correct way to key in information for a new `student`.","lastModifiedDate":"2023-03-01"},{"lineNumber":405,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":406,"author":{"gitId":"mayuanxin1234"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":407,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":408,"author":{"gitId":"mayuanxin1234"},"content":"+ 2a. User is trying to create a new `student` whose index number belongs to an existing `student` in the class.","lastModifiedDate":"2023-02-25"},{"lineNumber":409,"author":{"gitId":"mayuanxin1234"},"content":"    + 2a1. System displays an error message to the user indicating that a `student` with the same `index number` already exists in the `class`.","lastModifiedDate":"2023-02-25"},{"lineNumber":410,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":411,"author":{"gitId":"mayuanxin1234"},"content":"      Use case ends. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":412,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":413,"author":{"gitId":"mayuanxin1234"},"content":"**Use Case: UC04 - Listing all `students` in the selected `class`**","lastModifiedDate":"2023-02-25"},{"lineNumber":414,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":415,"author":{"gitId":"mayuanxin1234"},"content":"**MSS:**","lastModifiedDate":"2023-02-25"},{"lineNumber":416,"author":{"gitId":"mayuanxin1234"},"content":"1. User keys in the command to view the list of all `students` in the selected `class`","lastModifiedDate":"2023-02-25"},{"lineNumber":417,"author":{"gitId":"mayuanxin1234"},"content":"2. System displays all `students` particulars in the `class`","lastModifiedDate":"2023-02-25"},{"lineNumber":418,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":419,"author":{"gitId":"mayuanxin1234"},"content":"   Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":420,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":421,"author":{"gitId":"mayuanxin1234"},"content":"**Extensions:**","lastModifiedDate":"2023-02-25"},{"lineNumber":422,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":423,"author":{"gitId":"mayuanxin1234"},"content":"+ 1a. User keys in an invalid `class`.","lastModifiedDate":"2023-02-25"},{"lineNumber":424,"author":{"gitId":"mayuanxin1234"},"content":"    + 1a1. System displays an error message to the user informing him/her the `class` is invalid.","lastModifiedDate":"2023-02-25"},{"lineNumber":425,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":426,"author":{"gitId":"mayuanxin1234"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":427,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":428,"author":{"gitId":"mayuanxin1234"},"content":"+ 2a. Selected `class` does not have any `students`","lastModifiedDate":"2023-02-25"},{"lineNumber":429,"author":{"gitId":"mayuanxin1234"},"content":"    + 2a1. System displays an empty list.","lastModifiedDate":"2023-02-25"},{"lineNumber":430,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":431,"author":{"gitId":"mayuanxin1234"},"content":"      Use case ends.","lastModifiedDate":"2023-02-25"},{"lineNumber":432,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":433,"author":{"gitId":"Diatbbin"},"content":"**Use Case: UC05 - Editing `personal details` of `students`**","lastModifiedDate":"2023-03-01"},{"lineNumber":434,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":435,"author":{"gitId":"Diatbbin"},"content":"**MSS:**","lastModifiedDate":"2023-03-01"},{"lineNumber":436,"author":{"gitId":"Diatbbin"},"content":"1. User enters the `type` of personal detail and corresponding `detail` to edit","lastModifiedDate":"2023-03-01"},{"lineNumber":437,"author":{"gitId":"Diatbbin"},"content":"2. System displays that the personal detail of the student has been changed successfully","lastModifiedDate":"2023-03-01"},{"lineNumber":438,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":439,"author":{"gitId":"Diatbbin"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":440,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":441,"author":{"gitId":"Diatbbin"},"content":"**Extensions:**","lastModifiedDate":"2023-03-01"},{"lineNumber":442,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":443,"author":{"gitId":"Diatbbin"},"content":"+ 1a. User did not enter **ALL COMPULSORY** details.","lastModifiedDate":"2023-03-01"},{"lineNumber":444,"author":{"gitId":"Diatbbin"},"content":"    + 1a1. System displays an error message","lastModifiedDate":"2023-03-01"},{"lineNumber":445,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":446,"author":{"gitId":"Diatbbin"},"content":"      Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":447,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":448,"author":{"gitId":"Diatbbin"},"content":"+ 1b. User keys in invalid **COMPULSORY** or **OPTIONAL** information","lastModifiedDate":"2023-03-01"},{"lineNumber":449,"author":{"gitId":"Diatbbin"},"content":"    + 1b1. System displays an error message with an example on how to use the command.","lastModifiedDate":"2023-03-01"},{"lineNumber":450,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":451,"author":{"gitId":"Diatbbin"},"content":"      Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":452,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":453,"author":{"gitId":"Diatbbin"},"content":"**Use Case: UC06 - Finding `student` by `student id`**","lastModifiedDate":"2023-03-01"},{"lineNumber":454,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":455,"author":{"gitId":"Diatbbin"},"content":"**MSS:**","lastModifiedDate":"2023-03-01"},{"lineNumber":456,"author":{"gitId":"Diatbbin"},"content":"1. User keys in the `class` and `index number` of the student he/she is finding","lastModifiedDate":"2023-03-01"},{"lineNumber":457,"author":{"gitId":"Diatbbin"},"content":"2. System displays the student with all his/her corresponding personal details","lastModifiedDate":"2023-03-01"},{"lineNumber":458,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":459,"author":{"gitId":"Diatbbin"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":460,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":461,"author":{"gitId":"Diatbbin"},"content":"**Extensions:**","lastModifiedDate":"2023-03-01"},{"lineNumber":462,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":463,"author":{"gitId":"Diatbbin"},"content":"+ 1a. User did not enter **ALL COMPULSORY** details.","lastModifiedDate":"2023-03-01"},{"lineNumber":464,"author":{"gitId":"Diatbbin"},"content":"    + 1a1. System displays an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":465,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":466,"author":{"gitId":"Diatbbin"},"content":"      Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":467,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":468,"author":{"gitId":"Diatbbin"},"content":"+ 1b. User keys in invalid **COMPULSORY** information","lastModifiedDate":"2023-03-01"},{"lineNumber":469,"author":{"gitId":"Diatbbin"},"content":"    + 1b1. System displays an error message with an example on how to use the command.","lastModifiedDate":"2023-03-01"},{"lineNumber":470,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":471,"author":{"gitId":"Diatbbin"},"content":"      Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":472,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":473,"author":{"gitId":"Diatbbin"},"content":"**Use Case: UC07 - Deleting `student` or `student information` from the `database`**","lastModifiedDate":"2023-03-01"},{"lineNumber":474,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":475,"author":{"gitId":"Diatbbin"},"content":"**MSS:**","lastModifiedDate":"2023-03-01"},{"lineNumber":476,"author":{"gitId":"Diatbbin"},"content":"1. User keys in the command to delete a student or student information","lastModifiedDate":"2023-03-01"},{"lineNumber":477,"author":{"gitId":"Diatbbin"},"content":"2. System displays that the student or student information has been deleted successfully","lastModifiedDate":"2023-03-01"},{"lineNumber":478,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":479,"author":{"gitId":"Diatbbin"},"content":"   Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":480,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":481,"author":{"gitId":"Diatbbin"},"content":"**Extensions:**","lastModifiedDate":"2023-03-01"},{"lineNumber":482,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":483,"author":{"gitId":"Diatbbin"},"content":"+ 1a. User did not enter **ALL COMPULSORY** details.","lastModifiedDate":"2023-03-01"},{"lineNumber":484,"author":{"gitId":"Diatbbin"},"content":"    + 1a1. System displays an error message.","lastModifiedDate":"2023-03-01"},{"lineNumber":485,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":486,"author":{"gitId":"Diatbbin"},"content":"      Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":487,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":488,"author":{"gitId":"Diatbbin"},"content":"+ 1b. User keys in invalid **COMPULSORY** or **OPTIONAL** information","lastModifiedDate":"2023-03-01"},{"lineNumber":489,"author":{"gitId":"Diatbbin"},"content":"    + 1b1. System displays an error message with an example on how to use the command.","lastModifiedDate":"2023-03-01"},{"lineNumber":490,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":491,"author":{"gitId":"Diatbbin"},"content":"      Use case ends.","lastModifiedDate":"2023-03-01"},{"lineNumber":492,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-01"},{"lineNumber":493,"author":{"gitId":"mayuanxin1234"},"content":"*{More to be added}* \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":495,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":496,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":497,"author":{"gitId":"mayuanxin1234"},"content":"1. Should work on any mainstream OS as long as it has Java `11` or above installed.","lastModifiedDate":"2023-02-25"},{"lineNumber":498,"author":{"gitId":"mayuanxin1234"},"content":"2. Should be able to handle up to 400 students without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-02-25"},{"lineNumber":499,"author":{"gitId":"Diatbbin"},"content":"3. Should package it as a JAR file that is smaller than 50mb","lastModifiedDate":"2023-03-01"},{"lineNumber":500,"author":{"gitId":"Diatbbin"},"content":"4. Should store data in a txt/csv file","lastModifiedDate":"2023-03-01"},{"lineNumber":501,"author":{"gitId":"Diatbbin"},"content":"5. PowerConnect should be able to work without any internet access.","lastModifiedDate":"2023-03-01"},{"lineNumber":502,"author":{"gitId":"Diatbbin"},"content":"6. PowerConnect should only be used by a single user per installation and not by multiple users.","lastModifiedDate":"2023-03-01"},{"lineNumber":503,"author":{"gitId":"Diatbbin"},"content":"7. Users with above average typing speed for regular English text (i.e. not code, not system admin commands) should be","lastModifiedDate":"2023-03-01"},{"lineNumber":504,"author":{"gitId":"mayuanxin1234"},"content":"   able to accomplish the majority of the tasks faster using CLI commands than using the mouse.","lastModifiedDate":"2023-02-25"},{"lineNumber":505,"author":{"gitId":"securespider"},"content":"8. PowerConnect should be able to handle all user input errors gracefully.","lastModifiedDate":"2023-03-03"},{"lineNumber":506,"author":{"gitId":"securespider"},"content":"9. PowerConnect should be able to display all error messages in a user-friendly manner.","lastModifiedDate":"2023-03-03"},{"lineNumber":507,"author":{"gitId":"securespider"},"content":"10. PowerConnect should be able to run on a 32-bit system with 8GB of RAM.","lastModifiedDate":"2023-03-03"},{"lineNumber":508,"author":{"gitId":"securespider"},"content":"11. PowerConnect should be able to display all success messages within 1 second.","lastModifiedDate":"2023-03-03"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":514,"author":{"gitId":"mayuanxin1234"},"content":"**Attributes**: Information of a student / parent. \u003cbr\u003e For example, name, phone number, email address etc \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":515,"author":{"gitId":"mayuanxin1234"},"content":"**CLI**: Command Line Interface \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":516,"author":{"gitId":"mayuanxin1234"},"content":"**Mainstream OS**: Windows, Linux, Unix, OS-X \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-25"},{"lineNumber":517,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-25"},{"lineNumber":518,"author":{"gitId":"mayuanxin1234"},"content":"*{More to be added}*","lastModifiedDate":"2023-02-25"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":520,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"    1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"    1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"    1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"    1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"    1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"-"},"content":"       Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"    1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"       Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":560,"author":{"gitId":"-"},"content":"    1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"-"},"content":"       Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":562,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":565,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":569,"author":{"gitId":"-"},"content":"    1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":570,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":571,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"MrTwit99":36,"securespider":4,"Diatbbin":72,"mayuanxin1234":117,"-":342}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"# PowerConnect User Guide","lastModifiedDate":"2023-02-18"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-18"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"##### Table of Contents","lastModifiedDate":"2023-02-18"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"1. [Quick Start](#quickstart)","lastModifiedDate":"2023-02-18"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"2. [Features](#features)","lastModifiedDate":"2023-02-18"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    1. [Student Features](#student)","lastModifiedDate":"2023-02-18"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"        1. [Add student: `add`](#addstudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"        2. [Add students\u0027 grade: `grade`](#gradestudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"        3. [Add comments to students: `comment`](#commentstudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"        4. [Listing all students in a particular class: `list`](#liststudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"        5. [Editing a student\u0027s particulars: `edit`](#editstudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"        6. [Searching students: `find`](#findstudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        7. [Deleting a student: `delete`](#deletestudent)","lastModifiedDate":"2023-02-18"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    2. [Parent Features](#parent)","lastModifiedDate":"2023-02-18"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"        1. [Add parent/guardian: `add`](#addparent)","lastModifiedDate":"2023-02-18"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"        2. [Listing all parents: `list`](#listparent)","lastModifiedDate":"2023-02-18"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        3. [Delete a parent/ parent information: `delete`](#deleteparent)","lastModifiedDate":"2023-02-18"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"3. [Viewing help: `help`](#help)","lastModifiedDate":"2023-02-18"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"4. [Exiting program: `exit`](#exit)","lastModifiedDate":"2023-02-18"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"5. [FAQ](#faq)","lastModifiedDate":"2023-02-18"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"6. [Command Summary](#summary)","lastModifiedDate":"2023-02-18"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name\u003d\"quickstart\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"## Quick Start","lastModifiedDate":"2023-02-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"1. Download the latest `powerconnect.jar` from [here]().","lastModifiedDate":"2023-02-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar addressbook.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"1. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    * `list` : Lists all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    * `add n/John Doe p/98765432 e/johnd@example.com a/John street, block 123, #01-01` : Adds a contact named `John Doe` to the Address Book.","lastModifiedDate":"2023-01-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    * `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2023-01-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    * `clear` : Deletes all contacts.","lastModifiedDate":"2023-01-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    * `exit` : Exits the app.","lastModifiedDate":"2023-01-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"   \u003ca name\u003d\"features\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"* Command lines supplied by the user are not case sensitive as the application will auto translate it into `UPPER_CASE`. \u003cbr\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"  E.g. in the list feature, user can call it via either methods:","lastModifiedDate":"2023-02-18"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"     1. student 5A list","lastModifiedDate":"2023-02-18"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"     2. STUDENT 5A LIST","lastModifiedDate":"2023-02-18"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"     3. Student 5A LiSt","lastModifiedDate":"2023-02-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.","lastModifiedDate":"2023-02-18"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"  e.g. in `…add \u003cNAME\u003e...`, `NAME` is a parameter which can be used as `…add John…`.","lastModifiedDate":"2023-02-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"* Items in `\u003c\u003e` brackets are the values that the user should field","lastModifiedDate":"2023-02-18"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"  e.g. in `…add \u003cNAME\u003e…` , `NAME` is a parameter that needs to be included, can be used as `…add John…`.","lastModifiedDate":"2023-02-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"* In the case of **COMPULSORY** parameters, there’s no need to type `XX/YY` where `XX` is the particular category and `YY` is the actual information for the `XX` category. \u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"* Compulsory parameters are not bounded by square brackets \u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"* All items in the square brackets are OPTIONAL.","lastModifiedDate":"2023-02-18"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"  e.g. in `…add…[..c/\u003cCCA\u003e.. ]...` , `CCA` is an optional parameter that need not be given by the user and can be skipped, can be used as `…add…`  or `…add…c/Mathematics Club nok/…` .","lastModifiedDate":"2023-02-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"* In the user guide, all optional parameters are denoted by ..opt/.. meaning that any zero or more of the optional particulars specified above can be used","lastModifiedDate":"2023-02-18"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"  Eg. ..add..[..opt/..] means user can do …add..c/\u003cCCA\u003e..img/\u003cIMG\u003e..","lastModifiedDate":"2023-02-18"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"* General Particulars:","lastModifiedDate":"2023-02-18"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"    - Name \u003c**NAME**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"        - String value of student\u0027s name","lastModifiedDate":"2023-02-18"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"    - Class \u003c**CLASS**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        - String value of student\u0027s class","lastModifiedDate":"2023-02-18"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"    - Index Number \u003c**INDEX_NUMBER**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"        - Numbers (integer)","lastModifiedDate":"2023-02-18"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"    - Sex \u003c**SEX**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"        - M / m means male while F / f means female","lastModifiedDate":"2023-02-18"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"  * Optional:","lastModifiedDate":"2023-02-18"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"      - Image [**IMG**]","lastModifiedDate":"2023-02-18"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"          - String value of absolute path to image","lastModifiedDate":"2023-02-18"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"      - Age [**AGE**]","lastModifiedDate":"2023-02-18"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"          - Numbers (integer)","lastModifiedDate":"2023-02-18"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"      - Email [**EM**]","lastModifiedDate":"2023-02-18"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"          - String value of email address","lastModifiedDate":"2023-02-18"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"      - Phone number [**PH**]","lastModifiedDate":"2023-02-18"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"          - String value of phone address","lastModifiedDate":"2023-02-18"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"* Student Particulars:","lastModifiedDate":"2023-02-18"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"    - Academics","lastModifiedDate":"2023-02-18"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"        - Test \u003c**TEST_NAME**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"            - String value of test name","lastModifiedDate":"2023-02-18"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"        - Attendance \u003c**ATTENDANCE**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"            - Mark as present/ not present","lastModifiedDate":"2023-02-18"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"        - Homework \u003c**HOMEWORK**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"            - String value of homework name","lastModifiedDate":"2023-02-18"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"        - Grade \u003c**GRADE**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"            - String value of grade results","lastModifiedDate":"2023-02-18"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"    - Parents/ Next-of-kin \u003c**NOK**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"      -String value of parent\u0027s name","lastModifiedDate":"2023-02-18"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"  * Optional:","lastModifiedDate":"2023-02-18"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"      - CCA [**CCA**]","lastModifiedDate":"2023-02-18"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"      - Comments [**com**]","lastModifiedDate":"2023-02-18"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"* Parent/ Guardians Particulars:","lastModifiedDate":"2023-02-18"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"    - Relationship \u003c**nok**\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name\u003d\"student\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"## General Command for Student Related features","lastModifiedDate":"2023-02-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"* For all following features that are related to `students`, start first by typing `student \u003cCLASS\u003e` before adding the respective command for the feature.","lastModifiedDate":"2023-02-18"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"  \u003ca name\u003d\"addstudent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"### Adding a Student: `add`","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"Adds a student to the database","lastModifiedDate":"2023-02-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"Format: `add n/\u003cNAME\u003e in/\u003cINDEX_NUMBER\u003e s/\u003cSEX\u003e pn/\u003cNOK_NAME\u003e pnP/\u003cNOK_CONTACT_NUMBER\u003e rls\u003cRELATIONSHIP\u003e [ageS/\u003cAGE\u003e imgS/\u003cABSOLUTE_PATH_TO_IMAGE\u003e eS/\u003cEMAIL_ADDRESS\u003e p/\u003cPHONE_NUMBER\u003e cca/\u003cCCA\u003e]`","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2023-02-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"A person can have any number of tags (including 0)","lastModifiedDate":"2023-02-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"* `student 1A add n/TanAhCow in/03 s/m pn/TanAhNiu pnP/91234567 rls/Father` \u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"  *Above is a situation where the student’s PHOTO_PATH and CCA are not provided!","lastModifiedDate":"2023-02-18"},{"lineNumber":159,"author":{"gitId":"MrTwit99"},"content":"* `student 1B add n/Mary Goh in/23 s/F pn/Goh Siew Mai pnP/91234567 rls/Mother a/Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456) ageS/15 imgS/C:\\Users\\teacher\\OneDrive\\Desktop\\Pictures\\marygoh.jpg eS/marygoh@gmail.com pnS/65656565 cca/Chess Club`","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"MrTwit99"},"content":"Note: \u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":162,"author":{"gitId":"MrTwit99"},"content":"User is able to leave the following categories unfilled by simply leaving a space","lastModifiedDate":"2023-02-22"},{"lineNumber":163,"author":{"gitId":"MrTwit99"},"content":"1. Age","lastModifiedDate":"2023-02-22"},{"lineNumber":164,"author":{"gitId":"MrTwit99"},"content":"2. Absolute path to image","lastModifiedDate":"2023-02-22"},{"lineNumber":165,"author":{"gitId":"MrTwit99"},"content":"3. Email Address","lastModifiedDate":"2023-02-22"},{"lineNumber":166,"author":{"gitId":"MrTwit99"},"content":"4. Phone Number","lastModifiedDate":"2023-02-22"},{"lineNumber":167,"author":{"gitId":"MrTwit99"},"content":"5. CCA \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name\u003d\"gradestudent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"### Adding a grade for student : `grade`","lastModifiedDate":"2023-02-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"mayuanxin1234"},"content":"Adds a test grade for the student corresponding to the INDEX_NUMBER in the CLASS","lastModifiedDate":"2023-02-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"mayuanxin1234"},"content":"Format: `grade \u003cINDEX_NUMBER\u003e test/\u003cTEST_NAME\u003e gde/\u003cGRADE\u003e`","lastModifiedDate":"2023-02-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"mayuanxin1234"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":179,"author":{"gitId":"MrTwit99"},"content":"* `student 3A grade 25 test/Mid-Terms gde/A` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \u0027commentstudent\u0027/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"mayuanxin1234"},"content":"### Adding comments for student : `comment`","lastModifiedDate":"2023-02-18"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":185,"author":{"gitId":"mayuanxin1234"},"content":"Adds a comment for the student corresponding to the `INDEX_NUMBER` in the `CLASS`","lastModifiedDate":"2023-02-18"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"Format: `comment \u003cINDEX_NUMBER\u003e note/\u003cCOMMENT\u003e`","lastModifiedDate":"2023-02-18"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"mayuanxin1234"},"content":"* `student 3A comment 25 note/Quiet person, needs to interact more with classmates`","lastModifiedDate":"2023-02-18"},{"lineNumber":192,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":193,"author":{"gitId":"MrTwit99"},"content":"Note: \u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"If an existing comment is already available for the selected student, the new comment will OVERRIDE the old comment! Hence, users should check on existing comments before adding a new comment!","lastModifiedDate":"2023-02-18"},{"lineNumber":195,"author":{"gitId":"MrTwit99"},"content":"\u003ca name \u003d \"liststudent\"/\u003e \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"mayuanxin1234"},"content":"### Listing all students in the selected class: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":198,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":199,"author":{"gitId":"mayuanxin1234"},"content":"Shows a list of all students in the selected class in the database","lastModifiedDate":"2023-02-18"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"Diatbbin"},"content":"Format: `find \u003cINDEX_NUMBER\u003e  `","lastModifiedDate":"2023-02-20"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":203,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-20"},{"lineNumber":204,"author":{"gitId":"Diatbbin"},"content":"* `student 3B find 26`","lastModifiedDate":"2023-02-20"},{"lineNumber":205,"author":{"gitId":"Diatbbin"},"content":"* `student 3B find 27`","lastModifiedDate":"2023-02-20"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"mayuanxin1234"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-02-18"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":209,"author":{"gitId":"mayuanxin1234"},"content":"* `\u003cstudent Name\u003e \u003cid\u003e \u003cimage\u003e \u003cnok name\u003e \u003cnok email\u003e \u003cnok number\u003e`","lastModifiedDate":"2023-02-18"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"* `ChanAhKow 21 ChanAhKow.png ChanMaiWoon chanmaiwoon@gmail.com 91234567`","lastModifiedDate":"2023-02-18"},{"lineNumber":211,"author":{"gitId":"MrTwit99"},"content":"  \u003ca name \u003d \"editstudent\" /\u003e \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"mayuanxin1234"},"content":"### Edit Student:  `edit`","lastModifiedDate":"2023-02-18"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"mayuanxin1234"},"content":"Edits personal details of students","lastModifiedDate":"2023-02-18"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"Format: `edit \u003cINDEX_NUMBER (of student)\u003e [name/\u003cNAME\u003e class/\u003cCLASS\u003e cca/\u003cCCA\u003e id/\u003cINDEX_NUMBER\u003e img/\u003cIMAGE\u003e age/\u003cAGE\u003e em/\u003cEMAIL\u003e ph/\u003cPHONE_NUM\u003e test/\u003cTEST\u003e att/\u003cATTENDANCE\u003e hw/\u003cASSIGNMENTS\u003e note/\u003cCOMMENTS\u003e nok/\u003cNAME\u003e]   `","lastModifiedDate":"2023-02-18"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"mayuanxin1234"},"content":"* `student 3B edit 23 cca/badminton`","lastModifiedDate":"2023-02-18"},{"lineNumber":221,"author":{"gitId":"mayuanxin1234"},"content":"* `student 3B edit 23 cca/soccer att/2023-01-01 y`","lastModifiedDate":"2023-02-18"},{"lineNumber":222,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":223,"author":{"gitId":"mayuanxin1234"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-02-18"},{"lineNumber":224,"author":{"gitId":"mayuanxin1234"},"content":"* Edited Student: Jennifer Lim cca: badminton","lastModifiedDate":"2023-02-18"},{"lineNumber":225,"author":{"gitId":"MrTwit99"},"content":"* Edited Student: Justina Lee attendance: cca:soccer 2023-01-01 y \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"findstudent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"### Locating persons by name:  `find`","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"mayuanxin1234"},"content":"Finds student by student id","lastModifiedDate":"2023-02-18"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":233,"author":{"gitId":"mayuanxin1234"},"content":"Format: `find \u003cINDEX_NUMBER\u003e  `","lastModifiedDate":"2023-02-18"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":235,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":236,"author":{"gitId":"mayuanxin1234"},"content":"* `student 3B find 26`","lastModifiedDate":"2023-02-18"},{"lineNumber":237,"author":{"gitId":"mayuanxin1234"},"content":"* `student 3B find 27`","lastModifiedDate":"2023-02-18"},{"lineNumber":238,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":239,"author":{"gitId":"mayuanxin1234"},"content":"**Expected Outcome:**","lastModifiedDate":"2023-02-18"},{"lineNumber":240,"author":{"gitId":"mayuanxin1234"},"content":"* Student found: Russel Ong class:3B cca: swimming grade: [sci:A, maths:B] id:26 age:14 email:ro@outlook.com ph:85349633 attendance: 2023-01-01 [y] hw: ip [x] notes:extroverted nok: David Ong","lastModifiedDate":"2023-02-18"},{"lineNumber":241,"author":{"gitId":"MrTwit99"},"content":"* Student found: Joseph Tan class:3B cca: basketball grade: [sci:A, maths:C] id:27 age:14 email:jo@outlook.com ph:92103134 attendance: 2023-01-01 [x] hw: ip [x] notes:shy  nok: David Tan \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":243,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"deletestudent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":245,"author":{"gitId":"mayuanxin1234"},"content":"### Deleting student particulars: `delete`","lastModifiedDate":"2023-02-18"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"mayuanxin1234"},"content":"Deleting student/ student information from the database","lastModifiedDate":"2023-02-18"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"mayuanxin1234"},"content":"Format: `delete \u003cINDEX_NUMBER\u003e \u003cGENDER\u003e [a/\u003cAGE\u003e p/\u003cABSOLUTE_PATH_TO_IMAGE\u003e c/\u003cCCA\u003e nok/\u003cPARENT_NAME/NOK_NAME\u003e]`","lastModifiedDate":"2023-02-18"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"mayuanxin1234"},"content":"* `student 1A delete TanAhCow 03 M a/14 p/ c/ nok/TanAhNiu`","lastModifiedDate":"2023-02-18"},{"lineNumber":253,"author":{"gitId":"mayuanxin1234"},"content":"  *Above is a situation where the student’s PHOTO_PATH and CCA are not provided!","lastModifiedDate":"2023-02-18"},{"lineNumber":254,"author":{"gitId":"mayuanxin1234"},"content":"* `student 1B delete Mary Goh 23 F a/15 p/ c/Chess Club nok/Goh Siew Mai`","lastModifiedDate":"2023-02-18"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"MrTwit99"},"content":"Throws:","lastModifiedDate":"2023-02-22"},{"lineNumber":257,"author":{"gitId":"mayuanxin1234"},"content":"* WrongParticularException","lastModifiedDate":"2023-02-18"},{"lineNumber":258,"author":{"gitId":"mayuanxin1234"},"content":"  - The description field does not exist","lastModifiedDate":"2023-02-18"},{"lineNumber":259,"author":{"gitId":"mayuanxin1234"},"content":"  - Description is invalid (eg. age is not a number..)","lastModifiedDate":"2023-02-18"},{"lineNumber":260,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":261,"author":{"gitId":"MrTwit99"},"content":"User should follow the same format\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":262,"author":{"gitId":"MrTwit99"},"content":"If no descriptions are given, the whole student will be removed from the database","lastModifiedDate":"2023-02-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"parent\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"mayuanxin1234"},"content":"## General Command for parent related features","lastModifiedDate":"2023-02-18"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"MrTwit99"},"content":"* For all following features that are related to `parent`, start first by typing `parent`  before adding the respective command for the feature.","lastModifiedDate":"2023-03-15"},{"lineNumber":269,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":270,"author":{"gitId":"MrTwit99"},"content":"* Note that it is possible to have multiple students with the same parent and parents are identified via their phone number and *HENCE* `student class` is not used for identification.","lastModifiedDate":"2023-03-15"},{"lineNumber":271,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":272,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":273,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name\u003d\"addparent\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":274,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":275,"author":{"gitId":"mayuanxin1234"},"content":"### Adding a parent: `add`","lastModifiedDate":"2023-02-18"},{"lineNumber":276,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":277,"author":{"gitId":"mayuanxin1234"},"content":"Adds a parent to the database","lastModifiedDate":"2023-02-18"},{"lineNumber":278,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":279,"author":{"gitId":"MrTwit99"},"content":"Format: `add n/\u003cPARENT_NAME/NOK_NAME\u003e pnP/\u003cPHONE_NUMBER\u003e [ageP/\u003cAGE\u003e imgP/\u003cABSOLUTE_PATH_TO_IMAGE\u003e e/\u003cEMAIL_ADDRESS\u003e a/\u003cRESIDENTIAL_ADDRESS\u003e] `","lastModifiedDate":"2023-03-15"},{"lineNumber":280,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":281,"author":{"gitId":"mayuanxin1234"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":282,"author":{"gitId":"MrTwit99"},"content":"* `parent add n/TanAhNiu pnP/91234567`","lastModifiedDate":"2023-03-15"},{"lineNumber":283,"author":{"gitId":"MrTwit99"},"content":"* `parent add n/Tan Ah Niu pnP/91234567 ageP/30 imgP/C:// e/tanahcow@gmail.com a/Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456)` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":284,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":285,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":286,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"listparent\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":287,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":288,"author":{"gitId":"mayuanxin1234"},"content":"### Listing all parents : `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":289,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":290,"author":{"gitId":"mayuanxin1234"},"content":"Shows a list of all parent in the database","lastModifiedDate":"2023-02-18"},{"lineNumber":291,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":292,"author":{"gitId":"mayuanxin1234"},"content":"Format: `list`","lastModifiedDate":"2023-02-18"},{"lineNumber":293,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":294,"author":{"gitId":"mayuanxin1234"},"content":"Examples:","lastModifiedDate":"2023-02-18"},{"lineNumber":295,"author":{"gitId":"MrTwit99"},"content":"* `parent list` \u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":296,"author":{"gitId":"mayuanxin1234"},"content":"  Sample output: \u003cparent name\u003e \u003cparent phone number\u003e \u003cparent email\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":297,"author":{"gitId":"MrTwit99"},"content":"* `parent list` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":298,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":299,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"deleteparent\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":300,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":301,"author":{"gitId":"mayuanxin1234"},"content":"### Deleting parent particulars: `delete`","lastModifiedDate":"2023-02-18"},{"lineNumber":302,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":303,"author":{"gitId":"mayuanxin1234"},"content":"Deleting parent/ specified parent information from the database","lastModifiedDate":"2023-02-18"},{"lineNumber":304,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":305,"author":{"gitId":"Diatbbin"},"content":"Format: `delete n/\u003cPARENT_NAME/NOK_NAME\u003e pnP/\u003cPHONE_NUMBER\u003e [ageP/\u003cAGE\u003e imgP/\u003cABSOLUTE_PATH_TO_IMAGE\u003e e/\u003cEMAIL_ADDRESS\u003e a/\u003cRESIDENTIAL_ADDRESS\u003e] `","lastModifiedDate":"2023-03-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":308,"author":{"gitId":"Diatbbin"},"content":"* `parent delete n/TanAhNiu pnP/91234567` \u003cbr\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":309,"author":{"gitId":"Diatbbin"},"content":"  Deletes TanAhNiu from powerConnect","lastModifiedDate":"2023-03-15"},{"lineNumber":310,"author":{"gitId":"mayuanxin1234"},"content":"* `parent 1A 03 delete TanAhCow Mother` \u003cbr\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":311,"author":{"gitId":"mayuanxin1234"},"content":"  Deletes TanAhCow’s relationship of Mother with \u003cIndex number of student\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":312,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":313,"author":{"gitId":"MrTwit99"},"content":"Throws:","lastModifiedDate":"2023-02-22"},{"lineNumber":314,"author":{"gitId":"mayuanxin1234"},"content":"* WrongParticularException","lastModifiedDate":"2023-02-18"},{"lineNumber":315,"author":{"gitId":"mayuanxin1234"},"content":"  - The description field does not exist","lastModifiedDate":"2023-02-18"},{"lineNumber":316,"author":{"gitId":"mayuanxin1234"},"content":"  - Description is invalid (eg. age is not a number..)","lastModifiedDate":"2023-02-18"},{"lineNumber":317,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":318,"author":{"gitId":"MrTwit99"},"content":"User should follow the same format \u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":319,"author":{"gitId":"MrTwit99"},"content":"`Warning:` If no descriptions are given, the whole parent will be removed from the database \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":320,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":321,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"help\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":322,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":323,"author":{"gitId":"mayuanxin1234"},"content":"### Viewing help : `help`","lastModifiedDate":"2023-02-18"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":325,"author":{"gitId":"mayuanxin1234"},"content":"Shows a message explaning how to access the help page.","lastModifiedDate":"2023-02-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":327,"author":{"gitId":"mayuanxin1234"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2023-02-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":329,"author":{"gitId":"MrTwit99"},"content":"Format: `help` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":330,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":331,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"exit\"/\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":333,"author":{"gitId":"-"},"content":"### Exiting the program : `exit`","lastModifiedDate":"2020-05-23"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"MrTwit99"},"content":"Format: `exit` \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"-"},"content":"### Saving the data","lastModifiedDate":"2020-05-23"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"MrTwit99"},"content":"PowerConnect data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"### Editing the data file","lastModifiedDate":"2021-02-04"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":345,"author":{"gitId":"MrTwit99"},"content":"PowerConnect data are saved as a JSON file `[JAR file location]/data/addressbook.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2023-02-22"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":347,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-02-04"},{"lineNumber":348,"author":{"gitId":"MrTwit99"},"content":"If your changes to the data file makes its format invalid, AddressBook will discard all data and start with an empty data file at the next run. \u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2023-02-22"},{"lineNumber":349,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":351,"author":{"gitId":"-"},"content":"### Archiving data files `[coming in v2.0]`","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":353,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-02-04"},{"lineNumber":354,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":355,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"faq\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":358,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":359,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":360,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":361,"author":{"gitId":"-"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AddressBook home folder.","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"mayuanxin1234"},"content":"\u003ca name \u003d \"summary\" /\u003e","lastModifiedDate":"2023-02-18"},{"lineNumber":365,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":366,"author":{"gitId":"MrTwit99"},"content":"## Command Summary Student `student \u003cCLASS\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":367,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-02-18"},{"lineNumber":368,"author":{"gitId":"mayuanxin1234"},"content":"| Action      | Format, Examples                                                                                                                                                                                                    |","lastModifiedDate":"2023-02-25"},{"lineNumber":369,"author":{"gitId":"mayuanxin1234"},"content":"|-------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-02-25"},{"lineNumber":370,"author":{"gitId":"mayuanxin1234"},"content":"| **Add**     | `add \u003cNAME\u003e \u003cINDEX_NUMBER\u003e \u003cSEX\u003e \u003cPARENT_NAME/NOK_NAME\u003e [age/\u003cAGE\u003e img/\u003cABSOLUTE_PATH_TO_IMAGE\u003e em/\u003cEMAIL_ADDRESS\u003e ph/\u003cPHONE_NUMBER\u003e cca/\u003cCCA\u003e]`                                                                    |","lastModifiedDate":"2023-02-25"},{"lineNumber":371,"author":{"gitId":"mayuanxin1234"},"content":"| **Grade**   | `grade \u003cINDEX_NUMBER\u003e test/\u003cTEST_NAME\u003e gde/\u003cGRADE\u003e`                                                                                                                                                                 |","lastModifiedDate":"2023-02-25"},{"lineNumber":372,"author":{"gitId":"mayuanxin1234"},"content":"| **Comment** | `comment \u003cINDEX_NUMBER\u003e note/\u003cCOMMENT\u003e`                                                                                                                                                                             |","lastModifiedDate":"2023-02-25"},{"lineNumber":373,"author":{"gitId":"mayuanxin1234"},"content":"| **List**    | `list`                                                                                                                                                                                                              |","lastModifiedDate":"2023-02-25"},{"lineNumber":374,"author":{"gitId":"mayuanxin1234"},"content":"| **Edit**    | `edit \u003cINDEX_NUMBER (of student)\u003e [name/\u003cNAME\u003e class/\u003cCLASS\u003e cca/\u003cCCA\u003e id/\u003cINDEX_NUMBER\u003e img/\u003cIMAGE\u003e age/\u003cAGE\u003e em/\u003cEMAIL\u003e ph/\u003cPHONE_NUM\u003e test/\u003cTEST\u003e att/\u003cATTENDANCE\u003e hw/\u003cASSIGNMENTS\u003e note/\u003cCOMMENTS\u003e nok/\u003cNAME\u003e]` |","lastModifiedDate":"2023-02-25"},{"lineNumber":375,"author":{"gitId":"mayuanxin1234"},"content":"| **Find**    | `find \u003cINDEX_NUMBER\u003e `                                                                                                                                                                                              |","lastModifiedDate":"2023-02-25"},{"lineNumber":376,"author":{"gitId":"mayuanxin1234"},"content":"| **Delete**  | `delete \u003cINDEX_NUMBER\u003e \u003cGENDER\u003e [a/\u003cAGE\u003e p/\u003cABSOLUTE_PATH_TO_IMAGE\u003e c/\u003cCCA\u003e nok/\u003cPARENT_NAME/NOK_NAME\u003e]`                                                                                                            |","lastModifiedDate":"2023-02-25"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"MrTwit99"},"content":"## Command Summary Parent `parent \u003cCLASS\u003e`","lastModifiedDate":"2023-02-22"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":380,"author":{"gitId":"mayuanxin1234"},"content":"| Action     | Format, Examples                                                                                                                                  |","lastModifiedDate":"2023-02-25"},{"lineNumber":381,"author":{"gitId":"mayuanxin1234"},"content":"|------------|---------------------------------------------------------------------------------------------------------------------------------------------------|","lastModifiedDate":"2023-02-25"},{"lineNumber":382,"author":{"gitId":"mayuanxin1234"},"content":"| **Add**    | `add \u003cINDEX_NUMBER (of student)\u003e \u003c(parent) NAME\u003e \u003cRELATIONSHIP\u003e [a/\u003cAGE\u003e p/\u003cABSOLUTE_PATH_TO_IMAGE\u003e ph/\u003cPHONE_NUMBER\u003e e/\u003cEMAIL\u003e] `                |","lastModifiedDate":"2023-02-25"},{"lineNumber":383,"author":{"gitId":"mayuanxin1234"},"content":"| **List**   | `list`                                                                                                                                            |","lastModifiedDate":"2023-02-25"},{"lineNumber":384,"author":{"gitId":"mayuanxin1234"},"content":"| **Delete** | `delete \u003cINDEX_NUMBER (of student)\u003e \u003c(parent) NAME\u003e \u003cRELATIONSHIP WITH STUDENT\u003e [a/\u003cAGE\u003e p/\u003cABSOLUTE_PATH_TO_IMAGE\u003e ph/\u003cPHONE_NUMBER\u003e e/\u003cEMAIL\u003e]` |","lastModifiedDate":"2023-02-25"}],"authorContributionMap":{"MrTwit99":51,"Diatbbin":8,"mayuanxin1234":192,"-":133}},{"path":"docs/team/diatbbin.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"---","lastModifiedDate":"2023-02-20"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"layout: page","lastModifiedDate":"2023-02-20"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"title: Lim Diat Bbin\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-20"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"---","lastModifiedDate":"2023-02-20"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"### Project: PowerConnect","lastModifiedDate":"2023-02-20"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still","lastModifiedDate":"2023-02-20"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact","lastModifiedDate":"2023-02-20"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-20"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-20"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-20"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-20"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-20"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-20"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-20"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-20"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-20"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"* **Project management**:","lastModifiedDate":"2023-02-20"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-20"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-20"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-20"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-20"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-20"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"    * User Guide:","lastModifiedDate":"2023-02-20"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-20"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-20"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-20"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-20"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"* **Community**:","lastModifiedDate":"2023-02-20"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-20"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-20"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-20"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-20"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"* **Tools**:","lastModifiedDate":"2023-02-20"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-20"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-20"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-02-20"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-20"}],"authorContributionMap":{"Diatbbin":48}},{"path":"docs/team/mayuanxin1234.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-02-17"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"title: Ma Yuanxin\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-02-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"### Project: PowerConnect","lastModifiedDate":"2023-02-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2023-02-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2023-02-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2023-02-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-17"}],"authorContributionMap":{"-":43,"mayuanxin1234":3}},{"path":"docs/team/mrtwit99.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"title: Yeo Wen Jue\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"### Project: PowerConnect","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"MrTwit99":5,"-":43}},{"path":"docs/team/securespider.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"layout: page","lastModifiedDate":"2023-02-22"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"title: [Vincent Pang\u0027s Project Portfolio Page](https://github.com/securespider)","lastModifiedDate":"2023-02-22"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"---","lastModifiedDate":"2023-02-22"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"### Project: PowerConnect","lastModifiedDate":"2023-02-22"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"PowerConnect is a desktop app for managing contacts, optimized for use via a Command Line Interface (CLI) while still","lastModifiedDate":"2023-02-22"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"having the benefits of a Graphical User Interface (GUI). If you can type fast, PowerConnect can get your contact","lastModifiedDate":"2023-02-22"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-22"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-22"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2023-02-22"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"    * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2023-02-22"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2023-02-22"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2023-02-22"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2023-02-22"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2023-02-22"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2023-02-22"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"* **Project management**:","lastModifiedDate":"2023-02-22"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2023-02-22"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-22"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2023-02-22"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2023-02-22"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-22"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    * User Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"        * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2023-02-22"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"        * Did cosmetic tweaks to existing documentation of features `clear`, `exit`: [\\#74]()","lastModifiedDate":"2023-02-22"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-22"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"        * Added implementation details of the `delete` feature.","lastModifiedDate":"2023-02-22"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"* **Community**:","lastModifiedDate":"2023-02-22"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2023-02-22"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2023-02-22"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2023-02-22"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2023-02-22"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"* **Tools**:","lastModifiedDate":"2023-02-22"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"    * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2023-02-22"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"    * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2023-02-22"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-22"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2023-02-22"}],"authorContributionMap":{"securespider":48}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"Let\u0027s walk you through the implementation of a new command — `comment`.","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"`comment INDEX r/REMARK` (e.g., `comment 2 r/Likes baseball`)","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"## Create a new `comment` command","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":" * Changes the comment of an existing person in the address book.","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        return new CommandResult(\"Hello from comment\");","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `comment` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"![Output displayed](../images/add-comment/RemarkHello.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"![The relationship between RemarkCommand and Command](../images/add-comment/CommandInterface.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"            + \": Edits the comment of the person identified \"","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"            + \"Existing comment will be overwritten by the input.\\n\"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"    private final String comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"     * @param index of the person in the filtered person list to edit the comment","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"     * @param comment of the person to be updated to","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"    public RemarkCommand(Index index, String comment) {","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"        requireAllNonNull(index, comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), comment));","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 comment.equals(e.comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"securespider"},"content":"Now let’s move on to writing a parser that will extract the index and comment from the input provided by the user.","lastModifiedDate":"2023-02-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"securespider"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-comment/ParserInterface.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"securespider"},"content":"This appears to be what we need to get a String of the comment. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2023-02-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"securespider"},"content":"    String comment \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2023-02-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"securespider"},"content":"    return new RemarkCommand(index, comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"securespider"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a comment given to a person.","lastModifiedDate":"2023-02-24"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"securespider"},"content":"## Add a placeholder element for comment to the UI","lastModifiedDate":"2023-02-24"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"-"},"content":"Simply add the following to [`seedu.address.ui.PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2022-01-02"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"securespider"},"content":"private Label comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2022-01-02"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"securespider"},"content":"\u003cLabel fx:id\u003d\"comment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$comment\" /\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"securespider"},"content":"![$comment shows up in each entry](../images/add-comment/$Remark.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"securespider"},"content":"    comment.setText(person.getRemark().value);","lastModifiedDate":"2023-02-24"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"securespider"},"content":"![The comment label is bound properly!](../images/add-comment/RemarkBound.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added comment to Person: %1$s\";","lastModifiedDate":"2023-02-24"},{"lineNumber":336,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed comment from Person: %1$s\";","lastModifiedDate":"2023-02-24"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"securespider"},"content":"                personToEdit.getAddress(), comment, personToEdit.getTags());","lastModifiedDate":"2023-02-24"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"securespider"},"content":"     * the comment is added to or removed from","lastModifiedDate":"2023-02-24"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"securespider"},"content":"        String message \u003d !comment.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2023-02-24"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"securespider"},"content":"![Congratulations!](../images/add-comment/RemarkComplete.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"securespider"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a comment works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2023-02-24"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"securespider"},"content":"![Using the context menu to jump to tests](../images/add-comment/ContextMenu.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"securespider"},"content":"![Creating a test for `execute`.](../images/add-comment/CreateTest.png)","lastModifiedDate":"2023-02-24"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"securespider":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"**If you have done the [Add `comment` command tutorial](AddComment.html)  already**, you should know where the code had to be updated to add the field `comment`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"The `address` field in `Person` is actually an instance of the `seedu.address.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"securespider":1,"-":111}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command. Try \u0027student\u0027 or \u0027parent\u0027\";","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"            \"The student index provided is invalid/ not found\";","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_DUPLICATE_HOMEWORK \u003d \"This homework already exists in the address book\";","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_DUPLICATE_TEST \u003d \"This test already exists in the address book\";","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_INVALID_PARENT_DISPLAYED_NUMBER \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"            \"The parent number provided is invalid/ not found\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Diatbbin":2,"-":11,"mayuanxin1234":5}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    ObservableList\u003cParent\u003e getFilteredParentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"MrTwit99":2,"-":50,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        return model.getFilteredStudentList();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cParent\u003e getFilteredParentList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"        return model.getFilteredParentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"MrTwit99":6,"-":81,"mayuanxin1234":6}},{"path":"src/main/java/seedu/address/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    public abstract CommandResult execute(Model model) throws CommandException, ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":2,"-":19}},{"path":"src/main/java/seedu/address/logic/commands/CommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import java.util.List;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":" * Adds a person to the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"public class CommentCommand extends Command {","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_ADD_COMMENT_SUCCESS \u003d \"Added comment to Person: %1$s\";","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_DELETE_COMMENT_SUCCESS \u003d \"Removed comment from Person: %1$s\";","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a comment to a person in the address book. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"            + \"INDEX \"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_COMMENT + \"Owes Money\";","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    private final Index index;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    private final Comment comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     * @param comment of the person to be updated to","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"    public CommentCommand(Index index, Comment comment) {","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        requireAllNonNull(index, comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"     * Implements the execution of the command.","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"     * @return  the CommandResult of the command execution","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"     * @throws CommandException If invalid person index is given","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"                personToEdit.getAddress(), personToEdit.getTags(), comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"     * the comment is added to or removed from","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2023-02-24"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"        String message \u003d !comment.value.isEmpty() ? MESSAGE_ADD_COMMENT_SUCCESS : MESSAGE_DELETE_COMMENT_SUCCESS;","lastModifiedDate":"2023-02-24"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"            return true;","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"        if (!(other instanceof CommentCommand)) {","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"            return false;","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"        CommentCommand e \u003d (CommentCommand) other;","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 comment.equals((e.comment));","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"securespider":87,"Diatbbin":1,"mayuanxin1234":4}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Diatbbin":1,"-":52}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"Diatbbin"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"        Comment updatedComment \u003d personToEdit.getComment();","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"        return new Person(updatedName, updatedPhone, updatedEmail, updatedAddress, updatedTags, updatedComment);","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":191,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":192,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":199,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":200,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":210,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":219,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":225,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"securespider":3,"Diatbbin":1,"-":224}},{"path":"src/main/java/seedu/address/logic/commands/parent/ParentAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.logic.commands.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGEPARENT;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTAGE;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":" * A class for \"parent add\" command\"","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"public class ParentAddCommand extends ParentCommand {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_USAGE \u003d \"parent \" + COMMAND_WORD","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"            + \": Adds a parent to the address book. \\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"PHONE \"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"            + \"[\"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PARENTAGE + \"AGE \"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_IMAGEPARENT + \"IMAGE PARENT \"","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"            + \"Example: \\n\" + \"parent \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_NAME + \"Tan Ah Niu \"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"91234567 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PARENTAGE + \"30 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_IMAGEPARENT + \"C:// \"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_EMAIL + \"tanahcow@gmail.com \"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456)\";","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New parent added:\";","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"    private final Parent parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"     * Creates an AddCommand to add the specified {@code Parent}","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"    public ParentAddCommand(Parent parent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"        if (model.hasParent(parent)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        model.addParent(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, parent));","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"                || (other instanceof ParentAddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 parent.equals(((ParentAddCommand) other).parent));","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":72}},{"path":"src/main/java/seedu/address/logic/commands/parent/ParentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.logic.commands.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":" * An abstract class for \"parent\" command","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"public abstract class ParentCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    public static final String COMMAND_WORD \u003d \"parent\";","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_USAGE \u003d \"1. parent add\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"            + \"2. parent delete\\n\";","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New parent added: \u003cPARENT_NAME\u003e\";","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":12,"Diatbbin":4}},{"path":"src/main/java/seedu/address/logic/commands/parent/ParentDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.logic.commands.parent;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"public class ParentDeleteCommand extends ParentCommand {","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"            + \": Deletes the parent identified by their phone number used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"            + \"Parameters: PHONE NUMBER (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_DELETE_PARENT_SUCCESS \u003d \"Deleted Parent: %1$s\";","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"    private final Phone phoneNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"     * Creates a ParentDeleteCommand to delete the specified {@code Parent}","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"    public ParentDeleteCommand(Phone phoneNumber) {","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"        this.phoneNumber \u003d phoneNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"        ObservableList\u003cParent\u003e parents \u003d model.getFilteredParentList();","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(parents);","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        for (Parent parent : parents) {","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"            if (parent.getPhone().equals(phoneNumber)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"                model.deleteParent(parent);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_PARENT_SUCCESS, parent));","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"        throw new CommandException(Messages.MESSAGE_INVALID_PARENT_DISPLAYED_NUMBER);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"                || (other instanceof ParentDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 phoneNumber.equals(((ParentDeleteCommand) other).phoneNumber)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"Diatbbin":58}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentAddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAILSTUDENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGESTUDENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTAGE;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTNAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONESTUDENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTAGE;","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicatePhoneException;","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":" * A class for \"student Class Name add\" command\"","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentAddCommand extends StudentCommand {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"            + \": Adds a student to the address book. \\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"INDEX NUMBER \"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SEX + \"SEX \"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PARENTNAME + \"NOK NAME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"NOK CONTACT NUMBER \"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_RELATIONSHIP + \"NOK RELATIONSHIP TO STUDENT \"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"            + \"[\"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"RESIDENTIAL ADDRESS \"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_STUDENTAGE + \"AGE \"","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_IMAGESTUDENT + \"IMAGE STUDENT \"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_EMAILSTUDENT + \"EMAIL STUDENT \"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONESTUDENT + \"PHONE STUDENT \"","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_CCA + \"CCA \"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_NAME + \"Tan Ah Cow \"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SEX + \"M \"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PARENTNAME + \"Tan Ah Niu \"","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONEPARENT + \"91234567 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_RELATIONSHIP + \"Father \"","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_ADDRESS + \"Blk 456 Ang Mo Kio Avenue 6 #11-800 S(560456) \"","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_STUDENTAGE + \"14 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_IMAGESTUDENT + \"C:// \"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_EMAILSTUDENT + \"tanahcow@gmail.com \"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"            + PREFIX_PHONESTUDENT + \"91234567 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_CCA + \"Captain Ball\";","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added:\";","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"    private final Student toAdd;","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentAddCommand(Student student) {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        toAdd \u003d student;","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"     * Returns a CommandResult from adding a New Student to PowerConnect.","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"     * @return CommandResult from adding a New Student.","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"     * @throws CommandException When there\u0027s an unexpected situation occurring.","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"    public CommandResult execute(Model model) throws CommandException, ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"        if (model.hasStudent(toAdd)) {","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"        if (!model.canInitialize(toAdd.getParentNumber(), toAdd.getParentName())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicatePhoneException();","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        model.addStudent(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"        ObservableList\u003cParent\u003e parents \u003d model.getFilteredParentList();","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"        setParent(parents, toAdd, model);","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof StudentAddCommand // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 toAdd.equals(((StudentAddCommand) other).toAdd));","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"     * A method that binds the Student\u0027s Parent / NOK to the Student","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"     * @param parents List of existing Parents / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"     * @param student Student that needs the binding of Parent/NOK to.","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(ObservableList\u003cParent\u003e parents, Student student, Model model) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"        Phone parentNumber \u003d student.getParentNumber();","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"        Name parentName \u003d student.getParentName();","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"        for (Parent p : parents) {","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"            if ((p.getPhone().equals(parentNumber)) \u0026\u0026 (p.getName().equals(parentName))) {","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"                student.setParent(p);","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"                Parent newParent \u003d p;","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"                newParent.addStudent(student); //bind student to parent","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"MrTwit99"},"content":"                model.setParent(p, newParent); //update parent in parents","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"                return;","lastModifiedDate":"2023-03-15"},{"lineNumber":141,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"        Image image \u003d ParserUtil.parseImage(argMultimap.getValue(PREFIX_IMAGEPARENT).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"        Age age \u003d ParserUtil.parseAge((argMultimap.getValue(PREFIX_PARENTAGE).get()));","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"        Parent newParent \u003d new Parent(parentName, age, image, email, parentNumber,","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"                address, tagList); //create new parent as there isnt any matching parent","lastModifiedDate":"2023-03-16"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"        newParent.addStudent(student); //bind student to parent","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"        model.addParent(newParent);","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":84,"securespider":3,"mayuanxin1234":67}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":" * An abstract class for \"student\" command","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"public abstract class StudentCommand extends Command {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    public static final String PERSON_WORD \u003d \"student\";","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d \"1. student \u003cCLASS_NAME\u003e add\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"2. student \u003cCLASS_NAME\u003e comment\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"3. student \u003cCLASS_NAME\u003e grade\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"4. student \u003cCLASS_NAME\u003e delete\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"                                              + \"5. student \u003cCLASS_NAME\u003e gradedelete\";","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New student added: \u003cSTUDENT_NAME\u003e\";","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"securespider":1,"Diatbbin":1,"mayuanxin1234":16}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentCommentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-10"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":" * A StudentCommentCommand class for comment \"student CLASSNAME comment\"","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentCommentCommand extends StudentCommand {","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String COMMAND_WORD \u003d \"comment\";","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_ADD_COMMENT_SUCCESS \u003d \"Added comment to Person: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_DELETE_COMMENT_SUCCESS \u003d \"Removed comment from Person: %1$s\";","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a comment to a person in the address book. \"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"IndexNumber \"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_COMMENT + \"Good Student\\n\"","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"1 \"","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_COMMENT + \"Good Student\";","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    private final IndexNumber index;","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    private final Comment comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"    private final Class studentClass;","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"     * @param comment of the person to be updated to","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    public StudentCommentCommand(Class studentClass, IndexNumber index, Comment comment) {","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(index, comment);","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        this.studentClass \u003d studentClass;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"     * Implements the execution of the command.","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-10"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"     * @return  the CommandResult of the command execution","lastModifiedDate":"2023-03-10"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws CommandException If invalid person index is given","lastModifiedDate":"2023-03-10"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"        Student studentToEdit \u003d null;","lastModifiedDate":"2023-03-10"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"            Student curr \u003d lastShownList.get(i);","lastModifiedDate":"2023-03-10"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"            if (i \u003d\u003d lastShownList.size() - 1 \u0026\u0026 !curr.getIndexNumber().equals(index)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"            if (curr.getIndexNumber().equals(index) \u0026\u0026 curr.getStudentClass().equals(studentClass)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit \u003d curr;","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-03-10"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"        Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-10"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"                studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-10"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit.getHomework(), studentToEdit.getTest(), studentToEdit.getTags(), comment);","lastModifiedDate":"2023-03-10"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-10"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"        model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        return new CommandResult(generateSuccessMessage(editedStudent));","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"     * the comment is added to or removed from","lastModifiedDate":"2023-03-10"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2023-03-10"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"    private String generateSuccessMessage(Student studentToEdit) {","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        String message \u003d !comment.value.isEmpty() ? MESSAGE_ADD_COMMENT_SUCCESS : MESSAGE_DELETE_COMMENT_SUCCESS;","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"        return String.format(message, studentToEdit);","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-10"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-10"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        if (!(other instanceof StudentCommentCommand)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"            return false;","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"        StudentCommentCommand e \u003d (StudentCommentCommand) other;","lastModifiedDate":"2023-03-10"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"        return index.equals(e.index)","lastModifiedDate":"2023-03-10"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 comment.equals((e.comment));","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"MrTwit99":1,"securespider":3,"Diatbbin":1,"mayuanxin1234":104}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"public class StudentDeleteCommand extends StudentCommand {","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"            + \": Deletes the student identified by their index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: student 1A delete \" + PREFIX_INDEXNUMBER + \"25\";","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_DELETE_STUDENT_SUCCESS \u003d \"Deleted Student: %1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"    private final IndexNumber targetIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    private final Class studentClass;","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"     * Creates a StudentDeleteCommand to delete the specified {@code Student}","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    public StudentDeleteCommand(IndexNumber targetIndex, Class studentClass) {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        this.studentClass \u003d studentClass;","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"        List\u003cStudent\u003e students \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"        for (Student student : students) {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"            if (student.getIndexNumber().equals(targetIndex)","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"                    \u0026\u0026 student.getStudentClass().equals(studentClass)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"                model.deleteStudent(student);","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"                ObservableList\u003cParent\u003e parents \u003d model.getFilteredParentList();","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"                setParent(parents, student, model);","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"                return new CommandResult(String.format(MESSAGE_DELETE_STUDENT_SUCCESS, student));","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"        throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"     * A method that unbinds the Student\u0027s Parent / NOK to the Student","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"     * @param parents List of existing Parents / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"     * @param student Student that needs the binding of Parent/NOK to.","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(ObservableList\u003cParent\u003e parents, Student student, Model model) {","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"        Phone parentNumber \u003d student.getParentNumber();","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"        Name parentName \u003d student.getParentName();","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"        for (Parent p : parents) {","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"            if ((p.getPhone().equals(parentNumber)) \u0026\u0026 (p.getName().equals(parentName))) {","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"                Parent newParent \u003d p;","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"                newParent.removeStudent(student); //bind student to parent","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"                model.setParent(p, newParent); //update parent in parents","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"                return;","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"                || (other instanceof StudentDeleteCommand // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 targetIndex.equals(((StudentDeleteCommand) other).targetIndex)","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 studentClass.equals(((StudentDeleteCommand) other).studentClass)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":26,"securespider":3,"Diatbbin":58,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentGradeCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-10"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORKDONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEST;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHTAGE;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":" * A class for \"student \u0027Class Name\u0027 \u0027Index number\u0027 grade\" command\"","lastModifiedDate":"2023-03-10"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"public class StudentGradeCommand extends StudentCommand {","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    public static final String COMMAND_WORD \u003d \"grade\";","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    public static final String COMMAND_FORMAT \u003d \"student \u003cCLASS_NAME\u003e grade \u003cINDEX\u003e \u003cGRADE\u003e\";","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            + \": Adds a grade to a student in the address book. \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-10"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"INDEX NUMBER \"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            + \"[\"","lastModifiedDate":"2023-03-14"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_TEST + \"TEST NAME OR \"","lastModifiedDate":"2023-03-14"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORK + \"HOMEWORK NAME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            + \"] \"","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SCORE + \"SCORE \"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_DEADLINE + \"DEADLINE (DD/MM/YYYY) \"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_WEIGHTAGE + \"WEIGHTAGE \"","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"            + \"[ \"","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORKDONE + \"HOMEWORK DONE? \"","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_TEST + \"CA1 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SCORE + \"75 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_DEADLINE + \"15/05/2023 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_WEIGHTAGE + \"20\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"            + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORK + \"Chapter 1 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_SCORE + \"90 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_DEADLINE + \"20/03/2023 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_WEIGHTAGE + \"10\";","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_SUCCESSTEST \u003d \"New test added:\";","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_SUCCESSHOMEWORK \u003d \"New homework added:\";","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    private IndexNumber indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    private Test test;","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    private Homework homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    private Class sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates an add grade command for test","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber student to be edited","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"     * @param test test to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeCommand(Class sc, IndexNumber indexNumber, Test test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"        this.test \u003d test;","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates an add grade command for homework","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"     * @param sc","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"     * @param homework","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeCommand(Class sc, IndexNumber indexNumber, Homework homework) {","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"        this.homework \u003d homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-10"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"        Student studentToEdit \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"            Student curr \u003d lastShownList.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"            if (i \u003d\u003d lastShownList.size() - 1 \u0026\u0026 !curr.getIndexNumber().equals(indexNumber)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-10"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"            if (curr.getIndexNumber().equals(indexNumber) \u0026\u0026 curr.getStudentClass().equals(sc)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"                Set\u003cHomework\u003e homeworkSet \u003d curr.getHomework();","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"                for (Homework hw : homeworkSet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"                    if (hw.equals(homework)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"                        throw new CommandException(Messages.MESSAGE_DUPLICATE_HOMEWORK);","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"                    }","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"                Set\u003cTest\u003e testSet \u003d curr.getTest();","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"                for (Test test : testSet) {","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"                    if (test.equals(this.test)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"                        throw new CommandException(Messages.MESSAGE_DUPLICATE_TEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"                    }","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit \u003d curr;","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"        if (this.homework !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cHomework\u003e homeworkSet \u003d studentToEdit.getHomework();","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cHomework\u003e homeworkSetReplaced \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"            homeworkSetReplaced.addAll(homeworkSet);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"            for (Homework hw:homeworkSetReplaced) {","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"                if (hw.getName().equals(\"Insert student homework here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"                    homeworkSetReplaced.remove(hw);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"                    break;","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"            homeworkSetReplaced.add(homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"            Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"                    studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-14"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"                    homeworkSetReplaced, studentToEdit.getTest(), studentToEdit.getTags(), studentToEdit.getComment());","lastModifiedDate":"2023-03-14"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(MESSAGE_SUCCESSHOMEWORK);","lastModifiedDate":"2023-03-14"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cTest\u003e testSet \u003d studentToEdit.getTest();","lastModifiedDate":"2023-03-14"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cTest\u003e testSetReplaced \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"            testSetReplaced.addAll(testSet);","lastModifiedDate":"2023-03-14"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"            for (Test t: testSetReplaced) {","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"                if (t.getName().equals(\"Insert student test here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"                    testSetReplaced.remove(t);","lastModifiedDate":"2023-03-14"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"                    break;","lastModifiedDate":"2023-03-14"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"            testSetReplaced.add(test);","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"            Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"                    studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getHomework(), testSetReplaced, studentToEdit.getTags(), studentToEdit.getComment());","lastModifiedDate":"2023-03-14"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(MESSAGE_SUCCESSTEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":172,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-10"}],"authorContributionMap":{"MrTwit99":2,"securespider":33,"mayuanxin1234":137}},{"path":"src/main/java/seedu/address/logic/commands/student/StudentGradeDeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-14"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEST;","lastModifiedDate":"2023-03-14"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_STUDENTS;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-14"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-14"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-14"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-14"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":" * A class for \"student \u0027Class Name\u0027 \u0027Index number\u0027 grade delete\" command\"","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentGradeDeleteCommand extends StudentCommand {","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String COMMAND_WORD \u003d \"gradedelete\";","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_USAGE \u003d \"student CLASS_NAME \" + COMMAND_WORD","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"            + \": Adds a grade to the student in the address book. \\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"INDEX NUMBER \"","lastModifiedDate":"2023-03-14"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"            + \"[\"","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_TEST + \"TEST NAME OR \"","lastModifiedDate":"2023-03-14"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORK + \"HOMEWORK NAME \"","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"            + \"]\\n\"","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            + \"Example: \" + \"student 1A \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_TEST + \"CA1\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            + \"student 1A\" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_INDEXNUMBER + \"13 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"            + PREFIX_HOMEWORK + \"Chapter 1\";","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_SUCCESSTEST \u003d \"Test deleted successfully\";","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_SUCCESSHOMEWORK \u003d \"Homework deleted successfully\";","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    private IndexNumber indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    private Test test;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    private Homework homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    private Class sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a delete command for test","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber student to be edited","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"     * @param test test to be added","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeDeleteCommand(Class sc, IndexNumber indexNumber, Test test) {","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        this.test \u003d test;","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a delete command for homework","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"     * @param sc","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"     * @param homework","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeDeleteCommand(Class sc, IndexNumber indexNumber, Homework homework) {","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        this.homework \u003d homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cStudent\u003e lastShownList \u003d model.getFilteredStudentList();","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"        Student studentToEdit \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        if (lastShownList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c lastShownList.size(); i++) {","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"            Student curr \u003d lastShownList.get(i);","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"            if (i \u003d\u003d lastShownList.size() - 1 \u0026\u0026 !curr.getIndexNumber().equals(indexNumber)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"            if (curr.getIndexNumber().equals(indexNumber) \u0026\u0026 curr.getStudentClass().equals(sc)) {","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"                studentToEdit \u003d curr;","lastModifiedDate":"2023-03-14"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"                break;","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"        if (this.homework !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cHomework\u003e homeworkSet \u003d studentToEdit.getHomework();","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cHomework\u003e homeworkSetReplaced \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"            homeworkSetReplaced.addAll(homeworkSet);","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"            for (Homework hw:homeworkSetReplaced) {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"                if (hw.getName().equals(this.homework.getName())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"                    homeworkSetReplaced.remove(hw);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"                    break;","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"            Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"                    studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"                    homeworkSetReplaced, studentToEdit.getTest(), studentToEdit.getTags(), studentToEdit.getComment());","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(MESSAGE_SUCCESSHOMEWORK);","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cTest\u003e testSet \u003d studentToEdit.getTest();","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"            Set\u003cTest\u003e testSetReplaced \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"            testSetReplaced.addAll(testSet);","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"            for (Test t: testSetReplaced) {","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"                if (t.getName().equals(this.test.getName())) {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"                    testSetReplaced.remove(t);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"                    break;","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"            Student editedStudent \u003d new Student(studentToEdit.getName(), studentToEdit.getStudentClass(),","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getIndexNumber(), studentToEdit.getSex(), studentToEdit.getParentName(),","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"                    studentToEdit.getParentNumber(), studentToEdit.getRls(), studentToEdit.getAge(),","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getImage(), studentToEdit.getEmail(), studentToEdit.getPhone(),","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getCca(), studentToEdit.getAddress(), studentToEdit.getAttendance(),","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"                    studentToEdit.getHomework(), testSetReplaced, studentToEdit.getTags(), studentToEdit.getComment());","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"            model.setStudent(studentToEdit, editedStudent);","lastModifiedDate":"2023-03-14"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"            model.updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-14"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"            return new CommandResult(MESSAGE_SUCCESSTEST);","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-14"}],"authorContributionMap":{"MrTwit99":2,"mayuanxin1234":135}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2017-12-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"        Comment comment \u003d new Comment();","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"securespider":3,"-":58,"mayuanxin1234":1}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.parent.ParentCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentCommand;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"        System.out.println(\"parseSuccess\");","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        switch (commandWord) {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        case ParentCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"            return new ParentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        case StudentCommand.PERSON_WORD:","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"            return new StudentCommandParser().parse(arguments);","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"            System.out.println(\"delete\");","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"        case CommentCommand.COMMAND_WORD:","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"            return new CommentCommandParser().parse(arguments);","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":4,"securespider":3,"Diatbbin":2,"-":67,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            switch(prefix.getPrefix()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"            case \"n/\":","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"                Optional\u003cString\u003e missingParentName \u003d Optional.of(\"Insert parent name here!\");","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"                return missingParentName;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"            case \"ageS/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingStudentAge \u003d Optional.of(\"Insert student age here!\");","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"                return missingStudentAge;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"            case \"ageP/\":","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"                Optional\u003cString\u003e missingParentAge \u003d Optional.of(\"Insert parent age here!\");","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"                return missingParentAge;","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"            case \"imgS/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingImage \u003d Optional.of(\"Insert student image here!\");","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"                return missingImage;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            case \"eS/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingEmail \u003d Optional.of(\"Insert student email here!\");","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"                return missingEmail;","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"            case \"pnS/\":","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingPhoneNumber \u003d Optional.of(\"Insert student phone number here!\");","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"                return missingPhoneNumber;","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"            case \"cca/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingCca \u003d Optional.of(\"Insert student CCA here!\");","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"                return missingCca;","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"            case \"a/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"                Optional\u003cString\u003e missingAddress \u003d Optional.of(\"Insert Address here!\");","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"                return missingAddress;","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"            case \"att/\":","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingAttendance \u003d Optional.of(\"Insert student attendance here!\");","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"                return missingAttendance;","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            case \"com/\":","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingComment \u003d Optional.of(\"Insert student comment here!\");","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"                return missingComment;","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"            case \"score/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingScore \u003d Optional.of(\"Insert student score here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"                return missingScore;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"            case \"weightage/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingWeightage \u003d Optional.of(\"Insert student weightage here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"                return missingWeightage;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"            case \"deadline/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingDeadline \u003d Optional.of(\"Insert student deadline here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"                return missingDeadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"            case \"hwdone/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingHwDone \u003d Optional.of(\"Insert student homework done here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"                return missingHwDone;","lastModifiedDate":"2023-03-14"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"            case \"imgP/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingParentImage \u003d Optional.of(\"Insert parent image here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"                return missingParentImage;","lastModifiedDate":"2023-03-14"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"            case \"e/\":","lastModifiedDate":"2023-03-14"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"                Optional\u003cString\u003e missingParentEmail \u003d Optional.of(\"Insert parent email here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"                return missingParentEmail;","lastModifiedDate":"2023-03-14"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"            default:","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"                List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"                return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"MrTwit99":6,"Diatbbin":1,"-":60,"mayuanxin1234":48}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_ADD \u003d new Prefix(\"add\");","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    public static final Prefix PREFIX_DELETE \u003d new Prefix(\"delete\");","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_GRADE \u003d new Prefix(\"grade\");","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_PARENTAGE \u003d new Prefix(\"ageP/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_STUDENTAGE \u003d new Prefix(\"ageS/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_ATTENDANCE \u003d new Prefix(\"att/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_CCA \u003d new Prefix(\"cca/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"    public static final Prefix PREFIX_COMMENT \u003d new Prefix(\"com/\");","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_COMMENTCOMMAND \u003d new Prefix(\"comment\");","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_EMAILSTUDENT \u003d new Prefix(\"eS/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_HOMEWORK \u003d new Prefix(\"hw/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_IMAGESTUDENT \u003d new Prefix(\"imgS/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_IMAGEPARENT \u003d new Prefix(\"imgP/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_INDEXNUMBER \u003d new Prefix(\"in/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_PARENTNAME \u003d new Prefix(\"pn/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_PHONEPARENT \u003d new Prefix(\"pnP/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_PHONESTUDENT \u003d new Prefix(\"pnS/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_RELATIONSHIP \u003d new Prefix(\"rls/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    public static final Prefix PREFIX_SEX \u003d new Prefix(\"s/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_TEST \u003d new Prefix(\"test/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_SCORE \u003d new Prefix(\"score/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"deadline/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_WEIGHTAGE \u003d new Prefix(\"weightage/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_HOMEWORKDONE \u003d new Prefix(\"hwdone/\");","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    public static final Prefix PREFIX_GRADEDELETE \u003d new Prefix(\"gradedelete\");","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"MrTwit99":14,"securespider":1,"Diatbbin":1,"-":13,"mayuanxin1234":10}},{"path":"src/main/java/seedu/address/logic/parser/CommentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.commands.CommentCommand;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":" * Parses input arguments and creates a new CommentCommand object","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"public class CommentCommandParser implements Parser\u003cCommentCommand\u003e {","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"     * Parses the given {@code String} of arguments in the context of the CommentCommand","lastModifiedDate":"2023-03-10"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"     * @param args of the user input","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"     * @return the CommentCommand object for execution","lastModifiedDate":"2023-03-10"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"    public CommentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"        requireNonNull(args);","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"                PREFIX_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"        Index index;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"                    CommentCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        String remark \u003d argMultimap.getValue(PREFIX_COMMENT).orElse(\"\");","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        return new CommentCommand(index, new Comment(remark));","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"securespider":41}},{"path":"src/main/java/seedu/address/logic/parser/ParentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTAGE;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.commands.parent.ParentAddCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.parent.ParentCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.parent.ParentDeleteCommand;","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":" * ParentCommandParser that parses commands starting with \"parent\"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"public class ParentCommandParser {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"    public static final String HELP_MESSAGE \u003d \"Parent command has to include an action.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"            + ParentCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"     * Parse the parent commands into their respective prefixes","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"     * @param args User input.","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"     * @return ParentCommand with an ArgumentMultimap object that is derived from tokenizing the input with Prefixes","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"     * @throws ParseException when there\u0027s an unexpected error in parsing the user input","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"    public ParentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HELP_MESSAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"        ArgumentMultimap argMultimapAdd \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_ADD, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_NAME, PREFIX_PARENTAGE, PREFIX_IMAGEPARENT, PREFIX_PHONEPARENT,","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_EMAIL);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"        ArgumentMultimap argMultimapDelete \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DELETE, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"                        PREFIX_NAME, PREFIX_PARENTAGE, PREFIX_IMAGEPARENT, PREFIX_PHONEPARENT,","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"                        PREFIX_EMAIL);","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"Diatbbin"},"content":"        if (argMultimapAdd.getValue(PREFIX_ADD).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"Diatbbin"},"content":"            return addCommand(argMultimapAdd);","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"        } else if (argMultimapDelete.getValue(PREFIX_DELETE).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"            return deleteCommand(argMultimapDelete);","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"            //Rest of logic (Need to edit)","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HELP_MESSAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"     * Retrieve the relevant information to create a new Parent object from user input and parse it to create a new","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"     * Parent object and returns ParentAddCommand with the new Parent object.","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"     * @param argMultimap An ArgumentMultimap object that is derived from tokenizing the user input with Prefixes.","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"     * @return ParentAddCommand to add the new Parent into PowerConnect.","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"     * @throws ParseException when there\u0027s an unexpected error in parsing the user input.","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"    private ParentAddCommand addCommand(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONEPARENT)","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, ParentAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"        Age age \u003d ParserUtil.parseAge((argMultimap.getValue(PREFIX_PARENTAGE).get()));","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        Image image \u003d ParserUtil.parseImage(argMultimap.getValue(PREFIX_IMAGEPARENT).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONEPARENT).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"        Parent parent \u003d new Parent(name, age, image, email, phone, address, tagList);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"        return new ParentAddCommand(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"     * trimmed.","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"    public ParentDeleteCommand deleteCommand(ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONEPARENT)","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"        Phone phoneNumber \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONEPARENT).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"        return new ParentDeleteCommand(phoneNumber);","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":78,"Diatbbin":40,"mayuanxin1234":2}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-14"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Cca;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses indexNumber into an IndexNumber","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"     * @return An IndexNumber","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"    public static IndexNumber parseIndexNumber(String indexNumber) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedIndexNumber \u003d indexNumber.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"        if (!IndexNumber.isValidIndexNumber(trimmedIndexNumber)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(IndexNumber.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"        return new IndexNumber(trimmedIndexNumber);","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses sex into Sex","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"     * @param sex","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A Sex","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"    public static Sex parseSex(String sex) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"MrTwit99"},"content":"        String trimmedSex \u003d sex.trim().toUpperCase();","lastModifiedDate":"2023-03-12"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Sex.isValidSex(trimmedSex)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Sex.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"        return new Sex(trimmedSex);","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"MrTwit99"},"content":"     * Parses relationship of Parent object.","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"     * @param relationship Relation of Parent object to Student (parent / next-of-kin [NOK]).","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"     * @return Relationship object stating the relationship of a Parent object to a Student object.","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"MrTwit99"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"MrTwit99"},"content":"    public static Relationship parseRelationship(String relationship) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(relationship);","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"MrTwit99"},"content":"        String trimmedRelationship \u003d relationship.trim();","lastModifiedDate":"2023-03-12"},{"lineNumber":178,"author":{"gitId":"MrTwit99"},"content":"        if (!Relationship.isValidRelationship(trimmedRelationship)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":179,"author":{"gitId":"MrTwit99"},"content":"            throw new ParseException(Relationship.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":180,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"MrTwit99"},"content":"        return new Relationship(trimmedRelationship);","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses age to Age","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentAge","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"     * @return an Age","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"mayuanxin1234"},"content":"    public static Age parseAge(String studentAge) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(studentAge);","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedStudentAge \u003d studentAge.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Age.isValidAge(trimmedStudentAge)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Age.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"mayuanxin1234"},"content":"        return new Age(trimmedStudentAge);","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses studentImage to Image","lastModifiedDate":"2023-03-08"},{"lineNumber":202,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentImage","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a studentImage","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"mayuanxin1234"},"content":"    public static Image parseImage(String studentImage) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(studentImage);","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedStudentImage \u003d studentImage.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Image.isValidImage(trimmedStudentImage)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Image.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":213,"author":{"gitId":"mayuanxin1234"},"content":"        return new Image(trimmedStudentImage);","lastModifiedDate":"2023-03-06"},{"lineNumber":214,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":216,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"     * Parse cca to CCA","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"mayuanxin1234"},"content":"     * @param cca","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a CCA","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"mayuanxin1234"},"content":"    public static Cca parseCca(String cca) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(cca);","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedCca \u003d cca.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":226,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Cca.isValidCca(trimmedCca)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Cca.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":229,"author":{"gitId":"mayuanxin1234"},"content":"        return new Cca(trimmedCca);","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":231,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses sc to StudentClass","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"securespider"},"content":"     * @param sc The name of the student class","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"securespider"},"content":"     * @return a Class","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"securespider"},"content":"    public static Class parseStudentClass(String sc) throws ParseException {","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(sc);","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedSc \u003d sc.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"securespider"},"content":"        if (!Class.isValidClass(trimmedSc)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"securespider"},"content":"            throw new ParseException(Class.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"securespider"},"content":"        return Class.of(trimmedSc);","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses test to Test","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"mayuanxin1234"},"content":"     * @param test","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"mayuanxin1234"},"content":"     * @return a Test","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"mayuanxin1234"},"content":"    public static Test parseTest(String test, String score, String deadline, String weightage) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(test);","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedTest \u003d test.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Test.isValidTest(trimmedTest)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Test.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":261,"author":{"gitId":"mayuanxin1234"},"content":"        //check if score is less than 100","lastModifiedDate":"2023-03-14"},{"lineNumber":262,"author":{"gitId":"mayuanxin1234"},"content":"        if (!trimmedScore.matches(\"^([0-9]|[1-9][0-9]|100)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":263,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !trimmedScore.equals(\"Insert student score here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Score cannot be more than 100 and must contain numbers only\");","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":266,"author":{"gitId":"mayuanxin1234"},"content":"        LocalDate localDate \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":267,"author":{"gitId":"mayuanxin1234"},"content":"        if (deadline !\u003d \"Insert student deadline here!\") {","lastModifiedDate":"2023-03-14"},{"lineNumber":268,"author":{"gitId":"mayuanxin1234"},"content":"            try {","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"mayuanxin1234"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"mayuanxin1234"},"content":"                localDate \u003d LocalDate.parse(deadline, formatter);","lastModifiedDate":"2023-03-14"},{"lineNumber":272,"author":{"gitId":"mayuanxin1234"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"mayuanxin1234"},"content":"                throw new ParseException(\"Date must be in the format dd/mm/yyyy\");","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedWeightage \u003d weightage.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"mayuanxin1234"},"content":"        //check if weightage is less than 100","lastModifiedDate":"2023-03-14"},{"lineNumber":278,"author":{"gitId":"mayuanxin1234"},"content":"        if (!trimmedWeightage.matches(\"^([0-9]|[1-9][0-9]|100)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":279,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !trimmedWeightage.equals(\"Insert student weightage here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":280,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Weightage(%) cannot be more than 100 and must contain numbers only\");","lastModifiedDate":"2023-03-14"},{"lineNumber":281,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":282,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedWeightage.equals(\"Insert student weightage here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":283,"author":{"gitId":"mayuanxin1234"},"content":"            trimmedWeightage \u003d \"-100\";","lastModifiedDate":"2023-03-14"},{"lineNumber":284,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":285,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedScore.equals(\"Insert student score here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":286,"author":{"gitId":"mayuanxin1234"},"content":"            trimmedScore \u003d \"-100\";","lastModifiedDate":"2023-03-14"},{"lineNumber":287,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":288,"author":{"gitId":"mayuanxin1234"},"content":"        return new Test(trimmedTest, localDate, Integer.parseInt(trimmedWeightage), Integer.parseInt(trimmedScore));","lastModifiedDate":"2023-03-14"},{"lineNumber":289,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":290,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":291,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":292,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses attendance to Attendance","lastModifiedDate":"2023-03-08"},{"lineNumber":293,"author":{"gitId":"mayuanxin1234"},"content":"     * @param attendance","lastModifiedDate":"2023-03-08"},{"lineNumber":294,"author":{"gitId":"mayuanxin1234"},"content":"     * @return An Attendance","lastModifiedDate":"2023-03-08"},{"lineNumber":295,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":296,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":297,"author":{"gitId":"mayuanxin1234"},"content":"    public static Attendance parseAttendance(String attendance) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":298,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(attendance);","lastModifiedDate":"2023-03-06"},{"lineNumber":299,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedAttendance \u003d attendance.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":300,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Attendance.isValidAttendance(trimmedAttendance)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":301,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Attendance.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":302,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":303,"author":{"gitId":"mayuanxin1234"},"content":"        //Please edit this","lastModifiedDate":"2023-03-06"},{"lineNumber":304,"author":{"gitId":"mayuanxin1234"},"content":"        return new Attendance(attendance);","lastModifiedDate":"2023-03-06"},{"lineNumber":305,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":306,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":307,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":308,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses homework to Homework","lastModifiedDate":"2023-03-08"},{"lineNumber":309,"author":{"gitId":"mayuanxin1234"},"content":"     * @param homework","lastModifiedDate":"2023-03-08"},{"lineNumber":310,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A Homework","lastModifiedDate":"2023-03-08"},{"lineNumber":311,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":312,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":313,"author":{"gitId":"mayuanxin1234"},"content":"    public static Homework parseHomework(String homework, String score, String deadline,","lastModifiedDate":"2023-03-14"},{"lineNumber":314,"author":{"gitId":"mayuanxin1234"},"content":"                                         String weightage, String homeworkDone) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":315,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(homework);","lastModifiedDate":"2023-03-06"},{"lineNumber":316,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedHomework \u003d homework.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":317,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Homework.isValidHomework(trimmedHomework)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":318,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Homework.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":319,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":320,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedScore \u003d score.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":321,"author":{"gitId":"mayuanxin1234"},"content":"        //check if score is less than 100","lastModifiedDate":"2023-03-14"},{"lineNumber":322,"author":{"gitId":"mayuanxin1234"},"content":"        if (!trimmedScore.matches(\"^([0-9]|[1-9][0-9]|100)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":323,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !trimmedScore.equals(\"Insert student score here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":324,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Score cannot be more than 100 and must contain numbers only\");","lastModifiedDate":"2023-03-14"},{"lineNumber":325,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":326,"author":{"gitId":"mayuanxin1234"},"content":"        LocalDate localDate \u003d null;","lastModifiedDate":"2023-03-14"},{"lineNumber":327,"author":{"gitId":"mayuanxin1234"},"content":"        if (deadline !\u003d \"Insert student deadline here!\") {","lastModifiedDate":"2023-03-14"},{"lineNumber":328,"author":{"gitId":"mayuanxin1234"},"content":"            try {","lastModifiedDate":"2023-03-14"},{"lineNumber":329,"author":{"gitId":"mayuanxin1234"},"content":"                DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-03-14"},{"lineNumber":330,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":331,"author":{"gitId":"mayuanxin1234"},"content":"                localDate \u003d LocalDate.parse(deadline, formatter);","lastModifiedDate":"2023-03-14"},{"lineNumber":332,"author":{"gitId":"mayuanxin1234"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-03-14"},{"lineNumber":333,"author":{"gitId":"mayuanxin1234"},"content":"                throw new ParseException(\"Date must be in the format dd/mm/yyyy\");","lastModifiedDate":"2023-03-14"},{"lineNumber":334,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":335,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":336,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedWeightage \u003d weightage.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":337,"author":{"gitId":"mayuanxin1234"},"content":"        //check if weightage is less than 100","lastModifiedDate":"2023-03-14"},{"lineNumber":338,"author":{"gitId":"mayuanxin1234"},"content":"        if (!trimmedWeightage.matches(\"^([0-9]|[1-9][0-9]|100)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":339,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !trimmedWeightage.equals(\"Insert student weightage here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":340,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Weightage(%) cannot be more than 100 and must contain numbers only\");","lastModifiedDate":"2023-03-14"},{"lineNumber":341,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":342,"author":{"gitId":"mayuanxin1234"},"content":"        String homeworkDoneTrimmed \u003d homeworkDone.trim();","lastModifiedDate":"2023-03-14"},{"lineNumber":343,"author":{"gitId":"mayuanxin1234"},"content":"        if (!homeworkDoneTrimmed.matches(\"^(true|false)$\")","lastModifiedDate":"2023-03-14"},{"lineNumber":344,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 !homeworkDoneTrimmed.equals(\"Insert student homework done here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":345,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(\"Homework done must be \u0027true\u0027 or \u0027false\u0027\");","lastModifiedDate":"2023-03-14"},{"lineNumber":346,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":347,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedHomework.equals(\"Insert student homework done here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":348,"author":{"gitId":"mayuanxin1234"},"content":"            homeworkDoneTrimmed \u003d \"false\";","lastModifiedDate":"2023-03-14"},{"lineNumber":349,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":350,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedWeightage.equals(\"Insert student weightage here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":351,"author":{"gitId":"mayuanxin1234"},"content":"            trimmedWeightage \u003d \"-100\";","lastModifiedDate":"2023-03-14"},{"lineNumber":352,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":353,"author":{"gitId":"mayuanxin1234"},"content":"        if (trimmedScore.equals(\"Insert student score here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":354,"author":{"gitId":"mayuanxin1234"},"content":"            trimmedScore \u003d \"-100\";","lastModifiedDate":"2023-03-14"},{"lineNumber":355,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":356,"author":{"gitId":"mayuanxin1234"},"content":"        return new Homework(homework, localDate, Integer.parseInt(trimmedWeightage),","lastModifiedDate":"2023-03-14"},{"lineNumber":357,"author":{"gitId":"mayuanxin1234"},"content":"                Integer.parseInt(trimmedScore), Boolean.parseBoolean(homeworkDoneTrimmed));","lastModifiedDate":"2023-03-14"},{"lineNumber":358,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":359,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":360,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":361,"author":{"gitId":"mayuanxin1234"},"content":"     * Parses comment to Comment","lastModifiedDate":"2023-03-10"},{"lineNumber":362,"author":{"gitId":"mayuanxin1234"},"content":"     * @param comment","lastModifiedDate":"2023-03-10"},{"lineNumber":363,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A Comment","lastModifiedDate":"2023-03-10"},{"lineNumber":364,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-10"},{"lineNumber":365,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":366,"author":{"gitId":"mayuanxin1234"},"content":"    public static Comment parseComment(String comment) throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":367,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(comment);","lastModifiedDate":"2023-03-10"},{"lineNumber":368,"author":{"gitId":"mayuanxin1234"},"content":"        String trimmedComment \u003d comment.trim();","lastModifiedDate":"2023-03-10"},{"lineNumber":369,"author":{"gitId":"mayuanxin1234"},"content":"        if (!Comment.isValidComment(trimmedComment)) {","lastModifiedDate":"2023-03-10"},{"lineNumber":370,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(Homework.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-10"},{"lineNumber":371,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":372,"author":{"gitId":"mayuanxin1234"},"content":"        //Please edit this","lastModifiedDate":"2023-03-10"},{"lineNumber":373,"author":{"gitId":"mayuanxin1234"},"content":"        return new Comment(trimmedComment);","lastModifiedDate":"2023-03-10"},{"lineNumber":374,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"MrTwit99":18,"securespider":7,"Diatbbin":3,"-":124,"mayuanxin1234":223}},{"path":"src/main/java/seedu/address/logic/parser/StudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADD;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ATTENDANCE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_CCA;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENT;","lastModifiedDate":"2023-03-10"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_COMMENTCOMMAND;","lastModifiedDate":"2023-03-10"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2023-03-14"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DELETE;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAILSTUDENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADE;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_GRADEDELETE;","lastModifiedDate":"2023-03-14"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORK;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_HOMEWORKDONE;","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_IMAGESTUDENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_INDEXNUMBER;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PARENTNAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONEPARENT;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONESTUDENT;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RELATIONSHIP;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SCORE;","lastModifiedDate":"2023-03-14"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SEX;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_STUDENTAGE;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TEST;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_WEIGHTAGE;","lastModifiedDate":"2023-03-14"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentAddCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentCommentCommand;","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.logic.commands.student.StudentDeleteCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentGradeCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.student.StudentGradeDeleteCommand;","lastModifiedDate":"2023-03-14"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Attendance;","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Cca;","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Homework;","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":" * StudentCommandParser that parses commands starting with \"student\"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentCommandParser implements Parser\u003cStudentCommand\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String HELP_MESSAGE \u003d \"Student command has to include a class and action.\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"            + StudentCommand.MESSAGE_USAGE;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003cclass\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"     * Parse the command into their respective prefixes","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"     * @param args the command input by user","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A StudentCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(args.trim());","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HELP_MESSAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        final String studentClass \u003d matcher.group(\"class\");","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"        ArgumentMultimap argMultimapAdd \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_ADD, PREFIX_NAME, PREFIX_INDEXNUMBER, PREFIX_SEX,","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_PARENTNAME, PREFIX_PHONEPARENT, PREFIX_RELATIONSHIP, PREFIX_STUDENTAGE,","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_IMAGESTUDENT, PREFIX_EMAILSTUDENT, PREFIX_PHONESTUDENT, PREFIX_CCA, PREFIX_TEST,","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_ATTENDANCE, PREFIX_HOMEWORK, PREFIX_SCORE, PREFIX_DEADLINE, PREFIX_WEIGHTAGE,","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_ADDRESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"        ArgumentMultimap argMultimapDelete \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_DELETE, PREFIX_NAME, PREFIX_INDEXNUMBER, PREFIX_SEX,","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_PARENTNAME, PREFIX_PHONEPARENT, PREFIX_RELATIONSHIP, PREFIX_STUDENTAGE,","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_IMAGESTUDENT, PREFIX_EMAILSTUDENT, PREFIX_PHONESTUDENT, PREFIX_CCA, PREFIX_TEST,","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_ATTENDANCE, PREFIX_HOMEWORK, PREFIX_ADDRESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_COMMENTCOMMAND, PREFIX_COMMENT, PREFIX_ADD,","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_INDEXNUMBER, PREFIX_SEX, PREFIX_PARENTNAME, PREFIX_PHONEPARENT,","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_RELATIONSHIP, PREFIX_STUDENTAGE, PREFIX_IMAGESTUDENT, PREFIX_EMAILSTUDENT,","lastModifiedDate":"2023-03-15"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_PHONESTUDENT, PREFIX_CCA, PREFIX_TEST, PREFIX_ATTENDANCE, PREFIX_HOMEWORK,","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"                        PREFIX_ADDRESS);","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"        ArgumentMultimap argMultimapGrade \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_GRADE, PREFIX_INDEXNUMBER, PREFIX_TEST,","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"                        PREFIX_HOMEWORK, PREFIX_SCORE, PREFIX_DEADLINE, PREFIX_WEIGHTAGE, PREFIX_HOMEWORKDONE);","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"        ArgumentMultimap argMultimapGradeDelete \u003d","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"                ArgumentTokenizer.tokenize(arguments, PREFIX_GRADEDELETE, PREFIX_INDEXNUMBER, PREFIX_TEST,","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"                        PREFIX_HOMEWORK);","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"Diatbbin"},"content":"        if (argMultimapAdd.getValue(PREFIX_ADD).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"            return addCommand(studentClass, argMultimapAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"Diatbbin"},"content":"        } else if (argMultimapDelete.getValue(PREFIX_DELETE).isPresent()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"Diatbbin"},"content":"            return deleteCommand(studentClass, argMultimapDelete);","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (argMultimap.getValue(PREFIX_COMMENTCOMMAND).isPresent()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"            return commentCommand(studentClass, argMultimap);","lastModifiedDate":"2023-03-10"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (argMultimapGrade.getValue(PREFIX_GRADE).isPresent()","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"            \u0026\u0026 !argMultimapGradeDelete.getValue(PREFIX_GRADEDELETE).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"            return gradeCommand(studentClass, argMultimapGrade);","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"        } else if (argMultimapGradeDelete.getValue(PREFIX_GRADEDELETE).isPresent()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"            return gradeDeleteCommand(studentClass, argMultimapGradeDelete);","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"            //Rest of logic (Need to edit)","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HELP_MESSAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"     * Function to parse the \"student class add\" command","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentClass class of student","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"     * @param argMultimap mapper for each prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A StudentAddCommand","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"    private StudentAddCommand addCommand(String studentClass, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_INDEXNUMBER, PREFIX_SEX, PREFIX_PARENTNAME,","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"                PREFIX_PHONEPARENT, PREFIX_RELATIONSHIP)","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"                || !argMultimap.getPreamble().isEmpty()","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"                || studentClass.length() \u003d\u003d 0) {","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, StudentAddCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"securespider"},"content":"        Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"        IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"        Sex sex \u003d ParserUtil.parseSex(argMultimap.getValue(PREFIX_SEX).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"        Name parentName \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_PARENTNAME).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"        Phone parentNumber \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONEPARENT).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"        Relationship rls \u003d ParserUtil.parseRelationship(argMultimap.getValue(PREFIX_RELATIONSHIP).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":150,"author":{"gitId":"MrTwit99"},"content":"        Age age \u003d ParserUtil.parseAge((argMultimap.getValue(PREFIX_STUDENTAGE).get()));","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"        Image image \u003d ParserUtil.parseImage(argMultimap.getValue(PREFIX_IMAGESTUDENT).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAILSTUDENT).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONESTUDENT).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"        Cca cca \u003d ParserUtil.parseCca(argMultimap.getValue(PREFIX_CCA).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"        Attendance attendance \u003d ParserUtil.parseAttendance(argMultimap.getValue(PREFIX_ATTENDANCE).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"        String score \u003d argMultimap.getValue(PREFIX_SCORE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"        String deadline \u003d argMultimap.getValue(PREFIX_DEADLINE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"        String weightage \u003d argMultimap.getValue(PREFIX_WEIGHTAGE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"        String homeworkDone \u003d argMultimap.getValue(PREFIX_HOMEWORKDONE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"        Homework homework \u003d ParserUtil.parseHomework(\"Insert student homework here!\", score, deadline,","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"                weightage, homeworkDone);","lastModifiedDate":"2023-03-14"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"        Test test \u003d ParserUtil.parseTest(\"Insert student test here!\", score, deadline, weightage);","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"        Comment comment \u003d ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"        Set\u003cHomework\u003e homeworkSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"        homeworkSet.add(homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":168,"author":{"gitId":"mayuanxin1234"},"content":"        Set\u003cTest\u003e testSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"        testSet.add(test);","lastModifiedDate":"2023-03-14"},{"lineNumber":170,"author":{"gitId":"MrTwit99"},"content":"        Student student \u003d new Student(name, sc, indexNumber, sex, parentName, parentNumber, rls,","lastModifiedDate":"2023-03-15"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"                age, image, email, phone, cca, address, attendance, homeworkSet, testSet, tagList, comment);","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"        return new StudentAddCommand(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":176,"author":{"gitId":"mayuanxin1234"},"content":"     * Function to parse the \"student class delete\" command","lastModifiedDate":"2023-03-14"},{"lineNumber":177,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentClass","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"mayuanxin1234"},"content":"     * @param argMultimap","lastModifiedDate":"2023-03-14"},{"lineNumber":179,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A StudentDeleteCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":180,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-14"},{"lineNumber":181,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":182,"author":{"gitId":"mayuanxin1234"},"content":"    private StudentCommentCommand commentCommand(String studentClass, ArgumentMultimap argMultimap)","lastModifiedDate":"2023-03-10"},{"lineNumber":183,"author":{"gitId":"mayuanxin1234"},"content":"            throws ParseException {","lastModifiedDate":"2023-03-10"},{"lineNumber":184,"author":{"gitId":"mayuanxin1234"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_COMMENT)","lastModifiedDate":"2023-03-10"},{"lineNumber":185,"author":{"gitId":"mayuanxin1234"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-10"},{"lineNumber":186,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-10"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"                    StudentCommentCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-10"},{"lineNumber":188,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"securespider"},"content":"        Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"mayuanxin1234"},"content":"        IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":191,"author":{"gitId":"mayuanxin1234"},"content":"        Comment comment \u003d ParserUtil.parseComment(argMultimap.getValue(PREFIX_COMMENT).get());","lastModifiedDate":"2023-03-10"},{"lineNumber":192,"author":{"gitId":"mayuanxin1234"},"content":"        return new StudentCommentCommand(sc, indexNumber, comment);","lastModifiedDate":"2023-03-10"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":195,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"Diatbbin"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"Diatbbin"},"content":"     * trimmed.","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"Diatbbin"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"Diatbbin"},"content":"    public StudentDeleteCommand deleteCommand(String studentClass, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":201,"author":{"gitId":"mayuanxin1234"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER)","lastModifiedDate":"2023-03-14"},{"lineNumber":202,"author":{"gitId":"mayuanxin1234"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":203,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-14"},{"lineNumber":204,"author":{"gitId":"mayuanxin1234"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, StudentDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":206,"author":{"gitId":"securespider"},"content":"        Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"Diatbbin"},"content":"        IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-12"},{"lineNumber":208,"author":{"gitId":"Diatbbin"},"content":"        return new StudentDeleteCommand(indexNumber, sc);","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":212,"author":{"gitId":"mayuanxin1234"},"content":"     * Function to parse the \"student class grade\" command","lastModifiedDate":"2023-03-14"},{"lineNumber":213,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentClass","lastModifiedDate":"2023-03-14"},{"lineNumber":214,"author":{"gitId":"mayuanxin1234"},"content":"     * @param argMultimap","lastModifiedDate":"2023-03-14"},{"lineNumber":215,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A StudentGradeCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":216,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-14"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":218,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeCommand gradeCommand(String studentClass, ArgumentMultimap argMultimap) throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"mayuanxin1234"},"content":"        if ((arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_TEST)","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"mayuanxin1234"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_HOMEWORK))","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"mayuanxin1234"},"content":"            Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"mayuanxin1234"},"content":"            IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"mayuanxin1234"},"content":"            String score \u003d argMultimap.getValue(PREFIX_SCORE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"mayuanxin1234"},"content":"            String deadline \u003d argMultimap.getValue(PREFIX_DEADLINE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"mayuanxin1234"},"content":"            String weightage \u003d argMultimap.getValue(PREFIX_WEIGHTAGE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"            String homeworkDone \u003d argMultimap.getValue(PREFIX_HOMEWORKDONE).get();","lastModifiedDate":"2023-03-14"},{"lineNumber":228,"author":{"gitId":"mayuanxin1234"},"content":"            Test test;","lastModifiedDate":"2023-03-15"},{"lineNumber":229,"author":{"gitId":"mayuanxin1234"},"content":"            Homework homework;","lastModifiedDate":"2023-03-15"},{"lineNumber":230,"author":{"gitId":"mayuanxin1234"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_TEST)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"mayuanxin1234"},"content":"                test \u003d ParserUtil.parseTest(argMultimap.getValue(PREFIX_TEST).get(), score, deadline, weightage);","lastModifiedDate":"2023-03-15"},{"lineNumber":232,"author":{"gitId":"mayuanxin1234"},"content":"                return new StudentGradeCommand(sc, indexNumber, test);","lastModifiedDate":"2023-03-15"},{"lineNumber":233,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":234,"author":{"gitId":"mayuanxin1234"},"content":"                homework \u003d ParserUtil.parseHomework(argMultimap.getValue(PREFIX_HOMEWORK).get(), score, deadline,","lastModifiedDate":"2023-03-15"},{"lineNumber":235,"author":{"gitId":"mayuanxin1234"},"content":"                        weightage, homeworkDone);","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"mayuanxin1234"},"content":"                return new StudentGradeCommand(sc, indexNumber, homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":238,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":239,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":240,"author":{"gitId":"mayuanxin1234"},"content":"                    StudentGradeCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":241,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":242,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":243,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":244,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":245,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":246,"author":{"gitId":"mayuanxin1234"},"content":"     * Function to parse the \"student class grade delete\" command","lastModifiedDate":"2023-03-14"},{"lineNumber":247,"author":{"gitId":"mayuanxin1234"},"content":"     * @param studentClass","lastModifiedDate":"2023-03-14"},{"lineNumber":248,"author":{"gitId":"mayuanxin1234"},"content":"     * @param argMultimap","lastModifiedDate":"2023-03-14"},{"lineNumber":249,"author":{"gitId":"mayuanxin1234"},"content":"     * @return A StudentGradeDeleteCommand","lastModifiedDate":"2023-03-14"},{"lineNumber":250,"author":{"gitId":"mayuanxin1234"},"content":"     * @throws ParseException","lastModifiedDate":"2023-03-14"},{"lineNumber":251,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":252,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentGradeDeleteCommand gradeDeleteCommand(String studentClass, ArgumentMultimap argMultimap)","lastModifiedDate":"2023-03-14"},{"lineNumber":253,"author":{"gitId":"mayuanxin1234"},"content":"            throws ParseException {","lastModifiedDate":"2023-03-14"},{"lineNumber":254,"author":{"gitId":"mayuanxin1234"},"content":"        if ((arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_TEST)","lastModifiedDate":"2023-03-14"},{"lineNumber":255,"author":{"gitId":"mayuanxin1234"},"content":"                || arePrefixesPresent(argMultimap, PREFIX_INDEXNUMBER, PREFIX_HOMEWORK))","lastModifiedDate":"2023-03-14"},{"lineNumber":256,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-14"},{"lineNumber":257,"author":{"gitId":"mayuanxin1234"},"content":"            Class sc \u003d ParserUtil.parseStudentClass(studentClass);","lastModifiedDate":"2023-03-14"},{"lineNumber":258,"author":{"gitId":"mayuanxin1234"},"content":"            IndexNumber indexNumber \u003d ParserUtil.parseIndexNumber(argMultimap.getValue(PREFIX_INDEXNUMBER).get());","lastModifiedDate":"2023-03-14"},{"lineNumber":259,"author":{"gitId":"mayuanxin1234"},"content":"            Test test;","lastModifiedDate":"2023-03-15"},{"lineNumber":260,"author":{"gitId":"mayuanxin1234"},"content":"            Homework homework;","lastModifiedDate":"2023-03-15"},{"lineNumber":261,"author":{"gitId":"mayuanxin1234"},"content":"            if (arePrefixesPresent(argMultimap, PREFIX_TEST)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":262,"author":{"gitId":"mayuanxin1234"},"content":"                test \u003d ParserUtil.parseTest(argMultimap.getValue(PREFIX_TEST).get(),","lastModifiedDate":"2023-03-15"},{"lineNumber":263,"author":{"gitId":"mayuanxin1234"},"content":"                        \"Insert student score here!\", argMultimap.getValue(PREFIX_DEADLINE).get(),","lastModifiedDate":"2023-03-14"},{"lineNumber":264,"author":{"gitId":"mayuanxin1234"},"content":"                        \"Insert student weightage here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":265,"author":{"gitId":"mayuanxin1234"},"content":"                return new StudentGradeDeleteCommand(sc, indexNumber, test);","lastModifiedDate":"2023-03-15"},{"lineNumber":266,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-03-15"},{"lineNumber":267,"author":{"gitId":"mayuanxin1234"},"content":"                homework \u003d ParserUtil.parseHomework(argMultimap.getValue(PREFIX_HOMEWORK).get(),","lastModifiedDate":"2023-03-15"},{"lineNumber":268,"author":{"gitId":"mayuanxin1234"},"content":"                        \"Insert student score here!\", argMultimap.getValue(PREFIX_DEADLINE).get(),","lastModifiedDate":"2023-03-14"},{"lineNumber":269,"author":{"gitId":"mayuanxin1234"},"content":"                        \"Insert student weightage here!\", \"Insert student homework done here!\");","lastModifiedDate":"2023-03-14"},{"lineNumber":270,"author":{"gitId":"mayuanxin1234"},"content":"                return new StudentGradeDeleteCommand(sc, indexNumber, homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":271,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-14"},{"lineNumber":272,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":273,"author":{"gitId":"mayuanxin1234"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-14"},{"lineNumber":274,"author":{"gitId":"mayuanxin1234"},"content":"                    StudentGradeDeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-14"},{"lineNumber":275,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":276,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":277,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":278,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":279,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":280,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2023-03-06"},{"lineNumber":281,"author":{"gitId":"mayuanxin1234"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2023-03-06"},{"lineNumber":282,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"mayuanxin1234"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"mayuanxin1234"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":286,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":23,"securespider":4,"Diatbbin":21,"mayuanxin1234":238}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.UniqueParentList;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.UniqueStudentList;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    private final UniqueStudentList students;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    private final UniqueParentList parents;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        students \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        parents \u003d new UniqueParentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"    public void setParents(List\u003cParent\u003e parents) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        this.parents.setParents(parents);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"     * Returns boolean value true if a student with the same identity as {@code student} exists in PowerConnect.","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"     * @param student Student object that needs to be checked for duplication.","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value indicating whether the student already exists in PowerConnect.","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"        return students.contains(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"     * Returns boolean value true if a parent with the same identity as {@code parent} exists in PowerConnect.","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"     * @param parent Parent object that needs to be checked for duplication.","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value indicating whether the parent already exists in PowerConnect.","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"    public boolean hasParent(Parent parent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"        return parents.contains(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"     * Returns boolean value true if Phone is currently not attached to any Parent or if Phone and Name matches an","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"     * existing Parent.","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"     * @param phone Phone object to be checked with.","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"     * @param parentName Name object to be checked with.","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value result from the checks.","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"    public boolean canInitialize(Phone phone, Name parentName) {","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(parentName);","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"        for (Parent p : parents) {","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"            if (phone.equals(p.getPhone())) {","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"                return p.getName().equals(parentName);","lastModifiedDate":"2023-03-16"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"        return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"     * Adds a student to addressBook/PowerConnect","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"     * @param s of student","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"MrTwit99"},"content":"    public void addStudent(Student s) {","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"MrTwit99"},"content":"        students.add(s);","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"    public void addParent(Parent p) {","lastModifiedDate":"2023-03-12"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"        parents.add(p);","lastModifiedDate":"2023-03-12"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"MrTwit99"},"content":"        parents.setParent(target, editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":171,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"mayuanxin1234"},"content":"     * Removes a student","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"mayuanxin1234"},"content":"     * @param key","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"MrTwit99"},"content":"    public void removeStudent(Student key) {","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"MrTwit99"},"content":"        students.remove(key);","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"MrTwit99"},"content":"    public void removeParent(Parent key) {","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"MrTwit99"},"content":"        parents.remove(key);","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":199,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":203,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"MrTwit99"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cParent\u003e getParentList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":209,"author":{"gitId":"MrTwit99"},"content":"        return parents.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-12"},{"lineNumber":210,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":211,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MrTwit99":78,"-":120,"mayuanxin1234":25}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    Predicate\u003cStudent\u003e PREDICATE_SHOW_ALL_STUDENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    Predicate\u003cParent\u003e PREDICATE_SHOW_ALL_PARENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    boolean hasStudent(Student student);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"    boolean hasParent(Parent parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"    boolean canInitialize(Phone phone, Name parentName);","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"    void deleteStudent(Student target);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"    void deleteParent(Parent parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"    void addStudent(Student student);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"    void addParent(Parent parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"    void setStudent(Student target, Student editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"    void setParent(Parent target, Parent editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"    ObservableList\u003cStudent\u003e getFilteredStudentList();","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"    ObservableList\u003cParent\u003e getFilteredParentList();","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"    void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"    void updateFilteredParentList(Predicate\u003cParent\u003e predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"MrTwit99":15,"-":88,"mayuanxin1234":9}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    private final FilteredList\u003cStudent\u003e filteredStudents;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"    private final FilteredList\u003cParent\u003e filteredParents;","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        filteredStudents \u003d new FilteredList\u003c\u003e(this.addressBook.getStudentList());","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"        filteredParents \u003d new FilteredList\u003c\u003e(this.addressBook.getParentList());","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"        return addressBook.hasStudent(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"    public boolean hasParent(Parent parent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"        return addressBook.hasParent(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"    public boolean canInitialize(Phone phone, Name parentName) {","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(parentName);","lastModifiedDate":"2023-03-16"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"        return addressBook.canInitialize(phone, parentName);","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"    public void deleteStudent(Student target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"        addressBook.removeStudent(target);","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"    public void deleteParent(Parent target) {","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"        addressBook.removeParent(target);","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":139,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"        addressBook.addStudent(student);","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"        updateFilteredStudentList(PREDICATE_SHOW_ALL_STUDENTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"    public void addParent(Parent parent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"        addressBook.addParent(parent);","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"MrTwit99"},"content":"        updateFilteredParentList(PREDICATE_SHOW_ALL_PARENTS);","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":157,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"mayuanxin1234"},"content":"        addressBook.setStudent(target, editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"MrTwit99"},"content":"        requireAllNonNull(target, editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"MrTwit99"},"content":"        addressBook.setParent(target, editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":185,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":190,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"MrTwit99"},"content":"        return filteredStudents;","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":196,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cParent\u003e getFilteredParentList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"MrTwit99"},"content":"        return filteredParents;","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":206,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"mayuanxin1234"},"content":"    public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"mayuanxin1234"},"content":"        filteredStudents.setPredicate(predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":213,"author":{"gitId":"MrTwit99"},"content":"    public void updateFilteredParentList(Predicate\u003cParent\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":214,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":215,"author":{"gitId":"MrTwit99"},"content":"        filteredParents.setPredicate(predicate);","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":233,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"MrTwit99":52,"-":151,"mayuanxin1234":33}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    ObservableList\u003cStudent\u003e getStudentList();","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":17,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/model/person/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s address in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        if (test.equals(\"Insert Address here!\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":1,"-":57,"mayuanxin1234":2}},{"path":"src/main/java/seedu/address/model/person/Age.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.ParentName;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":" * Represents the Age of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class Age {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Age must be digits (0-9)\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     * @param age A valid student age.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    public Age(String age) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(age);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidAge(age), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d age;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidAge(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student age here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"        if (test.equals(\"Insert parent age here!\")) {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof ParentName// instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((ParentName) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":6,"Diatbbin":1,"mayuanxin1234":55}},{"path":"src/main/java/seedu/address/model/person/Class.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import java.util.List;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.exceptions.DuplicateClassException;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.parent.UniqueParentList;","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.student.UniqueStudentList;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":" * Represents a Class in the address book.","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"public class Class {","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"            \"Class name must contain letters and/or digits with no spaces in between\";","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    private static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    private static final List\u003cClass\u003e classes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    private final String className;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    private UniqueStudentList students;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    private UniqueParentList parents;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     * @param className A valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"     * @param students A list of students in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"     * @param parents A list of parents in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"    private Class(String className,","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"                  UniqueStudentList students,","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"                  UniqueParentList parents) throws DuplicateClassException {","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"        requireNonNull(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"        checkArgument(isValidClass(className), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        this.students \u003d students;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"        this.parents \u003d parents;","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"        if (classes.contains(this)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"            throw new DuplicateClassException();","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"        classes.add(this);","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"     * @param className A valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    private Class(String className) throws DuplicateClassException {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"        requireNonNull(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"        checkArgument(isValidClass(className), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        this.className \u003d className;","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"        this.students \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"        this.parents \u003d new UniqueParentList();","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"        if (classes.contains(this)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"            throw new DuplicateClassException();","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"        classes.add(this);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"     * @param className A valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"     * @return The class with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"    public static Class of(String className) {","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"            return new Class(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"        } catch (DuplicateClassException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"            return getClass(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"     * Constructs a {@code Class}.","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"     * @param className A valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"     * @param students A list of students in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"     * @param parents A list of parents in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"     * @return The class with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"    public static Class of(String className, UniqueStudentList students, UniqueParentList parents) {","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"        try {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"            return new Class(className, students, parents);","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"        } catch (DuplicateClassException e) {","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"            return getClass(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"     * Returns true if a given string is a valid class name.","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"     * @param className Test string to be checked.","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"    public static boolean isValidClass(String className) {","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"        return className.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"     * Get the class with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"     * @param className The name of the class to be retrieved.","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"     * @return The class with the given name.","lastModifiedDate":"2023-03-13"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"    public static Class getClass(String className) {","lastModifiedDate":"2023-03-13"},{"lineNumber":115,"author":{"gitId":"securespider"},"content":"        for (Class c : classes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"            if (c.getClassName().equals(className)) {","lastModifiedDate":"2023-03-13"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"                return c;","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"securespider"},"content":"            }","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"securespider"},"content":"        return null;","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"     * Get the list of all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"securespider"},"content":"     * @return The list of all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"securespider"},"content":"    public static List\u003cClass\u003e getClasses() {","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"securespider"},"content":"        return classes;","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":132,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"securespider"},"content":"     * Get the list of all people in all classes","lastModifiedDate":"2023-03-13"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"securespider"},"content":"     * @return The list of all people in all classes","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"securespider"},"content":"    public static ObservableList\u003cPerson\u003e getPersons() {","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"securespider"},"content":"        ObservableList\u003cPerson\u003e persons \u003d new UniquePersonList().asUnmodifiableObservableList();","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"securespider"},"content":"        for (Class c : classes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"securespider"},"content":"            persons.addAll(c.getStudents());","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"securespider"},"content":"            persons.addAll(c.getParents());","lastModifiedDate":"2023-03-13"},{"lineNumber":142,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":143,"author":{"gitId":"securespider"},"content":"        return persons;","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"securespider"},"content":"     * Get the list of all students in all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"securespider"},"content":"     * @return The list of all students in all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":151,"author":{"gitId":"securespider"},"content":"    public static UniqueStudentList getAllStudents() {","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"securespider"},"content":"        UniqueStudentList allStudents \u003d new UniqueStudentList();","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"securespider"},"content":"        for (Class c : classes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"securespider"},"content":"            allStudents.setStudents(c.getStudents());","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"securespider"},"content":"        return allStudents;","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"securespider"},"content":"     * Get the list of all parents in all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"securespider"},"content":"     * @return The list of all parents in all classes.","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"securespider"},"content":"    public static UniqueParentList getAllParents() {","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"securespider"},"content":"        UniqueParentList allParents \u003d new UniqueParentList();","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"securespider"},"content":"        for (Class c : classes) {","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"securespider"},"content":"            allParents.setParents(c.getParents());","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"securespider"},"content":"        return allParents;","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"securespider"},"content":"     * Get the name of the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"securespider"},"content":"     * @return The name of the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"securespider"},"content":"    public String getClassName() {","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"securespider"},"content":"        return className;","lastModifiedDate":"2023-03-13"},{"lineNumber":179,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"securespider"},"content":"     * Get the list of students in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"securespider"},"content":"     * @return The list of students in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"securespider"},"content":"    public ObservableList\u003cStudent\u003e getStudents() {","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"securespider"},"content":"        return students.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":189,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"securespider"},"content":"     * Get the list of parents in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"securespider"},"content":"     * @return The list of parents in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":195,"author":{"gitId":"securespider"},"content":"    public ObservableList\u003cParent\u003e getParents() {","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"securespider"},"content":"        return parents.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-13"},{"lineNumber":197,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"securespider"},"content":"     * Check if the class has a student.","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"securespider"},"content":"     * @param student The student to be checked.","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"securespider"},"content":"     * @return True if the class has the student.","lastModifiedDate":"2023-03-13"},{"lineNumber":204,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":205,"author":{"gitId":"securespider"},"content":"    public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-13"},{"lineNumber":206,"author":{"gitId":"securespider"},"content":"        return students.contains(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":207,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"securespider"},"content":"     * Check if the class has a parent.","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"securespider"},"content":"     * @param parent The parent to be checked.","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"securespider"},"content":"     * @return True if the class has the parent.","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"securespider"},"content":"    public boolean hasParent(Parent parent) {","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"securespider"},"content":"        return parents.contains(parent);","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":218,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":219,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":220,"author":{"gitId":"securespider"},"content":"     * Add a student to the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":221,"author":{"gitId":"securespider"},"content":"     * @param student The student to be added.","lastModifiedDate":"2023-03-13"},{"lineNumber":222,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":223,"author":{"gitId":"securespider"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2023-03-13"},{"lineNumber":224,"author":{"gitId":"securespider"},"content":"        students.add(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":225,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":226,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":228,"author":{"gitId":"securespider"},"content":"     * Add a parent to the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":230,"author":{"gitId":"securespider"},"content":"     * @param parent The parent to be added.","lastModifiedDate":"2023-03-13"},{"lineNumber":231,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":232,"author":{"gitId":"securespider"},"content":"    public void addParent(Parent parent) {","lastModifiedDate":"2023-03-13"},{"lineNumber":233,"author":{"gitId":"securespider"},"content":"        parents.add(parent);","lastModifiedDate":"2023-03-13"},{"lineNumber":234,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":235,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":237,"author":{"gitId":"securespider"},"content":"     * Remove a student from the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":238,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":239,"author":{"gitId":"securespider"},"content":"     * @param student The student to be removed.","lastModifiedDate":"2023-03-13"},{"lineNumber":240,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":241,"author":{"gitId":"securespider"},"content":"    public void removeStudent(Student student) {","lastModifiedDate":"2023-03-13"},{"lineNumber":242,"author":{"gitId":"securespider"},"content":"        students.remove(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":243,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":244,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":245,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":246,"author":{"gitId":"securespider"},"content":"     * Remove a parent from the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":247,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":248,"author":{"gitId":"securespider"},"content":"     * @param parent The parent to be removed.","lastModifiedDate":"2023-03-13"},{"lineNumber":249,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":250,"author":{"gitId":"securespider"},"content":"    public void removeParent(Parent parent) {","lastModifiedDate":"2023-03-13"},{"lineNumber":251,"author":{"gitId":"securespider"},"content":"        parents.remove(parent);","lastModifiedDate":"2023-03-13"},{"lineNumber":252,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":253,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":254,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":255,"author":{"gitId":"securespider"},"content":"     * Replaces students in the class with another list.","lastModifiedDate":"2023-03-13"},{"lineNumber":256,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":257,"author":{"gitId":"securespider"},"content":"     * @param students The UniqueStudentList of students to be replaced with.","lastModifiedDate":"2023-03-13"},{"lineNumber":258,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":259,"author":{"gitId":"securespider"},"content":"    public void setStudents(UniqueStudentList students) {","lastModifiedDate":"2023-03-13"},{"lineNumber":260,"author":{"gitId":"securespider"},"content":"        this.students \u003d students;","lastModifiedDate":"2023-03-13"},{"lineNumber":261,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":262,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":263,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":264,"author":{"gitId":"securespider"},"content":"     * Overloaded method if user inputs List instead of UniqueStudentList.","lastModifiedDate":"2023-03-13"},{"lineNumber":265,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":266,"author":{"gitId":"securespider"},"content":"     * @param students The List of students to be replaced with.","lastModifiedDate":"2023-03-13"},{"lineNumber":267,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":268,"author":{"gitId":"securespider"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-13"},{"lineNumber":269,"author":{"gitId":"securespider"},"content":"        this.students.setStudents(students);","lastModifiedDate":"2023-03-13"},{"lineNumber":270,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":271,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":272,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":273,"author":{"gitId":"securespider"},"content":"     * Replaces parents in the class with another list.","lastModifiedDate":"2023-03-13"},{"lineNumber":274,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":275,"author":{"gitId":"securespider"},"content":"     * @param parents The UniqueParentList of parents to be replaced with.","lastModifiedDate":"2023-03-13"},{"lineNumber":276,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":277,"author":{"gitId":"securespider"},"content":"    public void setParents(UniqueParentList parents) {","lastModifiedDate":"2023-03-13"},{"lineNumber":278,"author":{"gitId":"securespider"},"content":"        this.parents \u003d parents;","lastModifiedDate":"2023-03-13"},{"lineNumber":279,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":280,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":281,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":282,"author":{"gitId":"securespider"},"content":"     * Overloaded method if user inputs List instead of UniqueParentList.","lastModifiedDate":"2023-03-13"},{"lineNumber":283,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":284,"author":{"gitId":"securespider"},"content":"     * @param parents The List of parents to be replaced with.","lastModifiedDate":"2023-03-13"},{"lineNumber":285,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":286,"author":{"gitId":"securespider"},"content":"    public void setParents(List\u003cParent\u003e parents) {","lastModifiedDate":"2023-03-13"},{"lineNumber":287,"author":{"gitId":"securespider"},"content":"        this.parents.setParents(parents);","lastModifiedDate":"2023-03-13"},{"lineNumber":288,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":289,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":290,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":291,"author":{"gitId":"securespider"},"content":"     * Update a student in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":292,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":293,"author":{"gitId":"securespider"},"content":"     * @param target The student to be updated.","lastModifiedDate":"2023-03-13"},{"lineNumber":294,"author":{"gitId":"securespider"},"content":"     * @param editedStudent The student to be updated to.","lastModifiedDate":"2023-03-13"},{"lineNumber":295,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":296,"author":{"gitId":"securespider"},"content":"    public void updateStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-13"},{"lineNumber":297,"author":{"gitId":"securespider"},"content":"        requireNonNull(editedStudent);","lastModifiedDate":"2023-03-13"},{"lineNumber":298,"author":{"gitId":"securespider"},"content":"        students.setStudent(target, editedStudent);","lastModifiedDate":"2023-03-13"},{"lineNumber":299,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":300,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":301,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":302,"author":{"gitId":"securespider"},"content":"     * Update a parent in the class.","lastModifiedDate":"2023-03-13"},{"lineNumber":303,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":304,"author":{"gitId":"securespider"},"content":"     * @param target The parent to be updated.","lastModifiedDate":"2023-03-13"},{"lineNumber":305,"author":{"gitId":"securespider"},"content":"     * @param editedParent The parent to be updated to.","lastModifiedDate":"2023-03-13"},{"lineNumber":306,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":307,"author":{"gitId":"securespider"},"content":"    public void updateParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-13"},{"lineNumber":308,"author":{"gitId":"securespider"},"content":"        requireNonNull(editedParent);","lastModifiedDate":"2023-03-13"},{"lineNumber":309,"author":{"gitId":"securespider"},"content":"        parents.setParent(target, editedParent);","lastModifiedDate":"2023-03-13"},{"lineNumber":310,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":311,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":312,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":313,"author":{"gitId":"securespider"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-13"},{"lineNumber":314,"author":{"gitId":"securespider"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-13"},{"lineNumber":315,"author":{"gitId":"securespider"},"content":"            return true;","lastModifiedDate":"2023-03-13"},{"lineNumber":316,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":317,"author":{"gitId":"securespider"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":318,"author":{"gitId":"securespider"},"content":"            return false;","lastModifiedDate":"2023-03-13"},{"lineNumber":319,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":320,"author":{"gitId":"securespider"},"content":"        Class aClass \u003d (Class) o;","lastModifiedDate":"2023-03-13"},{"lineNumber":321,"author":{"gitId":"securespider"},"content":"        return className.equals(aClass.className);","lastModifiedDate":"2023-03-13"},{"lineNumber":322,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":323,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":324,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-03-13"},{"lineNumber":325,"author":{"gitId":"securespider"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-13"},{"lineNumber":326,"author":{"gitId":"securespider"},"content":"        return Objects.hash(className);","lastModifiedDate":"2023-03-13"},{"lineNumber":327,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":328,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"securespider":328}},{"path":"src/main/java/seedu/address/model/person/Comment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-10"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":" * Represents a Person\u0027s comment in the address book.","lastModifiedDate":"2023-03-10"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"public class Comment {","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    /** Represents the comment of a person */","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    public final String value;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"     * Constructs a Comment.","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     * @param comment A valid comment.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"    public Comment(String comment) {","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"        requireNonNull(comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"        value \u003d comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"     * Constructs a Comment with no comment.","lastModifiedDate":"2023-03-10"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"    public Comment() {","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":"        value \u003d \"No comment\";","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    public String toString() {","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"        return value;","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"                || (other instanceof Comment // instanceof handles nulls","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 value.equals(((Comment) other).value)); // state check","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid comment.","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"     * @param test","lastModifiedDate":"2023-03-10"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"     * @return true if a given string is a valid comment.","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidComment(String test) {","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student comment here!\")) {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-10"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"    @Override","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"    public int hashCode() {","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"        return value.hashCode();","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"securespider":45,"mayuanxin1234":14}},{"path":"src/main/java/seedu/address/model/person/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s email in the address book.","lastModifiedDate":"2018-02-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student email here!\") || test.equals(\"Insert parent email here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":71,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/model/person/Image.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.ParentName;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":" * Represents the Image of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class Image {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Image must be file destination\";","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\S+\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     * @param image A valid student image file destination.","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    public Image(String image) {","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(image);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidImage(image), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d image;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidImage(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student image here!\") || test.equals(\"Insert parent image here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof ParentName// instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((ParentName) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":3,"Diatbbin":1,"mayuanxin1234":55}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"    private final Comment comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    private Class sc;","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"    private IndexNumber indexNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Comment comment) {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-02-24"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-02-24"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-03-14"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireAllNonNull(name, phone, email, address, tags);","lastModifiedDate":"2017-05-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"        this.comment \u003d new Comment();","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags, Class sc,","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"                  IndexNumber indexNumber) {","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"        requireAllNonNull(name, phone, email, address, tags, sc, indexNumber);","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"        this.email \u003d email;","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        this.comment \u003d new Comment();","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"    public Comment getComment() {","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"        return comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"    public Class getStudentClass() {","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"        return sc;","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"    public IndexNumber getIndexNumber() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"        return indexNumber;","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"        if (otherPerson instanceof Student) {","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"                    \u0026\u0026 otherPerson.getStudentClass().equals(getStudentClass())","lastModifiedDate":"2023-03-13"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"                    \u0026\u0026 otherPerson.getIndexNumber().equals(getIndexNumber());","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"        if (otherPerson instanceof Parent) {","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"            return otherPerson !\u003d null","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"                    \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"        //Need to rethink what constitutes same student","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail())","lastModifiedDate":"2018-08-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(getAddress())","lastModifiedDate":"2018-08-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        return Objects.hash(name, phone, email, address, tags);","lastModifiedDate":"2016-08-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":165,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":166,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2020-12-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"MrTwit99":35,"securespider":15,"-":128}},{"path":"src/main/java/seedu/address/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2017-05-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student phone number here!\") || test.equals(\"Insert parent phone here!\")) {","lastModifiedDate":"2023-03-14"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"-":53,"mayuanxin1234":4}},{"path":"src/main/java/seedu/address/model/person/Sex.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the gender of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class Sex {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Sex can only be \u0027M\u0027 or \u0027F\u0027, and it should not be blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[MF]\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * @param sex A valid gender.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public Sex(String sex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(sex);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidSex(sex), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d sex;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidSex(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Sex // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((Sex) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":3,"Diatbbin":1,"mayuanxin1234":50}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicateClassException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-13"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":" * Signals that the operation will result in duplicate Classes (Classes are considered duplicates if they have the same","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"public class DuplicateClassException extends Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"     * Constructs a DuplicateClassException with the specified detail message.","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    public DuplicateClassException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"        super(\"Operation would result in duplicate classes\");","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-03-13"}],"authorContributionMap":{"securespider":13}},{"path":"src/main/java/seedu/address/model/person/exceptions/DuplicatePhoneException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.model.person.exceptions;","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":" * Signals that the operation will result in duplicate phone usage (Phones are considered duplicates if they are used by","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":" * two different Parents).","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"public class DuplicatePhoneException extends RuntimeException {","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"     * A constructor that creates a new DuplicatePhoneException when a Phone is already being used by another Parent","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"    public DuplicatePhoneException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"        super(\"Unable to perform the following operation as you are trying to use \"","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"                + \"a phone number that is already used by existing parent to create a new parent!\");","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"MrTwit99":15}},{"path":"src/main/java/seedu/address/model/person/parent/Parent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person.parent;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import java.util.List;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":" * A Parent Class that creates a Parent / Next-of-kin who is also a Person","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"public class Parent extends Person {","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"    private final Age age;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"    private final Image image;","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"    private final List\u003cStudent\u003e children \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"     * A constructor that creates a Parent Object with particulars about the Parent.","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"     * @param name Parent\u0027s / NOK\u0027s name.","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"     * @param age Parent\u0027s / NOK\u0027s age.","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"     * @param image Image of Parent / NOK.","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"     * @param email Email Address of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"     * @param phone Phone number of Parent / NOK.","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"     * @param address Residential Address of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"     * @param tags Tags given to Parent.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"    public Parent(Name name, Age age, Image image,","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"                  Email email, Phone phone, Address address, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"        this.image \u003d image;","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Age of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     * @return Age of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"    public Age getAge() {","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"        return age;","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Image of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"     * @return Image of Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"    public Image getImage() {","lastModifiedDate":"2023-03-07"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"        return image;","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns a list of Students the Parent / NOK is related to.","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"     * @return All Students that the Parent / NOK has relations to.","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"Diatbbin"},"content":"    public List\u003cStudent\u003e getChildren() {","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"Diatbbin"},"content":"        return children;","lastModifiedDate":"2023-03-07"},{"lineNumber":68,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":69,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"     * A method that adds a Student to the Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"     * @param student Student who is related to this Parent object.","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"    public void addStudent(Student student) {","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"        children.add(student);","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":78,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"     * A method that removes a Student from the Parent / NOK.","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"     * @param student Student who is related to this Parent object.","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"    public void removeStudent(Student student) {","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"        if (children.contains(student)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"            children.remove(student);","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":92,"author":{"gitId":"Diatbbin"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-07"},{"lineNumber":93,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":94,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":96,"author":{"gitId":"Diatbbin"},"content":"        if (!(other instanceof Parent)) {","lastModifiedDate":"2023-03-07"},{"lineNumber":97,"author":{"gitId":"Diatbbin"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":98,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"        Parent otherParent \u003d (Parent) other;","lastModifiedDate":"2023-03-07"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"        return otherParent.getName().equals(getName())","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 otherParent.getAge().equals(getAge())","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 otherParent.getImage().equals(getImage())","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 otherParent.getPhone().equals(getPhone())","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 otherParent.getEmail().equals(getEmail())","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"                \u0026\u0026 otherParent.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-07"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 otherParent.getTags().equals(getTags())","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 otherParent.getChildren().equals(getChildren());","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":110,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":111,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":112,"author":{"gitId":"Diatbbin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":113,"author":{"gitId":"Diatbbin"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-07"},{"lineNumber":114,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":115,"author":{"gitId":"Diatbbin"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-07"},{"lineNumber":116,"author":{"gitId":"Diatbbin"},"content":"                .append(\"; Parent Age: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":117,"author":{"gitId":"Diatbbin"},"content":"                .append(getAge())","lastModifiedDate":"2023-03-07"},{"lineNumber":118,"author":{"gitId":"Diatbbin"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":119,"author":{"gitId":"Diatbbin"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-07"},{"lineNumber":120,"author":{"gitId":"Diatbbin"},"content":"                .append(\"; Image Path: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":121,"author":{"gitId":"Diatbbin"},"content":"                .append(getImage())","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"Diatbbin"},"content":"                .append(\"; Parent Email: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"Diatbbin"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"Diatbbin"},"content":"                .append(\"; Parent Phone: \")","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"Diatbbin"},"content":"                .append(getPhone())","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"                .append(\"; Parent/NOK of:\");","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":128,"author":{"gitId":"Diatbbin"},"content":"        List\u003cStudent\u003e children \u003d getChildren();","lastModifiedDate":"2023-03-07"},{"lineNumber":129,"author":{"gitId":"Diatbbin"},"content":"        for (Student child : children) {","lastModifiedDate":"2023-03-07"},{"lineNumber":130,"author":{"gitId":"Diatbbin"},"content":"            builder.append(\" \")","lastModifiedDate":"2023-03-07"},{"lineNumber":131,"author":{"gitId":"Diatbbin"},"content":"                    .append(child);","lastModifiedDate":"2023-03-07"},{"lineNumber":132,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":134,"author":{"gitId":"Diatbbin"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"Diatbbin"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-07"},{"lineNumber":136,"author":{"gitId":"Diatbbin"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-07"},{"lineNumber":137,"author":{"gitId":"Diatbbin"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-07"},{"lineNumber":138,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":139,"author":{"gitId":"Diatbbin"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-07"},{"lineNumber":140,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":141,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"MrTwit99":41,"Diatbbin":77,"mayuanxin1234":23}},{"path":"src/main/java/seedu/address/model/person/parent/Relationship.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.model.person.parent;","lastModifiedDate":"2023-03-07"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-07"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-07"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":" * A relationship class","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"public class Relationship {","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Relationship must be letters\";","lastModifiedDate":"2023-03-07"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"    /*","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-07"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-07"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    public final String rls;","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"Diatbbin"},"content":"     *","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"     * @param relationship A valid student age.","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":25,"author":{"gitId":"Diatbbin"},"content":"    public Relationship(String relationship) {","lastModifiedDate":"2023-03-07"},{"lineNumber":26,"author":{"gitId":"Diatbbin"},"content":"        requireNonNull(relationship);","lastModifiedDate":"2023-03-07"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"        checkArgument(isValidRelationship(relationship), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        rls \u003d relationship;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":31,"author":{"gitId":"Diatbbin"},"content":"    /**","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"Diatbbin"},"content":"     * Returns true if a given string is a valid relationship.","lastModifiedDate":"2023-03-07"},{"lineNumber":33,"author":{"gitId":"Diatbbin"},"content":"     */","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"    public static boolean isValidRelationship(String test) {","lastModifiedDate":"2023-03-07"},{"lineNumber":35,"author":{"gitId":"Diatbbin"},"content":"        if (test.equals(\"Insert parent relationship to child here!\")) {","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"Diatbbin"},"content":"            return true;","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"Diatbbin"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"    public String toString() {","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"        return rls;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":45,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":46,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-07"},{"lineNumber":48,"author":{"gitId":"Diatbbin"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-07"},{"lineNumber":49,"author":{"gitId":"Diatbbin"},"content":"                || (other instanceof Relationship// instanceof handles nulls","lastModifiedDate":"2023-03-07"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 rls.equals(((Relationship) other).rls)); // state check","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":52,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"Diatbbin"},"content":"    @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-07"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        return rls.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-07"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"MrTwit99":5,"Diatbbin":49,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/model/person/parent/UniqueParentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.model.person.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":" * Represents a parent list containing Parent objects of Student objects in the same class / cca.","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"public class UniqueParentList implements Iterable\u003cParent\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    private final ObservableList\u003cParent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"    private final ObservableList\u003cParent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"    public boolean contains(Parent toCheck) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"    public void add(Parent toAdd) {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"        requireAllNonNull(target, editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        if (!target.isSamePerson(editedParent) \u0026\u0026 contains(editedParent)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"        internalList.set(index, editedParent);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"    public void remove(Parent toRemove) {","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"    public void setParents(UniqueParentList replacement) {","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"    public void setParents(List\u003cParent\u003e parents) {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"        requireAllNonNull(parents);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"        if (!parentsAreUnique(parents)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"        internalList.setAll(parents);","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"    public ObservableList\u003cParent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"    public Iterator\u003cParent\u003e iterator() {","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"                || (other instanceof UniqueParentList // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 internalList.equals(((UniqueParentList) other).internalList));","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"    private boolean parentsAreUnique(List\u003cParent\u003e parents) {","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"        for (int i \u003d 0; i \u003c parents.size() - 1; i++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"            for (int j \u003d i + 1; j \u003c parents.size(); j++) {","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"                if (parents.get(i).isSamePerson(parents.get(j))) {","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"                    return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"                }","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"        return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":127}},{"path":"src/main/java/seedu/address/model/person/student/Assignment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents an Assignment that is assigned to the Student.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class Assignment {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"    protected final String assignmentName;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    protected LocalDate deadline;","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"    protected final int weightage;","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"    protected int score;","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"     * Returns an Assignment object that stores information about the assignment description.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"     * @param assignmentName Assignment name.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"     * @param deadline Due date for the assignment.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"     * @param weightage Weightage of the assignment.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public Assignment(String assignmentName, LocalDate deadline, int weightage, int score) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        this.assignmentName \u003d assignmentName;","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        this.weightage \u003d weightage;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"        this.score \u003d score;","lastModifiedDate":"2023-03-10"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"        if (o \u003d\u003d null || getClass() !\u003d o.getClass()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"            return false;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        Assignment that \u003d (Assignment) o;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        return weightage \u003d\u003d that.weightage \u0026\u0026 assignmentName.equals(that.assignmentName)","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"                \u0026\u0026 Objects.equals(deadline, that.deadline);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        return Objects.hash(assignmentName, deadline, weightage);","lastModifiedDate":"2023-03-14"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":17,"securespider":5,"mayuanxin1234":24}},{"path":"src/main/java/seedu/address/model/person/student/Attendance.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the Attendance of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class Attendance {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Attendance must be T or F\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[TF]\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * @param attendance A valid student image file destination.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public Attendance(String attendance) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(attendance);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidAttendance(attendance), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d attendance;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidAttendance(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student attendance here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Attendance// instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((Attendance) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":3,"mayuanxin1234":55}},{"path":"src/main/java/seedu/address/model/person/student/Cca.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the CCA (Co-curricular Activity) of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class Cca {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"CCA must be letters\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"     * @param cca A valid cca in String.","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public Cca(String cca) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(cca);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidCca(cca), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d cca;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"     * @param test String to be tested","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"     * @return true if the string is a valid cca (alphanumeric value)","lastModifiedDate":"2023-03-10"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidCca(String test) {","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student CCA here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Cca// instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((Cca) other).value)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":3,"securespider":4,"mayuanxin1234":53}},{"path":"src/main/java/seedu/address/model/person/student/Homework.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":" * Represents a homework that is given to the Student.","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"public class Homework extends Assignment {","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Homework must be letters or numbers\";","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"     * Returns a Homework object that stores information about the homework description.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"     * @param assignmentName Homework name.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"     * @param deadline Due date for the homework.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"     * @param weightage Weightage of the homework.","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"     * @param isDone Boolean value indicating the completion status of the homework.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public Homework(String assignmentName, LocalDate deadline, int weightage, int score, boolean isDone) {","lastModifiedDate":"2023-03-14"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        super(assignmentName, deadline, weightage, score);","lastModifiedDate":"2023-03-14"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"     * Checks if a particular task to do is a Homework object.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"     * @param test String description of the task to check if it is a Homework object.","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"     * @return Boolean value indicating whether the task is a Homework object.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidHomework(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student homework here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"    public boolean isDue() {","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"        return LocalDate.now().isAfter(super.deadline);","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        return super.assignmentName;","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Homework// instanceof handles nulls","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 super.assignmentName.equals(((Homework) other).assignmentName)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    public String getName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        return super.assignmentName;","lastModifiedDate":"2023-03-14"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    public int getScore() {","lastModifiedDate":"2023-03-14"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        return super.score;","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    public int getWeightage() {","lastModifiedDate":"2023-03-14"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        return super.weightage;","lastModifiedDate":"2023-03-14"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"        return super.deadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"        return this.isDone;","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        return isDone;","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":17,"securespider":4,"mayuanxin1234":65}},{"path":"src/main/java/seedu/address/model/person/student/IndexNumber.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the index number of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class IndexNumber {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"            \"Index Number can only be digits (0-9), and it should not be blank\";","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d+\";","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     * @param indexNumber A valid indexNumber.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    public IndexNumber(String indexNumber) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(indexNumber);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidIndexNumber(indexNumber), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d indexNumber;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidIndexNumber(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof IndexNumber // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((IndexNumber) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":5,"mayuanxin1234":51}},{"path":"src/main/java/seedu/address/model/person/student/ParentName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":" * Represents the name of the Parent object of a Student object.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"public class ParentName {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Parent Name must be letters\";","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * @param parentName A valid parent name.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public ParentName(String parentName) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(parentName);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        checkArgument(isValidParentName(parentName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        value \u003d parentName;","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidParentName(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert parent name here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof ParentName// instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 value.equals(((ParentName) other).value)); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":3,"mayuanxin1234":55}},{"path":"src/main/java/seedu/address/model/person/student/Student.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-14"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-14"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Age;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Image;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.Sex;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Relationship;","lastModifiedDate":"2023-03-14"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":" * Represents a Student object extends from Person class.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"public class Student extends Person {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"    protected Phone parentNumber;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    protected Name parentName;","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    protected Relationship rls;","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    private final IndexNumber indexNumber;","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    private final Sex sex;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    private final Age age;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    private final Image image;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    private final Cca cca;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    private final Class sc;","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    private Attendance attendance;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    private Set\u003cHomework\u003e homework \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    private Set\u003cTest\u003e test \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-14"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2023-03-14"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    private Comment comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"    private Parent parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"     * Returns a Student object that stores information about the student particulars.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"     * @param name Student\u0027s name.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"     * @param sc Student\u0027s class.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"     * @param indexNumber Student\u0027s index number.","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"     * @param sex Student\u0027s gender.","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"     * @param parentName Student\u0027s Parent / NOK name.","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"     * @param parentPhone Student\u0027s Parent / NOK contact number.","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"     * @param rls Parent / NOK relationship to student.","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"     * @param age Student\u0027s age.","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"     * @param image Student\u0027s image.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"     * @param email Student\u0027s email address.","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"     * @param phone Student\u0027s contact number.","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"     * @param cca Student\u0027s CCA.","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"     * @param address Student\u0027s residential address.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"     * @param attendance Student\u0027s attendance.","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"     * @param homework Homework given to student.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"     * @param test Tests student took.","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"     * @param tags Tag given to student.","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"    public Student(Name name, Class sc, IndexNumber indexNumber, Sex sex, Name parentName, Phone parentPhone,","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"                   Relationship rls, Age age, Image image, Email email, Phone phone, Cca cca, Address address,","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"                   Attendance attendance, Set\u003cHomework\u003e homework, Set\u003cTest\u003e test, Set\u003cTag\u003e tags, Comment comment) {","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"        super(name, phone, email, address, tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        this.indexNumber \u003d indexNumber;","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        this.sex \u003d sex;","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        this.age \u003d age;","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        this.image \u003d image;","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        this.cca \u003d cca;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"        this.sc \u003d sc;","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        this.attendance \u003d attendance;","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"        this.homework.addAll(homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"        this.test.addAll(test);","lastModifiedDate":"2023-03-14"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2023-03-14"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"        this.parentName \u003d parentName;","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"        this.parentNumber \u003d parentPhone;","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"        this.rls \u003d rls;","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"     * A method that is used to bind a Parent / NOK to the student.","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"     * @param parent Parent / NOK that is related to the Student.","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"    public void setParent(Parent parent) {","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Parent / NOK name.","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"     * @return Parent / NOK name.","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"    public Name getParentName() {","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"        return this.parentName;","lastModifiedDate":"2023-03-15"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the relationship of the Parent / NOK to student.","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"     * @return Relationship of the Parent / NOK to student.","lastModifiedDate":"2023-03-15"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":105,"author":{"gitId":"MrTwit99"},"content":"    public Relationship getRls() {","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"MrTwit99"},"content":"        return this.rls;","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":109,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":110,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Parent / NOK contact number.","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":112,"author":{"gitId":"MrTwit99"},"content":"     * @return Parent / NOK contact number.","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"MrTwit99"},"content":"    public Phone getParentNumber() {","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"MrTwit99"},"content":"        return this.parentNumber;","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":118,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Index Number.","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s Index Number.","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"MrTwit99"},"content":"    public IndexNumber getIndexNumber() {","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"MrTwit99"},"content":"        return indexNumber;","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Gender.","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s Gender.","lastModifiedDate":"2023-03-15"},{"lineNumber":131,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"    public Sex getSex() {","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"        return sex;","lastModifiedDate":"2023-03-15"},{"lineNumber":134,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":135,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":136,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":137,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Age.","lastModifiedDate":"2023-03-13"},{"lineNumber":138,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":139,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s Age.","lastModifiedDate":"2023-03-13"},{"lineNumber":140,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"    public Age getAge() {","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"        return age;","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":146,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s Image.","lastModifiedDate":"2023-03-13"},{"lineNumber":147,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s Image.","lastModifiedDate":"2023-03-13"},{"lineNumber":149,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"    public Image getImage() {","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"        return image;","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s CCA.","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s CCA.","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"    public Cca getCca() {","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"        return cca;","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s class.","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s class.","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"securespider"},"content":"    public Class getStudentClass() {","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"MrTwit99"},"content":"        return sc;","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the Student\u0027s attendance.","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":175,"author":{"gitId":"MrTwit99"},"content":"     * @return Student\u0027s attendance.","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"mayuanxin1234"},"content":"    public Attendance getAttendance() {","lastModifiedDate":"2023-03-10"},{"lineNumber":178,"author":{"gitId":"mayuanxin1234"},"content":"        return attendance;","lastModifiedDate":"2023-03-10"},{"lineNumber":179,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":180,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns information about the homework the Student was given.","lastModifiedDate":"2023-03-13"},{"lineNumber":183,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"MrTwit99"},"content":"     * @return Homework information.","lastModifiedDate":"2023-03-13"},{"lineNumber":185,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"mayuanxin1234"},"content":"    public Set\u003cHomework\u003e getHomework() {","lastModifiedDate":"2023-03-14"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"        return Collections.unmodifiableSet(homework);","lastModifiedDate":"2023-03-14"},{"lineNumber":188,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":189,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":190,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns information about the test the Student took.","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"MrTwit99"},"content":"     * @return Test information related to the Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":193,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"mayuanxin1234"},"content":"    public Set\u003cTest\u003e getTest() {","lastModifiedDate":"2023-03-14"},{"lineNumber":195,"author":{"gitId":"mayuanxin1234"},"content":"        return Collections.unmodifiableSet(test);","lastModifiedDate":"2023-03-14"},{"lineNumber":196,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"MrTwit99"},"content":"     * A method that returns the comment given to this Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"MrTwit99"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"MrTwit99"},"content":"     * @return Comments given to this Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":203,"author":{"gitId":"mayuanxin1234"},"content":"    public Comment getComment() {","lastModifiedDate":"2023-03-10"},{"lineNumber":204,"author":{"gitId":"mayuanxin1234"},"content":"        return comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-10"},{"lineNumber":206,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":208,"author":{"gitId":"securespider"},"content":"     * A method that returns a boolean value to indicate if other is equal to this Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":209,"author":{"gitId":"securespider"},"content":"     * Note that this method only checks for attributes that are unique and unchanging to Student.","lastModifiedDate":"2023-03-13"},{"lineNumber":210,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-13"},{"lineNumber":211,"author":{"gitId":"securespider"},"content":"     * @param other","lastModifiedDate":"2023-03-13"},{"lineNumber":212,"author":{"gitId":"securespider"},"content":"     * @return","lastModifiedDate":"2023-03-13"},{"lineNumber":213,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":216,"author":{"gitId":"mayuanxin1234"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":217,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":218,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":219,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":220,"author":{"gitId":"mayuanxin1234"},"content":"        if (!(other instanceof Student)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":221,"author":{"gitId":"mayuanxin1234"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":222,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":223,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":224,"author":{"gitId":"mayuanxin1234"},"content":"        Student otherStudent \u003d (Student) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":225,"author":{"gitId":"mayuanxin1234"},"content":"        return otherStudent.getName().equals(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":226,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 otherStudent.getClass().equals(getClass())","lastModifiedDate":"2023-03-13"},{"lineNumber":227,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 otherStudent.getIndexNumber().equals(getIndexNumber())","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"securespider"},"content":"                \u0026\u0026 otherStudent.getSex().equals(getSex());","lastModifiedDate":"2023-03-13"},{"lineNumber":229,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":230,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":231,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"mayuanxin1234"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":233,"author":{"gitId":"mayuanxin1234"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":234,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Student Class: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"securespider"},"content":"                .append(getClass())","lastModifiedDate":"2023-03-13"},{"lineNumber":236,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Index Number: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getIndexNumber())","lastModifiedDate":"2023-03-06"},{"lineNumber":238,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Sex: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getSex())","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Student Age: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getAge())","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Image Path: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getImage())","lastModifiedDate":"2023-03-06"},{"lineNumber":244,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Student Email: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getEmail())","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; Student Phone: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getPhone())","lastModifiedDate":"2023-03-06"},{"lineNumber":248,"author":{"gitId":"mayuanxin1234"},"content":"                .append(\"; CCA: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":249,"author":{"gitId":"mayuanxin1234"},"content":"                .append(getCca());","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-10"},{"lineNumber":252,"author":{"gitId":"mayuanxin1234"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"mayuanxin1234"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":254,"author":{"gitId":"mayuanxin1234"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"mayuanxin1234"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"mayuanxin1234"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":143,"securespider":13,"mayuanxin1234":103}},{"path":"src/main/java/seedu/address/model/person/student/Test.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"public class Test extends Assignment {","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Test must be numbers\";","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"     * Returns a Test object that stores information about the test description.","lastModifiedDate":"2023-03-10"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"     *","lastModifiedDate":"2023-03-10"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"     * @param assignmentName Test name.","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"     * @param deadline Due date for the test.","lastModifiedDate":"2023-03-10"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"     * @param weightage Weightage of the test.","lastModifiedDate":"2023-03-10"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"     * @param score Score attained for the test.","lastModifiedDate":"2023-03-10"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public Test(String assignmentName, LocalDate deadline, int weightage, int score) {","lastModifiedDate":"2023-03-14"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        super(assignmentName, deadline, weightage, score);","lastModifiedDate":"2023-03-14"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public static boolean isValidTest(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        if (test.equals(\"Insert student test here!\")) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"        return Integer.toString(super.score);","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof Test// instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 super.assignmentName.equals(((Test) other).assignmentName)); // state check","lastModifiedDate":"2023-03-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    public String getName() {","lastModifiedDate":"2023-03-14"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        return super.assignmentName;","lastModifiedDate":"2023-03-14"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"    public int getScore() {","lastModifiedDate":"2023-03-10"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"        return super.score;","lastModifiedDate":"2023-03-10"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    public int getWeightage() {","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        return super.weightage;","lastModifiedDate":"2023-03-14"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    public LocalDate getDeadline() {","lastModifiedDate":"2023-03-14"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        return super.deadline;","lastModifiedDate":"2023-03-14"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-14"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"    public void setScore(int score) {","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"        super.score \u003d score;","lastModifiedDate":"2023-03-10"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"securespider":13,"mayuanxin1234":48}},{"path":"src/main/java/seedu/address/model/person/student/UniqueStudentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.person.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":" * Represents a student list containing Student objects in the same class / CCA / tag.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"public class UniqueStudentList implements Iterable\u003cStudent\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    private final ObservableList\u003cStudent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    private final ObservableList\u003cStudent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean contains(Student toCheck) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"     * Adds a person to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public void add(Student toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(target, editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        if (!target.isSamePerson(editedStudent) \u0026\u0026 contains(editedStudent)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        internalList.set(index, editedStudent);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"     * The person must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    public void remove(Student toRemove) {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudents(UniqueStudentList replacement) {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"    public void setStudents(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        requireAllNonNull(students);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        if (!studentsAreUnique(students)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        internalList.setAll(students);","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"    public ObservableList\u003cStudent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"    public Iterator\u003cStudent\u003e iterator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"                || (other instanceof UniqueStudentList // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 internalList.equals(((UniqueStudentList) other).internalList));","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"    private boolean studentsAreUnique(List\u003cStudent\u003e students) {","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"            for (int j \u003d i + 1; j \u003c students.size(); j++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"                if (students.get(i).isSamePerson(students.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"                    return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"        return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":9,"mayuanxin1234":119}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    private final String comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                             @JsonProperty(\"email\") String email, @JsonProperty(\"address\") String address,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"                             @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2023-03-10"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"                             @JsonProperty(\"comment\") String comment) {","lastModifiedDate":"2023-03-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"        this.comment \u003d comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"        comment \u003d source.getComment().value;","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"        if (comment \u003d\u003d null) {","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Comment.class.getSimpleName()));","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"        }","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"        final Comment modelComment \u003d new Comment(comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"        return new Person(modelName, modelPhone, modelEmail, modelAddress, modelTags, modelComment);","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"securespider":12,"-":107}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.exceptions.DuplicatePhoneException;","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.ui.parent.ParentListPanel;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.ui.student.StudentListPanel;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    private StudentListPanel studentListPanel;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    private ParentListPanel parentListPanel;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    private StackPane studentListPanelPlaceholder;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"    private StackPane parentListPanelPlaceholder;","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"        //personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"        //personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2023-03-10"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"        studentListPanel \u003d new StudentListPanel(logic.getFilteredStudentList());","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"        studentListPanelPlaceholder.getChildren().add(studentListPanel.getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"MrTwit99"},"content":"        parentListPanel \u003d new ParentListPanel(logic.getFilteredParentList());","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"MrTwit99"},"content":"        parentListPanelPlaceholder.getChildren().add(parentListPanel.getRoot());","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"mayuanxin1234"},"content":"        } catch (DuplicatePersonException d) {","lastModifiedDate":"2023-03-13"},{"lineNumber":214,"author":{"gitId":"mayuanxin1234"},"content":"            logger.info(\"Duplicate person: \" + commandText);","lastModifiedDate":"2023-03-13"},{"lineNumber":215,"author":{"gitId":"mayuanxin1234"},"content":"            resultDisplay.setFeedbackToUser(d.getMessage());","lastModifiedDate":"2023-03-13"},{"lineNumber":216,"author":{"gitId":"mayuanxin1234"},"content":"            throw d;","lastModifiedDate":"2023-03-13"},{"lineNumber":217,"author":{"gitId":"MrTwit99"},"content":"        } catch (DuplicatePhoneException dp) {","lastModifiedDate":"2023-03-16"},{"lineNumber":218,"author":{"gitId":"MrTwit99"},"content":"            logger.info(\"Duplicate phone number: \" + commandText);","lastModifiedDate":"2023-03-16"},{"lineNumber":219,"author":{"gitId":"MrTwit99"},"content":"            resultDisplay.setFeedbackToUser(dp.getMessage());","lastModifiedDate":"2023-03-16"},{"lineNumber":220,"author":{"gitId":"MrTwit99"},"content":"            throw dp;","lastModifiedDate":"2023-03-16"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"MrTwit99":11,"securespider":1,"-":196,"mayuanxin1234":15}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"    @FXML","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"    private Label comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"    private final Person person;","lastModifiedDate":"2023-03-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    private Label index;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Label email;","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        System.out.println(person);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        comment.setText(person.getComment().value);","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"securespider":5,"-":76,"mayuanxin1234":3}},{"path":"src/main/java/seedu/address/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.MainApp;","lastModifiedDate":"2016-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/PowerConnect_Label.png\";","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"-":87,"mayuanxin1234":1}},{"path":"src/main/java/seedu/address/ui/parent/ParentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.ui.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import java.io.File;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":" * A parent card feature in the UI representing parent information.","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"public class ParentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"    private static final String FXML \u003d \"ParentCard.fxml\";","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"    public final Parent parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"    private Label name;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"    private Label phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"    private Label address;","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"    private Label email;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"    private Label age;","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"    // @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"    // private Label image;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"    private Circle circle;","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"    private Label id;","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"    private FlowPane students;","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"MrTwit99"},"content":"    public ParentCard(Parent parent, int displayedIndex) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"        super(FXML);","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"        this.parent \u003d parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"MrTwit99"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"MrTwit99"},"content":"        name.setText(parent.getName().fullName);","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"        phone.setText(parent.getPhone().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        email.setText(parent.getEmail().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"        address.setText(parent.getAddress().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"        age.setText(parent.getAge().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"        //image.setText(student.getImage().value);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"        parent.getTags().stream()","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"MrTwit99"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"MrTwit99"},"content":"        parent.getChildren().stream()","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"MrTwit99"},"content":"                .sorted(Comparator.comparing(Student -\u003e Student.getName().fullName))","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"MrTwit99"},"content":"                .forEach(Student -\u003e {","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"MrTwit99"},"content":"                    students.getChildren().add(new Label(\" Student Name: \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"MrTwit99"},"content":"                    students.getChildren().add(new Label(Student.getName().fullName));","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"MrTwit99"},"content":"                    students.getChildren().add(new Label(\"\\n\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"MrTwit99"},"content":"                    students.getChildren().add(new Label(\" Student Class: \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"MrTwit99"},"content":"                    students.getChildren().add(new Label(Student.getStudentClass().getClassName()));","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"MrTwit99"},"content":"                    students.getChildren().add(new Label(\"\\n\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"MrTwit99"},"content":"                    students.getChildren().add(new Label(\" Index Number: \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"                    students.getChildren().add(new Label(Student.getIndexNumber().value));","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"                    students.getChildren().add(new Label(\"\\n\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"MrTwit99"},"content":"                });","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"MrTwit99"},"content":"        String path \u003d \"src/main/resources/images/\" + parent.getName() + \".png\";","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"MrTwit99"},"content":"            path \u003d \"src/main/resources/images/defaultParent.png\";","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"MrTwit99"},"content":"            file \u003d new File(path);","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"            Image newImage \u003d new Image(file.toURI().toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"            circle.setFill(new ImagePattern(newImage));","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"        } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"MrTwit99"},"content":"            Image newImage \u003d new Image(file.toURI().toString());","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"            circle.setFill(new ImagePattern(newImage));","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"MrTwit99"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"MrTwit99"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-12"},{"lineNumber":93,"author":{"gitId":"MrTwit99"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-12"},{"lineNumber":94,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":95,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":96,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"MrTwit99"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"MrTwit99"},"content":"        if (!(other instanceof ParentCard)) {","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"MrTwit99"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":100,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"MrTwit99"},"content":"        return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":104}},{"path":"src/main/java/seedu/address/ui/parent/ParentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"package seedu.address.ui.parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"MrTwit99"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":" * A Parent List Panel for UI","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"public class ParentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    private static final String FXML \u003d \"ParentListPanel.fxml\";","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ParentListPanel.class);","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"    private ListView\u003cParent\u003e parentListView;","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"    public ParentListPanel(ObservableList\u003cParent\u003e parentList) {","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"MrTwit99"},"content":"        super(FXML);","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"        parentListView.setItems(parentList);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"        parentListView.setCellFactory(listView -\u003e new ParentListPanel.ParentListViewCell());","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"MrTwit99"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"    class ParentListViewCell extends ListCell\u003cParent\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"MrTwit99"},"content":"        protected void updateItem(Parent parent, boolean empty) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"MrTwit99"},"content":"            super.updateItem(parent, empty);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"            if (empty || parent \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"MrTwit99"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"MrTwit99"},"content":"                setText(null);","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"            } else {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"                setGraphic(new ParentCard(parent, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"            }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"MrTwit99"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":48}},{"path":"src/main/java/seedu/address/ui/student/StudentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.ui.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.io.File;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.paint.ImagePattern;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":" * A student card feature in the UI representing student information.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String FXML \u003d \"StudentCard.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    public final Student student;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    private Label name;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    private Label index;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    private Label sex;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    private Label id;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    private Label phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"    private Label address;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    private Label email;","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    private FlowPane tags;","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"    private Label parentPhoneNumber;","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    private Label parentName;","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"    private Label rls;","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"    @FXML","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    private Label age;","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    // @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"    // private Label image;","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    private Label cca;","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"    private Circle circle;","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    private Label className;","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    private Label comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"    private FlowPane tests;","lastModifiedDate":"2023-03-14"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    @FXML","lastModifiedDate":"2023-03-14"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    private FlowPane homework;","lastModifiedDate":"2023-03-14"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentCard(Student student, int displayedIndex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        super(FXML);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"        this.student \u003d student;","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"        className.setText(student.getStudentClass().getClassName());","lastModifiedDate":"2023-03-13"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"        index.setText(student.getIndexNumber().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        sex.setText(student.getSex().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        name.setText(student.getName().fullName);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"        phone.setText(student.getPhone().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        email.setText(student.getEmail().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"MrTwit99"},"content":"        address.setText(student.getAddress().value);","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"MrTwit99"},"content":"        parentName.setText(student.getParentName().fullName);","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"        parentPhoneNumber.setText(student.getParentNumber().value);","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"        rls.setText(student.getRls().toString());","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"        age.setText(student.getAge().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        //image.setText(student.getImage().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"        cca.setText(student.getCca().value);","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        comment.setText(student.getComment().value);","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"        student.getTest().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"                        .sorted(Comparator.comparing(test -\u003e test.getName()))","lastModifiedDate":"2023-03-14"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"                        .forEach(test -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"                            tests.getChildren().add(new Label(\" Test Name: \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"                            tests.getChildren().add(new Label(test.getName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"                            tests.getChildren().add(new Label(\" Score: \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"                            tests.getChildren().add(new Label(Integer.toString(test.getScore())));","lastModifiedDate":"2023-03-14"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"                            tests.getChildren().add(new Label(\" Weightage: \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"                            tests.getChildren().add(new Label(Integer.toString(test.getWeightage())));","lastModifiedDate":"2023-03-14"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"                            tests.getChildren().add(new Label(\" Deadline: \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"                            if (test.getDeadline() !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"                                tests.getChildren().add(new Label(test.getDeadline().toString()));","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"                            } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"                                tests.getChildren().add(new Label(\"No Deadline\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"                            }","lastModifiedDate":"2023-03-14"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"                        });","lastModifiedDate":"2023-03-14"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"        student.getHomework().stream()","lastModifiedDate":"2023-03-14"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"                .sorted(Comparator.comparing(hw -\u003e hw.getName()))","lastModifiedDate":"2023-03-14"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"                .forEach(hw -\u003e {","lastModifiedDate":"2023-03-14"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.getChildren().add(new Label(\" Homework Name: \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.getChildren().add(new Label(hw.getName()));","lastModifiedDate":"2023-03-14"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.getChildren().add(new Label(\" Score: \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.getChildren().add(new Label(Integer.toString(hw.getScore())));","lastModifiedDate":"2023-03-14"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.getChildren().add(new Label(\" Weightage: \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.getChildren().add(new Label(Integer.toString(hw.getWeightage())));","lastModifiedDate":"2023-03-14"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.getChildren().add(new Label(\" Deadline: \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"                    if (hw.getDeadline() !\u003d null) {","lastModifiedDate":"2023-03-14"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"                        homework.getChildren().add(new Label(hw.getDeadline().toString()));","lastModifiedDate":"2023-03-14"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"                    } else {","lastModifiedDate":"2023-03-14"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"                        homework.getChildren().add(new Label(\"No Deadline\"));","lastModifiedDate":"2023-03-14"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"                    }","lastModifiedDate":"2023-03-14"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.getChildren().add(new Label(\" Is Done: \"));","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"                    homework.getChildren().add(new Label(Boolean.toString(hw.getIsDone())));","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"                });","lastModifiedDate":"2023-03-14"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"        student.getTags().stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"        String path \u003d \"src/main/resources/images/\" + student.getName() + \".png\";","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"        File file \u003d new File(path);","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"            path \u003d \"src/main/resources/images/defaultStudent.png\";","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"            file \u003d new File(path);","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"            Image newImage \u003d new Image(file.toURI().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"            circle.setFill(new ImagePattern(newImage));","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"        } else {","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"            Image newImage \u003d new Image(file.toURI().toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"            circle.setFill(new ImagePattern(newImage));","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"        // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"        // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"        if (!(other instanceof StudentCard)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"        // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"        StudentCard card \u003d (StudentCard) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"                \u0026\u0026 student.equals(card.student);","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":8,"securespider":1,"mayuanxin1234":155}},{"path":"src/main/java/seedu/address/ui/student/StudentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.ui.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.ui.UiPart;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":" * A Student List Panel for UI","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"public class StudentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String FXML \u003d \"StudentListPanel.fxml\";","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(StudentListPanel.class);","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    private ListView\u003cStudent\u003e studentListView;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    public StudentListPanel(ObservableList\u003cStudent\u003e studentList) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        super(FXML);","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        studentListView.setItems(studentList);","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        studentListView.setCellFactory(listView -\u003e new StudentListPanel.StudentListViewCell());","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"    class StudentListViewCell extends ListCell\u003cStudent\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        protected void updateItem(Student student, boolean empty) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"            super.updateItem(student, empty);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"            if (empty || student \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"                setText(null);","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"            } else {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"                setGraphic(new StudentCard(student, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"mayuanxin1234":48}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003cStackPane style\u003d\"-fx-text-inner-color: blue;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\" style\u003d\"-fx-prompt-text-fill: black;\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":4,"mayuanxin1234":4}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#FDEFBC, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"    background-color: #FDEFBC; /* Used in the default.html file */","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#FDEFBC, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":97,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: #FCE9A3;","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: #FDEFBC;","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: #FBDD72;","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-style: solid solid solid solid;","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-width: 5;","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-background-color: derive(#FDEFBC, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":".label {","lastModifiedDate":"2023-03-14"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-font-size: 13px;","lastModifiedDate":"2023-03-14"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-background-color: derive(#FDEFBC, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-font-size: 13px;","lastModifiedDate":"2023-03-14"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"     -fx-text-fill: #010504;","lastModifiedDate":"2023-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#FDEFBC, 30%);","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#d1d1d1, 30%);","lastModifiedDate":"2023-03-15"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":193,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#FDEFBC, 30%);","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#D3AC22, 20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":230,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2023-03-15"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":243,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: #1;","lastModifiedDate":"2023-03-15"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":274,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":294,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#fce38a,20%);","lastModifiedDate":"2023-03-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":297,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: derive(#fad13f, 0%);","lastModifiedDate":"2023-03-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":311,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-style: hidden hidden solid hidden;","lastModifiedDate":"2023-03-15"},{"lineNumber":321,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-color: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":322,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2023-03-15"},{"lineNumber":323,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2023-03-15"},{"lineNumber":337,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-family: \"Arial\";","lastModifiedDate":"2023-03-15"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: transparent, #FDEFBC, transparent, #FDEFBC;","lastModifiedDate":"2023-03-15"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":359,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"mayuanxin1234"},"content":"#tests .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":365,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":366,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-15"},{"lineNumber":367,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-15"},{"lineNumber":368,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-15"},{"lineNumber":369,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-15"},{"lineNumber":370,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":371,"author":{"gitId":"mayuanxin1234"},"content":"#homework .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":372,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":373,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-15"},{"lineNumber":374,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-15"},{"lineNumber":375,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-15"},{"lineNumber":376,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-15"},{"lineNumber":377,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":378,"author":{"gitId":"mayuanxin1234"},"content":"#students .label {","lastModifiedDate":"2023-03-15"},{"lineNumber":379,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2023-03-15"},{"lineNumber":380,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2023-03-15"},{"lineNumber":381,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2023-03-15"},{"lineNumber":382,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2023-03-15"},{"lineNumber":383,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2023-03-15"},{"lineNumber":384,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-15"},{"lineNumber":385,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"-":319,"mayuanxin1234":66}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"    -fx-background-color: #FDEFBC;","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"-":19,"mayuanxin1234":1}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import java.net.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.image.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.stage.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"         title\u003d\"PowerConnect\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cImage url\u003d\"@/images/PowerConnect_Label.png\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #2EB39B;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"100\" minHeight\u003d\"100\" prefHeight\u003d\"100\"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                   style\u003d\"-fx-background-color: #2EB39B;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cVBox fx:id\u003d\"personList\" minWidth\u003d\"340\" prefWidth\u003d\"340\" style\u003d\"-fx-background-color: #2EB39B;\"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"              VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"          \u003cStackPane fx:id\u003d\"studentListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"          \u003cStackPane fx:id\u003d\"parentListPanelPlaceholder\"  VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\"/\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"MrTwit99":1,"-":40,"mayuanxin1234":19}},{"path":"src/main/resources/view/ParentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.shape.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefHeight\u003d\"190.0\" prefWidth\u003d\"416.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"MrTwit99"},"content":"    \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"50.0\" prefWidth\u003d\"85.0\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"MrTwit99"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"MrTwit99"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"MrTwit99"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"MrTwit99"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"MrTwit99"},"content":"            \u003cCircle fx:id\u003d\"circle\" radius\u003d\"70\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"MrTwit99"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"MrTwit99"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"MrTwit99"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"MrTwit99"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"MrTwit99"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"MrTwit99"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"MrTwit99"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"id\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"MrTwit99"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"MrTwit99"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"MrTwit99"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"MrTwit99"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"MrTwit99"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"name\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"MrTwit99"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Residential Address:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"address\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Age:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"age\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Email:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"email\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Phone:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"phone\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Parent/NOK of Students:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cFlowPane fx:id\u003d\"students\" style\u003d\"-fx-text-fill: black;\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"MrTwit99"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"MrTwit99"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"MrTwit99"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"MrTwit99"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"MrTwit99"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":44,"mayuanxin1234":18}},{"path":"src/main/resources/view/ParentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"MrTwit99"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cListView fx:id\u003d\"parentListView\"  VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"MrTwit99"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"MrTwit99":4,"mayuanxin1234":4}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cLabel fx:id\u003d\"index\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$index\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"      \u003cLabel fx:id\u003d\"comment\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$comment\" /\u003e","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"securespider":1,"-":36,"mayuanxin1234":2}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"-":5,"mayuanxin1234":3}},{"path":"src/main/resources/view/StudentCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.geometry.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.shape.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.text.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" prefHeight\u003d\"356.0\" prefWidth\u003d\"511.0\" xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cVBox alignment\u003d\"CENTER\" prefHeight\u003d\"415.0\" prefWidth\u003d\"81.0\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cCircle fx:id\u003d\"circle\" radius\u003d\"70\" stroke\u003d\"BLACK\" strokeType\u003d\"INSIDE\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"        \u003c/children\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cGridPane prefHeight\u003d\"11.0\" prefWidth\u003d\"285.0\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" prefHeight\u003d\"439.0\" prefWidth\u003d\"413.0\" GridPane.rowIndex\u003d\"1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"id\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"name\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Index:\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"index\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$index\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Class:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"className\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$class\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"MrTwit99"},"content":"                \u003cText text\u003d\"    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Age:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"age\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$age\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Gender:   \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"sex\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$sex\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"               \u003cfont\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"                  \u003cFont name\u003d\"Arial\" size\u003d\"16.0\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"               \u003c/font\u003e\u003c/Label\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Email:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"email\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"NOK name:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"parentName\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$parentName\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"NOK phone number:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"parentPhoneNumber\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$parentPhoneNumber\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Relationship:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"rls\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$rls\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Phone:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"phone\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"MrTwit99"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Residential Address:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"address\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"MrTwit99"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"CCA:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"cca\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cca\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Comments:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cLabel fx:id\u003d\"comment\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cca\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Tests:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cFlowPane fx:id\u003d\"tests\" /\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"            \u003cHBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cText text\u003d\"Homework:    \" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"                \u003cFlowPane fx:id\u003d\"homework\" style\u003d\"-fx-text-fill: black;\" styleClass\u003d\"cell_small_label\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-14"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"MrTwit99":10,"mayuanxin1234":99}},{"path":"src/main/resources/view/StudentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.control.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"\u003c?import javafx.scene.layout.*?\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/17.0.2-ea\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"    \u003cListView fx:id\u003d\"studentListView\"  VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"mayuanxin1234":8}},{"path":"src/test/java/seedu/address/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.util;","lastModifiedDate":"2016-09-30"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"        assertNotNull(AppUtil.getImage(\"/images/PowerConnect_Label.png\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"-":35,"mayuanxin1234":1}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"        String deleteCommand \u003d \"student 1A delete in/1\";","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"Diatbbin"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Diatbbin":3,"-":159}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":25,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.model.person.parent.Parent;","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2019-05-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":121,"author":{"gitId":"Diatbbin"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":122,"author":{"gitId":"Diatbbin"},"content":"        public void addStudent(Student student) {","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":124,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":125,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":126,"author":{"gitId":"MrTwit99"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"MrTwit99"},"content":"        public void addParent(Parent parent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"Diatbbin"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":147,"author":{"gitId":"Diatbbin"},"content":"        public boolean hasStudent(Student student) {","lastModifiedDate":"2023-03-07"},{"lineNumber":148,"author":{"gitId":"Diatbbin"},"content":"            return false;","lastModifiedDate":"2023-03-07"},{"lineNumber":149,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":150,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":151,"author":{"gitId":"MrTwit99"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"MrTwit99"},"content":"        public boolean hasParent(Parent parent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"MrTwit99"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":154,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":155,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":156,"author":{"gitId":"MrTwit99"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":157,"author":{"gitId":"MrTwit99"},"content":"        public boolean canInitialize(Phone phone, Name parentName) {","lastModifiedDate":"2023-03-16"},{"lineNumber":158,"author":{"gitId":"MrTwit99"},"content":"            return true;","lastModifiedDate":"2023-03-16"},{"lineNumber":159,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":160,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":166,"author":{"gitId":"Diatbbin"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"Diatbbin"},"content":"        public void deleteStudent(Student target) {","lastModifiedDate":"2023-03-07"},{"lineNumber":168,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":169,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":170,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"MrTwit99"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":172,"author":{"gitId":"MrTwit99"},"content":"        public void deleteParent(Parent target) {","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":181,"author":{"gitId":"Diatbbin"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":182,"author":{"gitId":"Diatbbin"},"content":"        public void setStudent(Student target, Student editedStudent) {","lastModifiedDate":"2023-03-07"},{"lineNumber":183,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":185,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":186,"author":{"gitId":"MrTwit99"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"MrTwit99"},"content":"        public void setParent(Parent target, Parent editedParent) {","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":190,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":196,"author":{"gitId":"Diatbbin"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":197,"author":{"gitId":"Diatbbin"},"content":"        public ObservableList\u003cStudent\u003e getFilteredStudentList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":198,"author":{"gitId":"Diatbbin"},"content":"            return null;","lastModifiedDate":"2023-03-07"},{"lineNumber":199,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":201,"author":{"gitId":"MrTwit99"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":202,"author":{"gitId":"MrTwit99"},"content":"        public ObservableList\u003cParent\u003e getFilteredParentList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":203,"author":{"gitId":"MrTwit99"},"content":"            return null;","lastModifiedDate":"2023-03-12"},{"lineNumber":204,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":205,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":211,"author":{"gitId":"Diatbbin"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":212,"author":{"gitId":"Diatbbin"},"content":"        public void updateFilteredStudentList(Predicate\u003cStudent\u003e predicate) {","lastModifiedDate":"2023-03-07"},{"lineNumber":213,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":214,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":215,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":216,"author":{"gitId":"MrTwit99"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":217,"author":{"gitId":"MrTwit99"},"content":"        public void updateFilteredParentList(Predicate\u003cParent\u003e predicate) {","lastModifiedDate":"2023-03-12"},{"lineNumber":218,"author":{"gitId":"MrTwit99"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":219,"author":{"gitId":"MrTwit99"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":224,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":250,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"MrTwit99":39,"Diatbbin":31,"-":194}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"MrTwit99"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    public static final String VALID_COMMENT_AMY \u003d \"smart girl\";","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"    public static final String VALID_COMMENT_BOB \u003d \"smart boy\";","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":89,"author":{"gitId":"MrTwit99"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"MrTwit99"},"content":"            throw new AssertionError(\"Execution of command should not have parsing issues.\", pe);","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"MrTwit99":3,"securespider":3,"-":128}},{"path":"src/test/java/seedu/address/logic/commands/CommentCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"securespider"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-02-24"},{"lineNumber":2,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":3,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-02-24"},{"lineNumber":4,"author":{"gitId":"securespider"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-02-24"},{"lineNumber":5,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT_AMY;","lastModifiedDate":"2023-02-24"},{"lineNumber":6,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_COMMENT_BOB;","lastModifiedDate":"2023-02-24"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-02-24"},{"lineNumber":8,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-02-24"},{"lineNumber":9,"author":{"gitId":"securespider"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-02-24"},{"lineNumber":10,"author":{"gitId":"securespider"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-02-24"},{"lineNumber":11,"author":{"gitId":"securespider"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-02-24"},{"lineNumber":12,"author":{"gitId":"securespider"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":13,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":14,"author":{"gitId":"securespider"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-02-24"},{"lineNumber":15,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":16,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-02-24"},{"lineNumber":17,"author":{"gitId":"securespider"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-02-24"},{"lineNumber":18,"author":{"gitId":"securespider"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-02-24"},{"lineNumber":19,"author":{"gitId":"securespider"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-02-24"},{"lineNumber":20,"author":{"gitId":"securespider"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-02-24"},{"lineNumber":21,"author":{"gitId":"securespider"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-02-24"},{"lineNumber":22,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":23,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-10"},{"lineNumber":24,"author":{"gitId":"securespider"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-02-24"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"/**","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"securespider"},"content":" * Contains integration tests (interaction with the Model) and unit tests for CommentCommand.","lastModifiedDate":"2023-02-24"},{"lineNumber":28,"author":{"gitId":"securespider"},"content":" */","lastModifiedDate":"2023-02-24"},{"lineNumber":29,"author":{"gitId":"securespider"},"content":"public class CommentCommandTest {","lastModifiedDate":"2023-02-24"},{"lineNumber":30,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    private static final String COMMENT_STUB \u003d \"Some remark\";","lastModifiedDate":"2023-02-24"},{"lineNumber":32,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":36,"author":{"gitId":"securespider"},"content":"    public void execute_addCommentUnfilteredList_success() {","lastModifiedDate":"2023-02-24"},{"lineNumber":37,"author":{"gitId":"securespider"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-24"},{"lineNumber":38,"author":{"gitId":"securespider"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withComment(COMMENT_STUB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":39,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":40,"author":{"gitId":"securespider"},"content":"        CommentCommand remarkCommand \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"securespider"},"content":"                new Comment(editedPerson.getComment().value));","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":43,"author":{"gitId":"securespider"},"content":"        String expectedMessage \u003d String.format(CommentCommand.MESSAGE_ADD_COMMENT_SUCCESS, editedPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"securespider"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":47,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":48,"author":{"gitId":"securespider"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-02-24"},{"lineNumber":49,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":50,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":51,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"    public void execute_deleteCommentUnfilteredList_success() {","lastModifiedDate":"2023-02-24"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-24"},{"lineNumber":54,"author":{"gitId":"securespider"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withComment(\"\").build();","lastModifiedDate":"2023-02-24"},{"lineNumber":55,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"        CommentCommand remarkCommand \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"securespider"},"content":"                new Comment(editedPerson.getComment().toString()));","lastModifiedDate":"2023-02-24"},{"lineNumber":58,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":59,"author":{"gitId":"securespider"},"content":"        String expectedMessage \u003d String.format(CommentCommand.MESSAGE_DELETE_COMMENT_SUCCESS, editedPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":60,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"securespider"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":63,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":64,"author":{"gitId":"securespider"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-02-24"},{"lineNumber":65,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":66,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":67,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2023-02-24"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-02-24"},{"lineNumber":70,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":71,"author":{"gitId":"securespider"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-02-24"},{"lineNumber":72,"author":{"gitId":"securespider"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2023-02-24"},{"lineNumber":73,"author":{"gitId":"securespider"},"content":"                .withComment(COMMENT_STUB).build();","lastModifiedDate":"2023-02-24"},{"lineNumber":74,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":75,"author":{"gitId":"securespider"},"content":"        CommentCommand remarkCommand \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-10"},{"lineNumber":76,"author":{"gitId":"securespider"},"content":"                new Comment(editedPerson.getComment().value));","lastModifiedDate":"2023-03-10"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"securespider"},"content":"        String expectedMessage \u003d String.format(CommentCommand.MESSAGE_ADD_COMMENT_SUCCESS, editedPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":79,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":80,"author":{"gitId":"securespider"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2023-02-24"},{"lineNumber":81,"author":{"gitId":"securespider"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2023-02-24"},{"lineNumber":82,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":83,"author":{"gitId":"securespider"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-02-24"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":86,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":87,"author":{"gitId":"securespider"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2023-02-24"},{"lineNumber":88,"author":{"gitId":"securespider"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-02-24"},{"lineNumber":89,"author":{"gitId":"securespider"},"content":"        CommentCommand remarkCommand \u003d new CommentCommand(outOfBoundIndex, new Comment(VALID_COMMENT_BOB));","lastModifiedDate":"2023-02-24"},{"lineNumber":90,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":92,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-02-24"},{"lineNumber":95,"author":{"gitId":"securespider"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2023-02-24"},{"lineNumber":96,"author":{"gitId":"securespider"},"content":"     * but smaller than size of address book","lastModifiedDate":"2023-02-24"},{"lineNumber":97,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-02-24"},{"lineNumber":98,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2023-02-24"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-02-24"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-02-24"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-02-24"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-02-24"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"        CommentCommand remarkCommand \u003d new CommentCommand(outOfBoundIndex, new Comment(VALID_COMMENT_BOB));","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"Diatbbin"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"    @Test","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"    public void equals() {","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"securespider"},"content":"        final CommentCommand standardCommand \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-02-24"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"                new Comment(VALID_COMMENT_AMY));","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":115,"author":{"gitId":"securespider"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-02-24"},{"lineNumber":116,"author":{"gitId":"securespider"},"content":"        CommentCommand commandWithSameValues \u003d new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-02-24"},{"lineNumber":117,"author":{"gitId":"securespider"},"content":"                new Comment(VALID_COMMENT_AMY));","lastModifiedDate":"2023-02-24"},{"lineNumber":118,"author":{"gitId":"securespider"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-02-24"},{"lineNumber":119,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":120,"author":{"gitId":"securespider"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-02-24"},{"lineNumber":121,"author":{"gitId":"securespider"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-02-24"},{"lineNumber":122,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":123,"author":{"gitId":"securespider"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-02-24"},{"lineNumber":124,"author":{"gitId":"securespider"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-02-24"},{"lineNumber":125,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":126,"author":{"gitId":"securespider"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-02-24"},{"lineNumber":127,"author":{"gitId":"securespider"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-02-24"},{"lineNumber":128,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":129,"author":{"gitId":"securespider"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-02-24"},{"lineNumber":130,"author":{"gitId":"securespider"},"content":"        assertFalse(standardCommand.equals(new CommentCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2023-02-24"},{"lineNumber":131,"author":{"gitId":"securespider"},"content":"                new Comment(VALID_COMMENT_AMY))));","lastModifiedDate":"2023-02-24"},{"lineNumber":132,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":133,"author":{"gitId":"securespider"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2023-02-24"},{"lineNumber":134,"author":{"gitId":"securespider"},"content":"        assertFalse(standardCommand.equals(new CommentCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-02-24"},{"lineNumber":135,"author":{"gitId":"securespider"},"content":"                new Comment(VALID_COMMENT_BOB))));","lastModifiedDate":"2023-02-24"},{"lineNumber":136,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":137,"author":{"gitId":"securespider"},"content":"}","lastModifiedDate":"2023-02-24"}],"authorContributionMap":{"securespider":135,"Diatbbin":2}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"Diatbbin"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"Diatbbin"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Diatbbin":2,"-":107}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"Diatbbin"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"Diatbbin"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_STUDENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"Diatbbin":2,"-":171}},{"path":"src/test/java/seedu/address/logic/commands/EditParentDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"public class EditParentDescriptorTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"mayuanxin1234":58}},{"path":"src/test/java/seedu/address/logic/commands/student/StudentAddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Diatbbin"},"content":"package seedu.address.logic.commands.student;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"Diatbbin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"Diatbbin"},"content":"class StudentAddCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"    void execute() {","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"Diatbbin"},"content":"    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"    void testEquals() {","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"Diatbbin":16}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        //assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-14"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"        //        expectedMessage);","lastModifiedDate":"2023-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"        //assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2023-03-14"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"        //        expectedMessage);","lastModifiedDate":"2023-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"        //        expectedMessage);","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":141,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Diatbbin":2,"-":135,"mayuanxin1234":4}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Class;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.IndexNumber;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":34,"author":{"gitId":"Diatbbin"},"content":"    private static final IndexNumber TEST_INDEX \u003d new IndexNumber(\"1\");","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"securespider"},"content":"    private static final Class TEST_CLASS \u003d Class.of(\"1A\");","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"Diatbbin"},"content":"        StudentCommandParser studentCommandParser \u003d new StudentCommandParser();","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"        StudentDeleteCommand command \u003d (StudentDeleteCommand) studentCommandParser.parse(","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"Diatbbin"},"content":"                PERSON_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"Diatbbin"},"content":"                + \" \" + TEST_CLASS","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"Diatbbin"},"content":"                + \" \" + StudentDeleteCommand.COMMAND_WORD","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"Diatbbin"},"content":"                + \" \" + PREFIX_INDEXNUMBER","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"Diatbbin"},"content":"                + TEST_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"Diatbbin"},"content":"        assertEquals(new StudentDeleteCommand(TEST_INDEX, TEST_CLASS), command);","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"securespider":2,"Diatbbin":10,"-":96,"mayuanxin1234":3}},{"path":"src/test/java/seedu/address/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-10-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"     */","lastModifiedDate":"2023-03-14"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"    */","lastModifiedDate":"2023-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"    /*","lastModifiedDate":"2023-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"    */","lastModifiedDate":"2023-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"-":147,"mayuanxin1234":9}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"Diatbbin"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"//import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"Diatbbin"},"content":"//import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"Diatbbin"},"content":"//import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"Diatbbin"},"content":"//import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"Diatbbin"},"content":"//import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"Diatbbin"},"content":"//import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"Diatbbin"},"content":"    /*@Test","lastModifiedDate":"2023-03-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":65,"author":{"gitId":"Diatbbin"},"content":"    }*/","lastModifiedDate":"2023-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"Diatbbin"},"content":"    /*@Test","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":84,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2023-03-15"},{"lineNumber":85,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2023-03-15"},{"lineNumber":88,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2023-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":100,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"        //assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"        //        Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"Diatbbin"},"content":"    }*/","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"Diatbbin"},"content":"    /*@Test","lastModifiedDate":"2023-03-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":132,"author":{"gitId":"Diatbbin"},"content":"    }*/","lastModifiedDate":"2023-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"Diatbbin"},"content":"    /*@Test","lastModifiedDate":"2023-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"Diatbbin"},"content":"    }*/","lastModifiedDate":"2023-03-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"Diatbbin"},"content":"    /*@Test","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"Diatbbin"},"content":"    }*/","lastModifiedDate":"2023-03-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"Diatbbin"},"content":"    /*@Test","lastModifiedDate":"2023-03-07"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":199,"author":{"gitId":"Diatbbin"},"content":"    }*/","lastModifiedDate":"2023-03-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"Diatbbin"},"content":"    /*@Test","lastModifiedDate":"2023-03-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":210,"author":{"gitId":"Diatbbin"},"content":"    }*/","lastModifiedDate":"2023-03-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"Diatbbin":43,"-":167,"mayuanxin1234":1}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":23,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.student.Student;","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"Diatbbin"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":102,"author":{"gitId":"Diatbbin"},"content":"        @Override","lastModifiedDate":"2023-03-07"},{"lineNumber":103,"author":{"gitId":"Diatbbin"},"content":"        public ObservableList\u003cStudent\u003e getStudentList() {","lastModifiedDate":"2023-03-07"},{"lineNumber":104,"author":{"gitId":"Diatbbin"},"content":"            return null;","lastModifiedDate":"2023-03-07"},{"lineNumber":105,"author":{"gitId":"Diatbbin"},"content":"        }","lastModifiedDate":"2023-03-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Diatbbin":6,"-":102}},{"path":"src/test/java/seedu/address/model/student/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class AddressTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public void isValidAddress() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        // null address","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // invalid addresses","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        // valid addresses","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":37}},{"path":"src/test/java/seedu/address/model/student/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class EmailTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public void isValidEmail() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        // null email","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // blank email","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        // missing parts","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        // invalid parts","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        // valid email","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":69}},{"path":"src/test/java/seedu/address/model/student/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        // One keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        // Multiple keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"        // Only one matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        // Mixed-case keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        // Zero keywords","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        // Non-matching keyword","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"                .withEmail(\"alice@email.com\").withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":75}},{"path":"src/test/java/seedu/address/model/student/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class NameTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public void isValidName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        // null name","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // invalid name","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        // valid name","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":41}},{"path":"src/test/java/seedu/address/model/student/ParentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"public class ParentTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    public void isSamePerson() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":91}},{"path":"src/test/java/seedu/address/model/student/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-07"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"public class PhoneTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    public void isValidPhone() {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"        // null phone number","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"        // valid phone numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":1,"mayuanxin1234":41}},{"path":"src/test/java/seedu/address/model/student/UniqueParentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.model.student;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"public class UniqueParentListTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"mayuanxin1234"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"mayuanxin1234"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"mayuanxin1234"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"mayuanxin1234"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"mayuanxin1234"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"mayuanxin1234"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"mayuanxin1234"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"mayuanxin1234"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"mayuanxin1234"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"mayuanxin1234"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"mayuanxin1234"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"mayuanxin1234"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":168,"author":{"gitId":"mayuanxin1234"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":169,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"mayuanxin1234"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"Diatbbin":4,"mayuanxin1234":168}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedParentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"mayuanxin1234"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"mayuanxin1234"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"mayuanxin1234"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"mayuanxin1234"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"mayuanxin1234"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"mayuanxin1234"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"Diatbbin"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"mayuanxin1234"},"content":"public class JsonAdaptedParentTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"mayuanxin1234"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"securespider"},"content":"    private static final String VALID_COMMENT \u003d BENSON.getComment().toString();","lastModifiedDate":"2023-03-10"},{"lineNumber":32,"author":{"gitId":"mayuanxin1234"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"mayuanxin1234"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"mayuanxin1234"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"mayuanxin1234"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":46,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":62,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":78,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":94,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"mayuanxin1234"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"mayuanxin1234"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"mayuanxin1234"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"mayuanxin1234"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"mayuanxin1234"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"mayuanxin1234"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":112,"author":{"gitId":"mayuanxin1234"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"mayuanxin1234"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"mayuanxin1234"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"mayuanxin1234"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"securespider":14,"Diatbbin":4,"mayuanxin1234":97}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"    private static final String VALID_COMMENT \u003d BENSON.getComment().toString();","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":53,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":69,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2023-03-10"},{"lineNumber":85,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS, VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"                VALID_TAGS, VALID_COMMENT);","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"securespider"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS, invalidTags, VALID_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"securespider":14,"-":101}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"securespider"},"content":"import seedu.address.model.person.Comment;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"securespider"},"content":"    public static final String DEFAULT_COMMENT \u003d \"This is a comment\";","lastModifiedDate":"2023-02-24"},{"lineNumber":26,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"securespider"},"content":"    private Comment comment;","lastModifiedDate":"2023-02-24"},{"lineNumber":34,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"securespider"},"content":"        comment \u003d new Comment(DEFAULT_COMMENT);","lastModifiedDate":"2023-02-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"securespider"},"content":"        comment \u003d personToCopy.getComment();","lastModifiedDate":"2023-02-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"securespider"},"content":"    /**","lastModifiedDate":"2023-03-10"},{"lineNumber":100,"author":{"gitId":"securespider"},"content":"     * Sets the {@code Comment} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-10"},{"lineNumber":101,"author":{"gitId":"securespider"},"content":"     * @param comment","lastModifiedDate":"2023-03-10"},{"lineNumber":102,"author":{"gitId":"securespider"},"content":"     * @return","lastModifiedDate":"2023-03-10"},{"lineNumber":103,"author":{"gitId":"securespider"},"content":"     */","lastModifiedDate":"2023-03-10"},{"lineNumber":104,"author":{"gitId":"securespider"},"content":"    public PersonBuilder withComment(String comment) {","lastModifiedDate":"2023-02-24"},{"lineNumber":105,"author":{"gitId":"securespider"},"content":"        this.comment \u003d new Comment(comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":106,"author":{"gitId":"securespider"},"content":"        return this;","lastModifiedDate":"2023-02-24"},{"lineNumber":107,"author":{"gitId":"securespider"},"content":"    }","lastModifiedDate":"2023-02-24"},{"lineNumber":108,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":110,"author":{"gitId":"securespider"},"content":"        return new Person(name, phone, email, address, tags, comment);","lastModifiedDate":"2023-02-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":113,"author":{"gitId":"securespider"},"content":"","lastModifiedDate":"2023-02-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"securespider":19,"-":95}}]
