[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T11-3/tp/actions)","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T11-3/tp/branch/master/graph/badge.svg?token\u003dUEI995R8A6)](https://codecov.io/gh/AY2223S2-CS2103T-T11-3/tp)","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"* `Paidlancers` is **desktop application for freelancers to keep track of their events and contacts, optimized for use via a Command Line Interface (CLI) while still having the option of using the Graphical User Interface (GUI)**.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"* The app manages eventsâ€™ information and respective contact person faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"* The name `Paidlancers` is inspired by a play-on-word of the word \"free\" in freelancers.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"* For the detailed documentation of this project, see the **[Paidlancers Product Website](https://ay2223s2-cs2103t-t11-3.github.io/tp/)**.","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Thank you for your time! :)","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"EksdeeeX":6,"ExtraShotLatte":1,"-":6}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2022-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"mainClassName \u003d \u0027seedu.event.Main\u0027","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2022-04-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        html.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        xml.required \u003d true","lastModifiedDate":"2022-06-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"run {","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2023-03-22"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"}","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"    archiveFileName \u003d \u0027paidlancers.jar\u0027","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ExtraShotLatte":4,"bryansendeavour":1,"engenhui1999":1,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"### Wong Qin Yao (Sean)","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/extrashotlatte.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/extrashotlatte)]","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/extrashotlatte.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Deliverables and deadlines, Git Expert","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"### Bryan Ong","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/bryansendeavour.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/bryansendeavour)]","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/bryansendeavour.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Testing, JavaFX Expert","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"### Eng En Hui","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/engenhui1999.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/engenhui1999)]","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/engenhui1999.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Integration, Documentation","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"### Gloria Zhang Xinhui","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/glozxi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/glozxi)]","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/glozxi.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Scheduling and Tracking, IntelliJ expert","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"### Bryan Tan Zhong Kang","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/eksdeeex.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/eksdeeex)]","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/eksdeeex.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Code Quality, Team Lead","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"ExtraShotLatte":25,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"## Table of Contents","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"  \u003cdetails\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"  \u003csummary\u003eDesign\u003c/summary\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"   - [Architecture](#architecture)","lastModifiedDate":"2023-03-26"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"   - [UI component](#ui-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"   - [Logic component](#logic-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"   - [Model component](#model-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"   - [Event component](#event-component)","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"   - [Contact component](#contact-component)","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"   - [Storage component](#storage-component)","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"  \u003c/details\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"  \u003cdetails\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"  \u003csummary\u003eFeatures\u003c/summary\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"   - [New Contact feature](#new-contact-feature)","lastModifiedDate":"2023-03-26"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"   - [Mark feature](#mark-feature)","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"   - [Unmark feature](#unmark-feature)","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"   - [Reminder feature](#reminder-feature)","lastModifiedDate":"2023-03-26"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"   - [Linkcontact feature](#linkcontact-feature)","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"  \u003c/details\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2023-03-07"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"  \u003cdetails\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"  \u003csummary\u003emore\u003c/summary\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"   * [Product scope](#product-scope)","lastModifiedDate":"2023-03-07"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"   * [User stories](#user-stories)","lastModifiedDate":"2023-03-07"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"   * [Use cases](#use-cases)","lastModifiedDate":"2023-03-07"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"   * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-03-07"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"   * [Glossary](#glossary)","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"  \u003c/details\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"- [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-03-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"## Setting up, getting started","lastModifiedDate":"2023-03-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"EksdeeeX"},"content":"## Design","lastModifiedDate":"2023-03-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":64,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 1.1\u003c/b\u003e Architecture Diagram for the high-level design of the App","lastModifiedDate":"2023-03-26"},{"lineNumber":65,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":66,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/java/seedu/event/Main.java) and [`MainApp`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/java/seedu/event/MainApp.java). It is responsible for,","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":92,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":93,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 1.2\u003c/b\u003e Sequence Diagram of delete command","lastModifiedDate":"2023-03-26"},{"lineNumber":94,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":95,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"EksdeeeX"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":106,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 1.3\u003c/b\u003e Class diagram of components","lastModifiedDate":"2023-03-26"},{"lineNumber":107,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":108,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"engenhui1999"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/java/seedu/event/ui/Ui.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":117,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 1.4\u003c/b\u003e Class diagram of UI","lastModifiedDate":"2023-03-26"},{"lineNumber":118,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":119,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `EventListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"engenhui1999"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/java/seedu/event/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2023-03-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"glozxi"},"content":"* depends on some classes in the `Model` component, as it displays `Event` object residing in the `Model`.","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"engenhui1999"},"content":"**API** : [`Logic.java`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/java/seedu/event/logic/Logic.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":138,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 1.5\u003c/b\u003e Class diagram of \u0027Logic\u0027 component","lastModifiedDate":"2023-03-26"},{"lineNumber":139,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":140,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":141,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"1. When `Logic` is called upon to execute a command, it uses the `EventBookParser` class to parse the user command.","lastModifiedDate":"2023-03-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"glozxi"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a event).","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":153,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 1.6\u003c/b\u003e Sequence diagram of \u0027Logic\u0027 component","lastModifiedDate":"2023-03-26"},{"lineNumber":154,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":155,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":163,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 1.7\u003c/b\u003e Class diagram of \u0027Logic\u0027\u0027","lastModifiedDate":"2023-03-26"},{"lineNumber":164,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":165,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"EksdeeeX"},"content":"* When called upon to parse a user command, the `EventBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `EventBookParser` returns back as a `Command` object.","lastModifiedDate":"2023-03-26"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":171,"author":{"gitId":"engenhui1999"},"content":"**API** : [`Model.java`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/java/seedu/event/model/Model.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":175,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 1.8\u003c/b\u003e Class diagram of \u0027Model\u0027","lastModifiedDate":"2023-03-26"},{"lineNumber":176,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":177,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"EksdeeeX"},"content":"* stores the event book data i.e., all `Event` objects (which are contained in a `UniqueEventList` object).","lastModifiedDate":"2023-03-26"},{"lineNumber":182,"author":{"gitId":"glozxi"},"content":"* stores the currently \u0027selected\u0027 `Event` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cEvent\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"EksdeeeX"},"content":"### Event component","lastModifiedDate":"2023-03-26"},{"lineNumber":187,"author":{"gitId":"engenhui1999"},"content":"**API** : [`Event.java`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/java/seedu/event/model/event/Event.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"EksdeeeX"},"content":"\u003cimg src\u003d\"images/EventClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":190,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":191,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 1.9\u003c/b\u003e Class diagram of \u0027Event\u0027","lastModifiedDate":"2023-03-26"},{"lineNumber":192,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":193,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":194,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":195,"author":{"gitId":"EksdeeeX"},"content":"The `Event` component,","lastModifiedDate":"2023-03-26"},{"lineNumber":196,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":197,"author":{"gitId":"EksdeeeX"},"content":"* stores each category of information of an event in individual attributes and each attribute is an object.","lastModifiedDate":"2023-03-26"},{"lineNumber":198,"author":{"gitId":"EksdeeeX"},"content":"* arrtibutes are:","lastModifiedDate":"2023-03-26"},{"lineNumber":199,"author":{"gitId":"EksdeeeX"},"content":"   * `Address`","lastModifiedDate":"2023-03-26"},{"lineNumber":200,"author":{"gitId":"EksdeeeX"},"content":"   * `Mark`","lastModifiedDate":"2023-03-26"},{"lineNumber":201,"author":{"gitId":"EksdeeeX"},"content":"   * `Name`","lastModifiedDate":"2023-03-26"},{"lineNumber":202,"author":{"gitId":"EksdeeeX"},"content":"   * `Tag`","lastModifiedDate":"2023-03-26"},{"lineNumber":203,"author":{"gitId":"EksdeeeX"},"content":"   * `Rate`","lastModifiedDate":"2023-03-26"},{"lineNumber":204,"author":{"gitId":"EksdeeeX"},"content":"   * `Time`","lastModifiedDate":"2023-03-26"},{"lineNumber":205,"author":{"gitId":"EksdeeeX"},"content":"   * `Contact`","lastModifiedDate":"2023-03-26"},{"lineNumber":206,"author":{"gitId":"EksdeeeX"},"content":"* when an event is created the above objects are created using user inputs and then the event object will be created.","lastModifiedDate":"2023-03-26"},{"lineNumber":207,"author":{"gitId":"EksdeeeX"},"content":"* the event will be added to the UniqueEventList.","lastModifiedDate":"2023-03-26"},{"lineNumber":208,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":209,"author":{"gitId":"EksdeeeX"},"content":"### Contact component","lastModifiedDate":"2023-03-26"},{"lineNumber":210,"author":{"gitId":"engenhui1999"},"content":"**API** : [`Contact.java`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/java/seedu/event/model/contact/Contact.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":212,"author":{"gitId":"EksdeeeX"},"content":"\u003cimg src\u003d\"images/ContactClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":213,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":214,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 2.0\u003c/b\u003e Class diagram of \u0027Contact\u0027","lastModifiedDate":"2023-03-26"},{"lineNumber":215,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":217,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":218,"author":{"gitId":"EksdeeeX"},"content":"The `Contact` component,","lastModifiedDate":"2023-03-26"},{"lineNumber":219,"author":{"gitId":"EksdeeeX"},"content":"- it is made up of 2 objects the `ContactName` and `ContactPhone`","lastModifiedDate":"2023-03-26"},{"lineNumber":220,"author":{"gitId":"EksdeeeX"},"content":"- both objects are created using user input.","lastModifiedDate":"2023-03-26"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"engenhui1999"},"content":"**API** : [`Storage.java`](https://github.com/AY2223S2-CS2103T-T11-3/tp/blob/master/src/main/java/seedu/event/storage/Storage.java)","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":229,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"EksdeeeX"},"content":"* can save both event book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2023-03-26"},{"lineNumber":231,"author":{"gitId":"EksdeeeX"},"content":"* inherits from both `EventBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2023-03-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2023-03-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"EksdeeeX"},"content":"Classes used by multiple components are in the `seedu.eventbook.commons` package.","lastModifiedDate":"2023-03-26"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"EksdeeeX"},"content":"## Implementation","lastModifiedDate":"2023-03-07"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"bryansendeavour"},"content":"### New Contact feature","lastModifiedDate":"2023-03-22"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":246,"author":{"gitId":"bryansendeavour"},"content":"The `newcontact` feature allows for users to add new contacts to their contact list.","lastModifiedDate":"2023-03-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":248,"author":{"gitId":"bryansendeavour"},"content":"#### Implementation","lastModifiedDate":"2023-03-26"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":250,"author":{"gitId":"bryansendeavour"},"content":"The `newcontact` feature is facilitated by the `Contact` class. The feature is implemented as follows:","lastModifiedDate":"2023-03-26"},{"lineNumber":251,"author":{"gitId":"bryansendeavour"},"content":"- encapsulate two attributes of a contact with the help of `ContactName` and `ContactPhone` class.","lastModifiedDate":"2023-03-26"},{"lineNumber":252,"author":{"gitId":"bryansendeavour"},"content":"- Phone number should only be numerical and shall not be shorter than 8 digits.","lastModifiedDate":"2023-03-26"},{"lineNumber":253,"author":{"gitId":"bryansendeavour"},"content":"- A contact is unique to its `ContactPhone`, having the same phone number will result in an error.","lastModifiedDate":"2023-03-26"},{"lineNumber":254,"author":{"gitId":"bryansendeavour"},"content":"- Once a new contact is created it will be added to the contact list which will be saved in a JSON file.","lastModifiedDate":"2023-03-26"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":256,"author":{"gitId":"bryansendeavour"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-26"},{"lineNumber":257,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":258,"author":{"gitId":"bryansendeavour"},"content":"* **Alternative 1 (current choice):** Create a new contact through creating `ContactName` and `ContactPhone` attributes.","lastModifiedDate":"2023-03-22"},{"lineNumber":259,"author":{"gitId":"bryansendeavour"},"content":"    * Pros: More levels of abstraction to prevent the accidental change of information.","lastModifiedDate":"2023-03-22"},{"lineNumber":260,"author":{"gitId":"bryansendeavour"},"content":"    * Cons: Complicated code.","lastModifiedDate":"2023-03-22"},{"lineNumber":261,"author":{"gitId":"bryansendeavour"},"content":"* **Alternative 2:** Created a new contact through storing strings input by user.","lastModifiedDate":"2023-03-22"},{"lineNumber":262,"author":{"gitId":"bryansendeavour"},"content":"    * Pros: Easy to code.","lastModifiedDate":"2023-03-22"},{"lineNumber":263,"author":{"gitId":"bryansendeavour"},"content":"    * Cons: Might be hard to keep track or do comparisons with.","lastModifiedDate":"2023-03-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":266,"author":{"gitId":"engenhui1999"},"content":"### Mark feature","lastModifiedDate":"2023-03-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":268,"author":{"gitId":"engenhui1999"},"content":"The `mark` feature allows for marking of the \u0027Mark\u0027 attribute to indicate that the event is done.","lastModifiedDate":"2023-03-27"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":270,"author":{"gitId":"engenhui1999"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":272,"author":{"gitId":"engenhui1999"},"content":"The `mark` feature is implemented with the following considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":273,"author":{"gitId":"engenhui1999"},"content":"- A `Mark` class facilitates the implementation of the mark feature. The class also contains a `isDone` attribute to indicate whether the event is done or not.\u0027","lastModifiedDate":"2023-03-27"},{"lineNumber":274,"author":{"gitId":"engenhui1999"},"content":"- A valid `index` will be taken in as a parameter to facilitate marking of the correct event.","lastModifiedDate":"2023-03-27"},{"lineNumber":275,"author":{"gitId":"engenhui1999"},"content":"- Marking of a done event would not result in error or exceptions as this action does not reduce correctness of presented information.","lastModifiedDate":"2023-03-27"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":277,"author":{"gitId":"engenhui1999"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":279,"author":{"gitId":"engenhui1999"},"content":"* **Alternative 1 (current choice):** Calls on `mark` method in \u0027Mark\u0027 class to set the tracked boolean variable \u0027isDone\u0027 to true","lastModifiedDate":"2023-03-27"},{"lineNumber":280,"author":{"gitId":"engenhui1999"},"content":"  * Pros: Easier to implement.","lastModifiedDate":"2023-03-27"},{"lineNumber":281,"author":{"gitId":"engenhui1999"},"content":"  * Cons: Results in higher coupling as it is editing a variable in an event instance, may lead to errors in runtime and testing.","lastModifiedDate":"2023-03-27"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":283,"author":{"gitId":"engenhui1999"},"content":"* **Alternative 2:** Replace current instance of specified event with a new unmarked event instance","lastModifiedDate":"2023-03-27"},{"lineNumber":284,"author":{"gitId":"engenhui1999"},"content":"  * Pros: Results in less coupling and in turn lower possibility of unintended change cascades.","lastModifiedDate":"2023-03-27"},{"lineNumber":285,"author":{"gitId":"engenhui1999"},"content":"  * Cons: May have performance issues in terms of memory usage and runtime.","lastModifiedDate":"2023-03-27"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":287,"author":{"gitId":"engenhui1999"},"content":"Below shows the activity diagram of the `mark` command:","lastModifiedDate":"2023-03-27"},{"lineNumber":288,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":289,"author":{"gitId":"engenhui1999"},"content":"\u003cimg src\u003d\"images/MarkActivityDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":290,"author":{"gitId":"engenhui1999"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":291,"author":{"gitId":"engenhui1999"},"content":"    \u003cb\u003eFigure 3.2\u003c/b\u003e Activity diagram of \u0027Mark\u0027","lastModifiedDate":"2023-03-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":294,"author":{"gitId":"EksdeeeX"},"content":"### Unmark feature","lastModifiedDate":"2023-03-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":296,"author":{"gitId":"EksdeeeX"},"content":"The `unmark` feature allows for unmarking of the \u0027Mark\u0027 attribute in events should there be an accidental marking of an event.","lastModifiedDate":"2023-03-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":298,"author":{"gitId":"EksdeeeX"},"content":"#### Implementation","lastModifiedDate":"2023-03-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":300,"author":{"gitId":"EksdeeeX"},"content":"The `unmark` feature is implemented with the following considerations:","lastModifiedDate":"2023-03-23"},{"lineNumber":301,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":302,"author":{"gitId":"EksdeeeX"},"content":"- A valid `index` will be taken in as a parameter to facilitate unmarking of the correct event.","lastModifiedDate":"2023-03-23"},{"lineNumber":303,"author":{"gitId":"EksdeeeX"},"content":"- The unmark feature builds alongside the existing implementation of the \u0027Mark\u0027 class.","lastModifiedDate":"2023-03-23"},{"lineNumber":304,"author":{"gitId":"EksdeeeX"},"content":"- Allows for undo of accidental marking by setting the \u0027isDone\u0027 boolean attribute of the \u0027Mark\u0027 class to false to signify an undone event.","lastModifiedDate":"2023-03-23"},{"lineNumber":305,"author":{"gitId":"EksdeeeX"},"content":"- Unmarking of an undone event would not result in error or exceptions as this action does not reduce correctness of presented information.","lastModifiedDate":"2023-03-23"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":307,"author":{"gitId":"EksdeeeX"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-23"},{"lineNumber":308,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":309,"author":{"gitId":"engenhui1999"},"content":"* **Alternative 1 (current choice):** Calls on `unmark` method in \u0027Mark\u0027 class to set the tracked boolean variable \u0027isDone\u0027 to false","lastModifiedDate":"2023-03-27"},{"lineNumber":310,"author":{"gitId":"EksdeeeX"},"content":"  * Pros: Easier to implement.","lastModifiedDate":"2023-03-23"},{"lineNumber":311,"author":{"gitId":"EksdeeeX"},"content":"  * Cons: Results in higher coupling as it is editing a variable in an event instance, may lead to errors in runtime and testing.","lastModifiedDate":"2023-03-23"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":313,"author":{"gitId":"engenhui1999"},"content":"* **Alternative 2:** Replace current instance of specified event with a new unmarked event instance","lastModifiedDate":"2023-03-27"},{"lineNumber":314,"author":{"gitId":"EksdeeeX"},"content":"  * Pros: Results in less coupling and in turn lower possibility of unintended change cascades.","lastModifiedDate":"2023-03-23"},{"lineNumber":315,"author":{"gitId":"EksdeeeX"},"content":"  * Cons: May have performance issues in terms of memory usage and runtime.","lastModifiedDate":"2023-03-23"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-23"},{"lineNumber":317,"author":{"gitId":"EksdeeeX"},"content":"Below shows the activity diagram of the `unmark` command:","lastModifiedDate":"2023-03-27"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"EksdeeeX"},"content":"\u003cimg src\u003d\"images/UnmarkActivityDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":320,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":321,"author":{"gitId":"EksdeeeX"},"content":"    \u003cb\u003eFigure 3.3\u003c/b\u003e Activity diagram of \u0027Unmark\u0027","lastModifiedDate":"2023-03-27"},{"lineNumber":322,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"glozxi"},"content":"### Reminder feature","lastModifiedDate":"2023-03-22"},{"lineNumber":325,"author":{"gitId":"glozxi"},"content":"The `remind` feature allows for users to view upcoming events.","lastModifiedDate":"2023-03-27"},{"lineNumber":326,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":327,"author":{"gitId":"glozxi"},"content":"#### Implementation","lastModifiedDate":"2023-03-21"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":329,"author":{"gitId":"glozxi"},"content":"The `reminder` feature is implemented with the following considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":330,"author":{"gitId":"glozxi"},"content":"* It is facilitated by `StartTimeWithinDaysPredicate`, that tests if an event\u0027s start date is within the inputted days of the current time.","lastModifiedDate":"2023-03-27"},{"lineNumber":331,"author":{"gitId":"glozxi"},"content":"* The current time is determined by a `Clock` that is created by `LogicManager`.","lastModifiedDate":"2023-03-27"},{"lineNumber":332,"author":{"gitId":"glozxi"},"content":"* The `RemindCommandParser` checks if the command argument has the correct format. The command argument represents days and should be a positive integer.","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":334,"author":{"gitId":"glozxi"},"content":"The following object diagram shows objects involved in the execution of a \u003cb\u003eremind\u003c/b\u003e command.","lastModifiedDate":"2023-03-27"},{"lineNumber":335,"author":{"gitId":"glozxi"},"content":"![RemindObjectDiagram](images/RemindObjectDiagram.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":337,"author":{"gitId":"glozxi"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-21"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":339,"author":{"gitId":"glozxi"},"content":"**Aspect: How current time is determined:**","lastModifiedDate":"2023-03-22"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":341,"author":{"gitId":"glozxi"},"content":"* **Alternative 1 (current choice):** Determine current time using a `Clock` created in `LogicManager`.","lastModifiedDate":"2023-03-22"},{"lineNumber":342,"author":{"gitId":"glozxi"},"content":"    * Pros: Easy to test. A fixed `Clock` can be created.","lastModifiedDate":"2023-03-22"},{"lineNumber":343,"author":{"gitId":"glozxi"},"content":"    * Cons: Coupling between classes that use `Clock`, even if the class only uses it to create an object that uses `Clock`","lastModifiedDate":"2023-03-22"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":345,"author":{"gitId":"glozxi"},"content":"* **Alternative 2:** Determine current time using `LocalDateTime.now()` in `StartTimeWithinDaysPredicate`.","lastModifiedDate":"2023-03-22"},{"lineNumber":346,"author":{"gitId":"glozxi"},"content":"    * Pros: Less coupling between classes.","lastModifiedDate":"2023-03-22"},{"lineNumber":347,"author":{"gitId":"glozxi"},"content":"    * Cons: Difficult to test, as the current time is based on real time.","lastModifiedDate":"2023-03-22"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":350,"author":{"gitId":"ExtraShotLatte"},"content":"### Linkcontact feature","lastModifiedDate":"2023-03-22"},{"lineNumber":351,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":352,"author":{"gitId":"ExtraShotLatte"},"content":"The link contact feature allows users to link a contact to an event.","lastModifiedDate":"2023-03-22"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":354,"author":{"gitId":"ExtraShotLatte"},"content":"#### Implementation","lastModifiedDate":"2023-03-22"},{"lineNumber":355,"author":{"gitId":"ExtraShotLatte"},"content":"The `linkcontact` feature is facilitated by `Event` class.","lastModifiedDate":"2023-03-22"},{"lineNumber":356,"author":{"gitId":"ExtraShotLatte"},"content":"The feature is implemented as follows:","lastModifiedDate":"2023-03-22"},{"lineNumber":357,"author":{"gitId":"ExtraShotLatte"},"content":"* When a user adds an event, he can optionally add a contact to the event.","lastModifiedDate":"2023-03-22"},{"lineNumber":358,"author":{"gitId":"ExtraShotLatte"},"content":"* When a user edits an event, he can optionally add a contact to the event.","lastModifiedDate":"2023-03-22"},{"lineNumber":359,"author":{"gitId":"ExtraShotLatte"},"content":"* When a user edits an event, he can optionally change the contact of the event.","lastModifiedDate":"2023-03-22"},{"lineNumber":360,"author":{"gitId":"ExtraShotLatte"},"content":"* If the user specifies a contact that does not exist in the contact list, the event will not be added/edited.","lastModifiedDate":"2023-03-23"},{"lineNumber":361,"author":{"gitId":"ExtraShotLatte"},"content":"* If the user specifies a contact that already exists in the contact list, the event will be added/edited with the contact.","lastModifiedDate":"2023-03-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":363,"author":{"gitId":"ExtraShotLatte"},"content":"The linkcontact feature will take in a contact number as a parameter. This parameter will be used to search for the contact in the contact list.","lastModifiedDate":"2023-03-22"},{"lineNumber":364,"author":{"gitId":"ExtraShotLatte"},"content":"1. If the contact is found, the contact will be linked to the event.","lastModifiedDate":"2023-03-22"},{"lineNumber":365,"author":{"gitId":"ExtraShotLatte"},"content":"2. If the contact is not found, the event will not be added/edited.","lastModifiedDate":"2023-03-22"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":367,"author":{"gitId":"ExtraShotLatte"},"content":"#### Design consideration:","lastModifiedDate":"2023-03-22"},{"lineNumber":368,"author":{"gitId":"ExtraShotLatte"},"content":"* **Alternative 1 (current choice):** Add a `Contact` attribute to `Event` class.","lastModifiedDate":"2023-03-22"},{"lineNumber":369,"author":{"gitId":"ExtraShotLatte"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2023-03-22"},{"lineNumber":370,"author":{"gitId":"ExtraShotLatte"},"content":"    * Cons: May violate Single Responsibility Principle as `Event` class now has to handle both event and contact.","lastModifiedDate":"2023-03-22"},{"lineNumber":371,"author":{"gitId":"ExtraShotLatte"},"content":"* **Alternative 2:** Add the `contact` as just a normal string attribute to `Event` class.","lastModifiedDate":"2023-03-22"},{"lineNumber":372,"author":{"gitId":"ExtraShotLatte"},"content":"    * Pros: Even easier to implement.","lastModifiedDate":"2023-03-22"},{"lineNumber":373,"author":{"gitId":"ExtraShotLatte"},"content":"    * Cons: Hard to implement filtering of events by contact in the future.","lastModifiedDate":"2023-03-22"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":375,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/LinkContactActivityDiagram.png\" width\u003d\"430\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":376,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":377,"author":{"gitId":"ExtraShotLatte"},"content":"    \u003cb\u003eFigure 3.5\u003c/b\u003e Activity diagram of \u0027linkcontact\u0027","lastModifiedDate":"2023-03-27"},{"lineNumber":378,"author":{"gitId":"ExtraShotLatte"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":380,"author":{"gitId":"engenhui1999"},"content":"### Revenue feature","lastModifiedDate":"2023-03-27"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":382,"author":{"gitId":"engenhui1999"},"content":"The `revenue` feature allows for calculating the total revenue earned so far.","lastModifiedDate":"2023-03-27"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":384,"author":{"gitId":"engenhui1999"},"content":"#### Implementation","lastModifiedDate":"2023-03-27"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":386,"author":{"gitId":"engenhui1999"},"content":"The `revenue` feature is implemented with the following considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":387,"author":{"gitId":"engenhui1999"},"content":"- The revenue takes into account whether the event is marked or not. It only sums up the rate if the event is marked as done.","lastModifiedDate":"2023-03-27"},{"lineNumber":388,"author":{"gitId":"engenhui1999"},"content":"- The revenue will display `0.00` and not result in any errors even if there are no events that are done yet.","lastModifiedDate":"2023-03-27"},{"lineNumber":389,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":390,"author":{"gitId":"engenhui1999"},"content":"#### Design considerations:","lastModifiedDate":"2023-03-27"},{"lineNumber":391,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":392,"author":{"gitId":"engenhui1999"},"content":"* **Alternative 1 (current choice):** Iterates through the event book when the revenue feature is called.","lastModifiedDate":"2023-03-27"},{"lineNumber":393,"author":{"gitId":"engenhui1999"},"content":"  * Pros: Easier to implement.","lastModifiedDate":"2023-03-27"},{"lineNumber":394,"author":{"gitId":"engenhui1999"},"content":"  * Cons: Runtime complexity scales as the event book increases in size.","lastModifiedDate":"2023-03-27"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":396,"author":{"gitId":"engenhui1999"},"content":"* **Alternative 2:** Keep a static attribute of the revenue and increase accordingly as events are completed.","lastModifiedDate":"2023-03-27"},{"lineNumber":397,"author":{"gitId":"engenhui1999"},"content":"  * Pros: Will maintain a low runtime complexity.","lastModifiedDate":"2023-03-27"},{"lineNumber":398,"author":{"gitId":"engenhui1999"},"content":"  * Cons: Hard to implement in the case that events are unmarked or deleted.","lastModifiedDate":"2023-03-27"},{"lineNumber":399,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":400,"author":{"gitId":"engenhui1999"},"content":"Below shows the activity diagram of the `revenue` command:","lastModifiedDate":"2023-03-27"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":402,"author":{"gitId":"engenhui1999"},"content":"\u003cimg src\u003d\"images/RevenueActivityDiagram.png\" width\u003d\"200\" /\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":403,"author":{"gitId":"engenhui1999"},"content":"\u003cdiv style\u003d\"width:80%;margin:0\"\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":404,"author":{"gitId":"engenhui1999"},"content":"    \u003cb\u003eFigure 3.6\u003c/b\u003e Activity diagram of \u0027Revenue\u0027","lastModifiedDate":"2023-03-27"},{"lineNumber":405,"author":{"gitId":"engenhui1999"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":406,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":408,"author":{"gitId":"EksdeeeX"},"content":"## Appendix: Requirements","lastModifiedDate":"2023-03-07"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"glozxi"},"content":"* freelancer who wants to keep track of their events and contact person","lastModifiedDate":"2023-03-17"},{"lineNumber":415,"author":{"gitId":"glozxi"},"content":"* has a need to manage a significant number of events","lastModifiedDate":"2023-03-04"},{"lineNumber":416,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":419,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":421,"author":{"gitId":"glozxi"},"content":"**Value proposition**: manage events\u0027 information and respective contact person faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-03-17"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":425,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"glozxi"},"content":"| Priority | As a/an...          | I can...                                         | so that...                                           |","lastModifiedDate":"2023-03-04"},{"lineNumber":429,"author":{"gitId":"glozxi"},"content":"| -------- |---------------------| ------------------------------------------------ | ---------------------------------------------------- |","lastModifiedDate":"2023-03-17"},{"lineNumber":430,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Access the software                              | I can use it                                         |","lastModifiedDate":"2023-03-14"},{"lineNumber":431,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Click X to exit                                  | I can stop it                                        |","lastModifiedDate":"2023-03-04"},{"lineNumber":432,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Add client contact to an event                    | I can refer to when needed                          |","lastModifiedDate":"2023-03-14"},{"lineNumber":433,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | View all my contacts                             | I can see who I can contact                          |","lastModifiedDate":"2023-03-04"},{"lineNumber":434,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Link client contact to event                     | I can have quick reference to POC (Point of Contact) |","lastModifiedDate":"2023-03-14"},{"lineNumber":435,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | See the rates I have discussed with the client   | I know how much money to collect                     |","lastModifiedDate":"2023-03-04"},{"lineNumber":436,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Mark the event that is done                      | I know what I don\u0027t have to do anymore               |","lastModifiedDate":"2023-03-04"},{"lineNumber":437,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Unmark an event                                  | I can undo an accidental mark.                       |","lastModifiedDate":"2023-03-14"},{"lineNumber":438,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Add events                                       | I can remember my events later                       |","lastModifiedDate":"2023-03-04"},{"lineNumber":439,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | View events                                      | I can see what events I have done or am going to do  |","lastModifiedDate":"2023-03-04"},{"lineNumber":440,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Delete events                                    | I can remove unnecessary events                      |","lastModifiedDate":"2023-03-04"},{"lineNumber":441,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Add dates to my events                           | I know when the event is due                         |","lastModifiedDate":"2023-03-14"},{"lineNumber":442,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Save my events after closing the app             | I can save for when I use the app another time       |","lastModifiedDate":"2023-03-14"},{"lineNumber":443,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Load my saved events when opening the app        | I can see my events when I reopen the app            |","lastModifiedDate":"2023-03-14"},{"lineNumber":444,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Add a rate to an event                           | I can see how much I earn from an event              |","lastModifiedDate":"2023-03-04"},{"lineNumber":445,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | View information associated to each event        | I can see its details                                |","lastModifiedDate":"2023-03-04"},{"lineNumber":446,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Edit my existing event details                   | I can change the details whenever there are changes  |","lastModifiedDate":"2023-03-14"},{"lineNumber":447,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | See what I have added before                     | I don\u0027t need repeat myself                           |","lastModifiedDate":"2023-03-04"},{"lineNumber":448,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Change a contact linked to an event              | I can link a different contact if the POC changes    |","lastModifiedDate":"2023-03-04"},{"lineNumber":449,"author":{"gitId":"glozxi"},"content":"| `* * *`     | New user            | See usage instructions                           | I know how to use the software                       |","lastModifiedDate":"2023-03-04"},{"lineNumber":450,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | View undone events                               | I can see what events I have to do                   |","lastModifiedDate":"2023-03-04"},{"lineNumber":451,"author":{"gitId":"glozxi"},"content":"| `* * *`     | Freelancer          | Link venue to event                              | I can have quick reference                           |","lastModifiedDate":"2023-03-14"},{"lineNumber":452,"author":{"gitId":"glozxi"},"content":"| `* * *`     | Forgetful User      | Be reminded of upcoming events                   | I can remember                                       |","lastModifiedDate":"2023-03-04"},{"lineNumber":453,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                | Delete contacts                                  | I can delete unnecessary contacts                    |","lastModifiedDate":"2023-03-04"},{"lineNumber":454,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                | Filter the events that has not been paid         | I can collect money                                  |","lastModifiedDate":"2023-03-04"},{"lineNumber":455,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                | View the total revenue I have earned this week   | I can manage my money                                |","lastModifiedDate":"2023-03-04"},{"lineNumber":456,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                | Set notes for contacts                           | I can keep track about them and rmb what not to do   |","lastModifiedDate":"2023-03-04"},{"lineNumber":457,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                | View timing of upcoming events                   | I know when to go                                    |","lastModifiedDate":"2023-03-04"},{"lineNumber":458,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                | See the most urgent events                       | I know what to do first                              |","lastModifiedDate":"2023-03-04"},{"lineNumber":459,"author":{"gitId":"glozxi"},"content":"| `* *`   | Careless user       | Undo accidental deletion                         | I can undo deleted events                            |","lastModifiedDate":"2023-03-04"},{"lineNumber":460,"author":{"gitId":"glozxi"},"content":"| `* *`   | Impatient user      | Search contacts                                  | I can quick find specific POC                        |","lastModifiedDate":"2023-03-17"},{"lineNumber":461,"author":{"gitId":"glozxi"},"content":"| `* *`   | Impatient user     | Search events                                    | I can quick find specific event                      |","lastModifiedDate":"2023-03-17"},{"lineNumber":462,"author":{"gitId":"glozxi"},"content":"| `* *`   | Lazy user          | Filter events to find similar events             | I can find similar events easily                     |","lastModifiedDate":"2023-03-17"},{"lineNumber":463,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                | Add all information to an event at the same time | I can save time on adding all the information        |","lastModifiedDate":"2023-03-04"},{"lineNumber":464,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                | View events associated to each contact           | I know what events to contact the POC for            |","lastModifiedDate":"2023-03-04"},{"lineNumber":465,"author":{"gitId":"glozxi"},"content":"| `*`      | User                | Toggle between light and dark mode               | I can use the theme i prefer                         |","lastModifiedDate":"2023-03-14"},{"lineNumber":466,"author":{"gitId":"glozxi"},"content":"| `*`      | User                | Redo previous action                             | I can redo previous action                           |","lastModifiedDate":"2023-03-04"},{"lineNumber":467,"author":{"gitId":"glozxi"},"content":"| `*`      | User                | Use abbreviation                                 | I can quickly insert items                           |","lastModifiedDate":"2023-03-04"},{"lineNumber":468,"author":{"gitId":"glozxi"},"content":"| `*`      | Goal oriented user | Set goals                                        | I can look at my goals                               |","lastModifiedDate":"2023-03-17"},{"lineNumber":469,"author":{"gitId":"glozxi"},"content":"| `*`      | Forgetful User      | Set reminders/checklist for events               | I can remember things to bring etc.                  |","lastModifiedDate":"2023-03-14"},{"lineNumber":470,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":471,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":472,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":473,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":474,"author":{"gitId":"glozxi"},"content":"(For all use cases below, the **System** is `Paidlancers` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-04"},{"lineNumber":475,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":476,"author":{"gitId":"glozxi"},"content":"**Use case: UC1 - Add Event**","lastModifiedDate":"2023-03-04"},{"lineNumber":477,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":478,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":479,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":480,"author":{"gitId":"glozxi"},"content":"1.  User requests to add an event together with its information.","lastModifiedDate":"2023-03-04"},{"lineNumber":481,"author":{"gitId":"glozxi"},"content":"2.  System adds the event and displays information of the event added.","lastModifiedDate":"2023-03-04"},{"lineNumber":482,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":483,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":484,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":485,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":486,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":487,"author":{"gitId":"glozxi"},"content":"* 1a. User enters the wrong command.","lastModifiedDate":"2023-03-04"},{"lineNumber":488,"author":{"gitId":"glozxi"},"content":"   * 1a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-04"},{"lineNumber":489,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":490,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-04"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":492,"author":{"gitId":"glozxi"},"content":"**Use case: UC2 - Delete Event**","lastModifiedDate":"2023-03-04"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":494,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":496,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC5)\u003c/u\u003e.","lastModifiedDate":"2023-03-17"},{"lineNumber":497,"author":{"gitId":"glozxi"},"content":"2. User requests to delete a specified event in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":498,"author":{"gitId":"glozxi"},"content":"3. System deletes the event and displays information of the event deleted.","lastModifiedDate":"2023-03-04"},{"lineNumber":499,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":500,"author":{"gitId":"glozxi"},"content":"   Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":501,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":502,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":503,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":504,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-13"},{"lineNumber":505,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":506,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":507,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-04"},{"lineNumber":508,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":509,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-13"},{"lineNumber":510,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":511,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":512,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-04"},{"lineNumber":513,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":514,"author":{"gitId":"glozxi"},"content":"**Use case: UC3 - Mark Event**","lastModifiedDate":"2023-03-04"},{"lineNumber":515,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":516,"author":{"gitId":"glozxi"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":517,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":518,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC5)\u003c/u\u003e.","lastModifiedDate":"2023-03-17"},{"lineNumber":519,"author":{"gitId":"glozxi"},"content":"2. User requests to mark a specified event in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":520,"author":{"gitId":"glozxi"},"content":"3. System marks the event and displays information of the event marked.","lastModifiedDate":"2023-03-04"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"glozxi"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-17"},{"lineNumber":527,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-17"},{"lineNumber":528,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":529,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-17"},{"lineNumber":530,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":531,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-17"},{"lineNumber":532,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-17"},{"lineNumber":533,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":534,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-17"},{"lineNumber":535,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":536,"author":{"gitId":"EksdeeeX"},"content":"* 2c. User marks an event that is already marked.","lastModifiedDate":"2023-03-17"},{"lineNumber":537,"author":{"gitId":"EksdeeeX"},"content":"   * 2c1. System displays that the event has already been marked.","lastModifiedDate":"2023-03-17"},{"lineNumber":538,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":539,"author":{"gitId":"EksdeeeX"},"content":"      Use case ends.","lastModifiedDate":"2023-03-17"},{"lineNumber":540,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":541,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC4 - Unmark Event**","lastModifiedDate":"2023-03-17"},{"lineNumber":542,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":543,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-17"},{"lineNumber":544,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":545,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC5)\u003c/u\u003e.","lastModifiedDate":"2023-03-17"},{"lineNumber":546,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to unmark a specified event in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":547,"author":{"gitId":"EksdeeeX"},"content":"3. System unmarks the event and displays information of the event unmarked.","lastModifiedDate":"2023-03-17"},{"lineNumber":548,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":549,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-17"},{"lineNumber":550,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":551,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-17"},{"lineNumber":552,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":553,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-17"},{"lineNumber":554,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-17"},{"lineNumber":555,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":556,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-17"},{"lineNumber":559,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-17"},{"lineNumber":560,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":561,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-04"},{"lineNumber":562,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":563,"author":{"gitId":"EksdeeeX"},"content":"* 2c. User marks an event that is already unmarked.","lastModifiedDate":"2023-03-17"},{"lineNumber":564,"author":{"gitId":"EksdeeeX"},"content":"   * 2c1. System displays that the event has already been unmarked.","lastModifiedDate":"2023-03-17"},{"lineNumber":565,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":566,"author":{"gitId":"glozxi"},"content":"      Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":567,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":568,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":569,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC5 - List Events**","lastModifiedDate":"2023-03-17"},{"lineNumber":570,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":571,"author":{"gitId":"glozxi"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":572,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":573,"author":{"gitId":"glozxi"},"content":"1. User requests the system to list events.","lastModifiedDate":"2023-03-04"},{"lineNumber":574,"author":{"gitId":"glozxi"},"content":"2. System displays information of all events with their respective index.","lastModifiedDate":"2023-03-04"},{"lineNumber":575,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":576,"author":{"gitId":"glozxi"},"content":"   Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":577,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":578,"author":{"gitId":"glozxi"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":579,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":580,"author":{"gitId":"glozxi"},"content":"* 1a. User enters the wrong command.","lastModifiedDate":"2023-03-04"},{"lineNumber":581,"author":{"gitId":"glozxi"},"content":"   * 1a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-04"},{"lineNumber":582,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":583,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-04"},{"lineNumber":584,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":585,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-04"},{"lineNumber":586,"author":{"gitId":"glozxi"},"content":"   * 2a1. System displays an empty list.","lastModifiedDate":"2023-03-04"},{"lineNumber":587,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":588,"author":{"gitId":"glozxi"},"content":"      Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":589,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":590,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC6 - Link contact and event**","lastModifiedDate":"2023-03-17"},{"lineNumber":591,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":592,"author":{"gitId":"glozxi"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":593,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":594,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC5)\u003c/u\u003e.","lastModifiedDate":"2023-03-17"},{"lineNumber":595,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to link a specified event and contact.","lastModifiedDate":"2023-03-13"},{"lineNumber":596,"author":{"gitId":"EksdeeeX"},"content":"3. System links them and displays the event\u0027s and contact\u0027s information.","lastModifiedDate":"2023-03-13"},{"lineNumber":597,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":598,"author":{"gitId":"glozxi"},"content":"   Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":599,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":600,"author":{"gitId":"glozxi"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":601,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":602,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-13"},{"lineNumber":603,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":604,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":605,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-04"},{"lineNumber":606,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":607,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-13"},{"lineNumber":608,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":609,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":610,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-04"},{"lineNumber":611,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":612,"author":{"gitId":"EksdeeeX"},"content":"* 2c. User enters an invalid contact information","lastModifiedDate":"2023-03-13"},{"lineNumber":613,"author":{"gitId":"EksdeeeX"},"content":"   * 2c1. System displays that the contact information is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":614,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":615,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-09"},{"lineNumber":616,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":617,"author":{"gitId":"EksdeeeX"},"content":"* 3a. The event has a contact linked already.","lastModifiedDate":"2023-03-13"},{"lineNumber":618,"author":{"gitId":"glozxi"},"content":"   * 4a1. System replaces the previous contact with the new contact.","lastModifiedDate":"2023-03-04"},{"lineNumber":619,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":620,"author":{"gitId":"glozxi"},"content":"      Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":621,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":622,"author":{"gitId":"EksdeeeX"},"content":"\u003c!-- **Use case: UC7 - Display Rate**","lastModifiedDate":"2023-03-27"},{"lineNumber":623,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":624,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":625,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":626,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC5)\u003c/u\u003e.","lastModifiedDate":"2023-03-17"},{"lineNumber":627,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to display the rate of a specified event in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":628,"author":{"gitId":"EksdeeeX"},"content":"3. System displays the event and displays information of the rate.","lastModifiedDate":"2023-03-05"},{"lineNumber":629,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":630,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":631,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":632,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":633,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":634,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-05"},{"lineNumber":635,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-05"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":637,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":639,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-05"},{"lineNumber":640,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-05"},{"lineNumber":641,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":642,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2. --\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":643,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":644,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC7 - Add Contact**","lastModifiedDate":"2023-03-27"},{"lineNumber":645,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":646,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":647,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":648,"author":{"gitId":"EksdeeeX"},"content":"1.  User requests to add a contact to an event.","lastModifiedDate":"2023-03-07"},{"lineNumber":649,"author":{"gitId":"EksdeeeX"},"content":"2.  System adds the contact to the event and displays information of the contact and event.","lastModifiedDate":"2023-03-07"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":651,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":653,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":654,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":655,"author":{"gitId":"EksdeeeX"},"content":"* 1a. User enters the wrong command.","lastModifiedDate":"2023-03-06"},{"lineNumber":656,"author":{"gitId":"EksdeeeX"},"content":"   * 1a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":657,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":658,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":659,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":660,"author":{"gitId":"EksdeeeX"},"content":"* 1b. User enters invalid contact details.","lastModifiedDate":"2023-03-06"},{"lineNumber":661,"author":{"gitId":"EksdeeeX"},"content":"   * 1b1. System displays that the input is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":662,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":663,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":664,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":665,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC8 - Add Date to Event**","lastModifiedDate":"2023-03-27"},{"lineNumber":666,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":667,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":668,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":669,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC5)\u003c/u\u003e.","lastModifiedDate":"2023-03-17"},{"lineNumber":670,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to add a date to a specified event in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":671,"author":{"gitId":"EksdeeeX"},"content":"3. System adds the date to the event and displays information of the event with new date added.","lastModifiedDate":"2023-03-06"},{"lineNumber":672,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":673,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":674,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":675,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":676,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":677,"author":{"gitId":"EksdeeeX"},"content":" 2a. User enters the wrong command.","lastModifiedDate":"2023-03-06"},{"lineNumber":678,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":679,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":680,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-06"},{"lineNumber":681,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":682,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-06"},{"lineNumber":683,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":684,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":685,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-06"},{"lineNumber":686,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":687,"author":{"gitId":"EksdeeeX"},"content":"* 2c. User enters an invalid date.","lastModifiedDate":"2023-03-06"},{"lineNumber":688,"author":{"gitId":"EksdeeeX"},"content":"   * 2c1. System displays that the date is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":689,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":690,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-06"},{"lineNumber":691,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":692,"author":{"gitId":"EksdeeeX"},"content":"* 3a. The event has a date linked already.","lastModifiedDate":"2023-03-06"},{"lineNumber":693,"author":{"gitId":"EksdeeeX"},"content":"   * 3a1. System replaces the previous date with the new date.","lastModifiedDate":"2023-03-06"},{"lineNumber":694,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":695,"author":{"gitId":"EksdeeeX"},"content":"      Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":696,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":697,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC9 - Edit Event**","lastModifiedDate":"2023-03-27"},{"lineNumber":698,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":699,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-13"},{"lineNumber":700,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":701,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC5)\u003c/u\u003e.","lastModifiedDate":"2023-03-17"},{"lineNumber":702,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to edit a specified event in the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":703,"author":{"gitId":"EksdeeeX"},"content":"3. System updates the event with the edit and displays information of the event edited.","lastModifiedDate":"2023-03-13"},{"lineNumber":704,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":705,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-13"},{"lineNumber":706,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":707,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-13"},{"lineNumber":708,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":709,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-13"},{"lineNumber":710,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":711,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":712,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-13"},{"lineNumber":713,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":714,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-13"},{"lineNumber":715,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":716,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":717,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-13"},{"lineNumber":718,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":719,"author":{"gitId":"EksdeeeX"},"content":"* 2c. User enters an invalid argument format.","lastModifiedDate":"2023-03-13"},{"lineNumber":720,"author":{"gitId":"EksdeeeX"},"content":"   * 2c1. System displays that the format is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":721,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":722,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-13"},{"lineNumber":723,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":724,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"glozxi"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-04"},{"lineNumber":728,"author":{"gitId":"glozxi"},"content":"3. Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-04"},{"lineNumber":729,"author":{"gitId":"glozxi"},"content":"4. Should be able to hold up to 1000 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-04"},{"lineNumber":730,"author":{"gitId":"glozxi"},"content":"5. The system should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2023-03-04"},{"lineNumber":731,"author":{"gitId":"glozxi"},"content":"6. The source code should be open source.","lastModifiedDate":"2023-03-04"},{"lineNumber":732,"author":{"gitId":"glozxi"},"content":"7. The product is offered as a free product.","lastModifiedDate":"2023-03-04"},{"lineNumber":733,"author":{"gitId":"glozxi"},"content":"8. The system should respond within two seconds for events and contacts up to 1000.","lastModifiedDate":"2023-03-17"},{"lineNumber":734,"author":{"gitId":"glozxi"},"content":"9. The user interface should be intuitive enough for users who are not as IT-savvy.","lastModifiedDate":"2023-03-04"},{"lineNumber":735,"author":{"gitId":"glozxi"},"content":"10. The dimensions should be at least `726px * 593px` so that it is readable for the user.","lastModifiedDate":"2023-03-04"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"EksdeeeX"},"content":"## Appendix: Instructions for manual testing","lastModifiedDate":"2023-03-07"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"glozxi"},"content":"### Deleting an event","lastModifiedDate":"2023-03-17"},{"lineNumber":770,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"EksdeeeX"},"content":"1. Prerequisites: List all events using the list command. Multiple events in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":772,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"EksdeeeX"},"content":"      Expected: First event is deleted from the list. Details of the deleted event shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"EksdeeeX"},"content":"      Expected: No event is deleted. Error details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":778,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"EksdeeeX"},"content":"### Adding an event","lastModifiedDate":"2023-03-26"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `newevent n/DJ at wedding r/100 a/311, Clementi Ave 2, #02-25 ds/11-03-2023 11:00 de/11-03-2023 17:00 t/friends t/dj`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":784,"author":{"gitId":"EksdeeeX"},"content":"      Expected: New event created. Details of event created shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":785,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `newevent n/ r/`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":787,"author":{"gitId":"EksdeeeX"},"content":"      Expected: No event is created. Error details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":790,"author":{"gitId":"EksdeeeX"},"content":"### Adding a contact","lastModifiedDate":"2023-03-26"},{"lineNumber":791,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":792,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `newcontact n/Deborah Tan p/91234567`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":793,"author":{"gitId":"EksdeeeX"},"content":"   Expected: New contact created. Details of contact created shown in status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":794,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":795,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `newcontact n/`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":796,"author":{"gitId":"EksdeeeX"},"content":"   Expected: No new contact created. Error details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":797,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":798,"author":{"gitId":"EksdeeeX"},"content":"### Link contact to Event","lastModifiedDate":"2023-03-26"},{"lineNumber":799,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":800,"author":{"gitId":"EksdeeeX"},"content":"1. Prerequisites: List all events using the list command. Multiple events in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":801,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":802,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `linkcontact 2 91234567`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":803,"author":{"gitId":"EksdeeeX"},"content":"   Expected: Contact linked to second event in the list. Details shown in status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":804,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":805,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `linkcontact 1`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":806,"author":{"gitId":"EksdeeeX"},"content":"   Expected: No contact linked. Error details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":807,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":808,"author":{"gitId":"EksdeeeX"},"content":"### Mark Event","lastModifiedDate":"2023-03-26"},{"lineNumber":809,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":810,"author":{"gitId":"EksdeeeX"},"content":"1. Prerequisites: List all events using the list command. Multiple events in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":811,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":812,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `mark 1`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":813,"author":{"gitId":"EksdeeeX"},"content":"   Expected: First event in the list is marked. Details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":814,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":815,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case:  `mark`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":816,"author":{"gitId":"EksdeeeX"},"content":"   Expected: No event marked. Error details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":817,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":818,"author":{"gitId":"EksdeeeX"},"content":"### Unmark Event","lastModifiedDate":"2023-03-26"},{"lineNumber":819,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":820,"author":{"gitId":"EksdeeeX"},"content":"1. Prerequisites: List all events using the list command. Multiple events in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":821,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":822,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `unmark 1`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":823,"author":{"gitId":"EksdeeeX"},"content":"   Expected: First event in the list is unmarked. Details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":824,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":825,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case:  `unmark`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":826,"author":{"gitId":"EksdeeeX"},"content":"   Expected: No event unmarked. Error details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":827,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":828,"author":{"gitId":"EksdeeeX"},"content":"### Edit an Event","lastModifiedDate":"2023-03-26"},{"lineNumber":829,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":830,"author":{"gitId":"EksdeeeX"},"content":"1. Prerequisites: List all events using the list command. Multiple events in the list.","lastModifiedDate":"2023-03-26"},{"lineNumber":831,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":832,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `edit 1 r/100`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":833,"author":{"gitId":"EksdeeeX"},"content":"   Expected: Rate of first event in the list is edited. Details shown in message bar.","lastModifiedDate":"2023-03-26"},{"lineNumber":834,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":835,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `edit`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":836,"author":{"gitId":"EksdeeeX"},"content":"   Expected: No event edited. Error details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":837,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":838,"author":{"gitId":"EksdeeeX"},"content":"### View upcoming Event","lastModifiedDate":"2023-03-26"},{"lineNumber":839,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":840,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `remind 2`\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":841,"author":{"gitId":"EksdeeeX"},"content":"   Expected: Events that start within 2 days will be displayed.","lastModifiedDate":"2023-03-26"},{"lineNumber":842,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":843,"author":{"gitId":"EksdeeeX"},"content":"   1. Test case: `remind -1` \u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":844,"author":{"gitId":"EksdeeeX"},"content":"   Expected: No filtered display shown. Error details shown in the status message.","lastModifiedDate":"2023-03-26"},{"lineNumber":845,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":846,"author":{"gitId":"EksdeeeX"},"content":"## Glossary","lastModifiedDate":"2023-03-26"},{"lineNumber":847,"author":{"gitId":"EksdeeeX"},"content":"* **Command Line Interface (CLI)**: A text-based user interface (UI) used to run programs, manage computer files and interact with the computer","lastModifiedDate":"2023-03-26"},{"lineNumber":848,"author":{"gitId":"EksdeeeX"},"content":"* **User Interface (UI)**: A form of user interface that allows users to interact with electronic devices through graphical icons","lastModifiedDate":"2023-03-26"},{"lineNumber":849,"author":{"gitId":"EksdeeeX"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2023-03-26"},{"lineNumber":850,"author":{"gitId":"EksdeeeX"},"content":"* **Event**: A freelancing gig","lastModifiedDate":"2023-03-26"},{"lineNumber":851,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":852,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"position: fixed; font-size: large; bottom: 25px; right: 50px; background-color: #d8d8d8\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":853,"author":{"gitId":"EksdeeeX"},"content":"  \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":854,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":855,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":856,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":857,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"EksdeeeX":356,"ExtraShotLatte":25,"glozxi":142,"bryansendeavour":17,"engenhui1999":52,"-":265}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"## Table of Contents","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"- [Setting up the project in your computer](#setting-up-the-project-in-your-computer)","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"- [Before writting code](#before-writing-code)","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. Run the `seedu.address.Main` and try a few commands.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [Paidlancerâ€™s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2023-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"EksdeeeX":4,"-":47}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":"![Ui](images/Logo.png)","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"Welcome to the Paidlancers User Guide! We\u0027re thrilled to have you here! At Paidlancers,","lastModifiedDate":"2023-03-21"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"we know that freelancing can be both rewarding and challenging. As freelancers ourselves, we understand the unique","lastModifiedDate":"2023-03-21"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"obstacles and opportunities that come with freelancing. That\u0027s why we created Paidlancers â€“ a desktop app","lastModifiedDate":"2023-03-21"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":"designed to help you streamline your freelancing event management tasks.","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"## Introducing Paidlancers","lastModifiedDate":"2023-03-21"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"Paidlancers is a **desktop app for keeping track of your freelancing events, optimised for use via a Command Line","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"ExtraShotLatte"},"content":"Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast,","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"This user guide will help you get up to speed in no time!","lastModifiedDate":"2023-03-21"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"## Table of Contents","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"- [Features](#features)","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"  \u003cdetails\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"    \u003csummary\u003eClick to expand\u003c/summary\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    * [Add a Contact](#add-a-contact)","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"    * [Clear all Events](#clear-all-events)","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    * [Create New Event](#create-new-event)","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    * [Delete an Event](#delete-an-event)","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    * [Edit an Event](#edit-an-event)","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"    * [Exit application](#exit-application)","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"    * [Find Event](#find-event)","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"    * [Link Contact to Event](#link-contact-to-event)","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"    * [List all Events](#list-all-events)","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"    * [Mark Event as Done](#mark-event)","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"    * [Unmark an Event](#unmark-event)","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"    * [View Total Revenue](#view-total-revenue)","lastModifiedDate":"2023-03-21"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    * [View Upcoming Events](#view-upcoming-events)","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"ExtraShotLatte"},"content":"    * [Saving data](#saving-data)","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"    \u003c/details\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"- [Features Summary](#features-summary)","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"## Using the examples in this Guide","lastModifiedDate":"2023-03-21"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"The examples given in this guide are formatted with the following conventions:","lastModifiedDate":"2023-03-21"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"`commandword PARAMETERS`","lastModifiedDate":"2023-03-21"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"**Command Word**","lastModifiedDate":"2023-03-21"},{"lineNumber":54,"author":{"gitId":"ExtraShotLatte"},"content":"- Command word is the first word in any command.","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"ExtraShotLatte"},"content":"- It is written in lowercase.","lastModifiedDate":"2023-03-21"},{"lineNumber":56,"author":{"gitId":"ExtraShotLatte"},"content":"- These include examples such as `linkcontact` or `edit`.","lastModifiedDate":"2023-03-21"},{"lineNumber":57,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":58,"author":{"gitId":"ExtraShotLatte"},"content":"**Parameters**","lastModifiedDate":"2023-03-21"},{"lineNumber":59,"author":{"gitId":"ExtraShotLatte"},"content":"- Parameters are the words that follow the command word.","lastModifiedDate":"2023-03-21"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"- Parameters are written in UPPERCASE.","lastModifiedDate":"2023-03-21"},{"lineNumber":61,"author":{"gitId":"ExtraShotLatte"},"content":"- These include examples such as `INDEX` or `PHONE`.","lastModifiedDate":"2023-03-21"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"- Parameters are meant to be replaced by the user with the relevant information.","lastModifiedDate":"2023-03-21"},{"lineNumber":63,"author":{"gitId":"ExtraShotLatte"},"content":"- All parameters are required unless wrapped with `[square brackets]`.","lastModifiedDate":"2023-03-21"},{"lineNumber":64,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":65,"author":{"gitId":"ExtraShotLatte"},"content":"**Example**","lastModifiedDate":"2023-03-21"},{"lineNumber":66,"author":{"gitId":"ExtraShotLatte"},"content":"- Examples are shown in the format `commandword parameters`.","lastModifiedDate":"2023-03-21"},{"lineNumber":67,"author":{"gitId":"ExtraShotLatte"},"content":"- This is followed by the expected outcome of the command.","lastModifiedDate":"2023-03-21"},{"lineNumber":68,"author":{"gitId":"ExtraShotLatte"},"content":"- These include examples such as `newcontact n/John Doe p/98765432`.","lastModifiedDate":"2023-03-21"},{"lineNumber":69,"author":{"gitId":"ExtraShotLatte"},"content":"- These are meant to be used as a reference for the user to see how the command should be formatted.","lastModifiedDate":"2023-03-21"},{"lineNumber":70,"author":{"gitId":"ExtraShotLatte"},"content":"- The expected action of this command is written behind.","lastModifiedDate":"2023-03-21"},{"lineNumber":71,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"ExtraShotLatte"},"content":"## User Interface","lastModifiedDate":"2023-03-27"},{"lineNumber":74,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":75,"author":{"gitId":"ExtraShotLatte"},"content":"At Paidlancers, we understand that time is money, and every second matters for freelancers.","lastModifiedDate":"2023-03-27"},{"lineNumber":76,"author":{"gitId":"ExtraShotLatte"},"content":"That\u0027s why we\u0027ve designed our app with a user interface (UI) that optimizes productivity, streamlines workflows,","lastModifiedDate":"2023-03-27"},{"lineNumber":77,"author":{"gitId":"ExtraShotLatte"},"content":"and ensures freelancers can get the most out of every moment.","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":79,"author":{"gitId":"ExtraShotLatte"},"content":"![Ui_Callout](images/Callout_UI.png)","lastModifiedDate":"2023-03-27"},{"lineNumber":80,"author":{"gitId":"ExtraShotLatte"},"content":"The UI is split into 4 main parts","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"ExtraShotLatte"},"content":"- Eventbook","lastModifiedDate":"2023-03-27"},{"lineNumber":82,"author":{"gitId":"ExtraShotLatte"},"content":"  - This is where the events that you specified are displayed. ","lastModifiedDate":"2023-03-27"},{"lineNumber":83,"author":{"gitId":"ExtraShotLatte"},"content":"- Contact","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"ExtraShotLatte"},"content":"  - This is where the contacts you have stored are displayed.","lastModifiedDate":"2023-03-27"},{"lineNumber":85,"author":{"gitId":"ExtraShotLatte"},"content":"- Message Box","lastModifiedDate":"2023-03-27"},{"lineNumber":86,"author":{"gitId":"ExtraShotLatte"},"content":"  - This is where the messages regarding the status of your commands are displayed.","lastModifiedDate":"2023-03-27"},{"lineNumber":87,"author":{"gitId":"ExtraShotLatte"},"content":"- Command Box","lastModifiedDate":"2023-03-27"},{"lineNumber":88,"author":{"gitId":"ExtraShotLatte"},"content":"  - This is where you can type in your commands.","lastModifiedDate":"2023-03-27"},{"lineNumber":89,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"ExtraShotLatte"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"ExtraShotLatte"},"content":"    * Mac Users are encouraged to use to use the Azul build of OpenJDK11 version found","lastModifiedDate":"2023-03-21"},{"lineNumber":95,"author":{"gitId":"ExtraShotLatte"},"content":"      [here](https://www.azul.com/downloads/?version\u003djava-11-lts\u0026os\u003dmacos\u0026architecture\u003darm-64-bit\u0026package\u003djdk-fx).","lastModifiedDate":"2023-03-21"},{"lineNumber":96,"author":{"gitId":"ExtraShotLatte"},"content":"    * Choose the `JDK FX` version and not any other version.","lastModifiedDate":"2023-03-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"ExtraShotLatte"},"content":"2. Download the latest `Paidlancers.jar` from [here](https://github.com/AY2223S2-CS2103T-T11-3/tp/releases).","lastModifiedDate":"2023-03-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"ExtraShotLatte"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for Paidlancers.","lastModifiedDate":"2023-03-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"ExtraShotLatte"},"content":"4. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar Paidlancers.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"ExtraShotLatte"},"content":"5. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-03-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    * `listcontact` : Lists all contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"    * `newcontact n/John Doe p/98765432` : Adds a contact named `John Doe` to the contact list.","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"EksdeeeX"},"content":"    * `delete 3` : Deletes the 3rd event shown in the current list.","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"ExtraShotLatte"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2023-03-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"ExtraShotLatte"},"content":"7. When you are ready to start, you can use the `clear` command to clear all the sample data.","lastModifiedDate":"2023-03-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":119,"author":{"gitId":"ExtraShotLatte"},"content":"8. Happy ~~free~~Paidlancing!","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"ExtraShotLatte"},"content":"[//]: # (Perhaps we could explain the difference between event and contact here?)","lastModifiedDate":"2023-03-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"engenhui1999"},"content":"### Add a Contact: `newcontact` \u003ca id \u003d \"add-a-contact\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"engenhui1999"},"content":"Adding a contact to contacts","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"**Format**: `newcontact n/NAME p/NUMBER`","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"- Creates a new contact with specified `NAME` and `NUMBER`","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"- `newcontact n/Deborah Tan p/91234567`","lastModifiedDate":"2023-03-03"},{"lineNumber":136,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will create a new contact named `Deborah Tan` with phone number `91234567`.","lastModifiedDate":"2023-03-21"},{"lineNumber":137,"author":{"gitId":"ExtraShotLatte"},"content":"- `newcontact n/Tan Jun Wei p/82828234`","lastModifiedDate":"2023-03-21"},{"lineNumber":138,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will create a new contact named `Tan Jun Wei` with phone number `82828234`.","lastModifiedDate":"2023-03-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"ExtraShotLatte"},"content":"### Clear all Events: `clear` \u003ca id \u003d \"clear-all-events\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":142,"author":{"gitId":"ExtraShotLatte"},"content":"Clears all events in Paidlancers.","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"ExtraShotLatte"},"content":"**Format**: `clear`","lastModifiedDate":"2023-03-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":146,"author":{"gitId":"ExtraShotLatte"},"content":"- Clears all events in the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":148,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: Caution:","lastModifiedDate":"2023-03-27"},{"lineNumber":149,"author":{"gitId":"ExtraShotLatte"},"content":"This is a destructive command. Once you clear all events, there is no way to recover them!","lastModifiedDate":"2023-03-27"},{"lineNumber":150,"author":{"gitId":"ExtraShotLatte"},"content":"Please be careful when using this command.","lastModifiedDate":"2023-03-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":153,"author":{"gitId":"ExtraShotLatte"},"content":"### Create new Event: `newevent` \u003ca id \u003d \"create-new-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":155,"author":{"gitId":"ExtraShotLatte"},"content":"Creates a new event","lastModifiedDate":"2023-03-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":157,"author":{"gitId":"ExtraShotLatte"},"content":"**Format**: `newevent n/NAME r/rate a/ADDRESS ds/START_TIME de/END_TIME [t/TAG]â€¦`","lastModifiedDate":"2023-03-27"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":159,"author":{"gitId":"ExtraShotLatte"},"content":"- Both `START_TIME` and `END_TIME` must have the format `dd-MM-yyyy HH:mm`.","lastModifiedDate":"2023-03-27"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":161,"author":{"gitId":"ExtraShotLatte"},"content":"**Example**:","lastModifiedDate":"2023-03-27"},{"lineNumber":162,"author":{"gitId":"ExtraShotLatte"},"content":"- `newevent n/DJ at wedding r/100 a/311, Clementi Ave 2, #02-25 ds/11-03-2023 11:00 de/11-03-2023 17:00 t/friends t/dj`","lastModifiedDate":"2023-03-27"},{"lineNumber":163,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will create a new event named `DJ at wedding` with rate `100` at address `311, Clementi Ave 2, #02-25` from `11-03-2023 11:00` to `11-03-2023 17:00` with tags `friends` and `dj`.","lastModifiedDate":"2023-03-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":165,"author":{"gitId":"ExtraShotLatte"},"content":"### Delete an Event: `delete` \u003ca id \u003d \"delete-an-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":167,"author":{"gitId":"ExtraShotLatte"},"content":"Deletes the specified event from the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":169,"author":{"gitId":"ExtraShotLatte"},"content":"**Format**: `delete INDEX`","lastModifiedDate":"2023-03-27"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"ExtraShotLatte"},"content":"- Deletes the event at the specified `INDEX`","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `INDEX` refers to the index number shown in the displayed event list.","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦","lastModifiedDate":"2023-03-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":177,"author":{"gitId":"ExtraShotLatte"},"content":"- `delete 2`","lastModifiedDate":"2023-03-27"},{"lineNumber":178,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will delete the 2nd event in the event list.","lastModifiedDate":"2023-03-27"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":180,"author":{"gitId":"ExtraShotLatte"},"content":"### Edit an Event: `edit` \u003ca id \u003d \"edit-an-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":182,"author":{"gitId":"ExtraShotLatte"},"content":"Edits the specified event from the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"ExtraShotLatte"},"content":"**Format**: `edit INDEX [n/NAME] [r/RATE] [a/ADDRESS] [ds/TIMING] [de/TIMING] [t/TAG]...`","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":186,"author":{"gitId":"ExtraShotLatte"},"content":"- Edits the event at the specified `INDEX`","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `INDEX` refers to the index number shown in the displayed event list.","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"ExtraShotLatte"},"content":"  - `[]` are optional parameters.","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"ExtraShotLatte"},"content":"  - At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"ExtraShotLatte"},"content":"  - Edits will replace existing values, edits are not cumulative.","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"ExtraShotLatte"},"content":"  - Tags can be removed by typing `t/` without specifying any tags after it.","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"ExtraShotLatte"},"content":"  - Do note that `edit` is only for editing the event details, not the contact details.","lastModifiedDate":"2023-03-27"},{"lineNumber":195,"author":{"gitId":"ExtraShotLatte"},"content":"  - To link the event to a new contact, consider using [`linkcontact`](#link-contact-to-event) instead.","lastModifiedDate":"2023-03-27"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":197,"author":{"gitId":"ExtraShotLatte"},"content":"**Example**:","lastModifiedDate":"2023-03-27"},{"lineNumber":198,"author":{"gitId":"ExtraShotLatte"},"content":"- `edit 1 r/100`","lastModifiedDate":"2023-03-27"},{"lineNumber":199,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will edit the rate of the 1st event to be `100`.","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"ExtraShotLatte"},"content":"- `edit 2 n/Wedding Dinner t/`","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will edit the name of the 2nd event to be `Wedding Dinner` and remove all tags.","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"ExtraShotLatte"},"content":"- `edit 1 n/Wedding Lunch`","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will edit the name of the 1st event to be `Wedding Lunch`.","lastModifiedDate":"2023-03-27"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":205,"author":{"gitId":"ExtraShotLatte"},"content":"### Exit application: `exit` \u003ca id \u003d \"exit-application\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":207,"author":{"gitId":"ExtraShotLatte"},"content":"Closes Paidlancers.","lastModifiedDate":"2023-03-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":209,"author":{"gitId":"ExtraShotLatte"},"content":"**Format**: `exit`","lastModifiedDate":"2023-03-27"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":211,"author":{"gitId":"ExtraShotLatte"},"content":"- Close the application.","lastModifiedDate":"2023-03-27"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":213,"author":{"gitId":"ExtraShotLatte"},"content":"### Find Event: `find` \u003ca id \u003d \"find-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":215,"author":{"gitId":"ExtraShotLatte"},"content":"Finds event(s) from the event book based on the given search string.","lastModifiedDate":"2023-03-27"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":217,"author":{"gitId":"ExtraShotLatte"},"content":"**Format**: `find KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2023-03-27"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":219,"author":{"gitId":"ExtraShotLatte"},"content":"- Finds the event using the specified `KEYWORD`","lastModifiedDate":"2023-03-27"},{"lineNumber":220,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `KEYWORD` refers to the string to search the event list for.","lastModifiedDate":"2023-03-27"},{"lineNumber":221,"author":{"gitId":"ExtraShotLatte"},"content":"  - `[]` are optional parameters.","lastModifiedDate":"2023-03-27"},{"lineNumber":222,"author":{"gitId":"ExtraShotLatte"},"content":"  - `find` will return all events that contain the `KEYWORD` in their name.","lastModifiedDate":"2023-03-27"},{"lineNumber":223,"author":{"gitId":"ExtraShotLatte"},"content":"  - `find` is case-insensitive.","lastModifiedDate":"2023-03-27"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":225,"author":{"gitId":"ExtraShotLatte"},"content":"**Example**:","lastModifiedDate":"2023-03-27"},{"lineNumber":226,"author":{"gitId":"ExtraShotLatte"},"content":"- `find wedding`","lastModifiedDate":"2023-03-27"},{"lineNumber":227,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will find and list all events that contains \u0027wedding\u0027 in its name.","lastModifiedDate":"2023-03-27"},{"lineNumber":228,"author":{"gitId":"ExtraShotLatte"},"content":"- `find wedding dinner`","lastModifiedDate":"2023-03-27"},{"lineNumber":229,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will find and list all events that contains \u0027wedding\u0027 or \u0027dinner\u0027 in its name.","lastModifiedDate":"2023-03-27"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":231,"author":{"gitId":"ExtraShotLatte"},"content":"### Link Contact to Event: `linkcontact` \u003ca id \u003d \"link-contact-to-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":233,"author":{"gitId":"ExtraShotLatte"},"content":"Links client contact to an event.","lastModifiedDate":"2023-03-27"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":235,"author":{"gitId":"ExtraShotLatte"},"content":"**Format**: `linkcontact INDEX PHONE`","lastModifiedDate":"2023-03-27"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":237,"author":{"gitId":"ExtraShotLatte"},"content":"- Links contact using `PHONE` to the event at the specified `INDEX`.","lastModifiedDate":"2023-03-27"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":239,"author":{"gitId":"bryansendeavour"},"content":"  - The `INDEX` refers to the index number in the displayed events list.","lastModifiedDate":"2023-03-03"},{"lineNumber":240,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦","lastModifiedDate":"2023-03-21"},{"lineNumber":241,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `PHONE` must be a valid phone number in the contact list.","lastModifiedDate":"2023-03-27"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":243,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":244,"author":{"gitId":"ExtraShotLatte"},"content":"- `linkcontact 2 91234567`","lastModifiedDate":"2023-03-27"},{"lineNumber":245,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will link the contact with phone number `91234567` to the 2nd event in the event list.","lastModifiedDate":"2023-03-27"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":247,"author":{"gitId":"ExtraShotLatte"},"content":"### List all Events: `list` \u003ca id \u003d \"list-all-events\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":249,"author":{"gitId":"ExtraShotLatte"},"content":"Shows a list of all events in Paidlancers","lastModifiedDate":"2023-03-27"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":251,"author":{"gitId":"ExtraShotLatte"},"content":"**Format**: `list`","lastModifiedDate":"2023-03-27"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":253,"author":{"gitId":"ExtraShotLatte"},"content":"- List down the events in the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":255,"author":{"gitId":"engenhui1999"},"content":"### Mark Event as Done: `mark` \u003ca id \u003d \"mark-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":257,"author":{"gitId":"EksdeeeX"},"content":"Marks a specified event in Paidlancers as done.","lastModifiedDate":"2023-03-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":259,"author":{"gitId":"bryansendeavour"},"content":"**Format**: `mark INDEX`","lastModifiedDate":"2023-03-03"},{"lineNumber":260,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":261,"author":{"gitId":"bryansendeavour"},"content":"- Marks the event at the specified `INDEX` as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":262,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":263,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `INDEX` refers to the index number in the displayed events list.","lastModifiedDate":"2023-03-21"},{"lineNumber":264,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦","lastModifiedDate":"2023-03-21"},{"lineNumber":265,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":266,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":267,"author":{"gitId":"ExtraShotLatte"},"content":"- `mark 2`","lastModifiedDate":"2023-03-21"},{"lineNumber":268,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will mark the 2nd event in the event list as done.","lastModifiedDate":"2023-03-21"},{"lineNumber":269,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":270,"author":{"gitId":"EksdeeeX"},"content":"### Unmark an Event: `unmark` \u003ca id \u003d \"unmark-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":271,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":272,"author":{"gitId":"EksdeeeX"},"content":"Unmarks a specified event in Paidlancers.","lastModifiedDate":"2023-03-17"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":274,"author":{"gitId":"EksdeeeX"},"content":"**Format**: `unmark INDEX`","lastModifiedDate":"2023-03-17"},{"lineNumber":275,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":276,"author":{"gitId":"EksdeeeX"},"content":"- Unmarks the event at the specified `INDEX`.","lastModifiedDate":"2023-03-17"},{"lineNumber":277,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `INDEX` refers to the index number in the displayed events list.","lastModifiedDate":"2023-03-21"},{"lineNumber":278,"author":{"gitId":"ExtraShotLatte"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦","lastModifiedDate":"2023-03-21"},{"lineNumber":279,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":280,"author":{"gitId":"EksdeeeX"},"content":"**Example**:","lastModifiedDate":"2023-03-17"},{"lineNumber":281,"author":{"gitId":"ExtraShotLatte"},"content":"- `unmark 2`","lastModifiedDate":"2023-03-21"},{"lineNumber":282,"author":{"gitId":"ExtraShotLatte"},"content":"  - This command will unmark the 2nd event in the event list.","lastModifiedDate":"2023-03-21"},{"lineNumber":283,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":284,"author":{"gitId":"engenhui1999"},"content":"### View Total Revenue: `revenue` \u003ca id \u003d \"view-total-revenue\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":285,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":286,"author":{"gitId":"engenhui1999"},"content":"Calculates and displays the total revenue based on all the completed events.","lastModifiedDate":"2023-03-21"},{"lineNumber":287,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":288,"author":{"gitId":"engenhui1999"},"content":"**Format**: `revenue`","lastModifiedDate":"2023-03-21"},{"lineNumber":289,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":290,"author":{"gitId":"engenhui1999"},"content":"- Displays the total revenue.","lastModifiedDate":"2023-03-27"},{"lineNumber":291,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":292,"author":{"gitId":"glozxi"},"content":"### View Upcoming Events: `remind` \u003ca id \u003d \"view-upcoming-events\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-22"},{"lineNumber":293,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":294,"author":{"gitId":"glozxi"},"content":"Displays events that start within a specified number of days.","lastModifiedDate":"2023-03-22"},{"lineNumber":295,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":296,"author":{"gitId":"glozxi"},"content":"**Format**: `remind DAYS`","lastModifiedDate":"2023-03-22"},{"lineNumber":297,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":298,"author":{"gitId":"glozxi"},"content":"- Displays events that start within the specified number of `DAYS`.","lastModifiedDate":"2023-03-22"},{"lineNumber":299,"author":{"gitId":"glozxi"},"content":"  - `DAYS` must be a positive integer 1, 2, 3, â€¦","lastModifiedDate":"2023-03-22"},{"lineNumber":300,"author":{"gitId":"glozxi"},"content":"  - Only events that start after the current date and time will be displayed.","lastModifiedDate":"2023-03-22"},{"lineNumber":301,"author":{"gitId":"glozxi"},"content":"  - The number of days to an event are the days from today\u0027s date to the event\u0027s start date. Their times are not considered.","lastModifiedDate":"2023-03-22"},{"lineNumber":302,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":303,"author":{"gitId":"glozxi"},"content":"**Example**:","lastModifiedDate":"2023-03-22"},{"lineNumber":304,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":305,"author":{"gitId":"glozxi"},"content":"Assume the current date and time is 22-03-2023 11:00.","lastModifiedDate":"2023-03-22"},{"lineNumber":306,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":307,"author":{"gitId":"glozxi"},"content":"- `remind 2`","lastModifiedDate":"2023-03-22"},{"lineNumber":308,"author":{"gitId":"glozxi"},"content":"  - Events that start within 2 days will be displayed. These are events that start on:","lastModifiedDate":"2023-03-22"},{"lineNumber":309,"author":{"gitId":"glozxi"},"content":"    * 22-03-2023 after 11:00","lastModifiedDate":"2023-03-22"},{"lineNumber":310,"author":{"gitId":"glozxi"},"content":"    * 23-03-2023 the whole day","lastModifiedDate":"2023-03-22"},{"lineNumber":311,"author":{"gitId":"glozxi"},"content":"    * 24-03-2023 the whole day","lastModifiedDate":"2023-03-22"},{"lineNumber":312,"author":{"gitId":"glozxi"},"content":"  - Note that 24-03-2023 is within 2 days of 22-03-2023, so events on 24-03-2023 that start more than 48 hours from the current date and time are displayed.","lastModifiedDate":"2023-03-25"},{"lineNumber":313,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":314,"author":{"gitId":"ExtraShotLatte"},"content":"### Saving data: `revenue` \u003ca id \u003d \"saving-data\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":315,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":316,"author":{"gitId":"ExtraShotLatte"},"content":"Paidlancers data are saved in the hard disk automatically on command issue. There is no need to save manually.","lastModifiedDate":"2023-03-21"},{"lineNumber":317,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":319,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-21"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":321,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-02-27"},{"lineNumber":322,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":323,"author":{"gitId":"ExtraShotLatte"},"content":"**Q**: How do I transfer my data to another Computer?","lastModifiedDate":"2023-03-27"},{"lineNumber":324,"author":{"gitId":"ExtraShotLatte"},"content":"1. Follow the quickstart guide until step 3.","lastModifiedDate":"2023-03-27"},{"lineNumber":325,"author":{"gitId":"ExtraShotLatte"},"content":"2. In the same _home folder_ as your Paidlancers, copy the old data folder from your old computer to the new computer.","lastModifiedDate":"2023-03-27"},{"lineNumber":326,"author":{"gitId":"ExtraShotLatte"},"content":"   - Your _home folder_ should contain the following files and folders:","lastModifiedDate":"2023-03-27"},{"lineNumber":327,"author":{"gitId":"ExtraShotLatte"},"content":"    ```    ","lastModifiedDate":"2023-03-27"},{"lineNumber":328,"author":{"gitId":"ExtraShotLatte"},"content":"       Paidlancers.jar","lastModifiedDate":"2023-03-27"},{"lineNumber":329,"author":{"gitId":"ExtraShotLatte"},"content":"       data/","lastModifiedDate":"2023-03-27"},{"lineNumber":330,"author":{"gitId":"ExtraShotLatte"},"content":"           contactlist.json","lastModifiedDate":"2023-03-27"},{"lineNumber":331,"author":{"gitId":"ExtraShotLatte"},"content":"           eventbook.json","lastModifiedDate":"2023-03-27"},{"lineNumber":332,"author":{"gitId":"ExtraShotLatte"},"content":"    ```","lastModifiedDate":"2023-03-27"},{"lineNumber":333,"author":{"gitId":"ExtraShotLatte"},"content":"3. Run the jar file as per usual!","lastModifiedDate":"2023-03-27"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":335,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2023-03-21"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-21"},{"lineNumber":337,"author":{"gitId":"ExtraShotLatte"},"content":"## Features Summary","lastModifiedDate":"2023-03-27"},{"lineNumber":338,"author":{"gitId":"ExtraShotLatte"},"content":"|                    Features                     |                                Features Format                                |                                                     Example Usage                                                     |","lastModifiedDate":"2023-03-27"},{"lineNumber":339,"author":{"gitId":"ExtraShotLatte"},"content":"|:-----------------------------------------------:|:-----------------------------------------------------------------------------:|:---------------------------------------------------------------------------------------------------------------------:|","lastModifiedDate":"2023-03-27"},{"lineNumber":340,"author":{"gitId":"engenhui1999"},"content":"|         [Add a Contact](#add-a-contact)         |                         `newcontact n/NAME p/NUMBER`                          |                                         `newcontact n/Deborah Tan p/91234567`                                         |","lastModifiedDate":"2023-03-03"},{"lineNumber":341,"author":{"gitId":"ExtraShotLatte"},"content":"|      [Clear all Events](#clear-all-events)      |                                    `clear`                                    |                                                        `clear`                                                        |","lastModifiedDate":"2023-03-27"},{"lineNumber":342,"author":{"gitId":"ExtraShotLatte"},"content":"|      [Create New Event](#create-new-event)      |     `newevent n/NAME p/rate a/ADDRESS ds/START_TIME de/END_TIME [t/TAG]â€¦`     | `newevent n/DJ at wedding p/100 a/311, Clementi Ave 2, #02-25 ds/11-03-2023 11:00 de/11-03-2023 17:00 t/friends t/dj` |","lastModifiedDate":"2023-03-27"},{"lineNumber":343,"author":{"gitId":"EksdeeeX"},"content":"|       [Delete an Event](#delete-an-event)       |                                `delete INDEX`                                 |                                                      `delete 2`                                                       |","lastModifiedDate":"2023-03-13"},{"lineNumber":344,"author":{"gitId":"EksdeeeX"},"content":"|         [Edit an Event](#edit-an-event)         | `edit INDEX [n/NAME] [r/RATE] [a/ADDRESS] [ds/TIMING] [de/TIMING] [t/TAG]...` |                                                    `edit 2 r/100`                                                     |","lastModifiedDate":"2023-03-13"},{"lineNumber":345,"author":{"gitId":"ExtraShotLatte"},"content":"|      [Exit application](#exit-application)      |                                    `exit`                                     |                                                        `exit`                                                         |","lastModifiedDate":"2023-03-27"},{"lineNumber":346,"author":{"gitId":"ExtraShotLatte"},"content":"|            [Find Event](#find-event)            |                        `find KEYWORD [MORE_KEYWORDS]`                         |                                                 `find wedding dinner`                                                 |","lastModifiedDate":"2023-03-27"},{"lineNumber":347,"author":{"gitId":"ExtraShotLatte"},"content":"| [Link Contact to Event](#link-contact-to-event) |                          `linkcontact INDEX CONTACT`                          |                                               `linkcontact 2 91234567`                                                |","lastModifiedDate":"2023-03-27"},{"lineNumber":348,"author":{"gitId":"ExtraShotLatte"},"content":"|       [List all Events](#list-all-events)       |                                    `list`                                     |                                                        `list`                                                         |","lastModifiedDate":"2023-03-27"},{"lineNumber":349,"author":{"gitId":"ExtraShotLatte"},"content":"|        [Mark Event as Done](#mark-event)        |                                 `mark INDEX`                                  |                                                       `mark 2`                                                        |","lastModifiedDate":"2023-03-27"},{"lineNumber":350,"author":{"gitId":"ExtraShotLatte"},"content":"|        [Unmark an Event](#unmark-event)         |                                `unmark INDEX`                                 |                                                      `unmark 2`                                                       |","lastModifiedDate":"2023-03-27"},{"lineNumber":351,"author":{"gitId":"engenhui1999"},"content":"|    [View Total Revenue](#view-total-revenue)    |                                   `revenue`                                   |                                                       `revenue`                                                       |","lastModifiedDate":"2023-03-21"},{"lineNumber":352,"author":{"gitId":"glozxi"},"content":"|  [View Upcoming Events](#view-upcoming-events)  |                                 `remind DAYS`                                 |                                                      `remind 2`                                                       |","lastModifiedDate":"2023-03-25"},{"lineNumber":353,"author":{"gitId":"ExtraShotLatte"},"content":"|           [Saving data](#saving-data)           |                                      NIL                                      |                                                          NIL                                                          |","lastModifiedDate":"2023-03-27"},{"lineNumber":354,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":355,"author":{"gitId":"EksdeeeX"},"content":"\u003cdiv style\u003d\"position: fixed; font-size: large; bottom: 25px; right: 50px; background-color: #d8d8d8\"\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":356,"author":{"gitId":"EksdeeeX"},"content":"  \u003ca href\u003d\"#top\"\u003eBack to top\u003c/a\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":357,"author":{"gitId":"EksdeeeX"},"content":"\u003c/div\u003e","lastModifiedDate":"2023-03-26"},{"lineNumber":358,"author":{"gitId":"EksdeeeX"},"content":"\u003cbr\u003e","lastModifiedDate":"2023-03-26"}],"authorContributionMap":{"ExtraShotLatte":185,"EksdeeeX":21,"glozxi":25,"bryansendeavour":15,"engenhui1999":23,"-":89}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"glozxi"},"content":"    content: \"Paidlancers\";","lastModifiedDate":"2023-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"glozxi":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"user -[USER_COLOR]\u003e ui : \"delete 1\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"logic -[LOGIC_COLOR]\u003e model : deleteEvent(p)","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveEventBook(eventBook)","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"glozxi":2,"-":36}},{"path":"docs/diagrams/ContactClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"@startuml","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"!include style.puml","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"Class Contact","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"Class ContactName","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"Class ContactPhone","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"HiddenOutside ..\u003e Contact","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"Contact *--\u003e ContactName","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"Contact *--\u003e ContactPhone","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"@enduml","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"EksdeeeX":20}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"participant \":EventBookParser\" as EventBookParser LOGIC_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(\"delete 1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"LogicManager -\u003e EventBookParser : parseCommand(\"delete 1\")","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"activate EventBookParser","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"EventBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"DeleteCommandParser --\u003e EventBookParser","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"EventBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"DeleteCommandParser --\u003e EventBookParser : d","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"DeleteCommandParser -[hidden]-\u003e EventBookParser","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"EventBookParser --\u003e LogicManager : d","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"deactivate EventBookParser","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"DeleteCommand -\u003e Model : deleteEvent(1)","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EksdeeeX":10,"glozxi":1,"-":58}},{"path":"docs/diagrams/EventClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"@startuml","lastModifiedDate":"2023-03-25"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"!include style.puml","lastModifiedDate":"2023-03-25"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-25"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2023-03-25"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2023-03-25"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"Class Event","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"Class Address","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"Class Mark","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"Class Name","lastModifiedDate":"2023-03-25"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"Class Tag","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"Class Rate","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"Class Time","lastModifiedDate":"2023-03-25"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"Class Contact","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"HiddenOutside ..\u003e Event","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"Event *--\u003e Name","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"Event *--\u003e Mark","lastModifiedDate":"2023-03-25"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"Event *--\u003e Address","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"Event *--\u003e \"*\" Tag","lastModifiedDate":"2023-03-25"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"Event *--\u003e Rate","lastModifiedDate":"2023-03-25"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"Event *--\u003e Time","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"Event *--\u003e Contact","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"@enduml","lastModifiedDate":"2023-03-25"}],"authorContributionMap":{"EksdeeeX":30}},{"path":"docs/diagrams/LinkContactActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ExtraShotLatte"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ExtraShotLatte"},"content":"start","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"ExtraShotLatte"},"content":":User executes command;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ExtraShotLatte"},"content":":Get event from index;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"ExtraShotLatte"},"content":"if() then ([invalid index])","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":":Show error message;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"ExtraShotLatte"},"content":"stop","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"else([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":":Get contact using contact number;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"if() then ([contact not found])","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":":Show error message;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"stop","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"else([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":":Link contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"stop","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"ExtraShotLatte"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"ExtraShotLatte":16}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"Class EventBookParser","lastModifiedDate":"2023-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nLogic\" as Logic","lastModifiedDate":"2022-01-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"LogicManager -right-\u003e\"1\" EventBookParser","lastModifiedDate":"2023-03-25"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"EventBookParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EksdeeeX":3,"-":43}},{"path":"docs/diagrams/MarkActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"start","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":":User executes command;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"if () then ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"    :Mark event;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"else ([is marked])","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"endif","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":":Display details;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"stop","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"engenhui1999":11}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyEventBook\" as ReadOnlyEventBook","lastModifiedDate":"2023-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyUserPrefs\" as ReadOnlyUserPrefs","lastModifiedDate":"2022-01-03"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nReadOnlyContactList\" as ReadOnlyConatctList","lastModifiedDate":"2023-03-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nModel\" as Model","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"Class EventBook","lastModifiedDate":"2023-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"Class ContactList","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"Class Contact","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"Class UniqueEventList","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"Class Event","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"Class UniqueContactList","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"EventBook .up.|\u003e ReadOnlyEventBook","lastModifiedDate":"2023-03-25"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"ContactList .up.|\u003e ReadOnlyConatctList","lastModifiedDate":"2023-03-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"Model .left.\u003e ReadOnlyEventBook","lastModifiedDate":"2023-03-25"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"Model .\u003e ReadOnlyConatctList","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"ModelManager -\u003e \"1\" EventBook","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"ModelManager -\u003e \"1\" ContactList","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"ContactList *--\u003e \"1\" UniqueContactList","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"UniqueContactList --\u003e \"     ~* all\" Contact","lastModifiedDate":"2023-03-25"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"EventBook *--\u003e \"1\" UniqueEventList","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"UniqueEventList --\u003e \"~* all\" Event","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"Event *--\u003e \"0..1  \" Contact","lastModifiedDate":"2023-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"ModelManager --\u003e\"~* filtered\" Event","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EksdeeeX":19,"glozxi":4,"-":27}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nParser\" as Parser","lastModifiedDate":"2022-01-03"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"Class EventBookParser","lastModifiedDate":"2023-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"HiddenOutside ..\u003e EventBookParser","lastModifiedDate":"2023-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"EventBookParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"EventBookParser ..\u003e Command : returns \u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"EksdeeeX":4,"-":34}},{"path":"docs/diagrams/RemindObjectDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glozxi"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"!include style.puml","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"Object \"\u003cu\u003e:Clock\u003c/u\u003e\" as Clock","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"Object \"\u003cu\u003e:EventBookParser\u003c/u\u003e\" as EventBookParser","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"Object \"\u003cu\u003e:RemindCommandParser\u003c/u\u003e\" as RemindCommandParser","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"Object \"\u003cu\u003e:LogicManager\u003c/u\u003e\" as LogicManager","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"Object \"\u003cu\u003e:StartTimeWithinDaysPredicate\u003c/u\u003e\" as StartTimeWithinDaysPredicate","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"Object \"\u003cu\u003e:RemindCommand\u003c/u\u003e\" as RemindCommand","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"LogicManager -up-\u003e \"1\" EventBookParser","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"EventBookParser -up-\u003e \"1\" Clock","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"RemindCommandParser -up-\u003e \"1\" Clock","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"StartTimeWithinDaysPredicate -up-\u003e \"1\" Clock","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"RemindCommand -up-\u003e \"1\" StartTimeWithinDaysPredicate","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"glozxi":20}},{"path":"docs/diagrams/RevenueActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"start","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":":User executes command;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":":Filter events that are marked;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"if () then ([no events are marked])","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"    :display 0.00;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"else ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"    :calculate total revenue;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"    :display revenue;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"endif","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"stop","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"engenhui1999":12}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUserPrefsStorage\" as UserPrefsStorage","lastModifiedDate":"2022-01-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nStorage\" as Storage","lastModifiedDate":"2022-01-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"package \"EventBook Storage\" #F4F6F6{","lastModifiedDate":"2023-03-25"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nEventBookStorage\" as EventBookStorage","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"Class JsonEventBookStorage","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"Class JsonSerializableEventBook","lastModifiedDate":"2023-03-25"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"Class JsonAdaptedEvent","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"StorageManager -up-\u003e \"1\" EventBookStorage","lastModifiedDate":"2023-03-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"Storage -right-|\u003e EventBookStorage","lastModifiedDate":"2023-03-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"JsonEventBookStorage .up.|\u003e EventBookStorage","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"JsonEventBookStorage ..\u003e JsonSerializableEventBook","lastModifiedDate":"2023-03-25"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"JsonSerializableEventBook --\u003e \"*\" JsonAdaptedEvent","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"JsonAdaptedEvent --\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EksdeeeX":9,"glozxi":2,"-":32}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class \"\u003c\u003cinterface\u003e\u003e\\nUi\" as Ui","lastModifiedDate":"2022-01-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"Class EventListPanel","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"Class EventCard","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"Class ContactListPanel","lastModifiedDate":"2023-03-25"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"Class ContactCard","lastModifiedDate":"2023-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"MainWindow *-down-\u003e \"1\" EventListPanel","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"MainWindow *-down-\u003e \"1\" ContactListPanel","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"EventListPanel -down-\u003e \"*\" EventCard","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"ContactListPanel -down-\u003e \"*\" ContactCard","lastModifiedDate":"2023-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"EventListPanel --|\u003e UiPart","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"EventCard --|\u003e UiPart","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"ContactCard --|\u003e UiPart","lastModifiedDate":"2023-03-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"ContactCard ..\u003e Model","lastModifiedDate":"2023-03-25"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"EventCard ..\u003e Model","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"EventListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EksdeeeX":6,"glozxi":8,"-":52}},{"path":"docs/diagrams/UnmarkActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"@startuml","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"start","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":":User executes command;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"if () then ([is marked])","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"    :Unmark event;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"else ([else])","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"endif","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":":Display details;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"stop","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"@enduml","lastModifiedDate":"2023-03-27"}],"authorContributionMap":{"EksdeeeX":11}},{"path":"docs/diagrams/style.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"/\u0027","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":" \u0027Commonly used styles and colors across diagrams.","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":" \u0027Refer to https://plantuml-documentation.readthedocs.io/en/latest for a more","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":" \u0027comprehensive list of skinparams.","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":" \u0027/","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u0027T1 through T4 are shades of the original color from lightest to darkest","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"!define UI_COLOR #1D8900","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"!define UI_COLOR_T1 #83E769","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"!define UI_COLOR_T2 #3FC71B","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"!define UI_COLOR_T3 #166800","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"!define UI_COLOR_T4 #0E4100","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR #3333C4","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T1 #C8C8FA","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T2 #6A6ADC","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T3 #1616B0","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"!define LOGIC_COLOR_T4 #101086","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"!define MODEL_COLOR #9D0012","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T1 #F97181","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T2 #E41F36","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T3 #7B000E","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"!define MODEL_COLOR_T4 #51000A","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR #A38300","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T1 #FFE374","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #EDC520","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T3 #806600","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"!define STORAGE_COLOR_T2 #544400","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"!define USER_COLOR #9900ff","lastModifiedDate":"2023-03-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"skinparam BackgroundColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"skinparam Class {","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    FontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    BorderThickness 1","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    BorderColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    StereotypeFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"skinparam Actor {","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    BorderColor USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"    Color #000000","lastModifiedDate":"2023-03-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"skinparam Sequence {","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    MessageAlign center","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    BoxFontSize 15","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    BoxPadding 0","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    BoxFontColor #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    FontName Arial","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"skinparam Participant {","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    FontColor #FFFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    Padding 20","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"skinparam MinClassWidth 50","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"skinparam ParticipantPadding 10","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"skinparam Shadowing false","lastModifiedDate":"2019-07-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"skinparam DefaultTextAlignment center","lastModifiedDate":"2019-07-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"skinparam packageStyle Rectangle","lastModifiedDate":"2019-07-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"hide footbox","lastModifiedDate":"2019-07-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"hide members","lastModifiedDate":"2019-07-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"hide circle","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"EksdeeeX":2,"-":73}},{"path":"docs/diagrams/tracing/LogicSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-06-17"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include ../style.puml","lastModifiedDate":"2019-06-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Participant \":LogicManager\" as logic LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":AddressBookParser\" as abp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":EditCommandParser\" as ecp LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \"command:EditCommand\" as ec LOGIC_COLOR","lastModifiedDate":"2019-06-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[-\u003e logic : execute","lastModifiedDate":"2019-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"activate logic","lastModifiedDate":"2019-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"logic -\u003e abp ++: parseCommand(commandText)","lastModifiedDate":"2019-06-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"create ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"abp -\u003e ecp","lastModifiedDate":"2019-06-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"abp -\u003e ecp ++: parse(arguments)","lastModifiedDate":"2019-06-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"create ec","lastModifiedDate":"2019-06-17"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"ecp -\u003e ec ++: index, editEventDescriptor","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"ec --\u003e ecp --","lastModifiedDate":"2019-06-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"ecp --\u003e abp --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"abp --\u003e logic --: command","lastModifiedDate":"2019-06-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-06-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-06-17"}],"authorContributionMap":{"glozxi":1,"-":20}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"title: Paidlancers","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T11-3/tp/actions)","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T11-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-T11-3/tp)","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"**Paidlancers is a desktop application for managing and planning your events.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"* If you are interested in using Paidlancers, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"* If you are interested about developing Paidlancers, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bryansendeavour":6,"-":13}},{"path":"docs/team/bryansendeavour.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"title: Bryan Ong\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"Paidlancers is a desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbryansendeavour\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"  * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    * Added documentation for the features `newcontact` and `listcontact`","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"  * PRs reviewed: #13, #38","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"  * to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"bryansendeavour":37}},{"path":"docs/team/eksdeeex.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"title: Bryan Tan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"Paidlancers is a **desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"* **Code contributed**: [_to be added soon_]()","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"  * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"  * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"  * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    * Added documentation for the features `link`, `rate` and `newrate`","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"    * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"  * Team-based tasks:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"    * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"  * Review / Mentoring:","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    * #35, #39","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"  * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"* **Others**:","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"  * _to be added soon_","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"EksdeeeX":37}},{"path":"docs/team/engenhui1999.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"title: Eng En Hui\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"Paidlancers is a **desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"  * `Mark Event` Added ability to mark events once they are completed. (Pull Request [#84](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/84))","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"      * What it does: Allows the user to mark events.","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"      * Justification: This feature improves the product significantly because a user can keep track of all the events they have completed. This is useful for users who cannot remember which event has been completed.","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"      * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands and the creation of new ones.","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"  * `revenue` Added ability to calculate and display the total revenue of completed events. (Pull Request [#114](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/114))","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"      * What it does: Allows the user to calculate total revenue.","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"      * Justification: This feature improves the product significantly because a user can keep track of total revenue earned thus far. This is useful for users who wishes to keep track of how much they have earned.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"      * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. With a good understanding of the design, it is possible to implement the code with minimal changes.","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dengenhui1999\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"* **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"  * Release of `v1.2` on GitHub.","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    * Refractor Person into Event (Pull Request [#71](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/71))","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    * Create mark command (Pull Request [#84](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/84))","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"  * Release of `v1.3` on GitHub.","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"    * Create revenue command (Pull Request [#114](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/114))","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    * Refractor more traces of AddressBook into EventBook (Pull Request [#153](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/153))","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"  * Modified commands to mark events that are completed.","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"    * User Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"      * Setup the skeleton UG for future developments.","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"      (Pull Request [#16](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/16)).","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"    * Developer Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"      * Added implementation details of the `mark` feature","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"      (Pull Request [#124](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/124)).","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"      * Added implementation details of the `revenue` feature","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"      (Pull Request [#152](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/152)).","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"  * PRs reviewed and merged:","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"      * [#8](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/8),","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"      * [#17](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/17),","lastModifiedDate":"2023-03-27"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"      * [#19](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/19),","lastModifiedDate":"2023-03-27"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"      * [#42](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/42),","lastModifiedDate":"2023-03-27"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"      * [#82](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/82),","lastModifiedDate":"2023-03-27"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"      * [#83](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/83),","lastModifiedDate":"2023-03-27"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"      * [#105](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/105),","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"      * [#150](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/150),","lastModifiedDate":"2023-03-27"},{"lineNumber":57,"author":{"gitId":"engenhui1999"},"content":"      * [#151](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/151),","lastModifiedDate":"2023-03-27"},{"lineNumber":58,"author":{"gitId":"engenhui1999"},"content":"      * [#155](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/155),","lastModifiedDate":"2023-03-27"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"      ","lastModifiedDate":"2023-02-27"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"* **Tools**:","lastModifiedDate":"2023-02-27"},{"lineNumber":61,"author":{"gitId":"engenhui1999"},"content":"  * _to be added soon_","lastModifiedDate":"2023-02-27"},{"lineNumber":62,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":63,"author":{"gitId":"engenhui1999"},"content":"* **Others**:","lastModifiedDate":"2023-02-27"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"  * _to be added soon_","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"engenhui1999":64}},{"path":"docs/team/extrashotlatte.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ExtraShotLatte"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"ExtraShotLatte"},"content":"layout: page","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"ExtraShotLatte"},"content":"title: Sean Wong\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"ExtraShotLatte"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"Paidlancers is a desktop app designed to help freelancers streamline their event management tasks. It is the brainchild me and my team, who wanted to simplify and automate the administrative side of freelancing.","lastModifiedDate":"2023-03-22"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"The app is optimized for use through a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). Some of its features include adding and linking contacts to events, tracking rates, marking events as done, creating new events, viewing event lists and revenue, and more.","lastModifiedDate":"2023-03-22"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"By centralizing all event-related information and tasks in one place, Paidlancers aims to increase productivity and help freelancers focus on their craft.","lastModifiedDate":"2023-03-22"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"ExtraShotLatte"},"content":"* **New Feature**:","lastModifiedDate":"2023-03-22"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"  * `Link Contact` Added ability to link contacts to events. (Pull Request [#88](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/88))","lastModifiedDate":"2023-03-22"},{"lineNumber":18,"author":{"gitId":"ExtraShotLatte"},"content":"      * What it does: Allows the user to link contacts to events.","lastModifiedDate":"2023-03-22"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"      * Justification: This feature improves the product significantly because a user can keep track of all the contacts they have and link them to events. This is useful for users who want to keep track of all their contacts and link them to events.","lastModifiedDate":"2023-03-22"},{"lineNumber":20,"author":{"gitId":"ExtraShotLatte"},"content":"      * Highlights: This enhancement affects existing commands and commands to be added in the future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands and the creation of new ones.","lastModifiedDate":"2023-03-22"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dextrashotlatte\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"* **Project management**:","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"    * Managed release of `v1.2.1` on GitHub.","lastModifiedDate":"2023-03-22"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"    (Pull Request [#135](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/135))","lastModifiedDate":"2023-03-22"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"    (Release [v1.2.1](https://github.com/AY2223S2-CS2103T-T11-3/tp/releases/tag/v.1.2.1)).","lastModifiedDate":"2023-03-22"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"    * Setup CI and codecov (Pull Request [#52](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/52)).","lastModifiedDate":"2023-03-22"},{"lineNumber":31,"author":{"gitId":"ExtraShotLatte"},"content":"    * Smoke tested JAR trial release on Windows Operating System","lastModifiedDate":"2023-03-22"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"    (Issue [#36](https://github.com/AY2223S2-CS2103T-T11-3/tp/issues/136)).","lastModifiedDate":"2023-03-22"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"  * Enhanced the comparisons of `event` class","lastModifiedDate":"2023-03-22"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"  (Pull Request [#86](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/86)).","lastModifiedDate":"2023-03-22"},{"lineNumber":38,"author":{"gitId":"ExtraShotLatte"},"content":"    * What it does: Enhanced comparison of `events` to account for different cases.","lastModifiedDate":"2023-03-22"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"    * Justification: An event with the same name but of a different timing should not be equal to each other.","lastModifiedDate":"2023-03-22"},{"lineNumber":40,"author":{"gitId":"ExtraShotLatte"},"content":"    Reason being that the same event can happen twice, both at different timings.","lastModifiedDate":"2023-03-22"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-04"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"    * User Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"      * Added introduction section to the user guide","lastModifiedDate":"2023-03-22"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"      (Pull Request [#127](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/127)).","lastModifiedDate":"2023-03-22"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"      * Restructured the presentation of the user guide for clarity","lastModifiedDate":"2023-03-22"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"      (Pull Request [#127](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/127)).","lastModifiedDate":"2023-03-22"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"      * Added logo to the user guide (Pull Request [#127](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/127)).","lastModifiedDate":"2023-03-22"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"      * Added section on how to use the user guide","lastModifiedDate":"2023-03-22"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"      (Pull Request [#127](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/127)).","lastModifiedDate":"2023-03-22"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"      * Added implementation details of the `linkcontact` feature","lastModifiedDate":"2023-03-22"},{"lineNumber":54,"author":{"gitId":"ExtraShotLatte"},"content":"      (Pull Request [#137](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/137)).","lastModifiedDate":"2023-03-22"},{"lineNumber":55,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":56,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":57,"author":{"gitId":"ExtraShotLatte"},"content":"* **Community**:","lastModifiedDate":"2023-03-04"},{"lineNumber":58,"author":{"gitId":"ExtraShotLatte"},"content":"    * PRs reviewed and merged:","lastModifiedDate":"2023-03-22"},{"lineNumber":59,"author":{"gitId":"ExtraShotLatte"},"content":"      * [#9](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/9),","lastModifiedDate":"2023-03-22"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"      [#10](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/10),","lastModifiedDate":"2023-03-22"},{"lineNumber":61,"author":{"gitId":"ExtraShotLatte"},"content":"      [#15](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/15),","lastModifiedDate":"2023-03-22"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"      [#20](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/20),","lastModifiedDate":"2023-03-22"},{"lineNumber":63,"author":{"gitId":"ExtraShotLatte"},"content":"      [#21](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/21),","lastModifiedDate":"2023-03-22"},{"lineNumber":64,"author":{"gitId":"ExtraShotLatte"},"content":"      [#34](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/34),","lastModifiedDate":"2023-03-22"},{"lineNumber":65,"author":{"gitId":"ExtraShotLatte"},"content":"      [#37](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/37),","lastModifiedDate":"2023-03-22"},{"lineNumber":66,"author":{"gitId":"ExtraShotLatte"},"content":"      [#70](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/70),","lastModifiedDate":"2023-03-22"},{"lineNumber":67,"author":{"gitId":"ExtraShotLatte"},"content":"      [#85](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/85),","lastModifiedDate":"2023-03-22"},{"lineNumber":68,"author":{"gitId":"ExtraShotLatte"},"content":"      [#98](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/98),","lastModifiedDate":"2023-03-22"},{"lineNumber":69,"author":{"gitId":"ExtraShotLatte"},"content":"      [#100](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/100),","lastModifiedDate":"2023-03-22"},{"lineNumber":70,"author":{"gitId":"ExtraShotLatte"},"content":"      [#125](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/125),","lastModifiedDate":"2023-03-22"},{"lineNumber":71,"author":{"gitId":"ExtraShotLatte"},"content":"      [#129](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/129)","lastModifiedDate":"2023-03-22"},{"lineNumber":72,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":73,"author":{"gitId":"ExtraShotLatte"},"content":"    * PRs reviewed (with non trivial review comments):","lastModifiedDate":"2023-03-22"},{"lineNumber":74,"author":{"gitId":"ExtraShotLatte"},"content":"      * [#31](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/31),","lastModifiedDate":"2023-03-22"},{"lineNumber":75,"author":{"gitId":"ExtraShotLatte"},"content":"      [#35](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/35),","lastModifiedDate":"2023-03-22"},{"lineNumber":76,"author":{"gitId":"ExtraShotLatte"},"content":"      [#104](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/104),","lastModifiedDate":"2023-03-22"},{"lineNumber":77,"author":{"gitId":"ExtraShotLatte"},"content":"      [#132](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/132),","lastModifiedDate":"2023-03-22"},{"lineNumber":78,"author":{"gitId":"ExtraShotLatte"},"content":"      [#133](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/133)","lastModifiedDate":"2023-03-22"},{"lineNumber":79,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":80,"author":{"gitId":"ExtraShotLatte"},"content":"    * Bugs found and raised:","lastModifiedDate":"2023-03-22"},{"lineNumber":81,"author":{"gitId":"ExtraShotLatte"},"content":"      * [#90](https://github.com/AY2223S2-CS2103T-T11-3/tp/issues/90)","lastModifiedDate":"2023-03-22"},{"lineNumber":82,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-22"},{"lineNumber":83,"author":{"gitId":"ExtraShotLatte"},"content":"    * Enhancement raised:","lastModifiedDate":"2023-03-22"},{"lineNumber":84,"author":{"gitId":"ExtraShotLatte"},"content":"      * [#131](https://github.com/AY2223S2-CS2103T-T11-3/tp/issues/131)","lastModifiedDate":"2023-03-22"},{"lineNumber":85,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":86,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":87,"author":{"gitId":"ExtraShotLatte"},"content":"* **Tools**:","lastModifiedDate":"2023-03-04"},{"lineNumber":88,"author":{"gitId":"ExtraShotLatte"},"content":"    * to be added soon","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"ExtraShotLatte":88}},{"path":"docs/team/glozxi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glozxi"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"title: Gloria Zhang Xinhui\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"Paidlancers is a **desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"* **New Feature**: Added start and end timing to events.","lastModifiedDate":"2023-03-26"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"  * What it does: Start and end timing of events are displayed in the GUI. Allows the user to add start and end date and time to an event when creating it. The user can edit start and end timings.","lastModifiedDate":"2023-03-26"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"  * Justification: This feature improves the product significantly because our target user is a freelancer, who needs to know when their events start and end.","lastModifiedDate":"2023-03-26"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"  * Highlights: This enhancement affects existing features to add and edit events. It also affects current and future features that use event timings. The implementation was challenging as it required changes to existing commands.","lastModifiedDate":"2023-03-26"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-26"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"* **New Feature**: Added the ability to view upcoming events.","lastModifiedDate":"2023-03-26"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"  * What it does: Allows the user to use a command to view events starting within a specified number of days.","lastModifiedDate":"2023-03-26"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"  * Justification: This feature improves the product significantly because the user would want to know what events to prepare for.","lastModifiedDate":"2023-03-26"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"  * Highlights: This enhancement required a way to get the current date and time. It required an in-depth analysis of design alternatives for a testable and useful implementation.","lastModifiedDate":"2023-03-26"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dglozxi\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"* **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"  * Managed releases `v1.2`, `v1.2b` and `v1.3` (3 releases) on GitHub","lastModifiedDate":"2023-03-26"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"  * Modified commands to add and edit events to have event timings","lastModifiedDate":"2023-03-26"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"  * User Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    * Added documentation for `remind` command (Pull request [#133](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/133))","lastModifiedDate":"2023-03-26"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    * Added implementation details of the `remind` feature","lastModifiedDate":"2023-03-26"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"  * PRs reviewed (with non-trivial review comments): [#44](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/44), [#55](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/55), [#127](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/127), [#137](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/137), [#139](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/139), [#146](https://github.com/AY2223S2-CS2103T-T11-3/tp/pull/146)","lastModifiedDate":"2023-03-26"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"  * Contributed to forum discussions (examples: [1](https://github.com/nus-cs2103-AY2223S2/forum/issues/4), [2](https://github.com/nus-cs2103-AY2223S2/forum/issues/222))","lastModifiedDate":"2023-03-26"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"* **Tools**:","lastModifiedDate":"2023-02-27"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"* **Others**:","lastModifiedDate":"2023-02-27"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"glozxi":44}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new commandâ€‰â€”â€‰`remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Weâ€™ll assume that you have already set up the development environment as outlined in the Developerâ€™s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Letâ€™s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, letâ€™s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2020-07-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":" * Changes the remark of an existing event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-399c284cb892c20b7c04a69116fcff6ccc0666c5230a1db8e4a9145def8fa4ee).","lastModifiedDate":"2022-01-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Letâ€™s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"            + \": Edits the remark of the event identified \"","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"            + \"by the index number used in the last event listing. \"","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, letâ€™s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2020-07-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"glozxi"},"content":"     * @param index of the event in the filtered event list to edit the remark","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"glozxi"},"content":"     * @param remark of the event to be updated to","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-a8e35af8f9c251525063fae36c9852922a7e7195763018eacec60f3a4d87c594) after you are done.","lastModifiedDate":"2022-01-02"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now letâ€™s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Letâ€™s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now letâ€™s find out what we need to do in order to obtain the Index and String that we need. Letâ€™s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the userâ€™s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Donâ€™t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-8bf239e8e9529369b577701303ddd96af93178b4ed6735f91c2d8488b20c6b4a).","lastModifiedDate":"2022-01-02"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"glozxi"},"content":"Now that we have all the information that we need, letâ€™s lay the groundwork for propagating the remarks added into the in-memory storage of event data. We achieve that by working with the `Event` model. Each field in a Event is implemented as a separate class (e.g. a `Name` object represents the eventâ€™s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a event.","lastModifiedDate":"2023-03-17"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"glozxi"},"content":"Create a new `Remark` in `seedu.address.model.event`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2023-03-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-41bb13c581e280c686198251ad6cc337cd5e27032772f06ed9bf7f1440995ece). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2022-01-02"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Letâ€™s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"glozxi"},"content":"Without getting too deep into `fxml`, letâ€™s go on a 5 minute adventure to get some placeholder text to show up for each event.","lastModifiedDate":"2023-03-17"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"glozxi"},"content":"Simply add the following to [`seedu.address.ui.EventCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-639834f1e05afe2276a86372adf0fe5f69314642c2d93cfa543d614ce5a76688).","lastModifiedDate":"2023-03-17"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"glozxi"},"content":"**`EventCard.java`:**","lastModifiedDate":"2023-03-17"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, donâ€™t worryâ€‰â€”â€‰we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"glozxi"},"content":"Then insert the following into [`main/resources/view/EventListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-d44c4f51c24f6253c277a2bb9bc440b8064d9c15ad7cb7ceda280bca032efce9).","lastModifiedDate":"2023-03-17"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"glozxi"},"content":"**`EventListCard.fxml`:**","lastModifiedDate":"2023-03-17"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"Thatâ€™s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"glozxi"},"content":"## Modify `Event` to support a `Remark` field","lastModifiedDate":"2023-03-17"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"glozxi"},"content":"Since `EventCard` displays data from a `Event`, we need to update `Event` to get our `Remark` displayed!","lastModifiedDate":"2023-03-17"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"glozxi"},"content":"### Modify `Event`","lastModifiedDate":"2023-03-17"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"glozxi"},"content":"We change the constructor of `Event` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2023-03-17"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"glozxi"},"content":"### Update other usages of `Event`","lastModifiedDate":"2023-03-17"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"glozxi"},"content":"Unfortunately, a change to `Event` will cause other commands to break, you will have to modify these commands to use the updated `Event`!","lastModifiedDate":"2023-03-17"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"glozxi"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Event` class to find these commands.","lastModifiedDate":"2023-03-17"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"glozxi"},"content":"AddressBook stores data by serializing `JsonAdaptedEvent` into `json` with the help of an external libraryâ€‰â€”â€‰Jackson. Letâ€™s update `JsonAdaptedEvent` to work with our new `Event`!","lastModifiedDate":"2023-03-17"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBookâ€™s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"glozxi"},"content":"Now that we have finalized the `Event` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2023-03-17"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"glozxi"},"content":"**`EventCard.java`:**","lastModifiedDate":"2023-03-17"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"glozxi"},"content":"public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2023-03-17"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"glozxi"},"content":"    remark.setText(event.getRemark().value);","lastModifiedDate":"2023-03-17"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regressionâ€‰â€”â€‰we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"glozxi"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Event`. Since all fields in a `Event` are immutable, we create a new instance of a `Event` with the values that we want and","lastModifiedDate":"2023-03-17"},{"lineNumber":329,"author":{"gitId":"glozxi"},"content":"save it with `Model#setEvent()`.","lastModifiedDate":"2023-03-17"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Event: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":336,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Event: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"glozxi"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"glozxi"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-17"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"glozxi"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":347,"author":{"gitId":"glozxi"},"content":"        Event editedEvent \u003d new Event(","lastModifiedDate":"2023-03-17"},{"lineNumber":348,"author":{"gitId":"glozxi"},"content":"                eventToEdit.getName(), eventToEdit.getPhone(), eventToEdit.getEmail(),","lastModifiedDate":"2023-03-17"},{"lineNumber":349,"author":{"gitId":"glozxi"},"content":"                eventToEdit.getAddress(), remark, eventToEdit.getTags());","lastModifiedDate":"2023-03-17"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"glozxi"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":352,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"glozxi"},"content":"        return new CommandResult(generateSuccessMessage(editedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"glozxi"},"content":"     * {@code eventToEdit}.","lastModifiedDate":"2023-03-17"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"glozxi"},"content":"    private String generateSuccessMessage(Event eventToEdit) {","lastModifiedDate":"2023-03-17"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"glozxi"},"content":"        return String.format(message, eventToEdit);","lastModifiedDate":"2023-03-17"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs donâ€™t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Letâ€™s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2022-01-02"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Letâ€™s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, letâ€™s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Letâ€™s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-ff58f7c10338b34f76645df49b71ecb2bafaf7611b20e7ff59ebc98475538a01R36-R49).","lastModifiedDate":"2022-01-02"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"glozxi":40,"-":361}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Event` class.","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Letâ€™s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"The `address` field in `Event` is actually an instance of the `seedu.address.model.event.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditEventDescriptor` may require more careful inspection.","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"Letâ€™s try removing references to `Address` in `EditEventDescriptor`.","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"1. Safe delete the field `address` in `EditEventDescriptor`.","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Event` class will require you to modify its constructor.","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `EventCard` that has not been removed nor identified.","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"A quick look at the `EventCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"**`EventCard.java`**","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"glozxi"},"content":"**`EventCard.fxml`**","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. Whatâ€™s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"glozxi"},"content":"**`invalidEventAddressBook.json`:**","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"  \"events\": [ {","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"glozxi"},"content":"    \"name\": \"Event with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"glozxi":13,"-":99}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. â€¦â€‹\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e â€”  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEAâ€™s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.address.logic.Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"A quick look at the `seedu.address.logic.Logic` (an extract given below) confirms that this indeed might be what weâ€™re looking for.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what weâ€™re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now letâ€™s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]â€¦â€‹` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so letâ€™s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Letâ€™s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Letâ€™s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Letâ€™s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"glozxi"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditEventDescriptor`. Recall that we can verify the contents of `editEventDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Letâ€™s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"glozxi"},"content":"       Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":193,"author":{"gitId":"glozxi"},"content":"       Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":194,"author":{"gitId":"glozxi"},"content":"       if (!eventToEdit.isSameEvent(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":195,"author":{"gitId":"glozxi"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"glozxi"},"content":"       model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":198,"author":{"gitId":"glozxi"},"content":"       model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":199,"author":{"gitId":"glozxi"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"glozxi"},"content":"   * it uses the `setEvent()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the event data.","lastModifiedDate":"2023-03-17"},{"lineNumber":205,"author":{"gitId":"glozxi"},"content":"   * it uses the `updateFilteredEventList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ events.\u003cbr\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":206,"author":{"gitId":"glozxi"},"content":"     FYI, The \u0027filtered list\u0027 is the list of events resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the events so that the user can see the edited event along with all other events. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":207,"author":{"gitId":"glozxi"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of events is being tracked.","lastModifiedDate":"2023-03-17"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"glozxi"},"content":"        events.addAll(","lastModifiedDate":"2023-03-17"},{"lineNumber":235,"author":{"gitId":"glozxi"},"content":"            source.getEventList()","lastModifiedDate":"2023-03-17"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"glozxi"},"content":"                  .map(JsonAdaptedEvent::new)","lastModifiedDate":"2023-03-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"glozxi"},"content":"1. It appears that a `JsonAdaptedEvent` is created for each `Event` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2023-03-17"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/ã‚¢ãƒªã‚¹ ãƒ¦ãƒ¼`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"glozxi"},"content":"    5.  Add a new field to `Event`","lastModifiedDate":"2023-03-17"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"glozxi":17,"-":284}},{"path":"src/main/java/seedu/event/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.FileUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"engenhui1999":3,"-":61}},{"path":"src/main/java/seedu/event/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"engenhui1999":1,"-":24}},{"path":"src/main/java/seedu/event/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Config;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Version;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.ConfigUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.StringUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.Logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.LogicManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.ContactListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.EventBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.JsonContactListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.JsonEventBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.Storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.StorageManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.ui.Ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.ui.UiManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final Version VERSION \u003d new Version(1, 2, 1, true);","lastModifiedDate":"2023-03-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing Paidlancers ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        EventBookStorage eventBookStorage \u003d new JsonEventBookStorage(userPrefs.getEventBookFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        ContactListStorage contactListStorage \u003d new JsonContactListStorage(userPrefs.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"        storage \u003d new StorageManager(eventBookStorage, contactListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"        Optional\u003cReadOnlyEventBook\u003e eventBookOptional;","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"        Optional\u003cReadOnlyContactList\u003e contactListOptional;","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"glozxi"},"content":"        ReadOnlyEventBook initialData;","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"        ReadOnlyContactList initialContactData;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"            eventBookOptional \u003d storage.readEventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"            if (!eventBookOptional.isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"                logger.info(\"Data file not found. Will be starting with a sample Paidlancers\");","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"glozxi"},"content":"            initialData \u003d eventBookOptional.orElseGet(SampleDataUtil::getSampleEventBook);","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty Paidlancers\");","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"glozxi"},"content":"            initialData \u003d new EventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Paidlancers\");","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"            initialData \u003d new EventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"            contactListOptional \u003d storage.readContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"            if (!contactListOptional.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"                logger.info(\"Data file not found. Will be starting with a sample contactList\");","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"            initialContactData \u003d contactListOptional.orElseGet(SampleDataUtil::getSampleContactList);","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ContactList\");","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"            initialContactData \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ContactList\");","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"            initialContactData \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"        return new ModelManager(initialData, initialContactData, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty Paidlancers\");","lastModifiedDate":"2023-03-13"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"bryansendeavour"},"content":"        logger.info(\"Starting Paidlancers \" + MainApp.VERSION);","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"bryansendeavour"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Paidlancers ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ExtraShotLatte":1,"glozxi":9,"bryansendeavour":25,"engenhui1999":28,"-":141}},{"path":"src/main/java/seedu/event/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.core;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":1,"-":62}},{"path":"src/main/java/seedu/event/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.core;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":1,"-":78}},{"path":"src/main/java/seedu/event/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.core;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    private static final String LOG_FILE \u003d \"eventbook.log\";","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glozxi":1,"engenhui1999":1,"-":110}},{"path":"src/main/java/seedu/event/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.core;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_EVENTS_LISTED_OVERVIEW \u003d \"%1$d events listed!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String MESSAGE_CONTACT_NOT_FOUND \u003d \"Contact not found!\";","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EksdeeeX":1,"ExtraShotLatte":1,"glozxi":1,"engenhui1999":1,"-":10}},{"path":"src/main/java/seedu/event/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.core;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":1,"-":115}},{"path":"src/main/java/seedu/event/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.core.index;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"engenhui1999":1,"-":53}},{"path":"src/main/java/seedu/event/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":1,"-":10}},{"path":"src/main/java/seedu/event/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"engenhui1999":1,"-":20}},{"path":"src/main/java/seedu/event/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.MainApp;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"engenhui1999":2,"-":40}},{"path":"src/main/java/seedu/event/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"engenhui1999":1,"-":34}},{"path":"src/main/java/seedu/event/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Config;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"engenhui1999":3,"-":20}},{"path":"src/main/java/seedu/event/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":1,"-":82}},{"path":"src/main/java/seedu/event/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":3,"-":140}},{"path":"src/main/java/seedu/event/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":2,"-":66}},{"path":"src/main/java/seedu/event/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.CommandResult;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"     * Returns the EventBook.","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"     * @see seedu.event.model.Model#getEventBook()","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    ReadOnlyEventBook getEventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    ReadOnlyContactList getContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"    /** Returns an unmodifiable view of the filtered list of events */","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    /** Returns an unmodifiable view of the filtered list of contacts */","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"glozxi":5,"bryansendeavour":5,"engenhui1999":10,"-":37}},{"path":"src/main/java/seedu/event/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"import java.time.Clock;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.Command;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.CommandResult;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.EventBookParser;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.Storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    private final EventBookParser eventBookParser;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        eventBookParser \u003d new EventBookParser(Clock.systemDefaultZone());","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        Command command \u003d eventBookParser.parseCommand(commandText);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"            storage.saveEventBook(model.getEventBook());","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"            storage.saveContactList(model.getContactList());","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        return model.getEventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"        return model.getContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"        return model.getFilteredEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        return model.getFilteredContactList();","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"        return model.getEventBookFilePath();","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"glozxi":11,"bryansendeavour":11,"engenhui1999":14,"-":59}},{"path":"src/main/java/seedu/event/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_END;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_START;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":" * Adds an event to the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"    public static final String COMMAND_WORD \u003d \"newevent\";","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the address book. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"            + PREFIX_RATE + \"RATE \"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TIME_START + \"START_TIME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TIME_END + \"END_TIME \"","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"            + PREFIX_NAME + \"DJ at wedding \"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"            + PREFIX_RATE + \"100 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TIME_START + \"11-03-2023 11:00 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TIME_END + \"11-03-2023 17:00 \"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TAG + \"dj\";","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    private final Event toAdd;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"     * Creates an AddCommand to add the specified {@code Event}","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"    public AddCommand(Event event) {","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        toAdd \u003d event;","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"        if (model.hasEvent(toAdd)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        model.addEvent(toAdd);","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glozxi":25,"engenhui1999":14,"-":30}},{"path":"src/main/java/seedu/event/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Event book and contact list has been cleared!\";","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"        model.setEventBook(new EventBook());","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        model.setContactList(new ContactList());","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glozxi":1,"bryansendeavour":3,"engenhui1999":3,"-":18}},{"path":"src/main/java/seedu/event/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"engenhui1999":3,"-":17}},{"path":"src/main/java/seedu/event/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"engenhui1999":1,"-":70}},{"path":"src/main/java/seedu/event/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":" * Deletes an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"            + \": Deletes the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_DELETE_EVENT_SUCCESS \u003d \"Deleted Event: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        Event eventToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"        model.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete));","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EksdeeeX":1,"glozxi":7,"engenhui1999":6,"-":39}},{"path":"src/main/java/seedu/event/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_END;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_START;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.CollectionUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Mark;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":" * Edits the details of an existing event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_USAGE_CONTACT \u003d COMMAND_WORD + \": Edits the details of the event identified \"","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"            + \"by the index number used in the displayed event list. \"","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the event identified \"","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"            + \"by the index number used in the displayed event list. \"","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"engenhui1999"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"engenhui1999"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"            + \"[\" + PREFIX_RATE + \"RATE] \"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"            + \"[\" + PREFIX_TIME_START + \"START_TIME] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"            + \"[\" + PREFIX_TIME_END + \"END_TIME] \"","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"engenhui1999"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_EDIT_EVENT_SUCCESS \u003d \"Edited Event: %1$s\";","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book.\";","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"    private final EditEventDescriptor editEventDescriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"     * @param index of the event in the filtered event list to edit","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"     * @param editEventDescriptor details to edit the event with","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"    public EditCommand(Index index, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"        requireNonNull(editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"        this.editEventDescriptor \u003d new EditEventDescriptor(editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"engenhui1999"},"content":"        List\u003cseedu.event.model.event.Event\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"EksdeeeX"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"glozxi"},"content":"        Event eventToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"glozxi"},"content":"        Event editedEvent \u003d createEditedEvent(eventToEdit, editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"        if (!eventToEdit.isSameEvent(editedEvent) \u0026\u0026 model.hasEvent(editedEvent)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"glozxi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"        model.setEvent(eventToEdit, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"glozxi"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_EVENT_SUCCESS, editedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToEdit}","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"     * edited with {@code editEventDescriptor}.","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"glozxi"},"content":"    private static Event createEditedEvent(Event eventToEdit, EditEventDescriptor editEventDescriptor) {","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"        assert eventToEdit !\u003d null;","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"        Name updatedName \u003d editEventDescriptor.getName().orElse(eventToEdit.getName());","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"        Rate updatedRate \u003d editEventDescriptor.getRate().orElse(eventToEdit.getRate());","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"        Address updatedAddress \u003d editEventDescriptor.getAddress().orElse(eventToEdit.getAddress());","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"        Time updatedStartTime \u003d editEventDescriptor.getStartTime().orElse(eventToEdit.getStartTime());","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        Time updatedEndTime \u003d editEventDescriptor.getEndTime().orElse(eventToEdit.getEndTime());","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"        Contact updatedContact \u003d editEventDescriptor.getContact().orElse(eventToEdit.getContact());","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"        Mark updatedMark \u003d editEventDescriptor.getMark().orElse(eventToEdit.getMark());","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"glozxi"},"content":"        Set\u003cTag\u003e updatedTags \u003d editEventDescriptor.getTags().orElse(eventToEdit.getTags());","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"glozxi"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2023-03-15"},{"lineNumber":124,"author":{"gitId":"glozxi"},"content":"                updatedName, updatedRate, updatedAddress, updatedStartTime, updatedEndTime, updatedTags);","lastModifiedDate":"2023-03-15"},{"lineNumber":125,"author":{"gitId":"engenhui1999"},"content":"        if (updatedMark.isDone()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"engenhui1999"},"content":"            updatedEvent.mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"engenhui1999"},"content":"        updatedEvent.linkContact(updatedContact);","lastModifiedDate":"2023-03-14"},{"lineNumber":129,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"engenhui1999"},"content":"        return updatedEvent;","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":148,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 editEventDescriptor.equals(e.editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"     * Stores the details to edit the event with. Each non-empty field value will replace the","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"glozxi"},"content":"     * corresponding field value of the event.","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"glozxi"},"content":"    public static class EditEventDescriptor {","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"engenhui1999"},"content":"        private Rate rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":159,"author":{"gitId":"glozxi"},"content":"        private Time startTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"glozxi"},"content":"        private Time endTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"engenhui1999"},"content":"        private Contact contact;","lastModifiedDate":"2023-03-14"},{"lineNumber":162,"author":{"gitId":"engenhui1999"},"content":"        private Mark mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"glozxi"},"content":"        public EditEventDescriptor() {}","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"glozxi"},"content":"        public EditEventDescriptor(EditEventDescriptor toCopy) {","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"engenhui1999"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"engenhui1999"},"content":"            setRate(toCopy.rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"engenhui1999"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"glozxi"},"content":"            setStartTime(toCopy.startTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"glozxi"},"content":"            setEndTime(toCopy.endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"engenhui1999"},"content":"            setContact(toCopy.contact);","lastModifiedDate":"2023-03-14"},{"lineNumber":178,"author":{"gitId":"engenhui1999"},"content":"            setMark(toCopy.mark);","lastModifiedDate":"2023-03-11"},{"lineNumber":179,"author":{"gitId":"engenhui1999"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"engenhui1999"},"content":"        /**","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"engenhui1999"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-06"},{"lineNumber":184,"author":{"gitId":"engenhui1999"},"content":"         */","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"engenhui1999"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"glozxi"},"content":"            return CollectionUtil.isAnyNonNull(name, rate, address, startTime, endTime, mark, tags);","lastModifiedDate":"2023-03-15"},{"lineNumber":187,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"engenhui1999"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"engenhui1999"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"engenhui1999"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"engenhui1999"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"engenhui1999"},"content":"        public void setRate(Rate rate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"engenhui1999"},"content":"            this.rate \u003d rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"engenhui1999"},"content":"        public Optional\u003cRate\u003e getRate() {","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"engenhui1999"},"content":"            return Optional.ofNullable(rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"engenhui1999"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-06"},{"lineNumber":206,"author":{"gitId":"engenhui1999"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"engenhui1999"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"engenhui1999"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":212,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":213,"author":{"gitId":"glozxi"},"content":"        public void setStartTime(Time startTime) {","lastModifiedDate":"2023-03-15"},{"lineNumber":214,"author":{"gitId":"glozxi"},"content":"            this.startTime \u003d startTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":215,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"glozxi"},"content":"        public void setEndTime(Time endTime) {","lastModifiedDate":"2023-03-15"},{"lineNumber":218,"author":{"gitId":"glozxi"},"content":"            this.endTime \u003d endTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":219,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":220,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":221,"author":{"gitId":"glozxi"},"content":"        public Optional\u003cTime\u003e getStartTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":222,"author":{"gitId":"glozxi"},"content":"            return Optional.ofNullable(startTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":223,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":224,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":225,"author":{"gitId":"glozxi"},"content":"        public Optional\u003cTime\u003e getEndTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":226,"author":{"gitId":"glozxi"},"content":"            return Optional.ofNullable(endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":227,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":228,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":229,"author":{"gitId":"engenhui1999"},"content":"        public void setContact(Contact contact) {","lastModifiedDate":"2023-03-14"},{"lineNumber":230,"author":{"gitId":"engenhui1999"},"content":"            this.contact \u003d contact;","lastModifiedDate":"2023-03-14"},{"lineNumber":231,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":232,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":233,"author":{"gitId":"engenhui1999"},"content":"        public Optional\u003cContact\u003e getContact() {","lastModifiedDate":"2023-03-14"},{"lineNumber":234,"author":{"gitId":"engenhui1999"},"content":"            return Optional.ofNullable(contact);","lastModifiedDate":"2023-03-14"},{"lineNumber":235,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":236,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":237,"author":{"gitId":"engenhui1999"},"content":"        public void setMark(Mark mark) {","lastModifiedDate":"2023-03-11"},{"lineNumber":238,"author":{"gitId":"engenhui1999"},"content":"            this.mark \u003d mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":239,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":240,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":241,"author":{"gitId":"engenhui1999"},"content":"        public Optional\u003cMark\u003e getMark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":242,"author":{"gitId":"engenhui1999"},"content":"            return Optional.ofNullable(mark);","lastModifiedDate":"2023-03-11"},{"lineNumber":243,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":244,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":245,"author":{"gitId":"engenhui1999"},"content":"        /**","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"engenhui1999"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"engenhui1999"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-06"},{"lineNumber":248,"author":{"gitId":"engenhui1999"},"content":"         */","lastModifiedDate":"2023-03-06"},{"lineNumber":249,"author":{"gitId":"engenhui1999"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-06"},{"lineNumber":250,"author":{"gitId":"engenhui1999"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"engenhui1999"},"content":"        /**","lastModifiedDate":"2023-03-06"},{"lineNumber":254,"author":{"gitId":"engenhui1999"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"engenhui1999"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"engenhui1999"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"engenhui1999"},"content":"         */","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"engenhui1999"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"engenhui1999"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"engenhui1999"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"engenhui1999"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"engenhui1999"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"engenhui1999"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"engenhui1999"},"content":"                return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"engenhui1999"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":268,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"engenhui1999"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":270,"author":{"gitId":"glozxi"},"content":"            if (!(other instanceof EditEventDescriptor)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":271,"author":{"gitId":"engenhui1999"},"content":"                return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":272,"author":{"gitId":"engenhui1999"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":273,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":274,"author":{"gitId":"engenhui1999"},"content":"            // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":275,"author":{"gitId":"glozxi"},"content":"            EditEventDescriptor e \u003d (EditEventDescriptor) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":276,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":277,"author":{"gitId":"engenhui1999"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":278,"author":{"gitId":"engenhui1999"},"content":"                    \u0026\u0026 getRate().equals(e.getRate())","lastModifiedDate":"2023-03-06"},{"lineNumber":279,"author":{"gitId":"engenhui1999"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2023-03-06"},{"lineNumber":280,"author":{"gitId":"glozxi"},"content":"                    \u0026\u0026 getStartTime().equals(e.getStartTime())","lastModifiedDate":"2023-03-15"},{"lineNumber":281,"author":{"gitId":"glozxi"},"content":"                    \u0026\u0026 getEndTime().equals(e.getEndTime())","lastModifiedDate":"2023-03-15"},{"lineNumber":282,"author":{"gitId":"engenhui1999"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2023-03-06"},{"lineNumber":283,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":284,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":285,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"EksdeeeX":1,"glozxi":70,"engenhui1999":130,"-":85}},{"path":"src/main/java/seedu/event/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"engenhui1999":2,"-":17}},{"path":"src/main/java/seedu/event/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":" * Finds and lists all events in event book whose name contains any of the argument keywords.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose names contain any of \"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public FindCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"glozxi":4,"engenhui1999":4,"-":34}},{"path":"src/main/java/seedu/event/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"engenhui1999":2,"-":19}},{"path":"src/main/java/seedu/event/logic/commands/LinkContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"ExtraShotLatte"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"ExtraShotLatte"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.UniqueContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Mark;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":" * Links a contact to an event","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"public class LinkContactCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String COMMAND_WORD \u003d \"linkcontact\";","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Links event identified by the index number to the\"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"            + \" contact specified. \\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"ExtraShotLatte"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"            + \"INDEX PHONE (index must be positive integer and contact must be in contact list.)\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\" + \" 91234567\";","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String MESSAGE_LINK_CONTACT_SUCCESS \u003d \"Successfully linked! %1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"    private final Index eventIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"ExtraShotLatte"},"content":"    private final String addContact;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"     * Creates a LinkContactCommand to link the specified {@code Contact} to event","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"     * specified by the {@code Index}.","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"    public LinkContactCommand(Index index, String contact) {","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"        eventIndex \u003d index;","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"        addContact \u003d contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        List\u003cContact\u003e contactList \u003d model.getFilteredContactList();","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"ExtraShotLatte"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"ExtraShotLatte"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"ExtraShotLatte"},"content":"        Event toAdd \u003d lastShownList.get(eventIndex.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"ExtraShotLatte"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"ExtraShotLatte"},"content":"            Contact contactToAdd \u003d contactList.get(UniqueContactList.getNumberMap().get(addContact));","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"            Event eventToLink \u003d createLinkedEvent(toAdd, contactToAdd);","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"            model.linkContact(toAdd, eventToLink);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"            model.updateFilteredEventList(Model.PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"ExtraShotLatte"},"content":"        } catch (NullPointerException iobe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"ExtraShotLatte"},"content":"            throw new CommandException(Messages.MESSAGE_CONTACT_NOT_FOUND);","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"ExtraShotLatte"},"content":"        return new CommandResult(String.format(MESSAGE_LINK_CONTACT_SUCCESS, toAdd));","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"ExtraShotLatte"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"ExtraShotLatte"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"ExtraShotLatte"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"ExtraShotLatte"},"content":"                || (other instanceof LinkContactCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"ExtraShotLatte"},"content":"                \u0026\u0026 eventIndex.equals(((LinkContactCommand) other).eventIndex)","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"ExtraShotLatte"},"content":"                \u0026\u0026 addContact.equals(((LinkContactCommand) other).addContact));","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"     * Creates and returns an {@code Event} with details of","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"     * newly linked contact.","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    public Event createLinkedEvent(Event eventToEdit, Contact toAdd) {","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        Name name \u003d eventToEdit.getName();","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"        Rate rate \u003d eventToEdit.getRate();","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        Address address \u003d eventToEdit.getAddress();","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"        Time startTime \u003d eventToEdit.getStartTime();","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        Time endTime \u003d eventToEdit.getEndTime();","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"        Mark mark \u003d eventToEdit.getMark();","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"        Set\u003cTag\u003e tags \u003d eventToEdit.getTags();","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        Event updatedEvent \u003d new Event(","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"                name, rate, address, startTime, endTime, tags);","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        if (mark.isDone()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"            updatedEvent.mark();","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"        updatedEvent.linkContact(toAdd);","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        return updatedEvent;","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"ExtraShotLatte"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"ExtraShotLatte":61,"glozxi":2,"bryansendeavour":27,"engenhui1999":14}},{"path":"src/main/java/seedu/event/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":" * Lists all events in the address book to the user.","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glozxi":2,"engenhui1999":4,"-":18}},{"path":"src/main/java/seedu/event/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":" * Marks an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"            + \": Marks the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_MARK_EVENT_SUCCESS \u003d \"Marked event: %1$s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    public MarkCommand(Index targetIndex) {","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"        Event eventToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"        model.markEvent(eventToMark);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_EVENT_SUCCESS, eventToMark));","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"                || (other instanceof MarkCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 targetIndex.equals(((MarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"EksdeeeX":1,"glozxi":3,"engenhui1999":51}},{"path":"src/main/java/seedu/event/logic/commands/NewContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * Creates a new contact in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"public class NewContactCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    public static final String COMMAND_WORD \u003d \"newcontact\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the contact list. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_PHONE + \"PHONE \\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_NAME + \"Deborah Tan \"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_PHONE + \"91234567\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This contact already exists\";","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    private final Contact newContact;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"     * Creates an NewContactCommand to add the specified {@code Contact}","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    public NewContactCommand(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        newContact \u003d contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        if (model.hasContact(newContact)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"        model.addContact(newContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newContact));","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof NewContactCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 newContact.equals(((NewContactCommand) other).newContact));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":51,"engenhui1999":6}},{"path":"src/main/java/seedu/event/logic/commands/RemindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.StartTimeWithinDaysPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":" * Finds and lists all events in event book whose start time is within the days specified in the argument.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"public class RemindCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"    public static final String COMMAND_WORD \u003d \"remind\";","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all events whose start time is within \"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"            + \"the specified number of days and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"            + \"Parameters: DAYS (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"            + \"Example: \" + COMMAND_WORD + \" 3\";","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"    private final StartTimeWithinDaysPredicate predicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    public RemindCommand(StartTimeWithinDaysPredicate predicate) {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"        return new CommandResult(","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"                String.format(Messages.MESSAGE_EVENTS_LISTED_OVERVIEW, model.getFilteredEventList().size()));","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"                || (other instanceof RemindCommand // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 predicate.equals(((RemindCommand) other).predicate)); // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"glozxi":36,"engenhui1999":4}},{"path":"src/main/java/seedu/event/logic/commands/RevenueCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import java.util.List;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":" * Calculates and returns the total revenue of events that are completed in the event book","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"public class RevenueCommand extends Command {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"    public static final String COMMAND_WORD \u003d \"revenue\";","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Calculates the revenue of all events that are done.\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"    public static final String SHOWING_REVENUE_MESSAGE \u003d \"The total revenue is: %.2f\";","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"        List\u003cEvent\u003e eventList \u003d model.getEventBook().getEventList();","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        double revenue \u003d eventList.stream().filter(event -\u003e event.getMark().isDone())","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"            .mapToDouble(event -\u003e event.getRate().value).sum();","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"        return new CommandResult(String.format(SHOWING_REVENUE_MESSAGE, revenue));","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"engenhui1999":29}},{"path":"src/main/java/seedu/event/logic/commands/UnmarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import java.util.List;","lastModifiedDate":"2023-03-16"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":" * Unmarks an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"            + \": Unmarks the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    public static final String MESSAGE_UNMARK_EVENT_SUCCESS \u003d \"Unmarked event: %1$s\";","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"    public UnmarkCommand(Index targetIndex) {","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"        Event eventToUnmark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"        model.unmarkEvent(eventToUnmark);","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"        return new CommandResult(String.format(MESSAGE_UNMARK_EVENT_SUCCESS, eventToUnmark));","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"                || (other instanceof UnmarkCommand // instanceof handles nulls","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"                \u0026\u0026 targetIndex.equals(((UnmarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"EksdeeeX":45,"glozxi":3,"engenhui1999":7}},{"path":"src/main/java/seedu/event/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"engenhui1999":1,"-":16}},{"path":"src/main/java/seedu/event/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_END;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_START;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.AddCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_RATE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"                        PREFIX_ADDRESS, PREFIX_TIME_START, PREFIX_TIME_END, PREFIX_TAG);","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"                PREFIX_RATE, PREFIX_TIME_START, PREFIX_TIME_END)","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"        Rate rate \u003d ParserUtil.parseRate(argMultimap.getValue(PREFIX_RATE).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        Time startTime \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME_START).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        Time endTime \u003d ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME_END).get());","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        Event event \u003d new Event(name, rate, address, startTime, endTime, tagList);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        return new AddCommand(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"glozxi":8,"engenhui1999":18,"-":39}},{"path":"src/main/java/seedu/event/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"engenhui1999":1,"-":59}},{"path":"src/main/java/seedu/event/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"engenhui1999":1,"-":147}},{"path":"src/main/java/seedu/event/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    public static final Prefix PREFIX_RATE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    public static final Prefix PREFIX_TIME_START \u003d new Prefix(\"ds/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    public static final Prefix PREFIX_TIME_END \u003d new Prefix(\"de/\");","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"glozxi":2,"engenhui1999":2,"-":14}},{"path":"src/main/java/seedu/event/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"engenhui1999":5,"-":24}},{"path":"src/main/java/seedu/event/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_END;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_START;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_RATE,","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"                        PREFIX_ADDRESS, PREFIX_TIME_START, PREFIX_TIME_END, PREFIX_TAG);","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"        EditEventDescriptor editEventDescriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"            editEventDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        if (argMultimap.getValue(PREFIX_RATE).isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"            editEventDescriptor.setRate(ParserUtil.parseRate(argMultimap.getValue(PREFIX_RATE).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"            editEventDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        if (argMultimap.getValue(PREFIX_TIME_START).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"            editEventDescriptor.setStartTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME_START).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"        if (argMultimap.getValue(PREFIX_TIME_END).isPresent()) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"            editEventDescriptor.setEndTime(ParserUtil.parseTime(argMultimap.getValue(PREFIX_TIME_END).get()));","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editEventDescriptor::setTags);","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"        if (!editEventDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"        return new EditCommand(index, editEventDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"glozxi":14,"engenhui1999":14,"-":59}},{"path":"src/main/java/seedu/event/logic/parser/EventBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"import java.time.Clock;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.AddCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.Command;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.FindCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.LinkContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.ListCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.RemindCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.RevenueCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"public class EventBookParser {","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"    private final Clock clock;","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    public EventBookParser(Clock clock) {","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        this.clock \u003d clock;","lastModifiedDate":"2023-03-21"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"ExtraShotLatte"},"content":"        case LinkContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":77,"author":{"gitId":"ExtraShotLatte"},"content":"            return new LinkContactCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":78,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"ExtraShotLatte"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"ExtraShotLatte"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"EksdeeeX"},"content":"        case UnmarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"EksdeeeX"},"content":"            return new UnmarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        case NewContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"            return new NewContactCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"glozxi"},"content":"        case RemindCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"            return new RemindCommandParser(clock).parse(arguments);","lastModifiedDate":"2023-03-21"},{"lineNumber":93,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":94,"author":{"gitId":"engenhui1999"},"content":"        case RevenueCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-20"},{"lineNumber":95,"author":{"gitId":"engenhui1999"},"content":"            return new RevenueCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":96,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ExtraShotLatte":6,"EksdeeeX":3,"glozxi":13,"bryansendeavour":3,"engenhui1999":22,"-":61}},{"path":"src/main/java/seedu/event/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.FindCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"engenhui1999":5,"-":28}},{"path":"src/main/java/seedu/event/logic/parser/LinkContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.LinkContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":" * Parses input arguments and creates a new LinkContactCommand object.","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"public class LinkContactCommandParser implements Parser\u003cLinkContactCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"     * Parses the given {@code String} of arguments in the context of the LinkContactCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"ExtraShotLatte"},"content":"     * and returns an LinkContactCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"    public LinkContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"ExtraShotLatte"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"            String[] argarr \u003d args.trim().split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"            if (argarr.length \u003c 2) {","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"                throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"                        LinkContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"            }","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"            Index index \u003d ParserUtil.parseIndex(argarr[0]);","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"            String num \u003d argarr[1];","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"            return new LinkContactCommand(index, num);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"ExtraShotLatte"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"                            LinkContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"ExtraShotLatte":30,"engenhui1999":5}},{"path":"src/main/java/seedu/event/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"engenhui1999":29}},{"path":"src/main/java/seedu/event/logic/parser/NewContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactName;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactPhone;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" * Parses input arguments and creates a new NewContactCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"public class NewContactCommandParser implements Parser\u003cNewContactCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"     * Parses the given {@code String} of arguments in the context of the NewContactCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     * and returns an NewContactCommand object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    public NewContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, NewContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        ContactName name \u003d ParserUtil.parseContactName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        ContactPhone phone \u003d ParserUtil.parseContactPhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        Contact contact \u003d new Contact(name, phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        return new NewContactCommand(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ExtraShotLatte":1,"bryansendeavour":35,"engenhui1999":9}},{"path":"src/main/java/seedu/event/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.Command;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"engenhui1999":3,"-":13}},{"path":"src/main/java/seedu/event/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.StringUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactName;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactPhone;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Email;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_INVALID_DAYS_NUMBER \u003d \"The number of days must be a positive integer.\";","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"     * Parses {@code number} into an {@code Integer} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"     * trimmed.","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"    public static Integer parseDaysNumber(String number) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        requireNonNull(number);","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        String trimmedInteger \u003d number.trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedInteger)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"            throw new ParseException(MESSAGE_INVALID_DAYS_NUMBER);","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        return Integer.parseInt(trimmedInteger);","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"     * Parses a {@code String name} into a {@code ContactName}","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"    public static ContactName parseContactName(String name) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"        if (!ContactName.isValidName(trimmedName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"            throw new ParseException(ContactName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"        return new ContactName(trimmedName);","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"     * Parses a {@code String phone} into a {@code ContactPhone}.","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    public static ContactPhone parseContactPhone(String phone) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        if (!ContactPhone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"            throw new ParseException(ContactPhone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"        return new ContactPhone(trimmedPhone);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"     * Parses a {@code String rate} into a {@code Rate}.","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"engenhui1999"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"engenhui1999"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"engenhui1999"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"engenhui1999"},"content":"    public static Rate parseRate(String rate) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"engenhui1999"},"content":"        String trimmedRate \u003d rate.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"engenhui1999"},"content":"        if (!Rate.isValidRate(trimmedRate)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"            throw new ParseException(Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"engenhui1999"},"content":"        return new Rate(trimmedRate);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"glozxi"},"content":"     * Parses a {@code String time} into a {@code Time}.","lastModifiedDate":"2023-03-15"},{"lineNumber":149,"author":{"gitId":"glozxi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"glozxi"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"glozxi"},"content":"     * @throws ParseException if the given {@code time} is invalid.","lastModifiedDate":"2023-03-15"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"glozxi"},"content":"    public static Time parseTime(String time) throws ParseException {","lastModifiedDate":"2023-03-15"},{"lineNumber":154,"author":{"gitId":"glozxi"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-03-15"},{"lineNumber":155,"author":{"gitId":"glozxi"},"content":"        String trimmedTime \u003d time.trim();","lastModifiedDate":"2023-03-15"},{"lineNumber":156,"author":{"gitId":"glozxi"},"content":"        if (!Time.isValidTime(trimmedTime)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":157,"author":{"gitId":"glozxi"},"content":"            throw new ParseException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":158,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"glozxi"},"content":"        return new Time(trimmedTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"glozxi":32,"bryansendeavour":23,"engenhui1999":24,"-":110}},{"path":"src/main/java/seedu/event/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"engenhui1999":1,"-":38}},{"path":"src/main/java/seedu/event/logic/parser/RemindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"import java.time.Clock;","lastModifiedDate":"2023-03-21"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.RemindCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.StartTimeWithinDaysPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":" * Parses input arguments and creates a new RemindCommand object","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"public class RemindCommandParser implements Parser\u003cRemindCommand\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    private final Clock clock;","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    public RemindCommandParser(Clock clock) {","lastModifiedDate":"2023-03-21"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"        this.clock \u003d clock;","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"     * Parses the given {@code String} of arguments in the context of the RemindCommand","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"     * and returns a RemindCommand object for execution.","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    public RemindCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        Integer days;","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"        try {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"            days \u003d ParserUtil.parseDaysNumber(args);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        return new RemindCommand(new StartTimeWithinDaysPredicate(","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"                clock, days));","lastModifiedDate":"2023-03-21"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"glozxi":40,"engenhui1999":5}},{"path":"src/main/java/seedu/event/logic/parser/UnmarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":" * Parses input arguments and creates a new UnmarkCommand object","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"public class UnmarkCommandParser implements Parser\u003cUnmarkCommand\u003e {","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"     * Parses the given {@code String} of arguments in the context of the UnmarkCommand","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"     * and returns a UnmarkCommand object for execution.","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    public UnmarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"        try {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"            return new UnmarkCommand(index);","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"EksdeeeX":24,"engenhui1999":5}},{"path":"src/main/java/seedu/event/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"engenhui1999":2,"-":15}},{"path":"src/main/java/seedu/event/model/ContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.UniqueContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" * Wraps all data at the contact list level","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" * Duplicates are not allowed (by .isSameContact comparison)","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"public class ContactList implements ReadOnlyContactList {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public final UniqueContactList contacts;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        contacts \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"    public ContactList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"     * Creates an ContactList using the Contacts in the {@code toBeCopied}","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public ContactList(ReadOnlyContactList toBeCopied) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        this();","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"     * Replaces the contents of the contact list with {@code contacts}.","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"     * {@code contacts} must not contain duplicate contactss.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        this.contacts.setContacts(contacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"     * Resets the existing data of this {@code ContactList} with {@code newData}.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    public void resetData(ReadOnlyContactList newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"        setContacts(newData.getContactList());","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    //// contact-level operations","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if a contact with the same identity as {@code contact} exists in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        return contacts.contains(contact);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"     * Adds a contact to the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"     * The contact must not already exist in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"    public void addContact(Contact p) {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"        contacts.add(p);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"     * Replaces the given contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"     * {@code target} must exist in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"     * The contact identity of {@code editedContact} must not be the same as another existing","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"     * contact in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(editedContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        contacts.setContact(target, editedContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"     * Removes {@code key} from this {@code ContactList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"     * {@code key} must exist in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"    public void removeContact(Contact key) {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        contacts.remove(key);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    //// util methods","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        return contacts.asUnmodifiableObservableList().size() + \" contacts\";","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"        // TODO: refine later","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"    public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"        return contacts.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof ContactList // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 contacts.equals(((ContactList) other).contacts));","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"        return contacts.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"ExtraShotLatte":5,"bryansendeavour":119,"engenhui1999":3}},{"path":"src/main/java/seedu/event/model/EventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.UniqueEventList;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":" * Duplicates are not allowed (by .isSameEvent comparison)","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"public class EventBook implements ReadOnlyEventBook {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    private final UniqueEventList events;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"        events \u003d new UniqueEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"    public EventBook() {}","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"     * Creates an EventBook using the Events in the {@code toBeCopied}","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"    public EventBook(ReadOnlyEventBook toBeCopied) {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"     * Replaces the contents of the event list with {@code events}.","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"        this.events.setEvents(events);","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"     * Resets the existing data of this {@code EventBook} with {@code newData}.","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"    public void resetData(ReadOnlyEventBook newData) {","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        setEvents(newData.getEventList());","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"    //// event-level operations","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"        return events.contains(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"     * Adds an event to the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"     * The event must not already exist in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"    public void addEvent(Event p) {","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"        events.add(p);","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"     * Replaces the given event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"        requireNonNull(editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"        events.setEvent(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"glozxi"},"content":"     * Removes {@code key} from this {@code EventBook}.","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"    public void removeEvent(Event key) {","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"glozxi"},"content":"        events.remove(key);","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"     * Marks {@code target} from this {@code EventBook}.","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"EksdeeeX"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"EksdeeeX"},"content":"    public void markEvent(Event target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"        events.mark(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"glozxi"},"content":"     * Unmarks {@code target} from this {@code EventBook}.","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"EksdeeeX"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"EksdeeeX"},"content":"    public void unmarkEvent(Event target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"        events.unmark(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"    public void linkContact(Event event, Event linkedEvent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"        events.linkContact(event, linkedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"        return events.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"    public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"glozxi"},"content":"        return events.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"glozxi"},"content":"                || (other instanceof EventBook // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 events.equals(((EventBook) other).events));","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"glozxi"},"content":"        return events.hashCode();","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EksdeeeX":8,"ExtraShotLatte":2,"glozxi":42,"bryansendeavour":1,"engenhui1999":7,"-":80}},{"path":"src/main/java/seedu/event/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_EVENTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    Predicate\u003cContact\u003e PREDICATE_SHOW_ALL_CONTACTS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"     * Returns the user prefs\u0027 event book file path.","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"     * Sets the user prefs\u0027 event book file path.","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"    void setEventBookFilePath(Path eventBookFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    void setContactListFilePath(Path contactListFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"     * Replaces event book data with the data in {@code eventBook}.","lastModifiedDate":"2023-03-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    void setEventBook(ReadOnlyEventBook eventBook);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-27"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"     * Replaces contact list data with the data in {@code contactList}.","lastModifiedDate":"2023-03-27"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-27"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"    void setContactList(ReadOnlyContactList contactList);","lastModifiedDate":"2023-03-27"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"    /** Returns the EventBook */","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"    ReadOnlyEventBook getEventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    /** Returns the ContactList */","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    ReadOnlyContactList getContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if a contact with the same identity as {@code contact} exists in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"    boolean hasContact(Contact contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if an event with the same identity as {@code event} exists in the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"    boolean hasEvent(Event event);","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"     * Deletes the given event.","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"     * The event must exist in the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"    void deleteEvent(Event target);","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":87,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"engenhui1999"},"content":"     * Marks the given event.","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"     * The event must exist in the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":90,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"EksdeeeX"},"content":"    void markEvent(Event target);","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"EksdeeeX"},"content":"     * Unmarks the given event.","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"     * The event must exist in the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":96,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"EksdeeeX"},"content":"    void unmarkEvent(Event target);","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"     * Adds the given contact.","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"     * {@code contact} must not already exist in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"    void addContact(Contact contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"     * Adds the given event.","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"     * {@code event} must not already exist in the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":110,"author":{"gitId":"glozxi"},"content":"    void addEvent(Event event);","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":112,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"EksdeeeX"},"content":"     * Retrieves the rate of an event.","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"EksdeeeX"},"content":"    Rate getRate(Event event);","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"     * Replaces the given event {@code target} with {@code editedEvent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"     * {@code target} must exist in the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the event book.","lastModifiedDate":"2023-03-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":122,"author":{"gitId":"glozxi"},"content":"    void setEvent(Event target, Event editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"glozxi"},"content":"    /** Returns an unmodifiable view of the filtered event list */","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"    ObservableList\u003cEvent\u003e getFilteredEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"    /** Returns an unmodifiable view of the filtered contact list */","lastModifiedDate":"2023-03-20"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"    ObservableList\u003cContact\u003e getFilteredContactList();","lastModifiedDate":"2023-03-20"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"glozxi"},"content":"     * Updates the filter of the filtered event list to filter by the given {@code predicate}.","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":135,"author":{"gitId":"glozxi"},"content":"    void updateFilteredEventList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"    void updateFilteredContactList(Predicate\u003cContact\u003e predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"    void linkContact(Event event, Event linkedEvent);","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"EksdeeeX":12,"glozxi":17,"bryansendeavour":43,"engenhui1999":9,"-":59}},{"path":"src/main/java/seedu/event/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    private final EventBook eventBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    private final ContactList contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    private final FilteredList\u003cEvent\u003e filteredEvents;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    private final FilteredList\u003cContact\u003e filteredContacts;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"     * Initializes a ModelManager with the given eventBook and userPrefs.","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    public ModelManager(ReadOnlyEventBook eventBook, ReadOnlyContactList contactList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        requireAllNonNull(eventBook, contactList, userPrefs);","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        logger.fine(\"Initializing with address book: \" + eventBook","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"                + \" with contact list: \" + contactList","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        this.eventBook \u003d new EventBook(eventBook);","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        this.contactList \u003d new ContactList(contactList);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"        filteredEvents \u003d new FilteredList\u003c\u003e(this.eventBook.getEventList());","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        filteredContacts \u003d new FilteredList\u003c\u003e(this.contactList.getContactList());","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        this(new EventBook(), new ContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"        return userPrefs.getEventBookFilePath();","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"        return userPrefs.getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"    public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"        requireNonNull(eventBookFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"glozxi"},"content":"        userPrefs.setEventBookFilePath(eventBookFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath(Path contactListFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contactListFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        userPrefs.setContactListFilePath(contactListFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EventBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"    public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"        this.eventBook.resetData(eventBook);","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"glozxi"},"content":"    public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        return eventBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"glozxi"},"content":"    public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"        return eventBook.hasEvent(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"    public void deleteEvent(Event target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        eventBook.removeEvent(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"EksdeeeX"},"content":"    public void markEvent(Event target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":123,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"glozxi"},"content":"        eventBook.markEvent(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":127,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":128,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":129,"author":{"gitId":"EksdeeeX"},"content":"    public void unmarkEvent(Event target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":130,"author":{"gitId":"EksdeeeX"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-03-16"},{"lineNumber":131,"author":{"gitId":"glozxi"},"content":"        eventBook.unmarkEvent(target);","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"glozxi"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":134,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":136,"author":{"gitId":"glozxi"},"content":"    public void addEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"glozxi"},"content":"        eventBook.addEvent(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"glozxi"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"glozxi"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"glozxi"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":145,"author":{"gitId":"glozxi"},"content":"        eventBook.setEvent(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":148,"author":{"gitId":"glozxi"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Event List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":151,"author":{"gitId":"glozxi"},"content":"     * Returns an unmodifiable view of the list of {@code Event} backed by the internal list of","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"     * {@code versionedEventBook}","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":155,"author":{"gitId":"glozxi"},"content":"    public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"glozxi"},"content":"        return filteredEvents;","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"    public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"        return filteredContacts;","lastModifiedDate":"2023-03-20"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":165,"author":{"gitId":"glozxi"},"content":"    public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":167,"author":{"gitId":"glozxi"},"content":"        filteredEvents.setPredicate(predicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":170,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":171,"author":{"gitId":"bryansendeavour"},"content":"    public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":172,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":173,"author":{"gitId":"bryansendeavour"},"content":"        filteredContacts.setPredicate(predicate);","lastModifiedDate":"2023-03-27"},{"lineNumber":174,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":176,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"bryansendeavour"},"content":"    public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"bryansendeavour"},"content":"        return contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"bryansendeavour"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"bryansendeavour"},"content":"        return contactList.hasContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"bryansendeavour"},"content":"    public void addContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"bryansendeavour"},"content":"        contactList.addContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"bryansendeavour"},"content":"        updateFilteredContactList(PREDICATE_SHOW_ALL_CONTACTS);","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"ExtraShotLatte"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":194,"author":{"gitId":"bryansendeavour"},"content":"    public void linkContact(Event event, Event linkedEvent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":195,"author":{"gitId":"glozxi"},"content":"        eventBook.linkContact(event, linkedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"glozxi"},"content":"        updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":197,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactList(ReadOnlyContactList contactList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":200,"author":{"gitId":"bryansendeavour"},"content":"        this.contactList.resetData(contactList);","lastModifiedDate":"2023-03-27"},{"lineNumber":201,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-27"},{"lineNumber":202,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":203,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"EksdeeeX"},"content":"    public Rate getRate(Event event) {","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"EksdeeeX"},"content":"        return event.getRate();","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":222,"author":{"gitId":"glozxi"},"content":"        return eventBook.equals(other.eventBook)","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 contactList.equals(other.contactList)","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":225,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 filteredEvents.equals(other.filteredEvents);","lastModifiedDate":"2023-03-17"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ExtraShotLatte":4,"EksdeeeX":10,"glozxi":45,"bryansendeavour":52,"engenhui1999":11,"-":106}},{"path":"src/main/java/seedu/event/model/ReadOnlyContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * Unmodifiable view of a contact list","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"public interface ReadOnlyContactList {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"     * Returns an unmodifiable view of the contact list.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    ObservableList\u003cContact\u003e getContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"glozxi":1,"bryansendeavour":12,"engenhui1999":2}},{"path":"src/main/java/seedu/event/model/ReadOnlyEventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"public interface ReadOnlyEventBook {","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"     * Returns an unmodifiable view of the events list.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"     * This list will not contain any duplicate events.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    ObservableList\u003cEvent\u003e getEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glozxi":4,"engenhui1999":2,"-":11}},{"path":"src/main/java/seedu/event/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"glozxi":1,"bryansendeavour":1,"engenhui1999":2,"-":14}},{"path":"src/main/java/seedu/event/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    private Path eventBookFilePath \u003d Paths.get(\"data\" , \"eventbook.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private Path contactListFilePath \u003d Paths.get(\"data\", \"contactlist.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        setEventBookFilePath(newUserPrefs.getEventBookFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        setContactListFilePath(newUserPrefs.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        return eventBookFilePath;","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        return contactListFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"    public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"        requireNonNull(eventBookFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"        this.eventBookFilePath \u003d eventBookFilePath;","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath(Path contactListFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contactListFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"        this.contactListFilePath \u003d contactListFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 eventBookFilePath.equals(o.eventBookFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"        return Objects.hash(guiSettings, eventBookFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"glozxi"},"content":"        sb.append(\"\\nLocal data file location : \" + eventBookFilePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glozxi":10,"bryansendeavour":9,"engenhui1999":2,"-":77}},{"path":"src/main/java/seedu/event/model/contact/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * Represents a contact.","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class Contact {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"    private ContactName name;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"    private ContactPhone phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public Contact(ContactName name, ContactPhone phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        requireAllNonNull(name, phone);","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"    public Contact() {};","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public ContactName getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        return name;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    public ContactPhone getPhone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        return phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"     * Returns true if both contacts have the same name.","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"     * This defines a weaker notion of equality between two contacts.","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public boolean isSameContact(Contact otherContact) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"        if (otherContact \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"ExtraShotLatte"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        if (otherContact \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"        if (otherContact.getPhone().equals(this.getPhone())) {","lastModifiedDate":"2023-03-21"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"        return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"ExtraShotLatte"},"content":"    public boolean isNull() {","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"ExtraShotLatte"},"content":"        return this.name \u003d\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"     * Returns true if both contacts have the same identity and data fields.","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"     * This defines a stronger notion of equality between two contacts.","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"ExtraShotLatte"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"ExtraShotLatte"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        if (!(other instanceof Contact)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"        Contact otherContact \u003d (Contact) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"ExtraShotLatte"},"content":"        if (this.name \u003d\u003d otherContact.name \u0026\u0026 this.phone \u003d\u003d otherContact.phone) {","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"ExtraShotLatte"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":81,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"        return otherContact.getName().equals(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 otherContact.getPhone().equals(getPhone());","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"        return Objects.hash(name, phone);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"                .append(getPhone());","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"ExtraShotLatte"},"content":"     * Formats the string needed to save in Json file","lastModifiedDate":"2023-03-12"},{"lineNumber":104,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":105,"author":{"gitId":"ExtraShotLatte"},"content":"    public String toCardString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"ExtraShotLatte"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"ExtraShotLatte"},"content":"            return name.fullName + \" HP:\" + phone.value;","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"ExtraShotLatte"},"content":"        } catch (NullPointerException npe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"ExtraShotLatte"},"content":"            return \" \";","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"ExtraShotLatte":36,"glozxi":4,"bryansendeavour":71,"engenhui1999":2}},{"path":"src/main/java/seedu/event/model/contact/ContactName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * Represents a Contact\u0027s name in the contact book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class ContactName {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    public ContactName(String name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        return fullName;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof ContactName // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 fullName.equals(((ContactName) other).fullName)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":57,"engenhui1999":2}},{"path":"src/main/java/seedu/event/model/contact/ContactPhone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * Represents a Contact\u0027s phone number in the contact book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class ContactPhone {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"            \"Phone numbers should only contain numbers, and it should be 8 digits long\";","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{8,}\";","lastModifiedDate":"2023-03-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    public ContactPhone(String phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof ContactPhone // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 value.equals(((ContactPhone) other).value)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":7,"engenhui1999":2,"-":44}},{"path":"src/main/java/seedu/event/model/contact/UniqueContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" * A list of contacts that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":" * A contact is considered unique by comparing using {@code Contact#isSameContact(Contact)}. As such, adding and","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":" * updating of contacts uses Contact#isSameContact(Contact) for equality to ensure that the contact being added","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":" * or updated is unique in terms of identity in the UniqueContactList.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":" * However, the removal of a contact uses Contact#equals(Object) to ensure that the contact","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":" * @see Contact#isSameContact(Contact)","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"public class UniqueContactList implements Iterable\u003cContact\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"    private static HashMap\u003cString, Integer\u003e numberMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"    private static int count \u003d 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    private final ObservableList\u003cContact\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    private final ObservableList\u003cContact\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if the list contains an equivalent Contact as the given argument.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public boolean contains(Contact toCheck) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        return internalList.stream().anyMatch(toCheck::isSameContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"    public static HashMap\u003cString, Integer\u003e getNumberMap() {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"        return numberMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"     * Adds a Contact to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"     * The Contact must not already exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    public void add(Contact toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"ExtraShotLatte"},"content":"        numberMap.put(toAdd.getPhone().value, count);","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"ExtraShotLatte"},"content":"        count++;","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"     * Replaces the Contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"     * The Contact identity of {@code editedContact} must not be the same as another existing Contact in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"        if (!target.isSameContact(editedContact) \u0026\u0026 contains(editedContact)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        internalList.set(index, editedContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"     * Removes the equivalent Contact from the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"     * The Contact must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    public void remove(Contact toRemove) {","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts(UniqueContactList replacement) {","lastModifiedDate":"2023-03-27"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"        count \u003d 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"glozxi"},"content":"     * Replaces the contents of this list with {@code contacts}.","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"glozxi"},"content":"     * {@code contacts} must not contain duplicate Contacts.","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"        requireAllNonNull(contacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"        if (!contactsAreUnique(contacts)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        count \u003d 0;","lastModifiedDate":"2023-03-27"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"        internalList.setAll(contacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"    public ObservableList\u003cContact\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"    public Iterator\u003cContact\u003e iterator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof UniqueContactList // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"                    \u0026\u0026 internalList.equals(((UniqueContactList) other).internalList));","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if {@code Contacts} contains only unique Contacts.","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"    private boolean contactsAreUnique(List\u003cContact\u003e contacts) {","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"        for (int i \u003d 0; i \u003c contacts.size() - 1; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"            for (int j \u003d i + 1; j \u003c contacts.size(); j++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"                if (contacts.get(i).isSameContact(contacts.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"                    return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"        return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"ExtraShotLatte":10,"glozxi":3,"bryansendeavour":131,"engenhui1999":4}},{"path":"src/main/java/seedu/event/model/contact/exceptions/ContactNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":" * Signals that the operation is unable to find the specified contact.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"public class ContactNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":6,"engenhui1999":1}},{"path":"src/main/java/seedu/event/model/contact/exceptions/DuplicateContactException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":" * Signals that the operation will result in duplicate Contacts (Contacts are considered duplicates","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":" * if they have the same identity).","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"public class DuplicateContactException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"    public DuplicateContactException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"        super(\"Operation will result in duplicate events\");","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"glozxi":1,"bryansendeavour":10,"engenhui1999":1}},{"path":"src/main/java/seedu/event/model/event/Address.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":" * Represents an Event\u0027s address in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidAddress(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Address {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Addresses can take any values, and it should not be blank\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[^\\\\s].*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param address A valid address.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Address(String address) {","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        checkArgument(isValidAddress(address), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        value \u003d address;","lastModifiedDate":"2018-08-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static boolean isValidAddress(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || (other instanceof Address // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Address) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glozxi":1,"engenhui1999":2,"-":54}},{"path":"src/main/java/seedu/event/model/event/Email.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":" * Represents an Event\u0027s email in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidEmail(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Email {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private static final String SPECIAL_CHARACTERS \u003d \"+_.-\";","lastModifiedDate":"2021-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Emails should be of the format local-part@domain \"","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"and adhere to the following constraints:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"1. The local-part should only contain alphanumeric characters and these special characters, excluding \"","lastModifiedDate":"2018-02-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"the parentheses, (\" + SPECIAL_CHARACTERS + \"). The local-part may not start or end with any special \"","lastModifiedDate":"2021-07-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"characters.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"2. This is followed by a \u0027@\u0027 and then a domain name. The domain name is made up of domain labels \"","lastModifiedDate":"2021-07-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"separated by periods.\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"The domain name must:\\n\"","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"    - end with a domain label at least 2 characters long\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"    - have each domain label start and end with alphanumeric characters\\n\"","lastModifiedDate":"2021-07-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"    - have each domain label consist of alphanumeric characters, separated only by hyphens, if any.\";","lastModifiedDate":"2021-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    // alphanumeric and special characters","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String ALPHANUMERIC_NO_UNDERSCORE \u003d \"[^\\\\W_]+\"; // alphanumeric characters except underscore","lastModifiedDate":"2021-07-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String LOCAL_PART_REGEX \u003d \"^\" + ALPHANUMERIC_NO_UNDERSCORE + \"([\" + SPECIAL_CHARACTERS + \"]\"","lastModifiedDate":"2021-07-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_PART_REGEX \u003d ALPHANUMERIC_NO_UNDERSCORE","lastModifiedDate":"2021-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + \"(-\" + ALPHANUMERIC_NO_UNDERSCORE + \")*\";","lastModifiedDate":"2021-07-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_LAST_PART_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"){2,}$\"; // At least two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String DOMAIN_REGEX \u003d \"(\" + DOMAIN_PART_REGEX + \"\\\\.)*\" + DOMAIN_LAST_PART_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d LOCAL_PART_REGEX + \"@\" + DOMAIN_REGEX;","lastModifiedDate":"2021-07-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Constructs an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param email A valid email address.","lastModifiedDate":"2017-05-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Email(String email) {","lastModifiedDate":"2017-05-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        checkArgument(isValidEmail(email), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        value \u003d email;","lastModifiedDate":"2018-08-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns if a given string is a valid email.","lastModifiedDate":"2018-04-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static boolean isValidEmail(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                || (other instanceof Email // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Email) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glozxi":1,"engenhui1999":2,"-":68}},{"path":"src/main/java/seedu/event/model/event/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":" * Represents an Event in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"public class Event {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"    // Identity fields","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"    private final Name name;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"    // Data fields","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    private final Rate rate;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"    private final Address address;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    private final Time startTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    private final Time endTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    private Mark mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"    private Contact contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    public Event(Name name, Rate rate, Address address, Time startTime, Time endTime, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        requireAllNonNull(name, rate, address, tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"        this.mark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"        this.contact \u003d new Contact();","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"        return name;","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"    public Rate getRate() {","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        return rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"    public Address getAddress() {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"        return address;","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    public Time getStartTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        return startTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"    public Time getEndTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"        return endTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"    public Mark getMark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"        return mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"ExtraShotLatte"},"content":"    public Contact getContact() {","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"ExtraShotLatte"},"content":"        return contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"engenhui1999"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"engenhui1999"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"engenhui1999"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"engenhui1999"},"content":"     * Marks event as done.","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"    public void mark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"        mark.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"EksdeeeX"},"content":"     * Marks event as undone.","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"EksdeeeX"},"content":"    public void unmark() {","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"EksdeeeX"},"content":"        mark.setUndone();","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"ExtraShotLatte"},"content":"     * Link a contact to","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"ExtraShotLatte"},"content":"     * @param contact","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"ExtraShotLatte"},"content":"    public void linkContact(Contact contact) {","lastModifiedDate":"2023-03-12"},{"lineNumber":99,"author":{"gitId":"ExtraShotLatte"},"content":"        requireAllNonNull(contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"ExtraShotLatte"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":101,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":102,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"ExtraShotLatte"},"content":"     * Returns true if both events have the same name and the same timing.","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"engenhui1999"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"engenhui1999"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"engenhui1999"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"engenhui1999"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"ExtraShotLatte"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 otherEvent.getStartTime().equals(getStartTime())","lastModifiedDate":"2023-03-15"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 otherEvent.getEndTime().equals(getEndTime());","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"engenhui1999"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"engenhui1999"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"engenhui1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"engenhui1999"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"engenhui1999"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"engenhui1999"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"engenhui1999"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"engenhui1999"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"engenhui1999"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 otherEvent.getRate().equals(getRate())","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 otherEvent.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 otherEvent.getStartTime().equals(getStartTime())","lastModifiedDate":"2023-03-15"},{"lineNumber":137,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 otherEvent.getEndTime().equals(getEndTime())","lastModifiedDate":"2023-03-15"},{"lineNumber":138,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 otherEvent.getMark().equals(getMark())","lastModifiedDate":"2023-03-11"},{"lineNumber":139,"author":{"gitId":"ExtraShotLatte"},"content":"                \u0026\u0026 otherEvent.getContact().equals(getContact())","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 otherEvent.getTags().equals(getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":141,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"engenhui1999"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"engenhui1999"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"glozxi"},"content":"        return Objects.hash(name, rate, address, startTime, endTime, mark, contact, tags);","lastModifiedDate":"2023-03-15"},{"lineNumber":147,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"engenhui1999"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"engenhui1999"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"engenhui1999"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"engenhui1999"},"content":"                .append(\"; Rate: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"engenhui1999"},"content":"                .append(getRate())","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"engenhui1999"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"engenhui1999"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-11"},{"lineNumber":157,"author":{"gitId":"glozxi"},"content":"                .append(\"; Timing: \")","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"glozxi"},"content":"                .append(getStartTime())","lastModifiedDate":"2023-03-15"},{"lineNumber":159,"author":{"gitId":"glozxi"},"content":"                .append(\" to \")","lastModifiedDate":"2023-03-15"},{"lineNumber":160,"author":{"gitId":"glozxi"},"content":"                .append(getEndTime())","lastModifiedDate":"2023-03-15"},{"lineNumber":161,"author":{"gitId":"engenhui1999"},"content":"                .append(\"; Mark: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":162,"author":{"gitId":"engenhui1999"},"content":"                .append(getMark());","lastModifiedDate":"2023-03-11"},{"lineNumber":163,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"ExtraShotLatte"},"content":"        if (!contact.isNull()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":165,"author":{"gitId":"ExtraShotLatte"},"content":"            builder.append(\"; Contact: \")","lastModifiedDate":"2023-03-12"},{"lineNumber":166,"author":{"gitId":"ExtraShotLatte"},"content":"                    .append(getContact());","lastModifiedDate":"2023-03-12"},{"lineNumber":167,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":168,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":169,"author":{"gitId":"engenhui1999"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-06"},{"lineNumber":170,"author":{"gitId":"engenhui1999"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"engenhui1999"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"engenhui1999"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":174,"author":{"gitId":"engenhui1999"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":175,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"ExtraShotLatte":24,"EksdeeeX":7,"glozxi":21,"engenhui1999":125}},{"path":"src/main/java/seedu/event/model/event/Mark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":" * Represents the completeness of an Event in Paidlancers.","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"public class Mark {","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"     * Constructs a {@code Mark}.","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"    public Mark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"     * Returns true if an event is done.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"        return isDone;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"     * Marks the event as done.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    public void setDone() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"     * Marks the event as undone.","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"    public void setUndone() {","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"                || (other instanceof Mark // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 isDone \u003d\u003d ((Mark) other).isDone); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        return Double.hashCode(isDone ? 1 : 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"EksdeeeX":7,"engenhui1999":46}},{"path":"src/main/java/seedu/event/model/event/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":" * Represents an Event\u0027s name in the address book.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glozxi":1,"engenhui1999":2,"-":56}},{"path":"src/main/java/seedu/event/model/event/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.StringUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":" * Tests that a {@code Event}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(event.getName().fullName, keyword));","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"glozxi":3,"engenhui1999":3,"-":25}},{"path":"src/main/java/seedu/event/model/event/Rate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":" * Represents an Event\u0027s rate in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRate(String)}","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"public class Rate {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"            \"Rate should be a positive value, it should be more than 0.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    public final double value;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"     * Constructs a {@code Rate}.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"     * @param value A valid rate.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    public Rate(String value) {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"        checkArgument(isValidRate(value.toString()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"        this.value \u003d Double.parseDouble(value);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"     * Returns true if a given string is a valid rate.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    public static boolean isValidRate(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"            return Double.parseDouble(test) \u003e 0; //test.matches(\"[-+]?[0-9]*\\\\.?[0-9]+\")","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"        return String.format(\"%.2f\", value);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"                || (other instanceof Rate // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 value \u003d\u003d ((Rate) other).value); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"        return Double.hashCode(value);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"engenhui1999":56}},{"path":"src/main/java/seedu/event/model/event/StartTimeWithinDaysPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import java.time.Clock;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":" * Tests that a {@code Event}\u0027s start {@code Time} is within the given number of days.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"public class StartTimeWithinDaysPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"    private final LocalDateTime timeNow;","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"    private final Integer days;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"     * Creates a predicate to test if an event is within the given {@code days} from","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"     * the given {@code timeNow}.","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"    public StartTimeWithinDaysPredicate(Clock clock, Integer days) {","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"        this.timeNow \u003d LocalDateTime.now(clock);","lastModifiedDate":"2023-03-21"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"        this.days \u003d days;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    public boolean test(Event event) {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"        LocalDateTime eventStartTime \u003d event.getStartTime().time;","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        boolean isStartTimeBeforeNow \u003d timeNow.compareTo(eventStartTime) \u003e 0;","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"        if (isStartTimeBeforeNow) {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        LocalDate dateNow \u003d timeNow.toLocalDate();","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        LocalDate eventStartDate \u003d eventStartTime.toLocalDate();","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        long fullDaysBetween \u003d ChronoUnit.DAYS.between(dateNow, eventStartDate);","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        return fullDaysBetween \u003c\u003d days;","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"                || (other instanceof StartTimeWithinDaysPredicate // instanceof handles nulls","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 days.equals(((StartTimeWithinDaysPredicate) other).days)); // state check","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"glozxi":45,"engenhui1999":1}},{"path":"src/main/java/seedu/event/model/event/Time.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":" * Represents an Event\u0027s start or end time in the event book.","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"public class Time {","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"            \"Time should be of the format dd-MM-uuuu hh:mm\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"    public static final DateTimeFormatter LOCAL_DATE_TIME_FORMATTER \u003d DateTimeFormatter","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"            .ofPattern(\"dd-MM-uuuu HH:mm\");","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"    public final LocalDateTime time;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"     * Constructs a {@code Time}.","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"     *","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"     * @param time A valid time.","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public Time(String time) {","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        requireNonNull(time);","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"        checkArgument(isValidTime(time), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"        this.time \u003d parseLocalDateTime(time);","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"     * Returns true if given string gives a valid time.","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"    public static boolean isValidTime(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        try {","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"            parseLocalDateTime(test);","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"            return true;","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-03-15"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"            return false;","lastModifiedDate":"2023-03-15"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-15"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"    private static LocalDateTime parseLocalDateTime(String test) {","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        return LocalDateTime.parse(test, LOCAL_DATE_TIME_FORMATTER","lastModifiedDate":"2023-03-15"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"                .withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"    public String toString() {","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        return time.format(LOCAL_DATE_TIME_FORMATTER);","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-15"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-15"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"                || (other instanceof Time // instanceof handles nulls","lastModifiedDate":"2023-03-15"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 time.equals(((Time) other).time)); // state check","lastModifiedDate":"2023-03-15"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-15"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        return Objects.hash(time);","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"glozxi":68,"engenhui1999":2}},{"path":"src/main/java/seedu/event/model/event/UniqueEventList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":" * A list of events that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":" * An event is considered unique by comparing using {@code Event#isSameEvent(Event)}. As such, adding and updating of","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":" * events uses Event#isSameEvent(Event) for equality so as to ensure that the event being added or updated is","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":" * unique in terms of identity in the UniqueEventList. However, the removal of an event uses Event#equals(Object) so","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":" * as to ensure that the event with exactly the same fields will be removed.","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"public class UniqueEventList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"     * Returns true if the list contains an equivalent event as the given argument.","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"     * Adds a event to the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"     * The event must not already exist in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"     * Replaces the event {@code target} in the list with {@code editedEvent}.","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"     * The event identity of {@code editedEvent} must not be the same as another existing event in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"    public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        requireAllNonNull(target, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        if (!target.isSameEvent(editedEvent) \u0026\u0026 contains(editedEvent)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"        internalList.set(index, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"     * Removes the equivalent event from the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"     * The event must exist in the list.","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"engenhui1999"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"            throw new EventNotFoundException();","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"     * Marks the equivalent event from the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"     * The event must exist in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"EksdeeeX"},"content":"    public void mark(Event toMark) {","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(toMark);","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"EksdeeeX"},"content":"        toMark.mark();","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"        setEvent(toMark, toMark);","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"EksdeeeX"},"content":"     * Unmarks the equivalent event from the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"EksdeeeX"},"content":"     * The event must exist in the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"EksdeeeX"},"content":"    public void unmark(Event toUnmark) {","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"EksdeeeX"},"content":"        requireNonNull(toUnmark);","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"EksdeeeX"},"content":"        toUnmark.unmark();","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"        setEvent(toUnmark, toUnmark);","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"     * Links the equivalent event from the list.","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"     * The event must exist in the list","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"    public void linkContact(Event toLink, Event linkedEvent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(toLink);","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        setEvent(toLink, linkedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"glozxi"},"content":"    public void setEvents(UniqueEventList replacement) {","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"     * Replaces the contents of this list with {@code events}.","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"     * {@code events} must not contain duplicate events.","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"    public void setEvents(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"        requireAllNonNull(events);","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"glozxi"},"content":"        if (!eventsAreUnique(events)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"glozxi"},"content":"            throw new DuplicateEventException();","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"        internalList.setAll(events);","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":131,"author":{"gitId":"engenhui1999"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":136,"author":{"gitId":"engenhui1999"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"glozxi"},"content":"                || (other instanceof UniqueEventList // instanceof handles nulls","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"glozxi"},"content":"                        \u0026\u0026 internalList.equals(((UniqueEventList) other).internalList));","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"glozxi"},"content":"     * Returns true if {@code events} contains only unique events.","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"glozxi"},"content":"    private boolean eventsAreUnique(List\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"glozxi"},"content":"        for (int i \u003d 0; i \u003c events.size() - 1; i++) {","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"glozxi"},"content":"            for (int j \u003d i + 1; j \u003c events.size(); j++) {","lastModifiedDate":"2023-03-17"},{"lineNumber":158,"author":{"gitId":"glozxi"},"content":"                if (events.get(i).isSameEvent(events.get(j))) {","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EksdeeeX":11,"glozxi":39,"bryansendeavour":8,"engenhui1999":20,"-":87}},{"path":"src/main/java/seedu/event/model/event/exceptions/DuplicateEventException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":" * Signals that the operation will result in duplicate Events (Events are considered duplicates if they have the same","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"public class DuplicateEventException extends RuntimeException {","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"    public DuplicateEventException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"        super(\"Operation would result in duplicate events\");","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"glozxi":4,"engenhui1999":1,"-":6}},{"path":"src/main/java/seedu/event/model/event/exceptions/EventNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event.exceptions;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":" * Signals that the operation is unable to find the specified event.","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"public class EventNotFoundException extends RuntimeException {}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"glozxi":5,"engenhui1999":1}},{"path":"src/main/java/seedu/event/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"engenhui1999":2,"-":52}},{"path":"src/main/java/seedu/event/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactName;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactPhone;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":" * Contains utility methods for populating {@code EventBook} with sample data.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public static Contact[] getSampleContacts() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        return new Contact [] {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"            new Contact(new ContactName(\"Gladious Lee\"), new ContactPhone(\"92348274\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"            new Contact(new ContactName(\"Sofia Neistat\"), new ContactPhone(\"81274623\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"            new Contact(new ContactName(\"Tan Pei Ming\"), new ContactPhone(\"91120392\"))","lastModifiedDate":"2023-03-23"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        };","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    public static Event[] getSampleEvents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"        return new Event[] {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"            new Event(new Name(\"Wedding Lunch Photography\"), new Rate(\"120\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"                new Address(\"York Hotel ballroom\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"                new Time(\"05-05-2023 11:00\"), new Time(\"05-05-2023 14:30\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":38,"author":{"gitId":"ExtraShotLatte"},"content":"                getTagSet(\"carousell\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"            new Event(new Name(\"Wedding Dinner Photobooth\"), new Rate(\"80\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":40,"author":{"gitId":"ExtraShotLatte"},"content":"                new Address(\"3 rich avenue SG 991203\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"                new Time(\"08-05-2023 19:00\"), new Time(\"08-05-2023 22:30\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"                getTagSet(\"photobooth\", \"carousell\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"            new Event(new Name(\"Barista at Chanel launch\"), new Rate(\"100\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"                new Address(\"Open area @ Orchard Road\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"                new Time(\"02-05-2023 11:00\"), new Time(\"02-05-2023 18:00\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"                getTagSet(\"barista\")),","lastModifiedDate":"2023-03-23"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"            new Event(new Name(\"Wedding Lunch Live Singing\"), new Rate(\"280\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"                new Address(\"Raffles Hotel Jubilee Ballroom\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"                new Time(\"15-05-2023 11:00\"), new Time(\"15-05-2023 14:00\"),","lastModifiedDate":"2023-03-23"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"                getTagSet(\"family\"))","lastModifiedDate":"2023-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"    public static ReadOnlyEventBook getSampleEventBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"        EventBook sampleAb \u003d new EventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        for (Event sampleEvent : getSampleEvents()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"            sampleAb.addEvent(sampleEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"    public static ReadOnlyContactList getSampleContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"        ContactList sampleCl \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        for (Contact sampleContact : getSampleContacts()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"            sampleCl.addContact(sampleContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"        return sampleCl;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"ExtraShotLatte":19,"glozxi":6,"bryansendeavour":13,"engenhui1999":15,"-":26}},{"path":"src/main/java/seedu/event/storage/ContactListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":" * Represents a storage for {@link seedu.event.model.ContactList}.","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"public interface ContactListStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"     * Returns ContactList data as a {@link seedu.event.model.ReadOnlyContactList}.","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"     * @see #getContactListFilePath()","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    Optional\u003cReadOnlyContactList\u003e readContactList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"     * Saves the given {@link ReadOnlyContactList} to the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"     * @param contactList cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    void saveContactList(ReadOnlyContactList contactList) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"     * @see #saveContactList(ReadOnlyContactList)","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"    void saveContactList(ReadOnlyContactList eventBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"glozxi":1,"bryansendeavour":38,"engenhui1999":5}},{"path":"src/main/java/seedu/event/storage/EventBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":" * Represents a storage for {@link EventBook}.","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"public interface EventBookStorage {","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"     * Returns EventBook data as a {@link ReadOnlyEventBook}.","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"     * @see #getEventBookFilePath()","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"     * Saves the given {@link ReadOnlyEventBook} to the storage.","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"     * @param eventBook cannot be null.","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook) throws IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"     * @see #saveEventBook(ReadOnlyEventBook)","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"glozxi":42,"engenhui1999":4}},{"path":"src/main/java/seedu/event/storage/JsonAdaptedContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactName;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactPhone;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * Jackson-friendly version of {@link Contact}.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"public class JsonAdaptedContact {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MISSING_CFIELD_MESSAGE_FORMAT \u003d \"Contact\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private final String name;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    private final String phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     * Contructs a {@code JsonAdaptedContact} with the give contact details.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    public JsonAdaptedContact(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"     * Converts a given {@code Contact} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public JsonAdaptedContact(Contact source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"     * Converts this Jackson-friendly adopted event object into the model\u0027s {@code Contact} object.","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted contact.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    public Contact toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"            throw new IllegalValueException(String.format(MISSING_CFIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"                    ContactName.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        if (!ContactName.isValidName(name)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"            throw new IllegalValueException(ContactName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        final ContactName modelName \u003d new ContactName(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"            throw new IllegalValueException(String.format(MISSING_CFIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"                    ContactPhone.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        if (!ContactPhone.isValidPhone(phone)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"            throw new IllegalValueException(ContactPhone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        final ContactPhone modelPhone \u003d new ContactPhone(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        return new Contact(modelName, modelPhone);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"glozxi":1,"bryansendeavour":58,"engenhui1999":5}},{"path":"src/main/java/seedu/event/storage/JsonAdaptedEvent.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactName;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactPhone;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"class JsonAdaptedEvent {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Event\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"    private final String rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    private final String startTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    private final String endTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"    private final String mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"    private final String contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"     * Constructs a {@code JsonAdaptedEvent} with the given event details.","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"    public JsonAdaptedEvent(@JsonProperty(\"name\") String name, @JsonProperty(\"rate\") String rate,","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"                            @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"                            @JsonProperty(\"startTiming\") String startTime,","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"                            @JsonProperty(\"endTiming\") String endTiming,","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"                            @JsonProperty(\"mark\") String mark, @JsonProperty(\"contact\") String contact,","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        this.endTime \u003d endTiming;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"ExtraShotLatte"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"     * Converts a given {@code Event} into this class for Jackson use.","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"    public JsonAdaptedEvent(Event source) {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"engenhui1999"},"content":"        rate \u003d Double.toString(source.getRate().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        startTime \u003d source.getStartTime().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"        endTime \u003d source.getEndTime().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"        mark \u003d source.getMark().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"ExtraShotLatte"},"content":"        contact \u003d source.getContact().toCardString();","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"     * Converts this Jackson-friendly adapted event object into the model\u0027s {@code Event} object.","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted event.","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"        final List\u003cTag\u003e eventTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"            eventTags.add(tag.toModelType());","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"engenhui1999"},"content":"        if (rate \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"engenhui1999"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rate.class.getSimpleName()));","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"engenhui1999"},"content":"        if (!Rate.isValidRate(rate)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"engenhui1999"},"content":"            throw new IllegalValueException(Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"engenhui1999"},"content":"        final Rate modelRate \u003d new Rate(rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"        if (startTime \u003d\u003d null || endTime \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName()));","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"        if (!Time.isValidTime(startTime) || !Time.isValidTime(endTime)) {","lastModifiedDate":"2023-03-15"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"            throw new IllegalValueException(Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        final Time modelStartTime \u003d new Time(startTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"        final Time modelEndTime \u003d new Time(endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"glozxi"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(eventTags);","lastModifiedDate":"2023-03-17"},{"lineNumber":122,"author":{"gitId":"glozxi"},"content":"        Event event \u003d new Event(modelName, modelRate, modelAddress, modelStartTime, modelEndTime, modelTags);","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"engenhui1999"},"content":"        if (mark.equals(\"[X]\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"engenhui1999"},"content":"            event.mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"ExtraShotLatte"},"content":"        if (!contact.equals(\" \")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"ExtraShotLatte"},"content":"            String[] args \u003d contact.split(\"HP:\");","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"ExtraShotLatte"},"content":"            Contact contact \u003d new Contact(new ContactName(args[0].trim()), new ContactPhone(args[1].trim()));","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"ExtraShotLatte"},"content":"            event.linkContact(contact);","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"engenhui1999"},"content":"        return event;","lastModifiedDate":"2023-03-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ExtraShotLatte":9,"glozxi":29,"engenhui1999":29,"-":67}},{"path":"src/main/java/seedu/event/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"engenhui1999":3,"-":45}},{"path":"src/main/java/seedu/event/storage/JsonContactListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.FileUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.JsonUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":" * A class to access ContactList data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"public class JsonContactListStorage implements ContactListStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonContactListStorage.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public JsonContactListStorage(Path filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        return filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        return readContactList(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"     * Similar to {@link #readContactList()}.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        Optional\u003cJsonSerializableContactList\u003e jsonContactList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"                filePath, JsonSerializableContactList.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        if (!jsonContactList.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"            return Optional.of(jsonContactList.get().toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList(ReadOnlyContactList contactList) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        saveContactList(contactList, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"     * Similar to {@link #saveContactList(ReadOnlyContactList)}.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"    public void saveContactList(ReadOnlyContactList eventBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"        requireNonNull(eventBook);","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableContactList(eventBook), filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"glozxi":3,"bryansendeavour":69,"engenhui1999":7}},{"path":"src/main/java/seedu/event/storage/JsonEventBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.FileUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.JsonUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":" * A class to access EventBook data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"public class JsonEventBookStorage implements EventBookStorage {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonEventBookStorage.class);","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    public JsonEventBookStorage(Path filePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataConversionException {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        return readEventBook(filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"     * Similar to {@link #readEventBook()}.","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        Optional\u003cJsonSerializableEventBook\u003e jsonEventBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"                filePath, JsonSerializableEventBook.class);","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        if (!jsonEventBook.isPresent()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"            return Optional.of(jsonEventBook.get().toModelType());","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"        saveEventBook(eventBook, filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"     * Similar to {@link #saveEventBook(ReadOnlyEventBook)}.","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"        requireNonNull(eventBook);","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableEventBook(eventBook), filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"glozxi":19,"engenhui1999":7,"-":54}},{"path":"src/main/java/seedu/event/storage/JsonSerializableContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":" * An Immutable ContactList that is serializable to JSON format.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"@JsonRootName(value \u003d \"contactlist\")","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"public class JsonSerializableContactList {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"Contact list contains duplicate contact(s).\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    private final List\u003cJsonAdaptedContact\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     * Constructs a {@code JsonSerializaleContactList} with the given contacts.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    public JsonSerializableContactList(@JsonProperty(\"contacts\") List\u003cJsonAdaptedContact\u003e contacts) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        this.contacts.addAll(contacts);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"     * Converts a given {@code ReadOnlyContactList} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableContactList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    public JsonSerializableContactList(ReadOnlyContactList source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        contacts.addAll(source.getContactList().stream().map(JsonAdaptedContact::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"     * Converts this contact list into the model\u0027s {@code ContactList} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public ContactList toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        ContactList contactList \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        for (JsonAdaptedContact jsonAdaptedContact : contacts) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"            Contact contact \u003d jsonAdaptedContact.toModelType();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"            if (contactList.hasContact(contact)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"            contactList.addContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        return contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":54,"engenhui1999":5}},{"path":"src/main/java/seedu/event/storage/JsonSerializableEventBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":" * An Immutable EventBook that is serializable to JSON format.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"@JsonRootName(value \u003d \"eventbook\")","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"class JsonSerializableEventBook {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"Events list contains duplicate event(s).\";","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    private final List\u003cJsonAdaptedEvent\u003e events \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"     * Constructs a {@code JsonSerializableEventBook} with the given events.","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"    public JsonSerializableEventBook(@JsonProperty(\"events\") List\u003cJsonAdaptedEvent\u003e events) {","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"        this.events.addAll(events);","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"     * Converts a given {@code ReadOnlyEventBook} into this class for Jackson use.","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableEventBook}.","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    public JsonSerializableEventBook(ReadOnlyEventBook source) {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        events.addAll(source.getEventList().stream().map(JsonAdaptedEvent::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"     * Converts this address book into the model\u0027s {@code EventBook} object.","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"    public EventBook toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        for (JsonAdaptedEvent jsonAdaptedEvent : events) {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"            Event event \u003d jsonAdaptedEvent.toModelType();","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"            if (eventBook.hasEvent(event)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"            eventBook.addEvent(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        return eventBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"glozxi":21,"engenhui1999":5,"-":34}},{"path":"src/main/java/seedu/event/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.JsonUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"engenhui1999":5,"-":42}},{"path":"src/main/java/seedu/event/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"public interface Storage extends EventBookStorage, ContactListStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    Path getEventBookFilePath();","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"    void saveEventBook(ReadOnlyEventBook eventBook) throws IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    void saveContactList(ReadOnlyContactList contactList) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"glozxi":4,"bryansendeavour":9,"engenhui1999":6,"-":23}},{"path":"src/main/java/seedu/event/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":" * Manages storage of EventBook data in local storage.","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    private EventBookStorage eventBookStorage;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    private ContactListStorage contactListStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"     * Creates a {@code StorageManager} with the given {@code EventBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"    public StorageManager(EventBookStorage eventBookStorage,","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"                          ContactListStorage contactListStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"        this.eventBookStorage \u003d eventBookStorage;","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        this.contactListStorage \u003d contactListStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d EventBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"    public Path getEventBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        return eventBookStorage.getEventBookFilePath();","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"        return readEventBook(eventBookStorage.getEventBookFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"    public Optional\u003cReadOnlyEventBook\u003e readEventBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        return eventBookStorage.readEventBook(filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"        saveEventBook(eventBook, eventBookStorage.getEventBookFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"    public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"        eventBookStorage.saveEventBook(eventBook, filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ContactList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"        return contactListStorage.getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"        return readContactList(contactListStorage.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"        return contactListStorage.readContactList(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList(ReadOnlyContactList contactList) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        saveContactList(contactList, contactListStorage.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"glozxi"},"content":"    public void saveContactList(ReadOnlyContactList eventBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"        contactListStorage.saveContactList(eventBook, filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glozxi":18,"bryansendeavour":29,"engenhui1999":7,"-":56}},{"path":"src/main/java/seedu/event/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":" * Represents a storage for {@link seedu.event.model.UserPrefs}.","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"     * Saves the given {@link seedu.event.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"engenhui1999":6,"-":30}},{"path":"src/main/java/seedu/event/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.CommandResult;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"engenhui1999"},"content":"         * @see seedu.event.logic.Logic#execute(String)","lastModifiedDate":"2023-03-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"engenhui1999":5,"-":80}},{"path":"src/main/java/seedu/event/ui/ContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" * An UI component that displays information of a {@code Contact}.","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"public class ContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    private static final String FXML \u003d \"ContactListCard.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    public final Contact contact;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private HBox cardPane;","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    private Label name;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    private Label id;","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    private Label phone;","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     * Creates a {@code ContactCode} with the given {@code Contact} and index to display.","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    public ContactCard(Contact contact, int displayedIndex) {","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        id.setText(displayedIndex + \".\");","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        name.setText(contact.getName().fullName);","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        phone.setText(\"HP: \" + contact.getPhone().value);","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"            return true;","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        if (!(other instanceof ContactCard)) {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"            return false;","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"        ContactCard card \u003d (ContactCard) other;","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 contact.equals(card.contact);","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"bryansendeavour":49,"engenhui1999":2}},{"path":"src/main/java/seedu/event/ui/ContactListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" * Panel containing the list of contacts.","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"public class ContactListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    private static final String FXML \u003d \"ContactListPanel.fxml\";","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ContactListPanel.class);","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    private ListView\u003cContact\u003e contactListView;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * Creates a {@code ContactListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public ContactListPanel(ObservableList\u003cContact\u003e contactList) {","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        super(FXML);","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        contactListView.setItems(contactList);","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        contactListView.setCellFactory(listView -\u003e new ContactListViewCell());","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Contact} using a {@code ContactCard}.","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    class ContactListViewCell extends ListCell\u003cContact\u003e {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        protected void updateItem(Contact contact, boolean empty) {","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"            super.updateItem(contact, empty);","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"            if (empty || contact \u003d\u003d null) {","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"                setGraphic(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"                setText(null);","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"            } else {","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"                setGraphic(new ContactCard(contact, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"bryansendeavour":45,"engenhui1999":3}},{"path":"src/main/java/seedu/event/ui/EventCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":" * An UI component that displays information of a {@code Event}.","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"public class EventCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    private static final String FXML \u003d \"EventListCard.fxml\";","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on EventBook level 4\u003c/a\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public final Event event;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"    private Label rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    private Label timing;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    private Label mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"    private Label contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"     * Creates a {@code EventCode} with the given {@code Event} and index to display.","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"    public EventCard(Event event, int displayedIndex) {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        this.event \u003d event;","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"        name.setText(event.getName().fullName);","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        rate.setText(Double.toString(event.getRate().value));","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        address.setText(event.getAddress().value);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        timing.setText(event.getStartTime().toString() + \" - \" + event.getEndTime().toString());","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        mark.setText(event.getMark().toString());","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"        contact.setText(event.getContact().toCardString());","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"        event.getTags().stream()","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"        if (!(other instanceof EventCard)) {","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"        EventCard card \u003d (EventCard) other;","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 event.equals(card.event);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ExtraShotLatte":1,"glozxi":20,"engenhui1999":5,"-":57}},{"path":"src/main/java/seedu/event/ui/EventListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":" * Panel containing the list of events.","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"public class EventListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    private static final String FXML \u003d \"EventListPanel.fxml\";","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(EventListPanel.class);","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    private ListView\u003cEvent\u003e eventListView;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"     * Creates a {@code EventListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    public EventListPanel(ObservableList\u003cEvent\u003e eventList) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        eventListView.setItems(eventList);","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"        eventListView.setCellFactory(listView -\u003e new EventListViewCell());","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Event} using a {@code EventCard}.","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"    class EventListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        protected void updateItem(Event event, boolean empty) {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"            super.updateItem(event, empty);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"            if (empty || event \u003d\u003d null) {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"                setGraphic(new EventCard(event, getIndex() + 1).getRoot());","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"glozxi":15,"engenhui1999":3,"-":31}},{"path":"src/main/java/seedu/event/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t11-3.github.io/tp/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"EksdeeeX":1,"engenhui1999":2,"-":99}},{"path":"src/main/java/seedu/event/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.Logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.CommandResult;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    private EventListPanel eventListPanel;","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    private ContactListPanel contactListPanel;","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"    private StackPane eventListPanelPlaceholder;","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    @FXML","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    private StackPane contactListPanelPlaceholder;","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"        eventListPanel \u003d new EventListPanel(logic.getFilteredEventList());","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        eventListPanelPlaceholder.getChildren().add(eventListPanel.getRoot());","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"        contactListPanel \u003d new ContactListPanel(logic.getFilteredContactList());","lastModifiedDate":"2023-03-20"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"        contactListPanelPlaceholder.getChildren().add(contactListPanel.getRoot());","lastModifiedDate":"2023-03-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"glozxi"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getEventBookFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":173,"author":{"gitId":"glozxi"},"content":"    public EventListPanel getEventListPanel() {","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"glozxi"},"content":"        return eventListPanel;","lastModifiedDate":"2023-03-17"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":179,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":180,"author":{"gitId":"engenhui1999"},"content":"     * @see seedu.event.logic.Logic#execute(String)","lastModifiedDate":"2023-03-27"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":189,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":193,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"glozxi":7,"bryansendeavour":5,"engenhui1999":8,"-":183}},{"path":"src/main/java/seedu/event/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"engenhui1999":1,"-":27}},{"path":"src/main/java/seedu/event/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":1,"-":27}},{"path":"src/main/java/seedu/event/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"engenhui1999":1,"-":12}},{"path":"src/main/java/seedu/event/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.MainApp;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.LogsCenter;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.StringUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.Logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/paidlancers.png\";","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"bryansendeavour":1,"engenhui1999":5,"-":82}},{"path":"src/main/java/seedu/event/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.MainApp;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"engenhui1999":2,"-":86}},{"path":"src/main/resources/view/ContactListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"\u003cHBox id\u003d\"contactCardPane\" fx:id\u003d\"contactCardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"      \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"          \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"150.0\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"         \u003cchildren\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"            \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"30.0\" spacing\u003d\"10.0\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cHBox spacing\u003d\"5.0\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"                        \u003cLabel fx:id\u003d\"id\" minWidth\u003d\"-Infinity\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"                        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"                  \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"               \u003cGridPane.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"               \u003c/GridPane.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"         \u003c/children\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"         \u003crowConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"            \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"         \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"         \u003cHBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"            \u003cInsets /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"         \u003c/HBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"      \u003c/GridPane\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"bryansendeavour":44}},{"path":"src/main/resources/view/ContactListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"      \u003cListView fx:id\u003d\"contactListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"   \u003c/children\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"bryansendeavour":11}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Semibold\";","lastModifiedDate":"2022-01-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\";","lastModifiedDate":"2022-01-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI\", Helvetica, Arial, sans-serif;","lastModifiedDate":"2022-01-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":265,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":275,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":288,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":302,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":310,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":311,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":312,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":313,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Segoe UI Light\";","lastModifiedDate":"2022-01-13"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":331,"author":{"gitId":"glozxi"},"content":"#filterField, #eventListPanel, #eventWebpage {","lastModifiedDate":"2023-03-17"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":338,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":343,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":348,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"glozxi":1,"-":351}},{"path":"src/main/resources/view/EventListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"      \u003cLabel fx:id\u003d\"rate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$rate\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"      \u003cLabel fx:id\u003d\"timing\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timing\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"      \u003cLabel fx:id\u003d\"contact\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$contact\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"      \u003cLabel fx:id\u003d\"mark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$mark\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ExtraShotLatte":1,"glozxi":8,"engenhui1999":2,"-":31}},{"path":"src/main/resources/view/EventListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"  \u003cListView fx:id\u003d\"eventListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glozxi":1,"-":7}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.control.Separator?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"\u003cfx:root minHeight\u003d\"622.0\" minWidth\u003d\"800.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Paidlancers\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/19\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"       \u003cImage url\u003d\"@/images/paidlancers.png\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"   \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"          \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"              \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"              \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"            \u003cVBox spacing\u003d\"10\" style\u003d\"-fx-background-color: #666664\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"                \u003cMenuBar fx:id\u003d\"menuBar\" style\u003d\"-fx-background-color: #999798;\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"                    \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"                        \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                      \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                      \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                          \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                      \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                  \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"            \u003cHBox spacing\u003d\"5.0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"               \u003cchildren\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"                        \u003cVBox fx:id\u003d\"eventList\" prefHeight\u003d\"372.0\" prefWidth\u003d\"525.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: #666664; -fx-background-radius: 20; -fx-border-radius: 18;                          -fx-border-width: 3; -fx-border-color: #fdf599;\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                           \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"                              \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                           \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"                            \u003cStackPane fx:id\u003d\"eventListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"                        \u003c/VBox\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cVBox fx:id\u003d\"contactList\" prefHeight\u003d\"372.0\" prefWidth\u003d\"275.0\" spacing\u003d\"10.0\" style\u003d\"-fx-background-color: #666664; -fx-background-radius: 20; -fx-border-radius: 18; -fx-border-width: 3; -fx-border-color: lightgreen;\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2023-03-25"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"                     \u003cchildren\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"                        \u003cStackPane fx:id\u003d\"contactListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"                     \u003c/children\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"                     \u003c/padding\u003e\u003c/VBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"               \u003c/children\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cInsets /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"               \u003cpadding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"               \u003c/padding\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cSeparator prefHeight\u003d\"10.0\" prefWidth\u003d\"800.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" maxHeight\u003d\"140.0\" minHeight\u003d\"140.0\" prefHeight\u003d\"140.0\" style\u003d\"-fx-background-radius: 20; -fx-border-radius: 18;                          -fx-border-width: 3; -fx-border-color: salmon;\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" style\u003d\"-fx-background-color: #666664; -fx-background-radius: 20; -fx-border-radius: 18;                          -fx-border-width: 3; -fx-border-color: lightblue;\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                     \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"                        \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                     \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"               \u003cVBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"                  \u003cInsets left\u003d\"5.0\" right\u003d\"5.0\" /\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"               \u003c/VBox.margin\u003e","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"                  \u003c/StackPane\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                  \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"      \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"   \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"glozxi":1,"bryansendeavour":39,"-":44}},{"path":"src/test/java/seedu/event/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"engenhui1999":1,"-":57}},{"path":"src/test/java/seedu/event/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.core;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"engenhui1999":1,"-":26}},{"path":"src/test/java/seedu/event/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.core;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":2,"-":133}},{"path":"src/test/java/seedu/event/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.core.index;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        final Index fifthEventIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        assertTrue(fifthEventIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        assertTrue(fifthEventIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        assertTrue(fifthEventIndex.equals(fifthEventIndex));","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        assertFalse(fifthEventIndex.equals(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"        assertFalse(fifthEventIndex.equals(5.0f));","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        assertFalse(fifthEventIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"glozxi":7,"engenhui1999":2,"-":51}},{"path":"src/test/java/seedu/event/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"engenhui1999":2,"-":34}},{"path":"src/test/java/seedu/event/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"engenhui1999":3,"-":105}},{"path":"src/test/java/seedu/event/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Config;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"engenhui1999":4,"-":112}},{"path":"src/test/java/seedu/event/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":2,"-":21}},{"path":"src/test/java/seedu/event/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.SerializableTestClass;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.TestUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":3,"-":42}},{"path":"src/test/java/seedu/event/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.commons.util;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"engenhui1999":2,"-":141}},{"path":"src/test/java/seedu/event/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.START_TIME_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.AddCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.CommandResult;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.ListCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.JsonContactListStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.JsonEventBookStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.storage.StorageManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        JsonEventBookStorage eventBookStorage \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"                new JsonEventBookStorage(temporaryFolder.resolve(\"eventBook.json\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        JsonContactListStorage contactListStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"                new JsonContactListStorage(temporaryFolder.resolve(\"contactList.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        StorageManager storage \u003d new StorageManager(eventBookStorage, contactListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"        // Setup LogicManager with JsonEventBookIoExceptionThrowingStub","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"        JsonEventBookStorage eventBookStorage \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"                new JsonEventBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionEventBook.json\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"        JsonContactListStorage contactListStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"                new JsonContactListIoExceptionThrowingStub(temporaryFolder","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"                        .resolve(\"ioExceptionContactList.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"glozxi"},"content":"        StorageManager storage \u003d new StorageManager(eventBookStorage, contactListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_AMY + END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"        Event expectedEvent \u003d new EventBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"glozxi"},"content":"        expectedModel.addEvent(expectedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"glozxi"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredEventList().remove(0));","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"    public void getFilteredContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredContactList().remove(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"glozxi"},"content":"        Model expectedModel \u003d new ModelManager(model.getEventBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"glozxi"},"content":"    private static class JsonEventBookIoExceptionThrowingStub extends JsonEventBookStorage {","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"glozxi"},"content":"        private JsonEventBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"glozxi"},"content":"        public void saveEventBook(ReadOnlyEventBook eventBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"bryansendeavour"},"content":"    private static class JsonContactListIoExceptionThrowingStub extends JsonContactListStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"bryansendeavour"},"content":"        private JsonContactListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"glozxi"},"content":"        public void saveContactList(ReadOnlyContactList eventBook, Path filePath) throws IOException {","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"EksdeeeX":1,"glozxi":18,"bryansendeavour":11,"engenhui1999":26,"-":130}},{"path":"src/test/java/seedu/event/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.TypicalContacts;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"        model \u003d new ModelManager(getTypicalEventBook(),","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"                TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    public void execute_newEvent_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        Model expectedModel \u003d new ModelManager(model.getEventBook(),","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"                model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        expectedModel.addEvent(validEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        assertCommandSuccess(new AddCommand(validEvent), model,","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validEvent), expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"        Event eventInList \u003d model.getEventBook().getEventList().get(0);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        assertCommandFailure(new AddCommand(eventInList), model, AddCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"glozxi":10,"bryansendeavour":2,"engenhui1999":10,"-":26}},{"path":"src/test/java/seedu/event/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    public void constructor_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"    public void execute_eventAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        ModelStubAcceptingEventAdded modelStub \u003d new ModelStubAcceptingEventAdded();","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"        CommandResult commandResult \u003d new AddCommand(validEvent).execute(modelStub);","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validEvent), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"        assertEquals(Arrays.asList(validEvent), modelStub.eventsAdded);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"    public void execute_duplicateEvent_throwsCommandException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        Event validEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        AddCommand addCommand \u003d new AddCommand(validEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"        ModelStub modelStub \u003d new ModelStubWithEvent(validEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        Event alice \u003d new EventBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        Event bob \u003d new EventBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"glozxi"},"content":"        public Path getEventBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"        public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"        public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"        public void setContactListFilePath(Path eventBookFilePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"glozxi"},"content":"        public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2023-03-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"        public void setContactList(ReadOnlyContactList contactList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"glozxi"},"content":"        public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"bryansendeavour"},"content":"        public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":155,"author":{"gitId":"glozxi"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"glozxi"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"glozxi"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"glozxi"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":179,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":180,"author":{"gitId":"bryansendeavour"},"content":"        public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":181,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":182,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":183,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"glozxi"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":190,"author":{"gitId":"bryansendeavour"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":191,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":192,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":193,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":194,"author":{"gitId":"ExtraShotLatte"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":195,"author":{"gitId":"bryansendeavour"},"content":"        public void linkContact(Event event, Event linkedEvent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":196,"author":{"gitId":"ExtraShotLatte"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":197,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":198,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":199,"author":{"gitId":"EksdeeeX"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":200,"author":{"gitId":"EksdeeeX"},"content":"        public Rate getRate(Event event) {","lastModifiedDate":"2023-03-08"},{"lineNumber":201,"author":{"gitId":"EksdeeeX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":203,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":204,"author":{"gitId":"engenhui1999"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":205,"author":{"gitId":"EksdeeeX"},"content":"        public void markEvent(Event target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":206,"author":{"gitId":"EksdeeeX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":207,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":208,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":209,"author":{"gitId":"EksdeeeX"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":210,"author":{"gitId":"EksdeeeX"},"content":"        public void unmarkEvent(Event target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"engenhui1999"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":212,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"glozxi"},"content":"     * A Model stub that contains a single event.","lastModifiedDate":"2023-03-17"},{"lineNumber":217,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"glozxi"},"content":"    private class ModelStubWithEvent extends ModelStub {","lastModifiedDate":"2023-03-17"},{"lineNumber":219,"author":{"gitId":"glozxi"},"content":"        private final Event event;","lastModifiedDate":"2023-03-17"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":221,"author":{"gitId":"glozxi"},"content":"        ModelStubWithEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"glozxi"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":223,"author":{"gitId":"glozxi"},"content":"            this.event \u003d event;","lastModifiedDate":"2023-03-17"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"glozxi"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":228,"author":{"gitId":"glozxi"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":229,"author":{"gitId":"glozxi"},"content":"            return this.event.isSameEvent(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":234,"author":{"gitId":"glozxi"},"content":"     * A Model stub that always accept the event being added.","lastModifiedDate":"2023-03-17"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":236,"author":{"gitId":"glozxi"},"content":"    private class ModelStubAcceptingEventAdded extends ModelStub {","lastModifiedDate":"2023-03-17"},{"lineNumber":237,"author":{"gitId":"glozxi"},"content":"        final ArrayList\u003cEvent\u003e eventsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-17"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":240,"author":{"gitId":"glozxi"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":241,"author":{"gitId":"glozxi"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":242,"author":{"gitId":"glozxi"},"content":"            return eventsAdded.stream().anyMatch(event::isSameEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":245,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":246,"author":{"gitId":"glozxi"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":247,"author":{"gitId":"glozxi"},"content":"            requireNonNull(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":248,"author":{"gitId":"glozxi"},"content":"            eventsAdded.add(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":252,"author":{"gitId":"glozxi"},"content":"        public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":253,"author":{"gitId":"glozxi"},"content":"            return new EventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"ExtraShotLatte":4,"EksdeeeX":10,"glozxi":46,"bryansendeavour":41,"engenhui1999":17,"-":139}},{"path":"src/test/java/seedu/event/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"    public void execute_emptyEventBook_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    public void execute_nonEmptyEventBook_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"        Model model \u003d new ModelManager(getTypicalEventBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalEventBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"        expectedModel.setEventBook(new EventBook());","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        expectedModel.setContactList(new ContactList());","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"glozxi":5,"bryansendeavour":6,"engenhui1999":4,"-":20}},{"path":"src/test/java/seedu/event/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"engenhui1999":1,"-":53}},{"path":"src/test/java/seedu/event/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_END;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_START;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    public static final String VALID_PHONE_ALICE \u003d \"94351253\";","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    public static final String VALID_START_TIME_AMY \u003d \"11-03-2023 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    public static final String VALID_END_TIME_AMY \u003d \"11-03-2023 12:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    public static final String VALID_START_TIME_BOB \u003d \"04-04-2023 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"    public static final String VALID_END_TIME_BOB \u003d \"04-05-2023 13:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"    public static final String VALID_MARK_AMY \u003d \"[ ]\";","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"    public static final String VALID_MARK_BOB \u003d \"[ ]\";","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public static final String NAME_DESC_ALICE \u003d \" \" + PREFIX_NAME + VALID_NAME_ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    public static final String PHONE_DESC_ALICE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_RATE + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_RATE + VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"    public static final String START_TIME_DESC_AMY \u003d \" \" + PREFIX_TIME_START + VALID_START_TIME_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    public static final String START_TIME_DESC_BOB \u003d \" \" + PREFIX_TIME_START + VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"    public static final String END_TIME_DESC_AMY \u003d \" \" + PREFIX_TIME_END + VALID_END_TIME_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"    public static final String END_TIME_DESC_BOB \u003d \" \" + PREFIX_TIME_END + VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_RATE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"    // string not formatted correctly not allowed for time","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"    public static final String INVALID_START_TIME_DESC \u003d \" \" + PREFIX_TIME_START + \" \";","lastModifiedDate":"2023-03-15"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"    public static final String INVALID_END_TIME_DESC \u003d \" \" + PREFIX_TIME_END + \" \";","lastModifiedDate":"2023-03-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"    public static final EditCommand.EditEventDescriptor DESC_AMY;","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"    public static final EditCommand.EditEventDescriptor DESC_BOB;","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"        DESC_AMY \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"                .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"                .withStartTime(VALID_START_TIME_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"glozxi"},"content":"                .withEndTime(VALID_END_TIME_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"        DESC_BOB \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"                .withStartTime(VALID_START_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":86,"author":{"gitId":"glozxi"},"content":"                .withEndTime(VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"     * - the address book, filtered event list and selected event in {@code actualModel} remain unchanged","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"        EventBook expectedEventBook \u003d new EventBook(actualModel.getEventBook());","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"glozxi"},"content":"        List\u003cEvent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredEventList());","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":129,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedEventBook, actualModel.getEventBook());","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredEventList());","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":133,"author":{"gitId":"glozxi"},"content":"     * Updates {@code model}\u0027s filtered list to show only the event at the given {@code targetIndex} in the","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":136,"author":{"gitId":"glozxi"},"content":"    public static void showEventAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"glozxi"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":139,"author":{"gitId":"glozxi"},"content":"        Event event \u003d model.getFilteredEventList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"glozxi"},"content":"        final String[] splitName \u003d event.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"glozxi"},"content":"        assertEquals(1, model.getFilteredEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"glozxi":31,"bryansendeavour":4,"engenhui1999":23,"-":88}},{"path":"src/test/java/seedu/event/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"    private Model model \u003d new ModelManager(getTypicalEventBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getEventBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        Event eventToDelete \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_EVENT_SUCCESS, eventToDelete);","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"        Model expectedModel \u003d new ModelManager(model.getEventBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"        expectedModel.deleteEvent(eventToDelete);","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        showNoEvent(expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEventBook().getEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"glozxi"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"glozxi"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"glozxi"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"EksdeeeX":2,"glozxi":24,"engenhui1999":15,"-":70}},{"path":"src/test/java/seedu/event/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_MARK_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    private Model model \u003d new ModelManager(getTypicalEventBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"        Event editedEvent \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(editedEvent).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        Model expectedModel \u003d new ModelManager(new EventBook(model.getEventBook()),","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"                new ContactList(model.getContactList()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        Index indexLastEvent \u003d Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"        Event lastEvent \u003d model.getFilteredEventList().get(indexLastEvent.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"        EventBuilder eventInList \u003d new EventBuilder(lastEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        Event editedEvent \u003d eventInList.withName(VALID_NAME_BOB).withRate(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"                .withStartTime(VALID_START_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"                .withEndTime(VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":66,"author":{"gitId":"engenhui1999"},"content":"                .withMark(VALID_MARK_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"                .withStartTime(VALID_START_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"                .withEndTime(VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":72,"author":{"gitId":"engenhui1999"},"content":"                .withMark(VALID_MARK_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastEvent, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"        Model expectedModel \u003d new ModelManager(new EventBook(model.getEventBook()),","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"                new ContactList(model.getContactList()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"        expectedModel.setEvent(lastEvent, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT, new EditCommand.EditEventDescriptor());","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"        Event editedEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"        Model expectedModel \u003d new ModelManager(new EventBook(model.getEventBook()),","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"                new ContactList(model.getContactList()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"        Event eventInFilteredList \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"        Event editedEvent \u003d new EventBuilder(eventInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"glozxi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"glozxi"},"content":"                new EditEventDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_EVENT_SUCCESS, editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"        Model expectedModel \u003d new ModelManager(new EventBook(model.getEventBook()),","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"                new ContactList(model.getContactList()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"glozxi"},"content":"        expectedModel.setEvent(model.getFilteredEventList().get(0), editedEvent);","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"    public void execute_duplicateEventUnfilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        Event firstEvent \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(firstEvent).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_EVENT, descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"glozxi"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"glozxi"},"content":"    public void execute_duplicateEventFilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"glozxi"},"content":"        // edit event in filtered list into a duplicate in address book","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"glozxi"},"content":"        Event eventInList \u003d model.getEventBook().getEventList().get(INDEX_SECOND_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"glozxi"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"glozxi"},"content":"                new EditEventDescriptorBuilder(eventInList).build());","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"glozxi"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"glozxi"},"content":"    public void execute_invalidEventIndexUnfilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"glozxi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"glozxi"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"glozxi"},"content":"    public void execute_invalidEventIndexFilteredList_failure() {","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"glozxi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"glozxi"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEventBook().getEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"glozxi"},"content":"                new EditEventDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"glozxi"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_EVENT, DESC_AMY);","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"glozxi"},"content":"        EditEventDescriptor copyDescriptor \u003d new EditEventDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"glozxi"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_EVENT, copyDescriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"glozxi"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_EVENT, DESC_AMY)));","lastModifiedDate":"2023-03-17"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"glozxi"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_EVENT, DESC_BOB)));","lastModifiedDate":"2023-03-17"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"EksdeeeX":2,"glozxi":57,"bryansendeavour":4,"engenhui1999":29,"-":96}},{"path":"src/test/java/seedu/event/logic/commands/EditEventDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"public class EditEventDescriptorTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"        EditCommand.EditEventDescriptor descriptorWithSameValues \u003d new EditEventDescriptor(DESC_AMY);","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        EditEventDescriptor editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        editedAmy \u003d new EditEventDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"glozxi":6,"engenhui1999":9,"-":38}},{"path":"src/test/java/seedu/event/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"engenhui1999":5,"-":15}},{"path":"src/test/java/seedu/event/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.CARL;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.ELLE;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.FIONA;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.TypicalContacts;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"    private Model model \u003d new ModelManager(getTypicalEventBook(),","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"            TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalEventBook(),","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"            TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"    public void execute_zeroKeywords_noEventFound() {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredEventList());","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"    public void execute_multipleKeywords_multipleEventsFound() {","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredEventList());","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"glozxi":11,"bryansendeavour":2,"engenhui1999":12,"-":61}},{"path":"src/test/java/seedu/event/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.HelpCommand.SHOWING_HELP_MESSAGE;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(SHOWING_HELP_MESSAGE, true, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"engenhui1999":5,"-":15}},{"path":"src/test/java/seedu/event/logic/commands/LinkContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"public class LinkContactCommandTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    private Model model \u003d new ModelManager(getTypicalEventBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalEventBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(expectedModel.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        LinkContactCommand linkContactCommand \u003d new LinkContactCommand(outOfBoundIndex, \"91234567\");","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        assertCommandFailure(linkContactCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    public void execute_contactNotFound_throwsCommandException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        Event eventToLinkContact \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"        model.addEvent(eventToLinkContact);","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        LinkContactCommand linkContactCommand \u003d new LinkContactCommand(INDEX_FIRST_EVENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"                \"99999999\"); // phone number that does not exist in contact list","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(CommandException.class, () -\u003e linkContactCommand.execute(model));","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public void execute_invalidContact_throwsCommandException() throws Exception {","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        LinkContactCommand linkContactCommand \u003d new LinkContactCommand(Index.fromOneBased(1), \"91234568\");","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(CommandException.class, () -\u003e linkContactCommand.execute(model));","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    public void execute_validContact() {","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        Event event \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        Contact contact \u003d model.getContactList().getContactList().get(0);","lastModifiedDate":"2023-03-16"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        Event linkedEvent \u003d new EventBuilder(event).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        linkedEvent.linkContact(contact);","lastModifiedDate":"2023-03-16"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"        LinkContactCommand linkContactCommand \u003d new LinkContactCommand(INDEX_FIRST_EVENT, \"94351253\");","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        Event linkEvent \u003d linkContactCommand.createLinkedEvent(event, contact);","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(linkEvent.equals(linkedEvent));","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    public void execute_markValidContact() {","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        Event event \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"        Contact contact \u003d model.getContactList().getContactList().get(0);","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"        Event markEvent \u003d new EventBuilder(event).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        markEvent.mark();","lastModifiedDate":"2023-03-16"},{"lineNumber":72,"author":{"gitId":"EksdeeeX"},"content":"        model.markEvent(event);","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        markEvent.linkContact(contact);","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"        LinkContactCommand linkContactCommand \u003d new LinkContactCommand(INDEX_FIRST_EVENT, \"94351253\");","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        Event linkEvent \u003d linkContactCommand.createLinkedEvent(markEvent, contact);","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(linkEvent.equals(markEvent));","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":81,"author":{"gitId":"EksdeeeX"},"content":"    public void execute_unmarkValidContact() {","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"        Event event \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"EksdeeeX"},"content":"        Contact contact \u003d model.getContactList().getContactList().get(0);","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"glozxi"},"content":"        Event unmarkEvent \u003d new EventBuilder(event).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"EksdeeeX"},"content":"        unmarkEvent.mark();","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"EksdeeeX"},"content":"        unmarkEvent.unmark();","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"EksdeeeX"},"content":"        model.markEvent(event);","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"EksdeeeX"},"content":"        model.unmarkEvent(event);","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"EksdeeeX"},"content":"        unmarkEvent.linkContact(contact);","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"        LinkContactCommand linkContactCommand \u003d new LinkContactCommand(INDEX_FIRST_EVENT, \"94351253\");","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"EksdeeeX"},"content":"        Event linkEvent \u003d linkContactCommand.createLinkedEvent(unmarkEvent, contact);","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":93,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(linkEvent.equals(unmarkEvent));","lastModifiedDate":"2023-03-16"},{"lineNumber":94,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"    public void equals() {","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"        final LinkContactCommand standardCommand \u003d new LinkContactCommand(INDEX_FIRST_EVENT, \"91234567\");","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"        LinkContactCommand commandWithSameValues \u003d new LinkContactCommand(INDEX_FIRST_EVENT, \"91234567\");","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"        assertFalse(standardCommand.equals(new LinkContactCommand(INDEX_SECOND_EVENT, \"91234567\")));","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"        // different phone number -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"        assertFalse(standardCommand.equals(new LinkContactCommand(INDEX_SECOND_EVENT, \"91234568\")));","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"EksdeeeX":14,"glozxi":19,"bryansendeavour":72,"engenhui1999":16}},{"path":"src/test/java/seedu/event/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.TypicalContacts;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"        model \u003d new ModelManager(getTypicalEventBook(),","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"                TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        expectedModel \u003d new ModelManager(model.getEventBook(),","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"                TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"glozxi":3,"bryansendeavour":2,"engenhui1999":9,"-":28}},{"path":"src/test/java/seedu/event/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":" * {@code MarkCommand}.","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"    private Model model \u003d new ModelManager(getTypicalEventBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        Event eventToMark \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"        Event markedEvent \u003d new EventBuilder(eventToMark).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        markedEvent.mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_EVENT_SUCCESS, eventToMark);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getEventBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"        expectedModel.markEvent(eventToMark);","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        Event eventToMark \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        Event markedEvent \u003d new EventBuilder(eventToMark).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"        markedEvent.mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"engenhui1999"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_EVENT_SUCCESS, eventToMark);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getEventBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"EksdeeeX"},"content":"        expectedModel.markEvent(eventToMark);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        showNoEvent(expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"engenhui1999"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"engenhui1999"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEventBook().getEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"engenhui1999"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"glozxi"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"engenhui1999"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"engenhui1999"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"glozxi"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"engenhui1999"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"engenhui1999"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"glozxi"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"engenhui1999"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"EksdeeeX":2,"glozxi":22,"engenhui1999":93}},{"path":"src/test/java/seedu/event/logic/commands/NewContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.ContactBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"class NewContactCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NewContactCommand(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public void execute_contactAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        ModelStubAcceptingContactAdded modelStub \u003d new ModelStubAcceptingContactAdded();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        CommandResult commandResult \u003d new NewContactCommand(validContact).execute(modelStub);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(String.format(NewContactCommand.MESSAGE_SUCCESS, validContact), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(Arrays.asList(validContact), modelStub.contactsAdded);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    public void execute_duplicateContact_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand newContactCommand \u003d new NewContactCommand(validContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        ModelStub modelStub \u003d new ModelStubWithContact(validContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"                NewContactCommand.MESSAGE_DUPLICATE_CONTACT, () -\u003e newContactCommand.execute(modelStub));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        Contact deborah \u003d new ContactBuilder().withName(\"Deborah\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        Contact mandy \u003d new ContactBuilder().withName(\"Mandy\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand addDeborahCommand \u003d new NewContactCommand(deborah);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand addMandyCommand \u003d new NewContactCommand(mandy);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        // same object -\u003e true","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(addDeborahCommand.equals(addDeborahCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"        // same values -\u003e true","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand addMandyCommandCopy \u003d new NewContactCommand(mandy);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(addMandyCommand.equals(addMandyCommandCopy));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        // different types -\u003e false","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(addMandyCommand.equals(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(addMandyCommand.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"        // different event -\u003e false","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(addMandyCommand.equals(addDeborahCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"     * A default model stub that has all the methods failing.","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"        public Path getEventBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"        public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        public void setEventBookFilePath(Path eventBookFilePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"        public void setContactListFilePath(Path contactListFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"glozxi"},"content":"        public void setEventBook(ReadOnlyEventBook eventBook) {","lastModifiedDate":"2023-03-17"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"        public void setContactList(ReadOnlyContactList contactList) {","lastModifiedDate":"2023-03-27"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"glozxi"},"content":"        public ReadOnlyEventBook getEventBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"        public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"glozxi"},"content":"        public boolean hasEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"glozxi"},"content":"        public void addEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":166,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"glozxi"},"content":"        public void deleteEvent(Event target) {","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"ExtraShotLatte"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"        public void linkContact(Event event, Event linkedEvent) {","lastModifiedDate":"2023-03-16"},{"lineNumber":176,"author":{"gitId":"ExtraShotLatte"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"glozxi"},"content":"        public void updateFilteredEventList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-27"},{"lineNumber":185,"author":{"gitId":"bryansendeavour"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2023-03-27"},{"lineNumber":186,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-27"},{"lineNumber":187,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-27"},{"lineNumber":188,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-27"},{"lineNumber":189,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"glozxi"},"content":"        public void setEvent(Event target, Event editedEvent) {","lastModifiedDate":"2023-03-17"},{"lineNumber":191,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"glozxi"},"content":"        public ObservableList\u003cEvent\u003e getFilteredEventList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":196,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":199,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-20"},{"lineNumber":200,"author":{"gitId":"bryansendeavour"},"content":"        public ObservableList\u003cContact\u003e getFilteredContactList() {","lastModifiedDate":"2023-03-20"},{"lineNumber":201,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-20"},{"lineNumber":202,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-20"},{"lineNumber":203,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":204,"author":{"gitId":"EksdeeeX"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"EksdeeeX"},"content":"        public Rate getRate(Event event) {","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"EksdeeeX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":209,"author":{"gitId":"engenhui1999"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":210,"author":{"gitId":"EksdeeeX"},"content":"        public void markEvent(Event target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":211,"author":{"gitId":"EksdeeeX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-16"},{"lineNumber":212,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-03-16"},{"lineNumber":213,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":214,"author":{"gitId":"EksdeeeX"},"content":"        @Override","lastModifiedDate":"2023-03-16"},{"lineNumber":215,"author":{"gitId":"EksdeeeX"},"content":"        public void unmarkEvent(Event target) {","lastModifiedDate":"2023-03-16"},{"lineNumber":216,"author":{"gitId":"engenhui1999"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":217,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":218,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"bryansendeavour"},"content":"     * Model stub that contains a single contact.","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"bryansendeavour"},"content":"    private class ModelStubWithContact extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"bryansendeavour"},"content":"        private final Contact contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"bryansendeavour"},"content":"        ModelStubWithContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"bryansendeavour"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"bryansendeavour"},"content":"            this.contact \u003d contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"bryansendeavour"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"bryansendeavour"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"bryansendeavour"},"content":"            return this.contact.isSameContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"bryansendeavour"},"content":"     * Model stub that always accept the contact being added.","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"bryansendeavour"},"content":"    private class ModelStubAcceptingContactAdded extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"bryansendeavour"},"content":"        final ArrayList\u003cContact\u003e contactsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"bryansendeavour"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"bryansendeavour"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":248,"author":{"gitId":"bryansendeavour"},"content":"            return contactsAdded.stream().anyMatch(contact::isSameContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":249,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":250,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":251,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":252,"author":{"gitId":"bryansendeavour"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":253,"author":{"gitId":"bryansendeavour"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":254,"author":{"gitId":"bryansendeavour"},"content":"            contactsAdded.add(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":255,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":256,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":257,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":258,"author":{"gitId":"bryansendeavour"},"content":"        public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":259,"author":{"gitId":"bryansendeavour"},"content":"            return new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":260,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":261,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":262,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ExtraShotLatte":2,"EksdeeeX":11,"glozxi":11,"bryansendeavour":221,"engenhui1999":17}},{"path":"src/test/java/seedu/event/logic/commands/RemindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_EVENTS_LISTED_OVERVIEW;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.CARL;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.ELLE;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.FIONA;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalTimes.CLOCK_FIXED_AT_TIME_NOW;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalTimes.TYPICAL_DAYS;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.StartTimeWithinDaysPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.TypicalContacts;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":" * Contains integration tests (interaction with the Model) for {@code RemindCommand}.","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"public class RemindCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"    private Model model \u003d new ModelManager(getTypicalEventBook(),","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"            TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalEventBook(),","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"            TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"    public void equals() {","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        StartTimeWithinDaysPredicate firstPredicate \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"                new StartTimeWithinDaysPredicate(CLOCK_FIXED_AT_TIME_NOW, 3);","lastModifiedDate":"2023-03-21"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        StartTimeWithinDaysPredicate secondPredicate \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"                new StartTimeWithinDaysPredicate(CLOCK_FIXED_AT_TIME_NOW, 4);","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"        RemindCommand remindFirstCommand \u003d new RemindCommand(firstPredicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        RemindCommand remindSecondCommand \u003d new RemindCommand(secondPredicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        assertTrue(remindFirstCommand.equals(remindFirstCommand));","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        RemindCommand remindFirstCommandCopy \u003d new RemindCommand(firstPredicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        assertTrue(remindFirstCommand.equals(remindFirstCommandCopy));","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        assertFalse(remindFirstCommand.equals(1));","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"        assertFalse(remindFirstCommand.equals(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        assertFalse(remindFirstCommand.equals(remindSecondCommand));","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"    public void execute_multipleEventsWithinDays_multipleEventsFound() {","lastModifiedDate":"2023-03-20"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EVENTS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"        StartTimeWithinDaysPredicate predicate \u003d preparePredicate(\"3\");","lastModifiedDate":"2023-03-20"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"        RemindCommand command \u003d new RemindCommand(predicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"        expectedModel.updateFilteredEventList(predicate);","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredEventList());","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"     * Parses {@code userInput} into a {@code StartTimeWithinDaysPredicate}.","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"    private StartTimeWithinDaysPredicate preparePredicate(String userInput) {","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"        return new StartTimeWithinDaysPredicate(CLOCK_FIXED_AT_TIME_NOW, TYPICAL_DAYS);","lastModifiedDate":"2023-03-21"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"glozxi":63,"engenhui1999":14}},{"path":"src/test/java/seedu/event/logic/commands/RevenueCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.TypicalContacts;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"public class RevenueCommandTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"    private Model model;","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    private Model expectedModel;","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    @BeforeEach","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"    public void setUp() {","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        model \u003d new ModelManager(getTypicalEventBook(),","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"                TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"        expectedModel \u003d new ModelManager(model.getEventBook(),","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"            TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    public void execute_calculateDoneEventOnly() throws CommandException {","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"        expectedModel.updateFilteredEventList(event -\u003e event.getMark().isDone());","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"        Command command \u003d new RevenueCommand();","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        assertEquals(command.execute(model), command.execute(expectedModel));","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"engenhui1999":37}},{"path":"src/test/java/seedu/event/logic/commands/UnmarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.commands;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-16"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-16"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.showEventAtIndex;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.Messages;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ModelManager;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":" * {@code MarkCommand}.","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"public class UnmarkCommandTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"    private Model model \u003d new ModelManager(getTypicalEventBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        Event eventToUnmark \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        Event unmarkedEvent \u003d new EventBuilder(eventToUnmark).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"        unmarkedEvent.mark();","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"        unmarkedEvent.unmark();","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"        eventToUnmark.unmark();","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"        String expectedMessage \u003d String.format(UnmarkCommand.MESSAGE_UNMARK_EVENT_SUCCESS, eventToUnmark);","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getEventBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"        expectedModel.unmarkEvent(eventToUnmark);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandSuccess(unmarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredEventList().size() + 1);","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(unmarkCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":56,"author":{"gitId":"EksdeeeX"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-16"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        Event eventToUnmark \u003d model.getFilteredEventList().get(INDEX_FIRST_EVENT.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"        Event unmarkedEvent \u003d new EventBuilder(eventToUnmark).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"EksdeeeX"},"content":"        unmarkedEvent.mark();","lastModifiedDate":"2023-03-16"},{"lineNumber":62,"author":{"gitId":"EksdeeeX"},"content":"        unmarkedEvent.unmark();","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"EksdeeeX"},"content":"        eventToUnmark.unmark();","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"EksdeeeX"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_EVENT_SUCCESS, eventToUnmark);","lastModifiedDate":"2023-03-16"},{"lineNumber":67,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getEventBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"EksdeeeX"},"content":"        expectedModel.markEvent(eventToUnmark);","lastModifiedDate":"2023-03-16"},{"lineNumber":70,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"        showNoEvent(expectedModel);","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":73,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandSuccess(unmarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-16"},{"lineNumber":74,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":75,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":76,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":77,"author":{"gitId":"EksdeeeX"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"        showEventAtIndex(model, INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"EksdeeeX"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-16"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getEventBook().getEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":84,"author":{"gitId":"EksdeeeX"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-16"},{"lineNumber":85,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":86,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(unmarkCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-16"},{"lineNumber":87,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":88,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":89,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":90,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":91,"author":{"gitId":"EksdeeeX"},"content":"    public void equals() {","lastModifiedDate":"2023-03-16"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"        UnmarkCommand unmarkFirstCommand \u003d new UnmarkCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"glozxi"},"content":"        UnmarkCommand unmarkSecondCommand \u003d new UnmarkCommand(INDEX_SECOND_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":95,"author":{"gitId":"EksdeeeX"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":96,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommand));","lastModifiedDate":"2023-03-16"},{"lineNumber":97,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":98,"author":{"gitId":"EksdeeeX"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":99,"author":{"gitId":"glozxi"},"content":"        UnmarkCommand unmarkFirstCommandCopy \u003d new UnmarkCommand(INDEX_FIRST_EVENT);","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(unmarkFirstCommand.equals(unmarkFirstCommandCopy));","lastModifiedDate":"2023-03-16"},{"lineNumber":101,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":102,"author":{"gitId":"EksdeeeX"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":103,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(unmarkFirstCommand.equals(1));","lastModifiedDate":"2023-03-16"},{"lineNumber":104,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":105,"author":{"gitId":"EksdeeeX"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":106,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(unmarkFirstCommand.equals(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":107,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(unmarkFirstCommand.equals(unmarkSecondCommand));","lastModifiedDate":"2023-03-16"},{"lineNumber":110,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":111,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":112,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-16"},{"lineNumber":113,"author":{"gitId":"EksdeeeX"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-16"},{"lineNumber":114,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-16"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"    private void showNoEvent(Model model) {","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"        model.updateFilteredEventList(p -\u003e false);","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        assertTrue(model.getFilteredEventList().isEmpty());","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":120,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"EksdeeeX":83,"glozxi":22,"engenhui1999":15}},{"path":"src/test/java/seedu/event/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.END_TIME_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.START_TIME_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.START_TIME_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.AddCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        Event expectedEvent \u003d new EventBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"        Event expectedEventMultipleTags \u003d new EventBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedEventMultipleTags));","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"        Event expectedEvent \u003d new EventBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"glozxi"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"                        + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"glozxi"},"content":"                new AddCommand(expectedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"glozxi"},"content":"        // missing start time prefix","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"                        + VALID_START_TIME_BOB + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"        // missing end time prefix","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + VALID_END_TIME_BOB,","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"glozxi"},"content":"                        + VALID_START_TIME_BOB + VALID_END_TIME_BOB,","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_AMY + END_TIME_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"engenhui1999"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"glozxi"},"content":"        // invalid start time","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"glozxi"},"content":"                + INVALID_START_TIME_DESC + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":148,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"glozxi"},"content":"        // invalid end time","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + INVALID_END_TIME_DESC","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB,","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"glozxi":53,"engenhui1999":52,"-":64}},{"path":"src/test/java/seedu/event/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"engenhui1999":1,"-":149}},{"path":"src/test/java/seedu/event/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.Command;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser\u003c? extends Command\u003e parser, String userInput,","lastModifiedDate":"2022-02-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            Command expectedCommand) {","lastModifiedDate":"2022-02-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser\u003c? extends Command\u003e parser, String userInput, String expectedMessage) {","lastModifiedDate":"2022-02-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"engenhui1999":3,"-":36}},{"path":"src/test/java/seedu/event/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"        assertParseSuccess(parser, \"1\", new DeleteCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"glozxi":1,"engenhui1999":6,"-":25}},{"path":"src/test/java/seedu/event/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.END_TIME_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.START_TIME_DESC_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.START_TIME_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_END_TIME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_START_TIME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Rate.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"        // invalid timing","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_TIME_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"glozxi"},"content":"                + \" \" + INVALID_END_TIME_DESC, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":95,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, \"1\" + START_TIME_DESC_AMY","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"glozxi"},"content":"                + \" \" + INVALID_END_TIME_DESC, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_TIME_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"                + \" \" + END_TIME_DESC_AMY, Time.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"glozxi"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Event} being edited,","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        Index targetIndex \u003d INDEX_SECOND_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":122,"author":{"gitId":"glozxi"},"content":"                + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":123,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"engenhui1999"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"glozxi"},"content":"                .withStartTime(VALID_START_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":128,"author":{"gitId":"glozxi"},"content":"                .withEndTime(VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"glozxi"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"engenhui1999"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"glozxi"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"engenhui1999"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"glozxi"},"content":"        Index targetIndex \u003d INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":158,"author":{"gitId":"glozxi"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":164,"author":{"gitId":"glozxi"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"glozxi"},"content":"        // start time","lastModifiedDate":"2023-03-15"},{"lineNumber":169,"author":{"gitId":"glozxi"},"content":"        userInput \u003d targetIndex.getOneBased() + START_TIME_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":170,"author":{"gitId":"glozxi"},"content":"        descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-03-17"},{"lineNumber":171,"author":{"gitId":"glozxi"},"content":"                .withStartTime(VALID_START_TIME_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":172,"author":{"gitId":"glozxi"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-15"},{"lineNumber":173,"author":{"gitId":"glozxi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-15"},{"lineNumber":174,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":175,"author":{"gitId":"glozxi"},"content":"        // end time","lastModifiedDate":"2023-03-15"},{"lineNumber":176,"author":{"gitId":"glozxi"},"content":"        userInput \u003d targetIndex.getOneBased() + END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-15"},{"lineNumber":177,"author":{"gitId":"glozxi"},"content":"        descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-03-17"},{"lineNumber":178,"author":{"gitId":"glozxi"},"content":"                .withEndTime(VALID_END_TIME_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":179,"author":{"gitId":"glozxi"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":180,"author":{"gitId":"glozxi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":181,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"glozxi"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"glozxi"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":192,"author":{"gitId":"engenhui1999"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_AMY + END_TIME_DESC_AMY","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"engenhui1999"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"glozxi"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":196,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-15"},{"lineNumber":197,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"glozxi"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-17"},{"lineNumber":200,"author":{"gitId":"glozxi"},"content":"                .withAddress(VALID_ADDRESS_BOB).withStartTime(VALID_START_TIME_BOB).withEndTime(VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":201,"author":{"gitId":"glozxi"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"glozxi"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":213,"author":{"gitId":"glozxi"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder()","lastModifiedDate":"2023-03-17"},{"lineNumber":214,"author":{"gitId":"glozxi"},"content":"                .withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":219,"author":{"gitId":"engenhui1999"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":220,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":221,"author":{"gitId":"glozxi"},"content":"        descriptor \u003d new EditEventDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-17"},{"lineNumber":222,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":229,"author":{"gitId":"glozxi"},"content":"        Index targetIndex \u003d INDEX_THIRD_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":232,"author":{"gitId":"glozxi"},"content":"        EditCommand.EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder().withTags().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"glozxi":51,"engenhui1999":54,"-":132}},{"path":"src/test/java/seedu/event/logic/parser/EventBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalTimes.CLOCK_FIXED_AT_TIME_NOW;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalTimes.TYPICAL_DAYS;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.AddCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.FindCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.LinkContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.ListCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.RemindCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.RevenueCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.StartTimeWithinDaysPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.ContactBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.ContactUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EditEventDescriptorBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"public class EventBookParserTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"    private final EventBookParser parser \u003d new EventBookParser(CLOCK_FIXED_AT_TIME_NOW);","lastModifiedDate":"2023-03-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(EventUtil.getAddCommand(event));","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        assertEquals(new AddCommand(event), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_EVENT), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"        EditEventDescriptor descriptor \u003d new EditEventDescriptorBuilder(event).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"                + INDEX_FIRST_EVENT.getOneBased() + \" \" + EventUtil.getEditEventDescriptorDetails(descriptor));","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_EVENT, descriptor), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"    public void parseCommand_newContact() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand command \u003d (NewContactCommand) parser.parseCommand(ContactUtil.getNewContactCommand(contact));","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(new NewContactCommand(contact), command);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":111,"author":{"gitId":"glozxi"},"content":"    public void parseCommand_remind() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"        LocalDateTime nowTime \u003d LocalDateTime.now();","lastModifiedDate":"2023-03-20"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"        RemindCommand command \u003d (RemindCommand) parser.parseCommand(","lastModifiedDate":"2023-03-20"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"                RemindCommand.COMMAND_WORD + \" \" + TYPICAL_DAYS);","lastModifiedDate":"2023-03-20"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"        assertEquals(","lastModifiedDate":"2023-03-21"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"                new RemindCommand(new StartTimeWithinDaysPredicate(CLOCK_FIXED_AT_TIME_NOW, TYPICAL_DAYS)), command);","lastModifiedDate":"2023-03-21"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":120,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"engenhui1999"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand command \u003d (MarkCommand) parser.parseCommand(","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"glozxi"},"content":"            MarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"glozxi"},"content":"        assertEquals(new MarkCommand(INDEX_FIRST_EVENT), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"ExtraShotLatte"},"content":"    public void parseCommand_linkContact() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"ExtraShotLatte"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"ExtraShotLatte"},"content":"        LinkContactCommand command \u003d (LinkContactCommand) parser.parseCommand(","lastModifiedDate":"2023-03-13"},{"lineNumber":131,"author":{"gitId":"glozxi"},"content":"                LinkContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_EVENT.getOneBased() + \" \"","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"ExtraShotLatte"},"content":"                        + contact.getPhone().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":133,"author":{"gitId":"glozxi"},"content":"        assertEquals(new LinkContactCommand(INDEX_FIRST_EVENT, contact.getPhone().value), command);","lastModifiedDate":"2023-03-17"},{"lineNumber":134,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":135,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":136,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"engenhui1999"},"content":"    public void parseCommand_revenue() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":138,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(parser.parseCommand(RevenueCommand.COMMAND_WORD) instanceof RevenueCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":139,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(parser.parseCommand(RevenueCommand.COMMAND_WORD + \" 3\") instanceof RevenueCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":140,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":141,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":142,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":143,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ExtraShotLatte":8,"glozxi":26,"bryansendeavour":7,"engenhui1999":43,"-":70}},{"path":"src/test/java/seedu/event/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.FindCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                new FindCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"engenhui1999":6,"-":28}},{"path":"src/test/java/seedu/event/logic/parser/LinkContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-16"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.LinkContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"public class LinkContactCommandParserTest {","lastModifiedDate":"2023-03-16"},{"lineNumber":16,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"    private LinkContactCommandParser parser \u003d new LinkContactCommandParser();","lastModifiedDate":"2023-03-16"},{"lineNumber":18,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":20,"author":{"gitId":"ExtraShotLatte"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2023-03-16"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"    public void parse_validArgs_returnsLinkContactCommand() {","lastModifiedDate":"2023-03-16"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-16"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        Index targetIndex \u003d INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"        LinkContactCommand expectedLinkContactCommand \u003d","lastModifiedDate":"2023-03-16"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"                new LinkContactCommand(targetIndex, \"91234567\");","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"ExtraShotLatte"},"content":"        assertParseSuccess(parser, \"1 91234567\", expectedLinkContactCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"        //Leading and trailing white space","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"        assertParseSuccess(parser, \"   1 91234567   \", expectedLinkContactCommand);","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"ExtraShotLatte"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"        assertParseFailure(parser, \"1\",","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"ExtraShotLatte"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"        assertParseFailure(parser, \"-1\",","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"        assertParseFailure(parser, \"0\",","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, LinkContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"0\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"        assertThrows(ParseException.class, () -\u003e parser.parse(\"-1\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":54,"author":{"gitId":"ExtraShotLatte"},"content":"}","lastModifiedDate":"2023-03-16"}],"authorContributionMap":{"ExtraShotLatte":44,"glozxi":1,"engenhui1999":9}},{"path":"src/test/java/seedu/event/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":" * outside of the MarkCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":" * same path through the MarkCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"        assertParseSuccess(parser, \"1\", new MarkCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"glozxi":1,"engenhui1999":31}},{"path":"src/test/java/seedu/event/logic/parser/NewContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"class NewContactCommandParserTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private NewContactCommandParser parser \u003d new NewContactCommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, NewContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        // missing name prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        // missing phone prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB, expectedMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB, expectedMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":24,"engenhui1999":8}},{"path":"src/test/java/seedu/event/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.ParserUtil.MESSAGE_INVALID_DAYS_NUMBER;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactName;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactPhone;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Email;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    private static final String INVALID_START_TIME \u003d \"03-03-2023 77:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    private static final String INVALID_END_TIME \u003d \"03-03-2023 77:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    private static final String VALID_PHONE \u003d \"12345678\";","lastModifiedDate":"2023-03-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    private static final String VALID_START_TIME \u003d \"03-03-2023 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    private static final String VALID_END_TIME \u003d \"03-03-2023 14:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"        assertEquals(INDEX_FIRST_EVENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        assertEquals(INDEX_FIRST_EVENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"    public void parseDaysNumber_invalidInput_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseDaysNumber(\"10 a\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"    public void parseDaysNumber_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_DAYS_NUMBER, ()","lastModifiedDate":"2023-03-20"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"                -\u003e ParserUtil.parseDaysNumber(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2023-03-20"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"    public void parseDaysNumber_validInput_success() throws Exception {","lastModifiedDate":"2023-03-20"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"        // No whitespaces","lastModifiedDate":"2023-03-20"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"        assertEquals(INDEX_FIRST_EVENT, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2023-03-20"},{"lineNumber":81,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2023-03-20"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"        assertEquals(INDEX_FIRST_EVENT, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2023-03-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactName(INVALID_NAME));","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactName_validValueWithoutWhitespace_returnsContactName() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"        ContactName expectedName \u003d new ContactName(VALID_NAME);","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedName, ParserUtil.parseContactName(VALID_NAME));","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"        ContactName expectedName \u003d new ContactName(VALID_NAME);","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedName, ParserUtil.parseContactName(nameWithWhitespace));","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactPhone_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactPhone(INVALID_PHONE));","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactPhone_validValueWithoutWhitespace_returnsContactPhone() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"        ContactPhone expectedPhone \u003d new ContactPhone(VALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedPhone, ParserUtil.parseContactPhone(VALID_PHONE));","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactPhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"        ContactPhone expectedPhone \u003d new ContactPhone(VALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedPhone, ParserUtil.parseContactPhone(phoneWithWhitespace));","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":191,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"glozxi"},"content":"    public void parseTime_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":193,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTime((String) null));","lastModifiedDate":"2023-03-15"},{"lineNumber":194,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"glozxi"},"content":"    public void parseTime_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":198,"author":{"gitId":"glozxi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTime(INVALID_START_TIME));","lastModifiedDate":"2023-03-15"},{"lineNumber":199,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"glozxi"},"content":"    public void parseTime_validValueWithoutWhitespace_returnsTime() throws Exception {","lastModifiedDate":"2023-03-15"},{"lineNumber":203,"author":{"gitId":"glozxi"},"content":"        Time expectedTime \u003d new Time(VALID_START_TIME);","lastModifiedDate":"2023-03-15"},{"lineNumber":204,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(VALID_START_TIME));","lastModifiedDate":"2023-03-15"},{"lineNumber":205,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"glozxi"},"content":"    public void parseTiming_validValueWithWhitespace_returnsTrimmedTiming() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"glozxi"},"content":"        String startTimeWithWhitespace \u003d WHITESPACE + VALID_START_TIME + WHITESPACE;","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"glozxi"},"content":"        Time expectedTime \u003d new Time(VALID_START_TIME);","lastModifiedDate":"2023-03-15"},{"lineNumber":211,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedTime, ParserUtil.parseTime(startTimeWithWhitespace));","lastModifiedDate":"2023-03-15"},{"lineNumber":212,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"glozxi":47,"bryansendeavour":24,"engenhui1999":13,"-":175}},{"path":"src/test/java/seedu/event/logic/parser/RemindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalTimes.CLOCK_FIXED_AT_TIME_NOW;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.RemindCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.StartTimeWithinDaysPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"public class RemindCommandParserTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    private RemindCommandParser parser \u003d new RemindCommandParser(CLOCK_FIXED_AT_TIME_NOW);","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(","lastModifiedDate":"2023-03-20"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"                parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    public void parse_validArgs_returnsRemindCommand() {","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"        RemindCommand expectedRemindCommand \u003d","lastModifiedDate":"2023-03-20"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"                new RemindCommand(new StartTimeWithinDaysPredicate(CLOCK_FIXED_AT_TIME_NOW, 3));","lastModifiedDate":"2023-03-21"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"        assertParseSuccess(parser, \"3\", expectedRemindCommand);","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, \"a\",","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemindCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"glozxi":30,"engenhui1999":7}},{"path":"src/test/java/seedu/event/logic/parser/UnmarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.logic.parser;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalIndexes.INDEX_FIRST_EVENT;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.UnmarkCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":" * outside of the UnmarkCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":" * same path through the UnmarkCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"public class UnmarkCommandParserTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    private UnmarkCommandParser parser \u003d new UnmarkCommandParser();","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"    public void parse_validArgs_returnsUnmarkCommand() {","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"        assertParseSuccess(parser, \"1\", new UnmarkCommand(INDEX_FIRST_EVENT));","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, UnmarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"EksdeeeX":25,"glozxi":1,"engenhui1999":6}},{"path":"src/test/java/seedu/event/model/ContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.ContactBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"public class ContactListTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    private final ContactList contactList \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(Collections.emptyList(), contactList.getContactList());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactList.resetData(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public void resetData_withValidReadOnlyContactBook_replacesData() {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        ContactList newData \u003d getTypicalContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        contactList.resetData(newData);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(newData, contactList);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    public void resetData_withDuplicateContacts_throwsDuplicateContactException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        // Two contacts with the same identity fields","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE)","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        List\u003cContact\u003e newContacts \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        ContactBookStub newData \u003d new ContactBookStub(newContacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e contactList.resetData(newData));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"    public void hasContact_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactList.hasContact(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactNotInContactBook_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(contactList.hasContact(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactInContactBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"        contactList.addContact(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(contactList.hasContact(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactWithSameIdentityFieldsInContactBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        contactList.addContact(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE)","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(contactList.hasContact(editedAlice));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"    public void getContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e contactList.getContactList().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"     * A stub ReadOnlyEventBook whose contacts list can violate interface constraints.","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    private static class ContactBookStub implements ReadOnlyContactList {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        private final ObservableList\u003cContact\u003e contacts \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        ContactBookStub(Collection\u003cContact\u003e contacts) {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"            this.contacts.setAll(contacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"            return contacts;","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"glozxi":3,"bryansendeavour":90,"engenhui1999":7}},{"path":"src/test/java/seedu/event/model/EventBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"public class EventBookTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    private final EventBook eventBook \u003d new EventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"        assertEquals(Collections.emptyList(), eventBook.getEventList());","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.resetData(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    public void resetData_withValidReadOnlyEventBook_replacesData() {","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"        EventBook newData \u003d getTypicalEventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        eventBook.resetData(newData);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"        assertEquals(newData, eventBook);","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"    public void resetData_withDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        // Two events with the same identity fields","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"        List\u003cEvent\u003e newEvents \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        EventBookStub newData \u003d new EventBookStub(newEvents);","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e eventBook.resetData(newData));","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.hasEvent(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"    public void hasEvent_eventNotInEventBook_returnsFalse() {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"        assertFalse(eventBook.hasEvent(ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"    public void hasEvent_eventInEventBook_returnsTrue() {","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"        eventBook.addEvent(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"        assertTrue(eventBook.hasEvent(ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"    public void hasEvent_eventWithSameIdentityFieldsInEventBook_returnsTrue() {","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"        eventBook.addEvent(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"        assertTrue(eventBook.hasEvent(editedAlice));","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"    public void getEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e eventBook.getEventList().remove(0));","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":87,"author":{"gitId":"ExtraShotLatte"},"content":"    public void linkContact_linkContactToEvent_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"        eventBook.addEvent(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"glozxi"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withContact(\"ALICE\", \"91234567\").build();","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"        eventBook.linkContact(ALICE, editedAlice);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"glozxi"},"content":"        assertTrue(eventBook.hasEvent(editedAlice));","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"ExtraShotLatte"},"content":"    public void linkContact_linkNullToEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"glozxi"},"content":"        eventBook.addEvent(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e eventBook.linkContact(ALICE, null));","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"     * A stub ReadOnlyEventBook whose events list can violate interface constraints.","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"    private static class EventBookStub implements ReadOnlyEventBook {","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"glozxi"},"content":"        private final ObservableList\u003cEvent\u003e events \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"glozxi"},"content":"        EventBookStub(Collection\u003cEvent\u003e events) {","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"            this.events.setAll(events);","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"glozxi"},"content":"        public ObservableList\u003cEvent\u003e getEventList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"            return events;","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ExtraShotLatte":8,"glozxi":40,"engenhui1999":9,"-":59}},{"path":"src/test/java/seedu/event/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.model.Model.PREDICATE_SHOW_ALL_EVENTS;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.BENSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.NameContainsKeywordsPredicate;","lastModifiedDate":"2023-03-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.ContactListBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBookBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        assertEquals(new EventBook(), new EventBook(modelManager.getEventBook()));","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(new ContactList(), new ContactList(modelManager.getContactList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        userPrefs.setEventBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"        userPrefs.setContactListFilePath(Paths.get(\"contact/list/file/path\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        userPrefs.setEventBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        userPrefs.setContactListFilePath(Paths.get(\"new/contact/list/file/path\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"    public void setEventBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setEventBookFilePath(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setContactListFilePath(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"    public void setEventBookFilePath_validPath_setsEventBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"glozxi"},"content":"        modelManager.setEventBookFilePath(path);","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"        assertEquals(path, modelManager.getEventBookFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath_validPath_setsContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        Path path \u003d Paths.get(\"contact/list/file/path\");","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"        modelManager.setContactListFilePath(path);","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(path, modelManager.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":96,"author":{"gitId":"glozxi"},"content":"    public void hasEvent_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasEvent(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasContact(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"glozxi"},"content":"    public void hasEvent_eventNotInEventBook_returnsFalse() {","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        assertFalse(modelManager.hasEvent(ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactNotInContactList_returnsFalse() {","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(modelManager.hasContact(AMY));","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"    public void hasEvent_eventInEventBook_returnsTrue() {","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"        modelManager.addEvent(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        assertTrue(modelManager.hasEvent(ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactInContactList_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"        modelManager.addContact(AMY);","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(modelManager.hasContact(AMY));","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"glozxi"},"content":"    public void getFilteredEventList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":129,"author":{"gitId":"glozxi"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredEventList().remove(0));","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"    public void getFilteredContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-20"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredContactList().remove(0));","lastModifiedDate":"2023-03-20"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-16"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"    public void linkContact() {","lastModifiedDate":"2023-03-16"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"        modelManager.addContact(AMY);","lastModifiedDate":"2023-03-16"},{"lineNumber":140,"author":{"gitId":"glozxi"},"content":"        modelManager.addEvent(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"glozxi"},"content":"        Event event \u003d modelManager.getEventBook().getEventList().get(0);","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"        Contact contact \u003d modelManager.getContactList().getContactList().get(0);","lastModifiedDate":"2023-03-16"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"        Event before \u003d event;","lastModifiedDate":"2023-03-16"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"        event.linkContact(contact);","lastModifiedDate":"2023-03-16"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"        Event linkedEvent \u003d event;","lastModifiedDate":"2023-03-16"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"        modelManager.linkContact(before, linkedEvent);","lastModifiedDate":"2023-03-16"},{"lineNumber":147,"author":{"gitId":"glozxi"},"content":"        assertTrue(modelManager.getFilteredEventList().get(0).equals(linkedEvent));","lastModifiedDate":"2023-03-17"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-16"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"        EventBook eventBook \u003d new EventBookBuilder().withEvent(ALICE).withEvent(BENSON).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"glozxi"},"content":"        EventBook differentEventBook \u003d new EventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"        ContactList contactList \u003d new ContactListBuilder().withContact(AMY).withContact(BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"bryansendeavour"},"content":"        ContactList differentContactList \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"glozxi"},"content":"        modelManager \u003d new ModelManager(eventBook, contactList, userPrefs);","lastModifiedDate":"2023-03-17"},{"lineNumber":160,"author":{"gitId":"glozxi"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(eventBook, contactList, userPrefs);","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"glozxi"},"content":"        // different eventBook -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":173,"author":{"gitId":"glozxi"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentEventBook, contactList, userPrefs)));","lastModifiedDate":"2023-03-17"},{"lineNumber":174,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"        // different contactList -\u003e return false","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"glozxi"},"content":"        assertFalse(modelManager.equals(new ModelManager(eventBook, differentContactList, userPrefs)));","lastModifiedDate":"2023-03-17"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":180,"author":{"gitId":"glozxi"},"content":"        modelManager.updateFilteredEventList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2023-03-17"},{"lineNumber":181,"author":{"gitId":"glozxi"},"content":"        assertFalse(modelManager.equals(new ModelManager(eventBook, contactList, userPrefs)));","lastModifiedDate":"2023-03-17"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":184,"author":{"gitId":"glozxi"},"content":"        modelManager.updateFilteredEventList(PREDICATE_SHOW_ALL_EVENTS);","lastModifiedDate":"2023-03-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":188,"author":{"gitId":"glozxi"},"content":"        differentUserPrefs.setEventBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":189,"author":{"gitId":"glozxi"},"content":"        assertFalse(modelManager.equals(new ModelManager(eventBook, contactList, differentUserPrefs)));","lastModifiedDate":"2023-03-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"glozxi":32,"bryansendeavour":50,"engenhui1999":13,"-":96}},{"path":"src/test/java/seedu/event/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    public void setEventBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setEventBookFilePath(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setContactListFilePath(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"glozxi":2,"bryansendeavour":4,"engenhui1999":2,"-":19}},{"path":"src/test/java/seedu/event/model/contact/ContactNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"public class ContactNameTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ContactName(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ContactName(invalidName));","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    public void isValidName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        // null name","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e ContactName.isValidName(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        // invalid name","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        // valid name","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":39,"engenhui1999":2}},{"path":"src/test/java/seedu/event/model/contact/ContactPhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"public class ContactPhoneTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ContactPhone(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ContactPhone(invalidPhone));","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    public void isValidPhone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        // null phone number","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e ContactPhone.isValidPhone(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"91\")); // less than 8 numbers","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"1234567\")); // 7 numbers","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"1234567 \")); // 7 numbers with space","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        // valid phone numbers","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactPhone.isValidPhone(\"93121534\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactPhone.isValidPhone(\"12345678\"));","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactPhone.isValidPhone(\"123456789\")); // 9 numbers","lastModifiedDate":"2023-03-25"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactPhone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-03-25"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":41,"engenhui1999":2}},{"path":"src/test/java/seedu/event/model/contact/ContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.ContactBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"public class ContactTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    public void isSameContact() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ALICE.isSameContact(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.isSameContact(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2023-03-21"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2023-03-21"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedBob \u003d new ContactBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(BOB.isSameContact(editedBob));","lastModifiedDate":"2023-03-21"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        editedBob \u003d new ContactBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(BOB.isSameContact(editedBob));","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        Contact aliceCopy \u003d new ContactBuilder(ALICE).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        // different Contact -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":64,"engenhui1999":6}},{"path":"src/test/java/seedu/event/model/contact/UniqueContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.ContactBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"public class UniqueContactListTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    private final UniqueContactList uniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    public void contains_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.contains(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    public void contains_contactNotInList_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(uniqueContactList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    public void contains_contactInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(uniqueContactList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    public void contains_contactWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE)","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(uniqueContactList.contains(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public void add_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.add(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"    public void add_duplicateContact_throwsDuplicateContactException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.add(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"    public void setContact_nullTargetContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(null, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"    public void setContact_nullEditedContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(ALICE, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_targetContactNotInList_throwsContactNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.setContact(ALICE, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_editedContactIsSameContact_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContact(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_editedContactHasSameIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE)","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContact(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_editedContactHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContact(ALICE, BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_editedContactHasNonUniqueIdentity_throwsDuplicateContactException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContact(ALICE, BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"    public void remove_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.remove(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"    public void remove_contactDoesNotExist_throwsContactNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.remove(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"    public void remove_existingContact_removesContact() {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.remove(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_nullUniqueContactList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((UniqueContactList) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_uniqueContactList_replacesOwnListWithProvidedUniqueContactList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContacts(expectedUniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((List\u003cContact\u003e) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"        List\u003cContact\u003e contactList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContacts(contactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_listWithDuplicateContacts_throwsDuplicateContactException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"bryansendeavour"},"content":"        List\u003cContact\u003e listWithDuplicateContacts \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContacts(listWithDuplicateContacts));","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"bryansendeavour"},"content":"                -\u003e uniqueContactList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"glozxi":3,"bryansendeavour":157,"engenhui1999":7}},{"path":"src/test/java/seedu/event/model/event/AddressTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AddressTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Address(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidAddress \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Address(invalidAddress));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidAddress() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null address","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Address.isValidAddress(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Address.isValidAddress(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // valid addresses","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Blk 456, Den Road, #01-355\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"-\")); // one character","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Address.isValidAddress(\"Leng Inc; 1234 Market St; San Francisco CA 2349879; USA\")); // long address","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"engenhui1999":2,"-":34}},{"path":"src/test/java/seedu/event/model/event/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_validEmail_equalsString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        String validEmail \u003d \"test@localhost\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"        assertEquals(validEmail, new Email(validEmail).toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_validEmail_equalsHashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"        String validEmail \u003d \"test@localhost\";","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"        assertEquals(validEmail.hashCode(), new Email(validEmail).hashCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"engenhui1999":15,"-":66}},{"path":"src/test/java/seedu/event/model/event/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_END_TIME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_START_TIME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"public class EventTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"        Event event \u003d new EventBuilder().build();","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e event.getTags().remove(0));","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    public void isSameEvent() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(ALICE.isSameEvent(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(ALICE.isSameEvent(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withRate(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(ALICE.isSameEvent(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"        editedAlice \u003d new EventBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(ALICE.isSameEvent(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        Event editedBob \u003d new EventBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(BOB.isSameEvent(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        editedBob \u003d new EventBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(BOB.isSameEvent(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"        // same name, different timing -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        editedAlice \u003d new EventBuilder(ALICE)","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"                .withStartTime(VALID_START_TIME_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"                .withEndTime(VALID_END_TIME_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"ExtraShotLatte"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"ExtraShotLatte"},"content":"        assertFalse(ALICE.isSameEvent(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"        Event aliceCopy \u003d new EventBuilder(ALICE).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"glozxi"},"content":"        editedAlice \u003d new EventBuilder(ALICE).withRate(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"        editedAlice \u003d new EventBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"        editedAlice \u003d new EventBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"engenhui1999"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(ALICE.hashCode() \u003d\u003d (BOB.hashCode()));","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"ExtraShotLatte"},"content":"        // different time -\u003e return false","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"glozxi"},"content":"        editedAlice \u003d new EventBuilder(ALICE)","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"glozxi"},"content":"                .withStartTime(VALID_START_TIME_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"                .withEndTime(VALID_END_TIME_AMY).build();","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"ExtraShotLatte"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ExtraShotLatte":9,"glozxi":18,"engenhui1999":22,"-":57}},{"path":"src/test/java/seedu/event/model/event/MarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"public class MarkTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"    public void isSameMark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"        Mark undoneMark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"        Mark doneMarkOne \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"        doneMarkOne.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"        Mark doneMarkTwo \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"        doneMarkTwo.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(undoneMark.equals(undoneMark));","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(undoneMark.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"        // different mark -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(undoneMark.equals(doneMarkOne));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        // marks that have the same status -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(undoneMark.equals(new Mark()));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"        // marks that have the same status -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(doneMarkOne.equals(doneMarkTwo));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"        // Test Unmark method","lastModifiedDate":"2023-03-16"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"        doneMarkOne.setUndone();","lastModifiedDate":"2023-03-16"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(doneMarkOne.equals(doneMarkOne));","lastModifiedDate":"2023-03-16"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(doneMarkOne.equals(null));","lastModifiedDate":"2023-03-16"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"        // different mark -\u003e returns false","lastModifiedDate":"2023-03-16"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(doneMarkOne.equals(doneMarkTwo));","lastModifiedDate":"2023-03-16"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"        // marks that have the same status -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(doneMarkOne.equals(new Mark()));","lastModifiedDate":"2023-03-16"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"        doneMarkTwo.setUndone();","lastModifiedDate":"2023-03-16"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"        // marks that have the same status -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(doneMarkOne.equals(doneMarkTwo));","lastModifiedDate":"2023-03-16"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"        Mark undoneMark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"        Mark doneMark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"        doneMark.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"engenhui1999"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(undoneMark.toString().equals(\"[ ]\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(doneMark.toString().equals(\"[X]\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-16"},{"lineNumber":63,"author":{"gitId":"EksdeeeX"},"content":"        doneMark.setUndone();","lastModifiedDate":"2023-03-16"},{"lineNumber":64,"author":{"gitId":"EksdeeeX"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-16"},{"lineNumber":65,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(doneMark.toString().equals(\"[ ]\"));","lastModifiedDate":"2023-03-16"},{"lineNumber":66,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"EksdeeeX":23,"engenhui1999":44}},{"path":"src/test/java/seedu/event/model/event/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        // different event -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        assertTrue(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"        assertFalse(predicate.test(new EventBuilder().withName(\"Alice\").withRate(\"12345\")","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"                .withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"glozxi":8,"engenhui1999":3,"-":64}},{"path":"src/test/java/seedu/event/model/event/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"engenhui1999":2,"-":38}},{"path":"src/test/java/seedu/event/model/event/RateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"public class RateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Rate(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_invalidRate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"        String invalidRate \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rate(invalidRate));","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    public void isValidRate() {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"        // null rate number","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e Rate.isValidRate(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"        // invalid rate numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\"Rate\")); // non-numeric","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"        // valid rate numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(Rate.isValidRate(\"911.00\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(Rate.isValidRate(\"93121534\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(Rate.isValidRate(\"124293842033123\")); // long rate numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"engenhui1999":39}},{"path":"src/test/java/seedu/event/model/event/StartTimeWithinDaysPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-20"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalTimes.CLOCK_FIXED_AT_TIME_NOW;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"public class StartTimeWithinDaysPredicateTest {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"    public void equals() {","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"        int firstPredicateDays \u003d 3;","lastModifiedDate":"2023-03-20"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"        int secondPredicateDays \u003d 4;","lastModifiedDate":"2023-03-20"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"        StartTimeWithinDaysPredicate firstPredicate \u003d new StartTimeWithinDaysPredicate(","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"                CLOCK_FIXED_AT_TIME_NOW, firstPredicateDays);","lastModifiedDate":"2023-03-21"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"        StartTimeWithinDaysPredicate secondPredicate \u003d new StartTimeWithinDaysPredicate(","lastModifiedDate":"2023-03-20"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"                CLOCK_FIXED_AT_TIME_NOW, secondPredicateDays);","lastModifiedDate":"2023-03-21"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2023-03-20"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-20"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"        StartTimeWithinDaysPredicate firstPredicateCopy \u003d new StartTimeWithinDaysPredicate(","lastModifiedDate":"2023-03-20"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"                CLOCK_FIXED_AT_TIME_NOW, firstPredicateDays);","lastModifiedDate":"2023-03-21"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2023-03-20"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2023-03-20"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2023-03-20"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        // different predicate -\u003e returns false","lastModifiedDate":"2023-03-20"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2023-03-20"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    public void test_isWithinDays_returnsTrue() {","lastModifiedDate":"2023-03-20"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        StartTimeWithinDaysPredicate predicate \u003d new StartTimeWithinDaysPredicate(CLOCK_FIXED_AT_TIME_NOW, 3);","lastModifiedDate":"2023-03-21"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"        // 1 March 2023 to 1 March 2023 is \u003c\u003d 3 days","lastModifiedDate":"2023-03-20"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        assertTrue(predicate.test(new EventBuilder().withStartTime(\"01-03-2023 11:00\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"        // 1 March 2023 to 4 March 2023 is \u003c\u003d 3 days","lastModifiedDate":"2023-03-20"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        assertTrue(predicate.test(new EventBuilder().withStartTime(\"04-03-2023 23:59\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-20"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"    public void test_isNotWithinDays_returnsFalse() {","lastModifiedDate":"2023-03-20"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        StartTimeWithinDaysPredicate predicate \u003d new StartTimeWithinDaysPredicate(CLOCK_FIXED_AT_TIME_NOW, 3);","lastModifiedDate":"2023-03-21"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        // 1 March 2023 10:59 is before 1 March 2023 11:00","lastModifiedDate":"2023-03-20"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        assertFalse(predicate.test(new EventBuilder().withStartTime(\"01-03-2023 10:59\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        // 5 March 2023 to 1 March 2023 \u003e 3 days","lastModifiedDate":"2023-03-20"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"        assertFalse(predicate.test(new EventBuilder().withStartTime(\"05-03-2023 00:00\").build()));","lastModifiedDate":"2023-03-20"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-20"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"glozxi":59,"engenhui1999":3}},{"path":"src/test/java/seedu/event/model/event/TimeTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-15"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-15"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"public class TimeTest {","lastModifiedDate":"2023-03-15"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Time(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    public void constructor_invalidTime_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-15"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2023-03-15"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Time(invalidTime));","lastModifiedDate":"2023-03-15"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-15"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    public void isValidTime() {","lastModifiedDate":"2023-03-15"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"        // null time(s)","lastModifiedDate":"2023-03-15"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"        assertFalse(Time.isValidTime(null));","lastModifiedDate":"2023-03-15"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"        // invalid time","lastModifiedDate":"2023-03-15"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"        // empty string","lastModifiedDate":"2023-03-15"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        assertFalse(Time.isValidTime(\"\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"        // spaces only","lastModifiedDate":"2023-03-15"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"        assertFalse(Time.isValidTime(\" \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        // different symbols","lastModifiedDate":"2023-03-15"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        assertFalse(Time.isValidTime(\"12:03:2023 12-00\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        // non-existent times","lastModifiedDate":"2023-03-15"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        assertFalse(Time.isValidTime(\"31-02-2023 12:00\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        assertFalse(Time.isValidTime(\"15-02-2023 25:00\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        // valid times","lastModifiedDate":"2023-03-15"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"        assertTrue(Time.isValidTime(\"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-15"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-15"}],"authorContributionMap":{"glozxi":41,"engenhui1999":2}},{"path":"src/test/java/seedu/event/model/event/UniqueEventListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.exceptions.DuplicateEventException;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.exceptions.EventNotFoundException;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.EventBuilder;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"public class UniqueEventListTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    private final UniqueEventList uniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public void contains_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.contains(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    public void contains_eventNotInList_returnsFalse() {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        assertFalse(uniqueEventList.contains(ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"    public void contains_eventInList_returnsTrue() {","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        assertTrue(uniqueEventList.contains(ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"    public void contains_eventWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"        assertTrue(uniqueEventList.contains(editedAlice));","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"    public void add_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.add(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"    public void add_duplicateEvent_throwsDuplicateEventException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.add(ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"    public void setEvent_nullTargetEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(null, ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"    public void setEvent_nullEditedEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvent(ALICE, null));","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"    public void setEvent_targetEventNotInList_throwsEventNotFoundException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.setEvent(ALICE, ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"    public void setEvent_editedEventIsSameEvent_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.setEvent(ALICE, ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"glozxi"},"content":"        expectedUniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"glozxi"},"content":"    public void setEvent_editedEventHasSameIdentity_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"        Event editedAlice \u003d new EventBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.setEvent(ALICE, editedAlice);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"glozxi"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"        expectedUniqueEventList.add(editedAlice);","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"    public void setEvent_editedEventHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.setEvent(ALICE, BOB);","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"glozxi"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"        expectedUniqueEventList.add(BOB);","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"glozxi"},"content":"    public void setEvent_editedEventHasNonUniqueIdentity_throwsDuplicateEventException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(BOB);","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvent(ALICE, BOB));","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"    public void remove_nullEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.remove(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"    public void remove_eventDoesNotExist_throwsEventNotFoundException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"        assertThrows(EventNotFoundException.class, () -\u003e uniqueEventList.remove(ALICE));","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"glozxi"},"content":"    public void remove_existingEvent_removesEvent() {","lastModifiedDate":"2023-03-17"},{"lineNumber":124,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.remove(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":126,"author":{"gitId":"glozxi"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-17"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"glozxi"},"content":"    public void setEvents_nullUniqueEventList_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":132,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((UniqueEventList) null));","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"glozxi"},"content":"    public void setEvents_uniqueEventList_replacesOwnListWithProvidedUniqueEventList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":138,"author":{"gitId":"glozxi"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"glozxi"},"content":"        expectedUniqueEventList.add(BOB);","lastModifiedDate":"2023-03-17"},{"lineNumber":140,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.setEvents(expectedUniqueEventList);","lastModifiedDate":"2023-03-17"},{"lineNumber":141,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-17"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"glozxi"},"content":"    public void setEvents_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":146,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueEventList.setEvents((List\u003cEvent\u003e) null));","lastModifiedDate":"2023-03-17"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"glozxi"},"content":"    public void setEvents_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-17"},{"lineNumber":151,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.add(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"        List\u003cEvent\u003e eventList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"glozxi"},"content":"        uniqueEventList.setEvents(eventList);","lastModifiedDate":"2023-03-17"},{"lineNumber":154,"author":{"gitId":"glozxi"},"content":"        UniqueEventList expectedUniqueEventList \u003d new UniqueEventList();","lastModifiedDate":"2023-03-17"},{"lineNumber":155,"author":{"gitId":"glozxi"},"content":"        expectedUniqueEventList.add(BOB);","lastModifiedDate":"2023-03-17"},{"lineNumber":156,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedUniqueEventList, uniqueEventList);","lastModifiedDate":"2023-03-17"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"glozxi"},"content":"    public void setEvents_listWithDuplicateEvents_throwsDuplicateEventException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":161,"author":{"gitId":"glozxi"},"content":"        List\u003cEvent\u003e listWithDuplicateEvents \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":162,"author":{"gitId":"glozxi"},"content":"        assertThrows(DuplicateEventException.class, () -\u003e uniqueEventList.setEvents(listWithDuplicateEvents));","lastModifiedDate":"2023-03-17"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"glozxi"},"content":"            -\u003e uniqueEventList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-17"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"glozxi":77,"engenhui1999":9,"-":84}},{"path":"src/test/java/seedu/event/model/event/UnmarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.event;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"public class UnmarkTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"    public void isSameMark() {","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"        Mark undoneMark \u003d new Mark();","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"        Mark doneMarkOne \u003d new Mark();","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"        doneMarkOne.setDone();","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"        Mark doneMarkTwo \u003d new Mark();","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"        doneMarkTwo.setDone();","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(undoneMark.equals(undoneMark));","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(undoneMark.equals(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"        // different mark -\u003e returns false","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(undoneMark.equals(doneMarkOne));","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"        // marks that have the same status -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(undoneMark.equals(new Mark()));","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"        // marks that have the same status -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(doneMarkOne.equals(doneMarkTwo));","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"    public void equals() {","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"        Mark undoneMark \u003d new Mark();","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"        Mark doneMark \u003d new Mark();","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"        doneMark.setDone();","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(undoneMark.toString().equals(\"[ ]\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(doneMark.toString().equals(\"[X]\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"EksdeeeX":43,"engenhui1999":1}},{"path":"src/test/java/seedu/event/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.model.tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"engenhui1999":2,"-":24}},{"path":"src/test/java/seedu/event/storage/JsonAdaptedContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.storage.JsonAdaptedContact.MISSING_CFIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.BENSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactName;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactPhone;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"class JsonAdaptedContactTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private static final String INVALID_PHONE \u003d \"-65\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().fullName;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_validContactDetails_returnsContact() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(BENSON);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(BENSON, contact.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(INVALID_NAME, VALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d ContactName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(null, VALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d String.format(MISSING_CFIELD_MESSAGE_FORMAT, ContactName.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, INVALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d ContactPhone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, null);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d String.format(MISSING_CFIELD_MESSAGE_FORMAT, ContactPhone.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":46,"engenhui1999":7}},{"path":"src/test/java/seedu/event/storage/JsonAdaptedEventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.storage.JsonAdaptedEvent.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.BENSON;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"public class JsonAdaptedEventTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"    private static final String INVALID_RATE \u003d \"-651234\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    private static final String INVALID_START_TIME \u003d \"99-99-9999 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    private static final String INVALID_END_TIME \u003d \"99-99-9999 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    private static final String VALID_RATE \u003d BENSON.getRate().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    private static final String VALID_START_TIME \u003d BENSON.getStartTime().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    private static final String VALID_END_TIME \u003d BENSON.getEndTime().toString();","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    private static final String VALID_MARK \u003d BENSON.getMark().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"    private static final String VALID_CONTACTNUM \u003d BENSON.getContact().getName().fullName + \" HP:\"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"            + BENSON.getContact().getPhone().value;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    public void toModelType_validEventDetails_returnsEvent() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(BENSON);","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"        assertEquals(BENSON, event.toModelType());","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"                new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"                        INVALID_NAME, VALID_RATE, VALID_ADDRESS,","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"                        VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"ExtraShotLatte"},"content":"                null, VALID_RATE, VALID_ADDRESS, VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM,","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"                new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"engenhui1999"},"content":"                        VALID_NAME, INVALID_RATE, VALID_ADDRESS,","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"ExtraShotLatte"},"content":"                        VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"engenhui1999"},"content":"        String expectedMessage \u003d Rate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, null, VALID_ADDRESS, VALID_START_TIME, VALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"engenhui1999"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Rate.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"engenhui1999"},"content":"                        VALID_NAME, VALID_RATE, INVALID_ADDRESS,","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"ExtraShotLatte"},"content":"                        VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, null, VALID_START_TIME, VALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"    public void toModelType_invalidTiming_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, INVALID_START_TIME, VALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"glozxi"},"content":"        event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, VALID_START_TIME, INVALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"        expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"        event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":117,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, INVALID_START_TIME, INVALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"        expectedMessage \u003d Time.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-15"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":121,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"    public void toModelType_nullTiming_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":127,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, null, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM,","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName());","lastModifiedDate":"2023-03-15"},{"lineNumber":130,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":131,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"glozxi"},"content":"        event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":133,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, VALID_START_TIME, null, VALID_MARK, VALID_CONTACTNUM,","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"glozxi"},"content":"        expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName());","lastModifiedDate":"2023-03-15"},{"lineNumber":136,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":137,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"glozxi"},"content":"        event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":139,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, null, null, VALID_MARK, VALID_CONTACTNUM,","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"glozxi"},"content":"        expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Time.class.getSimpleName());","lastModifiedDate":"2023-03-15"},{"lineNumber":142,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":143,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedEvent event \u003d new JsonAdaptedEvent(","lastModifiedDate":"2023-03-17"},{"lineNumber":150,"author":{"gitId":"engenhui1999"},"content":"                        VALID_NAME, VALID_RATE, VALID_ADDRESS,","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"ExtraShotLatte"},"content":"                        VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM, invalidTags);","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, event::toModelType);","lastModifiedDate":"2023-03-17"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ExtraShotLatte":24,"glozxi":55,"engenhui1999":18,"-":58}},{"path":"src/test/java/seedu/event/storage/JsonContactListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.HOON;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.IDA;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"class JsonContactListStorageTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"            \"data\", \"JsonContactListStorageTest\");","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    @TempDir","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    private java.util.Optional\u003cReadOnlyContactList\u003e readContactList(String filePath) throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        return new JsonContactListStorage(Paths.get(filePath)).readContactList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"                : null;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(readContactList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactList(\"notJsonFormatContactList.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"    public void readContactList_invalidEventContactList_throwDataConversionException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactList(\"invalidEventContactList.json\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    public void readContactList_invalidAndValidContactContactList_throwDataConversionException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactList(\"invalidAndValidEventContactList.json\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"    public void readAndSaveContactList_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        Path filePath \u003d testFolder.resolve(\"TempContactList.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        ContactList original \u003d getTypicalContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"        JsonContactListStorage jsonContactListStorage \u003d new JsonContactListStorage(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        jsonContactListStorage.saveContactList(original, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"        ReadOnlyContactList readBack \u003d jsonContactListStorage.readContactList(filePath).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(original, new ContactList(readBack));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        // Modify data, overwrite existing file, and read back","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        original.addContact(HOON);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        original.removeContact(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        jsonContactListStorage.saveContactList(original, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"        readBack \u003d jsonContactListStorage.readContactList(filePath).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(original, new ContactList(readBack));","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        original.addContact(IDA);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"        jsonContactListStorage.saveContactList(original); // file path not specified","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"        readBack \u003d jsonContactListStorage.readContactList().get(); //file path not specified","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(original, new ContactList(readBack));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList_nullContactList_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactList(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"     * Saves {@code eventBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"    private void saveContactList(ReadOnlyContactList contactList, String filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"            new JsonContactListStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"                    .saveContactList(contactList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactList(new ContactList(), null));","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"glozxi":4,"bryansendeavour":93,"engenhui1999":9}},{"path":"src/test/java/seedu/event/storage/JsonEventBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-17"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-17"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.ALICE;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.HOON;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.IDA;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"public class JsonEventBookStorageTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"            \"JsonEventBookStorageTest\");","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    @TempDir","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"    public void readEventBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e readEventBook(null));","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    private java.util.Optional\u003cReadOnlyEventBook\u003e readEventBook(String filePath) throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"        return new JsonEventBookStorage(Paths.get(filePath)).readEventBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"                : null;","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        assertFalse(readEventBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEventBook(\"notJsonFormatEventBook.json\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"    public void readEventBook_invalidEventEventBook_throwDataConversionException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        assertThrows(DataConversionException.class, () -\u003e readEventBook(\"invalidEventEventBook.json\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"    //TODO: FIX TESTCASE","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"    //    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"    //    public void readAddressBook_invalidAndValidEventAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"    //        assertThrows(DataConversionException.class,","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"    //        () -\u003e readAddressBook(\"invalidAndValidEventEventBook.json\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"    //    }","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"    public void readAndSaveEventBook_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        Path filePath \u003d testFolder.resolve(\"TempEventBook.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"        EventBook original \u003d getTypicalEventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"        JsonEventBookStorage jsonEventBookStorage \u003d new JsonEventBookStorage(filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-17"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"        jsonEventBookStorage.saveEventBook(original, filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"        ReadOnlyEventBook readBack \u003d jsonEventBookStorage.readEventBook(filePath).get();","lastModifiedDate":"2023-03-17"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"        assertEquals(original, new EventBook(readBack));","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"        original.addEvent(HOON);","lastModifiedDate":"2023-03-17"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"        original.removeEvent(ALICE);","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"        jsonEventBookStorage.saveEventBook(original, filePath);","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"glozxi"},"content":"        readBack \u003d jsonEventBookStorage.readEventBook(filePath).get();","lastModifiedDate":"2023-03-17"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"        assertEquals(original, new EventBook(readBack));","lastModifiedDate":"2023-03-17"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":84,"author":{"gitId":"glozxi"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-17"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"        original.addEvent(IDA);","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"glozxi"},"content":"        jsonEventBookStorage.saveEventBook(original); // file path not specified","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"        readBack \u003d jsonEventBookStorage.readEventBook().get(); // file path not specified","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"        assertEquals(original, new EventBook(readBack));","lastModifiedDate":"2023-03-17"},{"lineNumber":89,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":91,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":93,"author":{"gitId":"glozxi"},"content":"    public void saveEventBook_nullEventBook_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEventBook(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":95,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"     * Saves {@code eventBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-17"},{"lineNumber":99,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":100,"author":{"gitId":"glozxi"},"content":"    private void saveEventBook(ReadOnlyEventBook eventBook, String filePath) {","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"        try {","lastModifiedDate":"2023-03-17"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"            new JsonEventBookStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"                    .saveEventBook(eventBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"glozxi"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-17"},{"lineNumber":105,"author":{"gitId":"glozxi"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"glozxi"},"content":"    public void saveEventBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveEventBook(new EventBook(), null));","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"glozxi":104,"engenhui1999":9}},{"path":"src/test/java/seedu/event/storage/JsonSerializableContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.JsonUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.testutil.TypicalContacts;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"class JsonSerializableContactListTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"            \"JsonSerializableContactListTest\");","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"    private static final Path TYPICAL_CONTACTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEventsContactList.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    private static final Path INVALID_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventContactList.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    private static final Path DUPLICATE_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventContactList.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_typicalContactFile_success() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        JsonSerializableContactList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CONTACTS_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"                JsonSerializableContactList.class).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        ContactList contactListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        ContactList typicalContactsContactList \u003d TypicalContacts.getTypicalContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(contactListFromFile, typicalContactsContactList);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_invalidContactFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        JsonSerializableContactList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CONTACT_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"                JsonSerializableContactList.class).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_duplicateContacts_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        JsonSerializableContactList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CONTACT_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"                JsonSerializableContactList.class).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableContactList.MESSAGE_DUPLICATE_CONTACT,","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"glozxi":3,"bryansendeavour":38,"engenhui1999":6}},{"path":"src/test/java/seedu/event/storage/JsonSerializableEventBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.util.JsonUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"public class JsonSerializableEventBookTest {","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableEventBookTest\");","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    private static final Path TYPICAL_EVENTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalEventsEventBook.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    private static final Path INVALID_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidEventEventBook.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"    private static final Path DUPLICATE_EVENT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateEventEventBook.json\");","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"ExtraShotLatte"},"content":"    //TODO FIX TESTCASE","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"    //    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"    //    public void toModelType_typicalEventsFile_success() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    //        JsonSerializableEventBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_EVENTS_FILE,","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    //                JsonSerializableEventBook.class).get();","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    //        EventBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    //        EventBook typicalEventsAddressBook \u003d TypicalEvents.getTypicalAddressBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"    //        assertEquals(addressBookFromFile, typicalEventsAddressBook);","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"    //    }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    public void toModelType_invalidEventFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        JsonSerializableEventBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_EVENT_FILE,","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"                JsonSerializableEventBook.class).get();","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    public void toModelType_duplicateEvents_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        JsonSerializableEventBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_EVENT_FILE,","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"                JsonSerializableEventBook.class).get();","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableEventBook.MESSAGE_DUPLICATE_EVENT,","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ExtraShotLatte":4,"glozxi":18,"engenhui1999":4,"-":20}},{"path":"src/test/java/seedu/event/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"        userPrefs.setEventBookFilePath(Paths.get(\"eventbook.json\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"glozxi":1,"engenhui1999":5,"-":117}},{"path":"src/test/java/seedu/event/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.storage;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.TypicalEvents.getTypicalEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.GuiSettings;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ReadOnlyEventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.UserPrefs;","lastModifiedDate":"2023-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"        JsonEventBookStorage eventBookStorage \u003d new JsonEventBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        JsonContactListStorage contactListStorage \u003d new JsonContactListStorage(getTempFilePath(\"cl\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        storageManager \u003d new StorageManager(eventBookStorage, contactListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"    public void eventBookReadSave() throws Exception {","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"         * {@link JsonEventBookStorage} class.","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonEventBookStorageTest} class.","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"        EventBook original \u003d getTypicalEventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"        storageManager.saveEventBook(original);","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        ReadOnlyEventBook retrieved \u003d storageManager.readEventBook().get();","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"        assertEquals(original, new EventBook(retrieved));","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    public void contactListReadSave() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"        ContactList original \u003d getTypicalContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        storageManager.saveContactList(original);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        ReadOnlyContactList retrieved \u003d storageManager.readContactList().get();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(original, new ContactList(retrieved));","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"    public void getEventBookFilePath() {","lastModifiedDate":"2023-03-17"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"        assertNotNull(storageManager.getEventBookFilePath());","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"    public void getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"        assertNotNull(storageManager.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glozxi":11,"bryansendeavour":14,"engenhui1999":9,"-":51}},{"path":"src/test/java/seedu/event/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"engenhui1999":1,"-":33}},{"path":"src/test/java/seedu/event/testutil/ContactBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactName;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactPhone;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * A utility class to help with building ContactList objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" *     {@code ContactBook cb \u003d new ContactListBuilder().withContact(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"public class ContactBuilder {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private ContactName name;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    private ContactPhone phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"     * Creates a {@code ContactBuilder} with the default details.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    public ContactBuilder() {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        name \u003d new ContactName(DEFAULT_NAME);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        phone \u003d new ContactPhone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     * Initializes the ContactBuilder with the data of {@code contactToCopy}.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    public ContactBuilder(Contact contactToCopy) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        name \u003d contactToCopy.getName();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        phone \u003d contactToCopy.getPhone();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     * Sets the {@code ContactName} of the {@code Contact} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public ContactBuilder withName(String name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        this.name \u003d new ContactName(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"     * Sets the {@code ContactPhone} of the {@code Contact} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    public ContactBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        this.phone \u003d new ContactPhone(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    public Contact build() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        return new Contact(name, phone);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":52,"engenhui1999":4}},{"path":"src/test/java/seedu/event/testutil/ContactListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * A utility class to help with building ContactList objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" *  {@code ContactBook cb \u003d new ContactListBuilder().withContact(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"public class ContactListBuilder {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    private ContactList contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    public ContactListBuilder() {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"        contactList \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public ContactListBuilder(ContactList contactList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        this.contactList \u003d contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * Adds a new {@code Contact} to the {@code ContactBook} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public ContactListBuilder withContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        contactList.addContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public ContactList build() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        return contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":31,"engenhui1999":3}},{"path":"src/test/java/seedu/event/testutil/ContactUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" * Utility class for a Contact.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"public class ContactUtil {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"     * Returns an newContact command string for adding the {@code contact}.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    public static String getNewContactCommand(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"        return NewContactCommand.COMMAND_WORD + \" \" + getContactDetails(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     * Returns the part of command string for the given {@code contact}\u0027s details.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    public static String getContactDetails(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        sb.append(PREFIX_NAME + contact.getName().fullName + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        sb.append(PREFIX_PHONE + contact.getPhone().value + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":25,"engenhui1999":5}},{"path":"src/test/java/seedu/event/testutil/EditEventDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand.EditEventDescriptor;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Mark;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":" * A utility class to help with building EditEventDescriptor objects.","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"public class EditEventDescriptorBuilder {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    private EditEventDescriptor descriptor;","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder() {","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder(EditEventDescriptor descriptor) {","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        this.descriptor \u003d new EditEventDescriptor(descriptor);","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"     * Returns an {@code EditEventDescriptor} with fields containing {@code event}\u0027s details","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"        descriptor \u003d new EditEventDescriptor();","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        descriptor.setName(event.getName());","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        descriptor.setRate(event.getRate());","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        descriptor.setAddress(event.getAddress());","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        descriptor.setStartTime(event.getStartTime());","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        descriptor.setEndTime(event.getEndTime());","lastModifiedDate":"2023-03-17"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"        descriptor.setMark(event.getMark());","lastModifiedDate":"2023-03-17"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"        descriptor.setTags(event.getTags());","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"     * Sets the {@code Name} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder withName(String name) {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"     * Sets the {@code Phone} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder withPhone(String rate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":57,"author":{"gitId":"engenhui1999"},"content":"        descriptor.setRate(new Rate(rate));","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"     * Sets the {@code Address} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"     * Sets the start time of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder withStartTime(String startTime) {","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"        descriptor.setStartTime(new Time(startTime));","lastModifiedDate":"2023-03-15"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"     * Sets the end time of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder withEndTime(String endTime) {","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"        descriptor.setEndTime(new Time(endTime));","lastModifiedDate":"2023-03-15"},{"lineNumber":81,"author":{"gitId":"glozxi"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"     * Sets the {@code Mark} of the {@code EditEventDescriptor} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder withMark(String mark) {","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"engenhui1999"},"content":"        Mark temp \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"engenhui1999"},"content":"        if (mark.equals(\"[X]\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"engenhui1999"},"content":"            temp.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"engenhui1999"},"content":"        descriptor.setMark(temp);","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"engenhui1999"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditEventDescriptor}","lastModifiedDate":"2023-03-17"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2023-03-17"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":106,"author":{"gitId":"glozxi"},"content":"    public EditEventDescriptor build() {","lastModifiedDate":"2023-03-17"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"glozxi":44,"engenhui1999":20,"-":45}},{"path":"src/test/java/seedu/event/testutil/EventBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-17"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":" * A utility class to help with building EventBook objects.","lastModifiedDate":"2023-03-17"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-17"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":" *     {@code EventBook ab \u003d new EventBookBuilder().withEvent(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"public class EventBookBuilder {","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"    private EventBook eventBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    public EventBookBuilder() {","lastModifiedDate":"2023-03-17"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"        eventBook \u003d new EventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"    public EventBookBuilder(EventBook eventBook) {","lastModifiedDate":"2023-03-17"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"        this.eventBook \u003d eventBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"     * Adds a new {@code Event} to the {@code EventBook} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    public EventBookBuilder withEvent(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"        eventBook.addEvent(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        return this;","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    public EventBook build() {","lastModifiedDate":"2023-03-17"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"        return eventBook;","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-17"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-17"}],"authorContributionMap":{"glozxi":31,"engenhui1999":3}},{"path":"src/test/java/seedu/event/testutil/EventBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactName;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.ContactPhone;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Address;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Mark;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Name;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Rate;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Time;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.util.SampleDataUtil;","lastModifiedDate":"2023-03-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":" * A utility class to help with building Event objects.","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"public class EventBuilder {","lastModifiedDate":"2023-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"    public static final String DEFAULT_RATE \u003d \"85355255\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public static final String DEFAULT_START_TIME \u003d \"12-03-2023 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"    public static final String DEFAULT_END_TIME \u003d \"12-03-2023 12:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String DEFAULT_CONTACTNUM \u003d \"91234567\";","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    private Rate rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    private Time startTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"    private Time endTime;","lastModifiedDate":"2023-03-15"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"    private Mark mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"ExtraShotLatte"},"content":"    private Contact contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"     * Creates a {@code EventBuilder} with the default details.","lastModifiedDate":"2023-03-17"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"    public EventBuilder() {","lastModifiedDate":"2023-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"        rate \u003d new Rate(DEFAULT_RATE);","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        startTime \u003d new Time(DEFAULT_START_TIME);","lastModifiedDate":"2023-03-15"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        endTime \u003d new Time(DEFAULT_END_TIME);","lastModifiedDate":"2023-03-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"        contact \u003d new Contact(new ContactName(DEFAULT_NAME), new ContactPhone(DEFAULT_CONTACTNUM));","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"     * Initializes the EventBuilder with the data of {@code eventToCopy}.","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    public EventBuilder(Event eventToCopy) {","lastModifiedDate":"2023-03-17"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        name \u003d eventToCopy.getName();","lastModifiedDate":"2023-03-17"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        rate \u003d eventToCopy.getRate();","lastModifiedDate":"2023-03-17"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"        address \u003d eventToCopy.getAddress();","lastModifiedDate":"2023-03-17"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"        startTime \u003d eventToCopy.getStartTime();","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"        endTime \u003d eventToCopy.getEndTime();","lastModifiedDate":"2023-03-17"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        mark \u003d eventToCopy.getMark();","lastModifiedDate":"2023-03-17"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"        tags \u003d new HashSet\u003c\u003e(eventToCopy.getTags());","lastModifiedDate":"2023-03-17"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"        contact \u003d eventToCopy.getContact();","lastModifiedDate":"2023-03-17"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"     * Sets the {@code Name} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"    public EventBuilder withName(String name) {","lastModifiedDate":"2023-03-17"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Event} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"    public EventBuilder withTags(String ... tags) {","lastModifiedDate":"2023-03-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":85,"author":{"gitId":"glozxi"},"content":"     * Sets the {@code Address} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"    public EventBuilder withAddress(String address) {","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":93,"author":{"gitId":"glozxi"},"content":"     * Sets the {@code Rate} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"glozxi"},"content":"    public EventBuilder withRate(String rate) {","lastModifiedDate":"2023-03-17"},{"lineNumber":96,"author":{"gitId":"engenhui1999"},"content":"        this.rate \u003d new Rate(rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"     * Sets the start {@code Time} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"    public EventBuilder withStartTime(String startTime) {","lastModifiedDate":"2023-03-17"},{"lineNumber":104,"author":{"gitId":"glozxi"},"content":"        this.startTime \u003d new Time(startTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":105,"author":{"gitId":"glozxi"},"content":"        return this;","lastModifiedDate":"2023-03-15"},{"lineNumber":106,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-15"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-15"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-15"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"     * Sets the end {@code Time} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-15"},{"lineNumber":110,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-15"},{"lineNumber":111,"author":{"gitId":"glozxi"},"content":"    public EventBuilder withEndTime(String endTime) {","lastModifiedDate":"2023-03-17"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"        this.endTime \u003d new Time(endTime);","lastModifiedDate":"2023-03-15"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"engenhui1999"},"content":"     * Sets the {@code Mark} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"    public EventBuilder withMark(String mark) {","lastModifiedDate":"2023-03-17"},{"lineNumber":120,"author":{"gitId":"engenhui1999"},"content":"        this.mark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"engenhui1999"},"content":"        if (mark.equals(\"[X]\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"engenhui1999"},"content":"            this.mark.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"engenhui1999"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"ExtraShotLatte"},"content":"     * Sets the {@code contact} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"glozxi"},"content":"    public EventBuilder withContact(String name, String number) {","lastModifiedDate":"2023-03-17"},{"lineNumber":130,"author":{"gitId":"ExtraShotLatte"},"content":"        this.contact \u003d new Contact(new ContactName(name), new ContactPhone(number));","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"ExtraShotLatte"},"content":"        return this;","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"ExtraShotLatte"},"content":"     * Builds the event.","lastModifiedDate":"2023-03-12"},{"lineNumber":136,"author":{"gitId":"ExtraShotLatte"},"content":"     * @return Event that is built.","lastModifiedDate":"2023-03-12"},{"lineNumber":137,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":138,"author":{"gitId":"engenhui1999"},"content":"    public Event build() {","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"glozxi"},"content":"        Event event \u003d new Event(name, rate, address, startTime, endTime, tags);","lastModifiedDate":"2023-03-15"},{"lineNumber":140,"author":{"gitId":"ExtraShotLatte"},"content":"        if (!contact.equals(new Contact(new ContactName(DEFAULT_NAME), new ContactPhone(DEFAULT_CONTACTNUM)))) {","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"ExtraShotLatte"},"content":"            event.linkContact(this.contact);","lastModifiedDate":"2023-03-12"},{"lineNumber":142,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":143,"author":{"gitId":"ExtraShotLatte"},"content":"        return event;","lastModifiedDate":"2023-03-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"ExtraShotLatte":19,"glozxi":47,"engenhui1999":28,"-":52}},{"path":"src/test/java/seedu/event/testutil/EventUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_END;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.parser.CliSyntax.PREFIX_TIME_START;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.AddCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.logic.commands.EditCommand;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.tag.Tag;","lastModifiedDate":"2023-03-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":" * A utility class for Event.","lastModifiedDate":"2023-03-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"public class EventUtil {","lastModifiedDate":"2023-03-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"     * Returns an add command string for adding the {@code event}.","lastModifiedDate":"2023-03-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    public static String getAddCommand(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getEventDetails(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"     * Returns the part of command string for the given {@code event}\u0027s details.","lastModifiedDate":"2023-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    public static String getEventDetails(Event event) {","lastModifiedDate":"2023-03-17"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"        sb.append(PREFIX_NAME + event.getName().fullName + \" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"        sb.append(PREFIX_RATE + Double.toString(event.getRate().value) + \" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"        sb.append(PREFIX_ADDRESS + event.getAddress().value + \" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        sb.append(PREFIX_TIME_START + event.getStartTime().toString() + \" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        sb.append(PREFIX_TIME_END + event.getEndTime().toString() + \" \");","lastModifiedDate":"2023-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        event.getTags().stream().forEach(","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"     * Returns the part of command string for the given {@code EditEventDescriptor}\u0027s details.","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"    public static String getEditEventDescriptorDetails(EditCommand.EditEventDescriptor descriptor) {","lastModifiedDate":"2023-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        descriptor.getRate().ifPresent(rate -\u003e sb.append(PREFIX_RATE).append(rate.value).append(\" \"));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        descriptor.getStartTime().ifPresent(startTime -\u003e sb.append(PREFIX_TIME_START)","lastModifiedDate":"2023-03-15"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"                .append(startTime).append(\" \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"        descriptor.getEndTime().ifPresent(endTime -\u003e sb.append(PREFIX_TIME_END)","lastModifiedDate":"2023-03-15"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"                .append(endTime).append(\" \"));","lastModifiedDate":"2023-03-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"glozxi":19,"engenhui1999":12,"-":36}},{"path":"src/test/java/seedu/event/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":1,"-":71}},{"path":"src/test/java/seedu/event/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.Model;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"     * Returns the middle index of the event in the {@code model}\u0027s event list.","lastModifiedDate":"2023-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        return Index.fromOneBased(model.getFilteredEventList().size() / 2);","lastModifiedDate":"2023-03-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"     * Returns the last index of the event in the {@code model}\u0027s event list.","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        return Index.fromOneBased(model.getFilteredEventList().size());","lastModifiedDate":"2023-03-17"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"     * Returns the event in the {@code model}\u0027s event list at {@code index}.","lastModifiedDate":"2023-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"    public static Event getEvent(Model model, Index index) {","lastModifiedDate":"2023-03-17"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        return model.getFilteredEventList().get(index.getZeroBased());","lastModifiedDate":"2023-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"glozxi":7,"engenhui1999":4,"-":44}},{"path":"src/test/java/seedu/event/testutil/TypicalContacts.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.ContactList;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.contact.Contact;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" * A utility class containing a list of {@code Contact} objects to be used in tests.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"public class TypicalContacts {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact ALICE \u003d new ContactBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact BENSON \u003d new ContactBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact CARL \u003d new ContactBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact DANIEL \u003d new ContactBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact ELLE \u003d new ContactBuilder().withName(\"Elle Meyer\").withPhone(\"94822241\")","lastModifiedDate":"2023-03-21"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact FIONA \u003d new ContactBuilder().withName(\"Fiona Kunz\").withPhone(\"948242712\")","lastModifiedDate":"2023-03-25"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact GEORGE \u003d new ContactBuilder().withName(\"George Best\").withPhone(\"94824421\")","lastModifiedDate":"2023-03-21"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    // Manually added","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact HOON \u003d new ContactBuilder().withName(\"Hoon Meier\").withPhone(\"848242412\")","lastModifiedDate":"2023-03-25"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact IDA \u003d new ContactBuilder().withName(\"Ida Mueller\").withPhone(\"84821311\")","lastModifiedDate":"2023-03-21"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    // Manually added - Contact\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact AMY \u003d new ContactBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact BOB \u003d new ContactBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    private TypicalContacts() {} // prevents instantiation","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"     * Returns an {@code ContactList} with all the typical Contacts.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    public static ContactList getTypicalContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        ContactList cl \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        for (Contact contact : getTypicalContacts()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"            cl.addContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        return cl;","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    public static List\u003cContact\u003e getTypicalContacts() {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":59,"engenhui1999":7}},{"path":"src/test/java/seedu/event/testutil/TypicalEvents.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_END_TIME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_START_TIME_AMY;","lastModifiedDate":"2023-03-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2023-03-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.EventBook;","lastModifiedDate":"2023-03-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.model.event.Event;","lastModifiedDate":"2023-03-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":" * A utility class containing a list of {@code Event} objects to be used in tests.","lastModifiedDate":"2023-03-17"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"public class TypicalEvents {","lastModifiedDate":"2023-03-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"    public static final Event ALICE \u003d new EventBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-17"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"94351253\")","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"            .withStartTime(\"11-12-2023 02:00\")","lastModifiedDate":"2023-03-15"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"            .withEndTime(\"11-12-2023 10:00\")","lastModifiedDate":"2023-03-15"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"    public static final Event BENSON \u003d new EventBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-17"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"98765432\")","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"            .withStartTime(\"11-03-2024 12:00\")","lastModifiedDate":"2023-03-15"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"            .withEndTime(\"11-03-2024 17:00\")","lastModifiedDate":"2023-03-15"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"            .withContact(\"Meier\", \"91239123\")","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"    public static final Event CARL \u003d new EventBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-17"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"95352563\")","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"            .withStartTime(\"04-03-2023 12:00\")","lastModifiedDate":"2023-03-20"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"            .withEndTime(\"26-01-2024 12:00\")","lastModifiedDate":"2023-03-15"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"    public static final Event DANIEL \u003d new EventBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2023-03-17"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"87652533\")","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"            .withStartTime(\"11-03-2024 12:00\")","lastModifiedDate":"2023-03-15"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"            .withEndTime(\"11-03-2024 13:00\")","lastModifiedDate":"2023-03-15"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"    public static final Event ELLE \u003d new EventBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2023-03-17"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"9482224\")","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"            .withStartTime(\"01-03-2023 12:00\")","lastModifiedDate":"2023-03-20"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"            .withEndTime(\"11-03-2023 17:00\")","lastModifiedDate":"2023-03-20"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"    public static final Event FIONA \u003d new EventBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2023-03-17"},{"lineNumber":62,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"9482427\")","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"            .withStartTime(\"02-03-2023 23:30\")","lastModifiedDate":"2023-03-20"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"            .withEndTime(\"02-01-2024 02:15\")","lastModifiedDate":"2023-03-15"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"    public static final Event GEORGE \u003d new EventBuilder().withName(\"George Best\")","lastModifiedDate":"2023-03-17"},{"lineNumber":68,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"9482442\")","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"            .withStartTime(\"11-03-2023 23:20\")","lastModifiedDate":"2023-03-15"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"            .withEndTime(\"12-03-2023 00:00\")","lastModifiedDate":"2023-03-15"},{"lineNumber":71,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":75,"author":{"gitId":"glozxi"},"content":"    public static final Event HOON \u003d new EventBuilder().withName(\"Hoon Meier\").withRate(\"8482424\")","lastModifiedDate":"2023-03-17"},{"lineNumber":76,"author":{"gitId":"glozxi"},"content":"            .withStartTime(\"01-08-2023 04:50\")","lastModifiedDate":"2023-03-15"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"            .withEndTime(\"01-08-2023 08:25\")","lastModifiedDate":"2023-03-15"},{"lineNumber":78,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"    public static final Event IDA \u003d new EventBuilder().withName(\"Ida Mueller\").withRate(\"8482131\")","lastModifiedDate":"2023-03-17"},{"lineNumber":81,"author":{"gitId":"glozxi"},"content":"            .withStartTime(\"12-11-2023 13:30\")","lastModifiedDate":"2023-03-15"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"            .withEndTime(\"12-11-2023 16:25\")","lastModifiedDate":"2023-03-15"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":86,"author":{"gitId":"glozxi"},"content":"    // Manually added - Event\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-17"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"    public static final Event AMY \u003d new EventBuilder().withName(VALID_NAME_AMY).withRate(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-17"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"glozxi"},"content":"            .withStartTime(VALID_START_TIME_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"            .withEndTime(VALID_END_TIME_AMY)","lastModifiedDate":"2023-03-15"},{"lineNumber":91,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":93,"author":{"gitId":"glozxi"},"content":"    public static final Event BOB \u003d new EventBuilder().withName(VALID_NAME_BOB).withRate(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-17"},{"lineNumber":94,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"glozxi"},"content":"            .withStartTime(VALID_START_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":96,"author":{"gitId":"glozxi"},"content":"            .withEndTime(VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-15"},{"lineNumber":97,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"    private TypicalEvents() {} // prevents instantiation","lastModifiedDate":"2023-03-17"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":105,"author":{"gitId":"glozxi"},"content":"     * Returns an {@code EventBook} with all the typical events.","lastModifiedDate":"2023-03-17"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"    public static EventBook getTypicalEventBook() {","lastModifiedDate":"2023-03-17"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"        EventBook ab \u003d new EventBook();","lastModifiedDate":"2023-03-17"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"        for (Event event : getTypicalEvents()) {","lastModifiedDate":"2023-03-17"},{"lineNumber":110,"author":{"gitId":"glozxi"},"content":"            ab.addEvent(event);","lastModifiedDate":"2023-03-17"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"    public static List\u003cEvent\u003e getTypicalEvents() {","lastModifiedDate":"2023-03-17"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":118,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ExtraShotLatte":1,"glozxi":45,"engenhui1999":42,"-":30}},{"path":"src/test/java/seedu/event/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.commons.core.index.Index;","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"    public static final Index INDEX_FIRST_EVENT \u003d Index.fromOneBased(1);","lastModifiedDate":"2023-03-17"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"    public static final Index INDEX_SECOND_EVENT \u003d Index.fromOneBased(2);","lastModifiedDate":"2023-03-17"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"    public static final Index INDEX_THIRD_EVENT \u003d Index.fromOneBased(3);","lastModifiedDate":"2023-03-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"glozxi":3,"engenhui1999":2,"-":7}},{"path":"src/test/java/seedu/event/testutil/TypicalTimes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.testutil;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import java.time.Clock;","lastModifiedDate":"2023-03-21"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-20"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"import java.time.Month;","lastModifiedDate":"2023-03-20"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"import java.time.ZoneId;","lastModifiedDate":"2023-03-21"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-20"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-20"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":" * A utility class containing a list of {@code LocalDateTime} objects to be used in tests.","lastModifiedDate":"2023-03-20"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-20"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"public class TypicalTimes {","lastModifiedDate":"2023-03-20"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"    // March 1 2023, 11:00","lastModifiedDate":"2023-03-20"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"    public static final LocalDateTime TIME_NOW \u003d LocalDateTime.of(","lastModifiedDate":"2023-03-20"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"            2023, Month.MARCH, 1, 11, 0, 0, 0);","lastModifiedDate":"2023-03-21"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    public static final Clock CLOCK_FIXED_AT_TIME_NOW \u003d Clock","lastModifiedDate":"2023-03-21"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"            .fixed(TIME_NOW.atZone(ZoneId.systemDefault()).toInstant(), ZoneId.systemDefault());","lastModifiedDate":"2023-03-21"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"    public static final Integer TYPICAL_DAYS \u003d 3;","lastModifiedDate":"2023-03-20"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-20"}],"authorContributionMap":{"glozxi":17,"engenhui1999":1}},{"path":"src/test/java/seedu/event/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"engenhui1999":1,"-":34}},{"path":"src/test/java/seedu/event/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.event.ui;","lastModifiedDate":"2023-03-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.event.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.event.MainApp;","lastModifiedDate":"2023-03-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"engenhui1999":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"\u003c?import seedu.event.ui.TestFxmlObject?\u003e","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"engenhui1999":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"\u003cfx:root type\u003d\"seedu.event.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2023-03-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"            xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"engenhui1999":1,"-":5}}]
