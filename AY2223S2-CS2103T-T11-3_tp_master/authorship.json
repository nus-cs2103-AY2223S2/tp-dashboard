[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T11-3/tp/actions)","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T11-3/tp/branch/master/graph/badge.svg?token\u003dUEI995R8A6)](https://codecov.io/gh/AY2223S2-CS2103T-T11-3/tp)","lastModifiedDate":"2023-02-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"* `Paidlancers` is **desktop application for freelancers to keep track of their events and contacts, optimized for use via a Command Line Interface (CLI) while still having the option of using the Graphical User Interface (GUI)**.\u003cbr\u003e","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"* The app manages eventsâ€™ information and respective contact person faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"* The name `Paidlancers` is inspired by a play-on-word of the word \"free\" in freelancers.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"* For the detailed documentation of this project, see the **[Paidlancers Product Website](https://ay2223s2-cs2103t-t11-3.github.io/tp/)**.","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Thank you for your time! :)","lastModifiedDate":"2023-02-13"}],"authorContributionMap":{"EksdeeeX":6,"ExtraShotLatte":1,"-":6}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"### Wong Qin Yao (Sean)","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/extrashotlatte.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/extrashotlatte)]","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/extrashotlatte.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Deliverables and deadlines, Git Expert","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"### Bryan Ong","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/bryansendeavour.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/bryansendeavour)]","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/bryansendeavour.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Testing, JavaFX Expert","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"### Eng En Hui","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/engenhui1999.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/engenhui1999)]","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/engenhui1999.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Integration, Documentation","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"### Gloria Zhang Xinhui","lastModifiedDate":"2023-02-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/glozxi.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/glozxi)]","lastModifiedDate":"2023-02-27"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/glozxi.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Scheduling and Tracking, IntelliJ expert","lastModifiedDate":"2023-02-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"### Bryan Tan Zhong Kang","lastModifiedDate":"2023-02-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"\u003cimg src\u003d\"images/eksdeeex.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"[[github](https://github.com/eksdeeex)]","lastModifiedDate":"2023-02-27"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"[[portfolio](team/eksdeeex.md)]","lastModifiedDate":"2023-02-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"* Role: Code Quality, Team Lead","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"ExtraShotLatte":25,"-":28}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"## Table of Contents","lastModifiedDate":"2023-03-05"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"- [Acknowledgements](#acknowledgements)","lastModifiedDate":"2023-03-07"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"- [Setting up, getting started](#setting-up-getting-started)","lastModifiedDate":"2023-03-07"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"- [Design](#design)","lastModifiedDate":"2023-03-07"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"   \u003c!-- - [Architecture](#architecture)","lastModifiedDate":"2023-03-05"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"   - [UI component](#ui-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"   - [Logic component](#logic-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"   - [Model component](#model-component)","lastModifiedDate":"2023-03-05"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"   - [Storage component](#storage-component)","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"   - [Common classes](#common-classes) --\u003e","lastModifiedDate":"2023-03-05"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"- [Implementation](#implementation)","lastModifiedDate":"2023-03-07"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"- [Documentation, logging, testing, configuration, dev-ops](#documentation-logging-testing-configuration-dev-ops)","lastModifiedDate":"2023-03-07"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"- [Appendix: Requirements](#appendix-requirements)","lastModifiedDate":"2023-03-07"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"   * [Product scope](#product-scope)","lastModifiedDate":"2023-03-07"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"   * [User stories](#user-stories)","lastModifiedDate":"2023-03-07"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"   * [Use cases](#use-cases)","lastModifiedDate":"2023-03-07"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"   * [Non-Functional Requirements](#non-functional-requirements)","lastModifiedDate":"2023-03-07"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"   * [Glossary](#glossary)","lastModifiedDate":"2023-03-07"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"- [Appendix: Instructions for manual testing](#appendix-instructions-for-manual-testing)","lastModifiedDate":"2023-03-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"## Acknowledgements","lastModifiedDate":"2023-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2023-03-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"## Setting up, getting started","lastModifiedDate":"2023-03-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"## Design","lastModifiedDate":"2023-03-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"EksdeeeX"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.)","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the userâ€™s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"EksdeeeX"},"content":"## Implementation","lastModifiedDate":"2023-03-07"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()`â€‰â€”â€‰Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()`â€‰â€”â€‰Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()`â€‰â€”â€‰Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David â€¦â€‹` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"The `redo` command does the oppositeâ€‰â€”â€‰it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David â€¦â€‹` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"EksdeeeX"},"content":"## Documentation, logging, testing, configuration, dev-ops","lastModifiedDate":"2023-03-07"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":264,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"EksdeeeX"},"content":"## Appendix: Requirements","lastModifiedDate":"2023-03-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"glozxi"},"content":"* freelancer who wants to keep track of their events and contact person","lastModifiedDate":"2023-03-04"},{"lineNumber":278,"author":{"gitId":"glozxi"},"content":"* has a need to manage a significant number of events","lastModifiedDate":"2023-03-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"glozxi"},"content":"**Value proposition**: manage events\u0027 information and respective contact person faster than a typical mouse/GUI driven app.","lastModifiedDate":"2023-03-04"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"glozxi"},"content":"| Priority | As a/an...           | I can...                                         | so that...                                           |","lastModifiedDate":"2023-03-04"},{"lineNumber":292,"author":{"gitId":"glozxi"},"content":"| -------- | -------------------- | ------------------------------------------------ | ---------------------------------------------------- |","lastModifiedDate":"2023-03-04"},{"lineNumber":293,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Access the software                              | I can use it                                         |","lastModifiedDate":"2023-03-14"},{"lineNumber":294,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Click X to exit                                  | I can stop it                                        |","lastModifiedDate":"2023-03-04"},{"lineNumber":295,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Add client contact to an event                    | I can refer to when needed                          |","lastModifiedDate":"2023-03-14"},{"lineNumber":296,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | View all my contacts                             | I can see who I can contact                          |","lastModifiedDate":"2023-03-04"},{"lineNumber":297,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Link client contact to event                     | I can have quick reference to POC (Point of Contact) |","lastModifiedDate":"2023-03-14"},{"lineNumber":298,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | See the rates I have discussed with the client   | I know how much money to collect                     |","lastModifiedDate":"2023-03-04"},{"lineNumber":299,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Mark the event that is done                      | I know what I don\u0027t have to do anymore               |","lastModifiedDate":"2023-03-04"},{"lineNumber":300,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Unmark an event                                  | I can undo an accidental mark.                       |","lastModifiedDate":"2023-03-14"},{"lineNumber":301,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Add events                                       | I can remember my events later                       |","lastModifiedDate":"2023-03-04"},{"lineNumber":302,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | View events                                      | I can see what events I have done or am going to do  |","lastModifiedDate":"2023-03-04"},{"lineNumber":303,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Delete events                                    | I can remove unnecessary events                      |","lastModifiedDate":"2023-03-04"},{"lineNumber":304,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Add dates to my events                           | I know when the event is due                         |","lastModifiedDate":"2023-03-14"},{"lineNumber":305,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Save my events after closing the app             | I can save for when I use the app another time       |","lastModifiedDate":"2023-03-14"},{"lineNumber":306,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Load my saved events when opening the app        | I can see my events when I reopen the app            |","lastModifiedDate":"2023-03-14"},{"lineNumber":307,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Add a rate to an event                           | I can see how much I earn from an event              |","lastModifiedDate":"2023-03-04"},{"lineNumber":308,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | View information associated to each event        | I can see its details                                |","lastModifiedDate":"2023-03-04"},{"lineNumber":309,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Edit my existing event details                   | I can change the details whenever there are changes  |","lastModifiedDate":"2023-03-14"},{"lineNumber":310,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | See what I have added before                     | I don\u0027t need repeat myself                           |","lastModifiedDate":"2023-03-04"},{"lineNumber":311,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Change a contact linked to an event              | I can link a different contact if the POC changes    |","lastModifiedDate":"2023-03-04"},{"lineNumber":312,"author":{"gitId":"glozxi"},"content":"| `* * *`     | New user             | See usage instructions                           | I know how to use the software                       |","lastModifiedDate":"2023-03-04"},{"lineNumber":313,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | View undone events                               | I can see what events I have to do                   |","lastModifiedDate":"2023-03-04"},{"lineNumber":314,"author":{"gitId":"glozxi"},"content":"| `* * *`     | Freelancer           | Link venue to event                              | I can have quick reference                           |","lastModifiedDate":"2023-03-14"},{"lineNumber":315,"author":{"gitId":"glozxi"},"content":"| `* * *`     | Forgetful User       | Be reminded of upcoming events                   | I can remember                                       |","lastModifiedDate":"2023-03-04"},{"lineNumber":316,"author":{"gitId":"glozxi"},"content":"| `* * *`     | User                 | Delete contacts                                  | I can delete unnecessary contacts                    |","lastModifiedDate":"2023-03-04"},{"lineNumber":317,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                 | Filter the events that has not been paid         | I can collect money                                  |","lastModifiedDate":"2023-03-04"},{"lineNumber":318,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                 | View the total revenue I have earned this week   | I can manage my money                                |","lastModifiedDate":"2023-03-04"},{"lineNumber":319,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                 | Set notes for contacts                           | I can keep track about them and rmb what not to do   |","lastModifiedDate":"2023-03-04"},{"lineNumber":320,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                 | View timing of upcoming events                   | I know when to go                                    |","lastModifiedDate":"2023-03-04"},{"lineNumber":321,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                 | See the most urgent events                       | I know what to do first                              |","lastModifiedDate":"2023-03-04"},{"lineNumber":322,"author":{"gitId":"glozxi"},"content":"| `* *`   | Careless user        | Undo accidental deletion                         | I can undo deleted events                            |","lastModifiedDate":"2023-03-04"},{"lineNumber":323,"author":{"gitId":"glozxi"},"content":"| `* *`   | Impatient person     | Search contacts                                  | I can quick find specific POC                        |","lastModifiedDate":"2023-03-14"},{"lineNumber":324,"author":{"gitId":"glozxi"},"content":"| `* *`   | Impatient person     | Search events                                    | I can quick find specific event                      |","lastModifiedDate":"2023-03-04"},{"lineNumber":325,"author":{"gitId":"glozxi"},"content":"| `* *`   | Lazy person          | Filter events to find similar events             | I can find similar events easily                     |","lastModifiedDate":"2023-03-14"},{"lineNumber":326,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                 | Add all information to an event at the same time | I can save time on adding all the information        |","lastModifiedDate":"2023-03-04"},{"lineNumber":327,"author":{"gitId":"glozxi"},"content":"| `* *`   | User                 | View events associated to each contact           | I know what events to contact the POC for            |","lastModifiedDate":"2023-03-04"},{"lineNumber":328,"author":{"gitId":"glozxi"},"content":"| `*`      | User                 | Toggle between light and dark mode               | I can use the theme i prefer                         |","lastModifiedDate":"2023-03-14"},{"lineNumber":329,"author":{"gitId":"glozxi"},"content":"| `*`      | User                 | Redo previous action                             | I can redo previous action                           |","lastModifiedDate":"2023-03-04"},{"lineNumber":330,"author":{"gitId":"glozxi"},"content":"| `*`      | User                 | Use abbreviation                                 | I can quickly insert items                           |","lastModifiedDate":"2023-03-04"},{"lineNumber":331,"author":{"gitId":"glozxi"},"content":"| `*`      | Goal oriented person | Set goals                                        | I can look at my goals                               |","lastModifiedDate":"2023-03-04"},{"lineNumber":332,"author":{"gitId":"glozxi"},"content":"| `*`      | Forgetful User       | Set reminders/checklist for events               | I can remember things to bring etc.                  |","lastModifiedDate":"2023-03-14"},{"lineNumber":333,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":335,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":336,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":337,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":339,"author":{"gitId":"glozxi"},"content":"(For all use cases below, the **System** is `Paidlancers` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2023-03-04"},{"lineNumber":340,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":341,"author":{"gitId":"glozxi"},"content":"**Use case: UC1 - Add Event**","lastModifiedDate":"2023-03-04"},{"lineNumber":342,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":343,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":344,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":345,"author":{"gitId":"glozxi"},"content":"1.  User requests to add an event together with its information.","lastModifiedDate":"2023-03-04"},{"lineNumber":346,"author":{"gitId":"glozxi"},"content":"2.  System adds the event and displays information of the event added.","lastModifiedDate":"2023-03-04"},{"lineNumber":347,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":348,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":350,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"glozxi"},"content":"* 1a. User enters the wrong command.","lastModifiedDate":"2023-03-04"},{"lineNumber":353,"author":{"gitId":"glozxi"},"content":"   * 1a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-04"},{"lineNumber":354,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":355,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-04"},{"lineNumber":356,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":357,"author":{"gitId":"glozxi"},"content":"**Use case: UC2 - Delete Event**","lastModifiedDate":"2023-03-04"},{"lineNumber":358,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":359,"author":{"gitId":"glozxi"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":360,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":361,"author":{"gitId":"glozxi"},"content":"1. User \u003cu\u003elists events (UC4)\u003c/u\u003e.","lastModifiedDate":"2023-03-04"},{"lineNumber":362,"author":{"gitId":"glozxi"},"content":"2. User requests to delete a specified event in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":363,"author":{"gitId":"glozxi"},"content":"3. System deletes the event and displays information of the event deleted.","lastModifiedDate":"2023-03-04"},{"lineNumber":364,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":365,"author":{"gitId":"glozxi"},"content":"   Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":366,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":367,"author":{"gitId":"glozxi"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":368,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":369,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-13"},{"lineNumber":370,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":371,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":372,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-04"},{"lineNumber":373,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":374,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-13"},{"lineNumber":375,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":376,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":377,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-04"},{"lineNumber":378,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":379,"author":{"gitId":"glozxi"},"content":"**Use case: UC3 - Mark Event**","lastModifiedDate":"2023-03-04"},{"lineNumber":380,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":381,"author":{"gitId":"glozxi"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":382,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":383,"author":{"gitId":"glozxi"},"content":"1. User \u003cu\u003elists events (UC4)\u003c/u\u003e.","lastModifiedDate":"2023-03-04"},{"lineNumber":384,"author":{"gitId":"glozxi"},"content":"2. User requests to mark a specified event in the list.","lastModifiedDate":"2023-03-04"},{"lineNumber":385,"author":{"gitId":"glozxi"},"content":"3. System marks the event and displays information of the event marked.","lastModifiedDate":"2023-03-04"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"   Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":389,"author":{"gitId":"glozxi"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":391,"author":{"gitId":"glozxi"},"content":"* 1a. User enters the wrong command.","lastModifiedDate":"2023-03-04"},{"lineNumber":392,"author":{"gitId":"glozxi"},"content":"   * 1a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-04"},{"lineNumber":393,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":394,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":395,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":396,"author":{"gitId":"glozxi"},"content":"* 1b. User enters an invalid index.","lastModifiedDate":"2023-03-04"},{"lineNumber":397,"author":{"gitId":"glozxi"},"content":"   * 1b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-04"},{"lineNumber":398,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":399,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-04"},{"lineNumber":400,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":401,"author":{"gitId":"glozxi"},"content":"* 1c. User marks an event that is already marked.","lastModifiedDate":"2023-03-04"},{"lineNumber":402,"author":{"gitId":"glozxi"},"content":"   * 1c1. System displays that the event has already been marked.","lastModifiedDate":"2023-03-04"},{"lineNumber":403,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":404,"author":{"gitId":"glozxi"},"content":"      Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":405,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":406,"author":{"gitId":"glozxi"},"content":"**Use case: UC4 - List Events**","lastModifiedDate":"2023-03-04"},{"lineNumber":407,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":408,"author":{"gitId":"glozxi"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":409,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":410,"author":{"gitId":"glozxi"},"content":"1. User requests the system to list events.","lastModifiedDate":"2023-03-04"},{"lineNumber":411,"author":{"gitId":"glozxi"},"content":"2. System displays information of all events with their respective index.","lastModifiedDate":"2023-03-04"},{"lineNumber":412,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":413,"author":{"gitId":"glozxi"},"content":"   Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":414,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":415,"author":{"gitId":"glozxi"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":416,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":417,"author":{"gitId":"glozxi"},"content":"* 1a. User enters the wrong command.","lastModifiedDate":"2023-03-04"},{"lineNumber":418,"author":{"gitId":"glozxi"},"content":"   * 1a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-04"},{"lineNumber":419,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":420,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-04"},{"lineNumber":421,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":422,"author":{"gitId":"glozxi"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-04"},{"lineNumber":423,"author":{"gitId":"glozxi"},"content":"   * 2a1. System displays an empty list.","lastModifiedDate":"2023-03-04"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":425,"author":{"gitId":"glozxi"},"content":"      Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":426,"author":{"gitId":"EksdeeeX"},"content":"\u003c!-- **Use case: UC5 - List Contacts**","lastModifiedDate":"2023-03-07"},{"lineNumber":427,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":428,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":429,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":430,"author":{"gitId":"glozxi"},"content":"1. User requests the system to list contacts.","lastModifiedDate":"2023-03-04"},{"lineNumber":431,"author":{"gitId":"glozxi"},"content":"2. System displays information of all contacts with their respective index.","lastModifiedDate":"2023-03-04"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":433,"author":{"gitId":"glozxi"},"content":"   Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":435,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":437,"author":{"gitId":"glozxi"},"content":"* 1a. User enters the wrong command.","lastModifiedDate":"2023-03-04"},{"lineNumber":438,"author":{"gitId":"glozxi"},"content":"   * 1a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-04"},{"lineNumber":439,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":440,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-04"},{"lineNumber":441,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":442,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2023-03-04"},{"lineNumber":443,"author":{"gitId":"glozxi"},"content":"   * 2a1. System displays an empty list.","lastModifiedDate":"2023-03-04"},{"lineNumber":444,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":445,"author":{"gitId":"EksdeeeX"},"content":"      Use case ends. --\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":446,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":447,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC5 - Link contact and event**","lastModifiedDate":"2023-03-07"},{"lineNumber":448,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":449,"author":{"gitId":"glozxi"},"content":"**MSS**","lastModifiedDate":"2023-03-04"},{"lineNumber":450,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":451,"author":{"gitId":"glozxi"},"content":"1. User \u003cu\u003elists events (UC4)\u003c/u\u003e.","lastModifiedDate":"2023-03-04"},{"lineNumber":452,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to link a specified event and contact.","lastModifiedDate":"2023-03-13"},{"lineNumber":453,"author":{"gitId":"EksdeeeX"},"content":"3. System links them and displays the event\u0027s and contact\u0027s information.","lastModifiedDate":"2023-03-13"},{"lineNumber":454,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":455,"author":{"gitId":"glozxi"},"content":"   Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":456,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":457,"author":{"gitId":"glozxi"},"content":"**Extensions**","lastModifiedDate":"2023-03-04"},{"lineNumber":458,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":459,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-13"},{"lineNumber":460,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":461,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":462,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-04"},{"lineNumber":463,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":464,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-13"},{"lineNumber":465,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":466,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":467,"author":{"gitId":"glozxi"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-04"},{"lineNumber":468,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":469,"author":{"gitId":"EksdeeeX"},"content":"* 2c. User enters an invalid contact information","lastModifiedDate":"2023-03-13"},{"lineNumber":470,"author":{"gitId":"EksdeeeX"},"content":"   * 2c1. System displays that the contact information is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":471,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":472,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 3.","lastModifiedDate":"2023-03-09"},{"lineNumber":473,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":474,"author":{"gitId":"EksdeeeX"},"content":"* 3a. The event has a contact linked already.","lastModifiedDate":"2023-03-13"},{"lineNumber":475,"author":{"gitId":"glozxi"},"content":"   * 4a1. System replaces the previous contact with the new contact.","lastModifiedDate":"2023-03-04"},{"lineNumber":476,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":477,"author":{"gitId":"glozxi"},"content":"      Use case ends.","lastModifiedDate":"2023-03-04"},{"lineNumber":478,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":479,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC6 - Display Rate**","lastModifiedDate":"2023-03-07"},{"lineNumber":480,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":481,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":482,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":483,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC4)\u003c/u\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":484,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to display the rate of a specified event in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":485,"author":{"gitId":"EksdeeeX"},"content":"3. System displays the event and displays information of the rate.","lastModifiedDate":"2023-03-05"},{"lineNumber":486,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":487,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":488,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":489,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":490,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":491,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-05"},{"lineNumber":492,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-05"},{"lineNumber":493,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":494,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":495,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":496,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-05"},{"lineNumber":497,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-05"},{"lineNumber":498,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":499,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":500,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":501,"author":{"gitId":"EksdeeeX"},"content":"\u003c!-- **Use case: UC7 - Tag a rate to an Event**","lastModifiedDate":"2023-03-13"},{"lineNumber":502,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":503,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-05"},{"lineNumber":504,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":505,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC4)\u003c/u\u003e.","lastModifiedDate":"2023-03-05"},{"lineNumber":506,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to tag a rate to a specified event in the list.","lastModifiedDate":"2023-03-05"},{"lineNumber":507,"author":{"gitId":"EksdeeeX"},"content":"3. System tags the rate to the event and displays information of the event tagged.","lastModifiedDate":"2023-03-05"},{"lineNumber":508,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":509,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-05"},{"lineNumber":510,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":511,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-05"},{"lineNumber":512,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":513,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-05"},{"lineNumber":514,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-05"},{"lineNumber":515,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":516,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":517,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":518,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-05"},{"lineNumber":519,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-05"},{"lineNumber":520,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":521,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":522,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":523,"author":{"gitId":"EksdeeeX"},"content":"* 2c. User enters an invalid rate.","lastModifiedDate":"2023-03-05"},{"lineNumber":524,"author":{"gitId":"EksdeeeX"},"content":"   * 2c1. System displays that the rate is invalid and to try again.","lastModifiedDate":"2023-03-05"},{"lineNumber":525,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-05"},{"lineNumber":526,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-05"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":528,"author":{"gitId":"EksdeeeX"},"content":"* 3a. The event has a rate tagging already.","lastModifiedDate":"2023-03-06"},{"lineNumber":529,"author":{"gitId":"EksdeeeX"},"content":"   * 3a1. System replaces the previous rate with the new rate.","lastModifiedDate":"2023-03-06"},{"lineNumber":530,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":531,"author":{"gitId":"EksdeeeX"},"content":"      Use case ends. --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":532,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":533,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC7 - Add Contact**","lastModifiedDate":"2023-03-13"},{"lineNumber":534,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":535,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":536,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":537,"author":{"gitId":"EksdeeeX"},"content":"1.  User requests to add a contact to an event.","lastModifiedDate":"2023-03-07"},{"lineNumber":538,"author":{"gitId":"EksdeeeX"},"content":"2.  System adds the contact to the event and displays information of the contact and event.","lastModifiedDate":"2023-03-07"},{"lineNumber":539,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":540,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":541,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":542,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":543,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":544,"author":{"gitId":"EksdeeeX"},"content":"* 1a. User enters the wrong command.","lastModifiedDate":"2023-03-06"},{"lineNumber":545,"author":{"gitId":"EksdeeeX"},"content":"   * 1a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":546,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":547,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":548,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":549,"author":{"gitId":"EksdeeeX"},"content":"* 1b. User enters invalid contact details.","lastModifiedDate":"2023-03-06"},{"lineNumber":550,"author":{"gitId":"EksdeeeX"},"content":"   * 1b1. System displays that the input is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":551,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":552,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 1.","lastModifiedDate":"2023-03-06"},{"lineNumber":553,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":554,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC8 - Add Date to Event**","lastModifiedDate":"2023-03-13"},{"lineNumber":555,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":556,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-06"},{"lineNumber":557,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":558,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC4)\u003c/u\u003e.","lastModifiedDate":"2023-03-06"},{"lineNumber":559,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to add a date to a specified event in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":560,"author":{"gitId":"EksdeeeX"},"content":"3. System adds the date to the event and displays information of the event with new date added.","lastModifiedDate":"2023-03-06"},{"lineNumber":561,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":562,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":563,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":564,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-06"},{"lineNumber":565,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":566,"author":{"gitId":"EksdeeeX"},"content":" 2a. User enters the wrong command.","lastModifiedDate":"2023-03-06"},{"lineNumber":567,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":568,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":569,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-06"},{"lineNumber":570,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":571,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-06"},{"lineNumber":572,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":573,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":574,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-06"},{"lineNumber":575,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":576,"author":{"gitId":"EksdeeeX"},"content":"* 2c. User enters an invalid date.","lastModifiedDate":"2023-03-06"},{"lineNumber":577,"author":{"gitId":"EksdeeeX"},"content":"   * 2c1. System displays that the date is invalid and to try again.","lastModifiedDate":"2023-03-06"},{"lineNumber":578,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":579,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-06"},{"lineNumber":580,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":581,"author":{"gitId":"EksdeeeX"},"content":"* 3a. The event has a date linked already.","lastModifiedDate":"2023-03-06"},{"lineNumber":582,"author":{"gitId":"EksdeeeX"},"content":"   * 3a1. System replaces the previous date with the new date.","lastModifiedDate":"2023-03-06"},{"lineNumber":583,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":584,"author":{"gitId":"EksdeeeX"},"content":"      Use case ends.","lastModifiedDate":"2023-03-06"},{"lineNumber":585,"author":{"gitId":"EksdeeeX"},"content":"      ","lastModifiedDate":"2023-03-06"},{"lineNumber":586,"author":{"gitId":"EksdeeeX"},"content":"**Use case: UC9 - Edit Event**","lastModifiedDate":"2023-03-13"},{"lineNumber":587,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":588,"author":{"gitId":"EksdeeeX"},"content":"**MSS**","lastModifiedDate":"2023-03-13"},{"lineNumber":589,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":590,"author":{"gitId":"EksdeeeX"},"content":"1. User \u003cu\u003elists events (UC4)\u003c/u\u003e.","lastModifiedDate":"2023-03-13"},{"lineNumber":591,"author":{"gitId":"EksdeeeX"},"content":"2. User requests to edit a specified event in the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":592,"author":{"gitId":"EksdeeeX"},"content":"3. System updates the event with the edit and displays information of the event edited.","lastModifiedDate":"2023-03-13"},{"lineNumber":593,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":594,"author":{"gitId":"EksdeeeX"},"content":"   Use case ends.","lastModifiedDate":"2023-03-13"},{"lineNumber":595,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":596,"author":{"gitId":"EksdeeeX"},"content":"**Extensions**","lastModifiedDate":"2023-03-13"},{"lineNumber":597,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":598,"author":{"gitId":"EksdeeeX"},"content":"* 2a. User enters the wrong command.","lastModifiedDate":"2023-03-13"},{"lineNumber":599,"author":{"gitId":"EksdeeeX"},"content":"   * 2a1. System displays that the command is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":600,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":601,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-13"},{"lineNumber":602,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":603,"author":{"gitId":"EksdeeeX"},"content":"* 2b. User enters an invalid index.","lastModifiedDate":"2023-03-13"},{"lineNumber":604,"author":{"gitId":"EksdeeeX"},"content":"   * 2b1. System displays that the index is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":605,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":606,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-13"},{"lineNumber":607,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":608,"author":{"gitId":"EksdeeeX"},"content":"* 2c. User enters an invalid argument format.","lastModifiedDate":"2023-03-13"},{"lineNumber":609,"author":{"gitId":"EksdeeeX"},"content":"   * 2c1. System displays that the format is invalid and to try again.","lastModifiedDate":"2023-03-13"},{"lineNumber":610,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":611,"author":{"gitId":"EksdeeeX"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2023-03-13"},{"lineNumber":612,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":613,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":614,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":615,"author":{"gitId":"-"},"content":"1. Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":616,"author":{"gitId":"glozxi"},"content":"2. A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2023-03-04"},{"lineNumber":617,"author":{"gitId":"glozxi"},"content":"3. Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-04"},{"lineNumber":618,"author":{"gitId":"glozxi"},"content":"4. Should be able to hold up to 1000 events without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2023-03-04"},{"lineNumber":619,"author":{"gitId":"glozxi"},"content":"5. The system should work on both 32-bit and 64-bit environments.","lastModifiedDate":"2023-03-04"},{"lineNumber":620,"author":{"gitId":"glozxi"},"content":"6. The source code should be open source.","lastModifiedDate":"2023-03-04"},{"lineNumber":621,"author":{"gitId":"glozxi"},"content":"7. The product is offered as a free product.","lastModifiedDate":"2023-03-04"},{"lineNumber":622,"author":{"gitId":"glozxi"},"content":"8. The system should respond within two seconds for events and persons up to 1000.","lastModifiedDate":"2023-03-04"},{"lineNumber":623,"author":{"gitId":"glozxi"},"content":"9. The user interface should be intuitive enough for users who are not as IT-savvy.","lastModifiedDate":"2023-03-04"},{"lineNumber":624,"author":{"gitId":"glozxi"},"content":"10. The dimensions should be at least `726px * 593px` so that it is readable for the user.","lastModifiedDate":"2023-03-04"},{"lineNumber":625,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":628,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"EksdeeeX"},"content":"## Appendix: Instructions for manual testing","lastModifiedDate":"2023-03-07"},{"lineNumber":635,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":636,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":640,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":641,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":642,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":643,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":644,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":645,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":646,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":647,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":648,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":649,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":650,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":651,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":652,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":653,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":654,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":655,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":656,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":663,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":664,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":665,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":667,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":669,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":670,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":671,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":672,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":673,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":674,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":677,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":678,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":679,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"1. _{ more test cases â€¦â€‹ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":685,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-07"},{"lineNumber":686,"author":{"gitId":"EksdeeeX"},"content":"[Back to top](#)","lastModifiedDate":"2023-03-07"}],"authorContributionMap":{"EksdeeeX":178,"glozxi":149,"-":359}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"Paidlancers is a **desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"## Table of Contents","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"- [Quick Start](#quick-start)","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"- [Features](#features)","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"  * [Add a Contact](#add-a-contact)","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"  \u003c!-- * [View Contact List](#list-all-contacts) --\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"  * [Link Contact to Event](#link-contact-to-event)","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"  * [View Rate](#view-rate)","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"  * [Tag Rate](#tag-rate)","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"  * [Mark Event as Done](#mark-event)","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"  * [Create New Event](#create-new-event)","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"  * [View Event List](#list-all-events)","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"  * [Delete an Event](#delete-an-event)","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"  * [Edit an Event](#edit-an-event)","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"- [FAQ](#faq)","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"- [Command Summary](#command-summary)","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"## Quick start","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Ensure you have Java `11` or above installed in your Computer.","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"1. Download the latest `Paidlancers.jar` from [here](https://github.com/AY2223S2-CS2103T-T11-3/tp/releases).","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"1. Copy the file to the folder you want to use as the _home folder_ for your AddressBook.","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"1. Open a command terminal, `cd` into the folder you put the jar file in, and use the `java -jar Paidlancers.jar` command to run the application.\u003cbr\u003e","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   A GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2023-01-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"1. Type the command in the command box and press Enter to execute it.","lastModifiedDate":"2023-03-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"   * `listcontact` : Lists all contacts.","lastModifiedDate":"2023-03-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"   * `newcontact n/John Doe p/98765432` : Adds a contact named `John Doe` to the contact list.","lastModifiedDate":"2023-03-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"   * `delete 3` : Deletes the 3rd event shown in the current list.","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"1. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"### Add a Contact: `newcontact` \u003ca id \u003d \"add-a-contact\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"Adding a contact to contacts","lastModifiedDate":"2023-02-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"**Format**: `newcontact n/NAME p/NUMBER`","lastModifiedDate":"2023-03-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"- Creates a new contact with specified `NAME` and `NUMBER`","lastModifiedDate":"2023-03-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"- `newcontact n/Deborah Tan p/91234567`","lastModifiedDate":"2023-03-03"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"- `newcontact n/Mandy p/98765432`","lastModifiedDate":"2023-03-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":66,"author":{"gitId":"EksdeeeX"},"content":"\u003c!-- ### List all Contacts: `listcontact` \u003ca id \u003d \"list-all-contacts\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":68,"author":{"gitId":"engenhui1999"},"content":"Displays all contacts saved in a list","lastModifiedDate":"2023-02-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":70,"author":{"gitId":"EksdeeeX"},"content":"**Format**: `listcontact` --\u003e","lastModifiedDate":"2023-03-07"},{"lineNumber":71,"author":{"gitId":"EksdeeeX"},"content":"### Link Contact to Event: `linkcontact` \u003ca id \u003d \"link-contact-to-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"Links client contact to an event.","lastModifiedDate":"2023-02-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":75,"author":{"gitId":"EksdeeeX"},"content":"**Format**: `linkcontact INDEX CONTACT`","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"- Links contact to the event at the specified `INDEX`.","lastModifiedDate":"2023-03-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"  - The `INDEX` refers to the index number in the displayed events list.","lastModifiedDate":"2023-03-03"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦â€‹","lastModifiedDate":"2023-03-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":83,"author":{"gitId":"EksdeeeX"},"content":"- `linkcontact 2 91234567` links `2nd event` to contact `91234567` in the list.","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"### View Rate: `rate` \u003ca id \u003d \"view-rate\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":88,"author":{"gitId":"engenhui1999"},"content":"Displays the rate tagged to an event.","lastModifiedDate":"2023-02-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"**Format**: `rate INDEX`","lastModifiedDate":"2023-03-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"- Displays the agreed rate of the event at the specified `INDEX`.","lastModifiedDate":"2023-03-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"  - The `INDEX` refers to the index number in the displayed events list.","lastModifiedDate":"2023-03-03"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦â€‹","lastModifiedDate":"2023-03-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"- `rate 2` returns the rate of `2nd event` in the event list.","lastModifiedDate":"2023-03-03"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":101,"author":{"gitId":"EksdeeeX"},"content":"\u003c!-- ### Tag Rate: `newrate` \u003ca id \u003d \"tag-rate\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"Tags a rate to an event.","lastModifiedDate":"2023-02-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"**Format**: `newrate INDEX AMOUNT`","lastModifiedDate":"2023-03-03"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"- Adds a specified rate, `AMOUNT`, to an event at the specified `INDEX`.","lastModifiedDate":"2023-03-03"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"  - The `INDEX` refers to the index number in the displayed events list.","lastModifiedDate":"2023-03-03"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦â€‹","lastModifiedDate":"2023-03-03"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":113,"author":{"gitId":"EksdeeeX"},"content":"- `newrate 2 100` adds the rate of `100` to the `2nd event` in the event list. --\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"### Mark Event as Done: `mark` \u003ca id \u003d \"mark-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":118,"author":{"gitId":"engenhui1999"},"content":"Marks a specified event in the address book as done.","lastModifiedDate":"2023-02-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"**Format**: `mark INDEX`","lastModifiedDate":"2023-03-03"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"- Marks the event at the specified `INDEX` as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":124,"author":{"gitId":"engenhui1999"},"content":"The event must not be marked as done beforehand.","lastModifiedDate":"2023-02-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"- `mark 2` marks the `2nd event` as done.","lastModifiedDate":"2023-03-03"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":129,"author":{"gitId":"engenhui1999"},"content":"### Create new Event: `newevent` \u003ca id \u003d \"create-new-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":131,"author":{"gitId":"engenhui1999"},"content":"Creates a new event","lastModifiedDate":"2023-02-27"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":133,"author":{"gitId":"glozxi"},"content":"**Format**: `newevent n/NAME p/rate a/ADDRESS ds/START_TIME de/END_TIME [t/TAG]â€¦â€‹`","lastModifiedDate":"2023-03-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":135,"author":{"gitId":"glozxi"},"content":"- Times must have the format `dd-MM-yyyy HH:mm`.","lastModifiedDate":"2023-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":138,"author":{"gitId":"glozxi"},"content":"- `newevent n/DJ at wedding p/100 a/311, Clementi Ave 2, #02-25 ds/11-03-2023 11:00 de/11-03-2023 17:00 t/friends t/dj`","lastModifiedDate":"2023-03-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":140,"author":{"gitId":"engenhui1999"},"content":"### List all Events: `listevent` \u003ca id \u003d \"list-all-events\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":142,"author":{"gitId":"engenhui1999"},"content":"Shows a list of all events in the address book","lastModifiedDate":"2023-02-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":144,"author":{"gitId":"EksdeeeX"},"content":"**Format**: `list`","lastModifiedDate":"2023-03-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":147,"author":{"gitId":"EksdeeeX"},"content":"### Delete an Event: `delete` \u003ca id \u003d \"delete-an-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":149,"author":{"gitId":"engenhui1999"},"content":"Deletes the specified event from the event book.","lastModifiedDate":"2023-02-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":151,"author":{"gitId":"EksdeeeX"},"content":"**Format**: `delete INDEX`","lastModifiedDate":"2023-03-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":153,"author":{"gitId":"EksdeeeX"},"content":"- Deletes the event at the specified `INDEX`","lastModifiedDate":"2023-03-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":155,"author":{"gitId":"EksdeeeX"},"content":"  - The `INDEX` refers to the index number shown in the displayed event list.","lastModifiedDate":"2023-03-13"},{"lineNumber":156,"author":{"gitId":"EksdeeeX"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦â€‹","lastModifiedDate":"2023-03-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":158,"author":{"gitId":"EksdeeeX"},"content":"**Example**:","lastModifiedDate":"2023-03-13"},{"lineNumber":159,"author":{"gitId":"EksdeeeX"},"content":"  - `delete 2` deletes the `2nd event` in the event list.","lastModifiedDate":"2023-03-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":161,"author":{"gitId":"EksdeeeX"},"content":"### Edit an Event: `edit` \u003ca id \u003d \"edit-an-event\"\u003e\u003c/a\u003e","lastModifiedDate":"2023-03-13"},{"lineNumber":162,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":163,"author":{"gitId":"EksdeeeX"},"content":"Edits the specified event from the event book.","lastModifiedDate":"2023-03-13"},{"lineNumber":164,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":165,"author":{"gitId":"EksdeeeX"},"content":"**Format**: `edit INDEX [n/NAME] [r/RATE] [a/ADDRESS] [ds/TIMING] [de/TIMING] [t/TAG]...`","lastModifiedDate":"2023-03-13"},{"lineNumber":166,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"EksdeeeX"},"content":"- Edits the event at the specified `INDEX`","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":169,"author":{"gitId":"bryansendeavour"},"content":"  - The `INDEX` refers to the index number shown in the displayed event list.","lastModifiedDate":"2023-03-03"},{"lineNumber":170,"author":{"gitId":"bryansendeavour"},"content":"  - The `INDEX` must be a positive integer 1, 2, 3, â€¦â€‹","lastModifiedDate":"2023-03-03"},{"lineNumber":171,"author":{"gitId":"EksdeeeX"},"content":"  - At least one of the optional fields must be provided.","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"EksdeeeX"},"content":"  - Edits will replace existing values, edits are not cumulative.","lastModifiedDate":"2023-03-13"},{"lineNumber":173,"author":{"gitId":"EksdeeeX"},"content":"  - Tags can be removed by typing `t/` without specifying any tags after it.","lastModifiedDate":"2023-03-13"},{"lineNumber":174,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"**Example**:","lastModifiedDate":"2023-03-03"},{"lineNumber":176,"author":{"gitId":"EksdeeeX"},"content":"  - `edit 1 p/91234567 r/100` Edits the phone number and rate of the 1st person to be 91234567 and j100 respectively.","lastModifiedDate":"2023-03-13"},{"lineNumber":177,"author":{"gitId":"EksdeeeX"},"content":"  - `edit 2 n/Betsy Crower t/` Edits the name of the 2nd person to be Betsy Crower and clears all existing tags.","lastModifiedDate":"2023-03-13"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"engenhui1999"},"content":"### Saving the data","lastModifiedDate":"2023-02-27"},{"lineNumber":180,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":181,"author":{"gitId":"bryansendeavour"},"content":"Paidlancers data are saved in the hard disk automatically exiting the program. There is no need to save manually.","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2023-02-27"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":185,"author":{"gitId":"engenhui1999"},"content":"**Q**: How do I transfer my data to another Computer?","lastModifiedDate":"2023-02-27"},{"lineNumber":186,"author":{"gitId":"engenhui1999"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Paidlancers home folder.","lastModifiedDate":"2023-03-03"},{"lineNumber":187,"author":{"gitId":"engenhui1999"},"content":"(#add-a-contact)","lastModifiedDate":"2023-03-03"},{"lineNumber":188,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":189,"author":{"gitId":"engenhui1999"},"content":"## Command Summary","lastModifiedDate":"2023-02-27"},{"lineNumber":190,"author":{"gitId":"engenhui1999"},"content":"|                    Commands                     |               Command Format                |                                Example Usage                                |","lastModifiedDate":"2023-02-27"},{"lineNumber":191,"author":{"gitId":"bryansendeavour"},"content":"|:-----------------------------------------------:|:-------------------------------------------:|:---------------------------------------------------------------------------:|","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"engenhui1999"},"content":"|         [Add a Contact](#add-a-contact)         |        `newcontact n/NAME p/NUMBER`         |                    `newcontact n/Deborah Tan p/91234567`                    |","lastModifiedDate":"2023-03-03"},{"lineNumber":193,"author":{"gitId":"EksdeeeX"},"content":"| [Link Contact to Event](#link-contact-to-event) |            `linkcontact INDEX CONTACT`             |                              `linkcontact 2 91234567`                              |","lastModifiedDate":"2023-03-13"},{"lineNumber":194,"author":{"gitId":"engenhui1999"},"content":"|             [View Rate](#view-rate)             |                `rate INDEX`                 |                                  `rate 2`                                   |","lastModifiedDate":"2023-03-03"},{"lineNumber":195,"author":{"gitId":"engenhui1999"},"content":"|       [Marks Event as Done](#mark-event)        |                `mark INDEX`                 |                                  `mark 2`                                   |","lastModifiedDate":"2023-03-03"},{"lineNumber":196,"author":{"gitId":"glozxi"},"content":"|     [Create a new Event](#create-new-event)     |               `newevent n/NAME p/rate a/ADDRESS ds/START_TIME de/END_TIME [t/TAG]â€¦`               |                             `newevent n/DJ at wedding p/100 a/311, Clementi Ave 2, #02-25 ds/11-03-2023 11:00 de/11-03-2023 17:00 t/friends t/dj`                  ","lastModifiedDate":"2023-03-10"},{"lineNumber":197,"author":{"gitId":"EksdeeeX"},"content":"|       [View Event List](#list-all-events)       |                 `list`                 |                                 `list`                                 |","lastModifiedDate":"2023-03-13"},{"lineNumber":198,"author":{"gitId":"EksdeeeX"},"content":"|       [Delete an Event](#delete-an-event)       |               `delete INDEX`               |                               `delete 2`                               |","lastModifiedDate":"2023-03-13"},{"lineNumber":199,"author":{"gitId":"EksdeeeX"},"content":"|       [Edit an Event](#edit-an-event)       |               `edit INDEX  [n/NAME] [r/RATE] [a/ADDRESS] [ds/TIMING] [de/TIMING] [t/TAG]...`               |                               `edit 2 r/100`                               |","lastModifiedDate":"2023-03-13"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":202,"author":{"gitId":"bryansendeavour"},"content":"[Back to top](#)","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"EksdeeeX":34,"glozxi":4,"bryansendeavour":37,"engenhui1999":42,"-":85}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"glozxi"},"content":"    content: \"Paidlancers\";","lastModifiedDate":"2023-03-01"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"glozxi":1,"-":294}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"title: Paidlancers","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"[![CI Status](https://github.com/AY2223S2-CS2103T-T11-3/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2223S2-CS2103T-T11-3/tp/actions)","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"[![codecov](https://codecov.io/gh/AY2223S2-CS2103T-T11-3/tp/branch/master/graph/badge.svg)](https://codecov.io/gh/AY2223S2-CS2103T-T11-3/tp)","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"**Paidlancers is a desktop application for managing and planning your events.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"* If you are interested in using Paidlancers, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"* If you are interested about developing Paidlancers, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"bryansendeavour":6,"-":13}},{"path":"docs/team/bryansendeavour.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"layout: page","lastModifiedDate":"2023-03-02"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"title: Bryan Ong\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-02"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"---","lastModifiedDate":"2023-03-02"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-03-02"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"Paidlancers is a desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-02"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-02"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dbryansendeavour\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-02"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"* **Project management**:","lastModifiedDate":"2023-03-02"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"  * to be added soon","lastModifiedDate":"2023-03-02"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-02"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-02"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"  * User Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    * Added documentation for the features `newcontact` and `listcontact`","lastModifiedDate":"2023-03-02"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-02"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"* **Community**:","lastModifiedDate":"2023-03-02"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"  * PRs reviewed: #13, #38","lastModifiedDate":"2023-03-02"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-02"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"* **Tools**:","lastModifiedDate":"2023-03-02"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"  * to be added soon","lastModifiedDate":"2023-03-02"}],"authorContributionMap":{"bryansendeavour":37}},{"path":"docs/team/eksdeeex.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"layout: page","lastModifiedDate":"2023-03-03"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"title: Bryan Tan\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-03"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"---","lastModifiedDate":"2023-03-03"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-03-03"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"Paidlancers is a **desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-03"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-03"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"* **Code contributed**: [_to be added soon_]()","lastModifiedDate":"2023-03-03"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"* **Project management**:","lastModifiedDate":"2023-03-03"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"  * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-03"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"  * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-03"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"  * User Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    * Added documentation for the features `link`, `rate` and `newrate`","lastModifiedDate":"2023-03-03"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"  * Developer Guide:","lastModifiedDate":"2023-03-03"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"    * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"* **Community**:","lastModifiedDate":"2023-03-03"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"  * Team-based tasks:","lastModifiedDate":"2023-03-03"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"    * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"  * Review / Mentoring:","lastModifiedDate":"2023-03-03"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    * #35, #39","lastModifiedDate":"2023-03-03"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"* **Tools**:","lastModifiedDate":"2023-03-03"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"  * _to be added soon_","lastModifiedDate":"2023-03-03"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-03"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"* **Others**:","lastModifiedDate":"2023-03-03"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"  * _to be added soon_","lastModifiedDate":"2023-03-03"}],"authorContributionMap":{"EksdeeeX":37}},{"path":"docs/team/engenhui1999.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"title: Eng En Hui\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"Paidlancers is a **desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"* **Code contributed**: [_to be added soon_]()","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"* **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"  * _to be added soon_","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"  * _to be added soon_","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"  * User Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    * Added documentation for the features `mark` and `newevent`","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"    * _to be added soon_","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"  * Team-based tasks:","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    * _to be added soon_","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"  * Review / Mentoring:","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"    * _to be added soon_","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"* **Tools**:","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"  * _to be added soon_","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"* **Others**:","lastModifiedDate":"2023-02-27"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"  * _to be added soon_","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"engenhui1999":37}},{"path":"docs/team/extrashotlatte.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ExtraShotLatte"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":2,"author":{"gitId":"ExtraShotLatte"},"content":"layout: page","lastModifiedDate":"2023-03-04"},{"lineNumber":3,"author":{"gitId":"ExtraShotLatte"},"content":"title: Sean Wong\u0027s Project Portfolio Page","lastModifiedDate":"2023-03-04"},{"lineNumber":4,"author":{"gitId":"ExtraShotLatte"},"content":"---","lastModifiedDate":"2023-03-04"},{"lineNumber":5,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-03-04"},{"lineNumber":7,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"Paidlancers is a **desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface (CLI)** while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-03-04"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-03-04"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":16,"author":{"gitId":"ExtraShotLatte"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dextrashotlatte\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2023-02-17)","lastModifiedDate":"2023-03-04"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":18,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"* **Project management**:","lastModifiedDate":"2023-03-04"},{"lineNumber":20,"author":{"gitId":"ExtraShotLatte"},"content":"    * to be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-03-04"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"* **Documentation**:","lastModifiedDate":"2023-03-04"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"    * User Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"    * Developer Guide:","lastModifiedDate":"2023-03-04"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":31,"author":{"gitId":"ExtraShotLatte"},"content":"* **Community**:","lastModifiedDate":"2023-03-04"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"    * PRs reviewed: To be added soon","lastModifiedDate":"2023-03-04"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-04"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"* **Tools**:","lastModifiedDate":"2023-03-04"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"    * to be added soon","lastModifiedDate":"2023-03-04"}],"authorContributionMap":{"ExtraShotLatte":36}},{"path":"docs/team/glozxi.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"glozxi"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"layout: page","lastModifiedDate":"2023-02-27"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"title: Gloria Zhang Xinhui\u0027s Project Portfolio Page","lastModifiedDate":"2023-02-27"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"---","lastModifiedDate":"2023-02-27"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"### Project: Paidlancers","lastModifiedDate":"2023-02-27"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"Paidlancers is a **desktop app for keeping track of your freelancing events, optimised for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Paidlancers can get your freelancing event management tasks done faster than traditional GUI apps.","lastModifiedDate":"2023-02-27"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2023-02-27"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"* **New Feature**: to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"* **Code contributed**: [RepoSense link](https://nus-cs2103-ay2223s2.github.io/tp-dashboard/?search\u003dglozxi\u0026breakdown\u003dtrue\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2023-02-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other)","lastModifiedDate":"2023-02-27"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"* **Project management**:","lastModifiedDate":"2023-02-27"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2023-02-27"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"* **Documentation**:","lastModifiedDate":"2023-02-27"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"  * User Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"  * Developer Guide:","lastModifiedDate":"2023-02-27"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"    * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"* **Community**:","lastModifiedDate":"2023-02-27"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"* **Tools**:","lastModifiedDate":"2023-02-27"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-02-27"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"* **Others**:","lastModifiedDate":"2023-02-27"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"  * to be added soon","lastModifiedDate":"2023-02-27"}],"authorContributionMap":{"glozxi":35}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.storage.ContactListStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.storage.JsonContactListStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        ContactListStorage contactListStorage \u003d new JsonContactListStorage(userPrefs.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        storage \u003d new StorageManager(addressBookStorage, contactListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"        Optional\u003cReadOnlyContactList\u003e contactListOptional;","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"        ReadOnlyContactList initialContactData;","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"            contactListOptional \u003d storage.readContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"            if (!contactListOptional.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"                logger.info(\"Data file not found. Will be starting with a sample contactList\");","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"            initialContactData \u003d contactListOptional.orElseGet(SampleDataUtil::getSampleContactList);","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty ContactList\");","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"            initialContactData \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty ContactList\");","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"            initialContactData \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"        return new ModelManager(initialData, initialContactData, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":201,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryansendeavour":23,"-":181}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"    public static final String MESSAGE_INVALID_EVENT_DISPLAYED_INDEX \u003d \"The event index provided is invalid\";","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String MESSAGE_CONTACT_NOT_FOUND \u003d \"Contact not found!\";","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EksdeeeX":1,"ExtraShotLatte":1,"-":12}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    ReadOnlyContactList getContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"    ObservableList\u003cEvent\u003e getFilteredPersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bryansendeavour":3,"engenhui1999":2,"-":48}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"            storage.saveContactList(model.getContactList());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        return model.getContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"    public ObservableList\u003cEvent\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"bryansendeavour":6,"engenhui1999":2,"-":80}},{"path":"src/main/java/seedu/address/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_END;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_START;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    public static final String COMMAND_WORD \u003d \"newevent\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds an event to the address book. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"            + PREFIX_RATE + \"RATE \"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_TIMING_START + \"START_TIME \"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_TIMING_END + \"END_TIME \"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"            + PREFIX_NAME + \"DJ at wedding \"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"            + PREFIX_RATE + \"100 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TIMING_START + \"11-03-2023 11:00 \"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TIMING_END + \"11-03-2023 17:00 \"","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"            + PREFIX_TAG + \"dj\";","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_USAGE_CONTACT \u003d COMMAND_WORD + \": Adds a person to the address book. \"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New event added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_DUPLICATE_EVENT \u003d \"This event already exists in the address book\";","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"    private final Event toAdd;","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"    public AddCommand(Event event) {","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"        requireNonNull(event);","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"        toAdd \u003d event;","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"glozxi":21,"bryansendeavour":2,"engenhui1999":7,"-":56}},{"path":"src/main/java/seedu/address/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"        Event personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"EksdeeeX":1,"engenhui1999":3,"-":49}},{"path":"src/main/java/seedu/address/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-12-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_END;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_START;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_USAGE_CONTACT \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"            + \"Existing values will be overwritten by the input values. \"","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"            + \"To edit timing, both start and end time must be included.\\n\"","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"engenhui1999"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"            + \"[\" + PREFIX_RATE + \"RATE] \"","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"engenhui1999"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"            + \"[\" + PREFIX_TIMING_START + \"START_TIME] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"            + \"[\" + PREFIX_TIMING_END + \"END_TIME] \"","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"engenhui1999"},"content":"        List\u003cseedu.address.model.person.Event\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"EksdeeeX"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"engenhui1999"},"content":"        Event personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"engenhui1999"},"content":"        Event editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"engenhui1999"},"content":"        if (!personToEdit.isSameEvent(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"    private static Event createEditedPerson(Event personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"        Rate updatedRate \u003d editPersonDescriptor.getRate().orElse(personToEdit.getRate());","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        Timing updatedTiming \u003d editPersonDescriptor.getTiming().orElse(personToEdit.getTiming());","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"engenhui1999"},"content":"        Contact updatedContact \u003d editPersonDescriptor.getContact().orElse(personToEdit.getContact());","lastModifiedDate":"2023-03-14"},{"lineNumber":120,"author":{"gitId":"engenhui1999"},"content":"        Mark updatedMark \u003d editPersonDescriptor.getMark().orElse(personToEdit.getMark());","lastModifiedDate":"2023-03-11"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"engenhui1999"},"content":"        Event updatedEvent \u003d new Event(updatedName, updatedRate, updatedAddress, updatedTiming, updatedTags);","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"engenhui1999"},"content":"        if (updatedMark.isDone()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"engenhui1999"},"content":"            updatedEvent.mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"engenhui1999"},"content":"        updatedEvent.linkContact(updatedContact);","lastModifiedDate":"2023-03-14"},{"lineNumber":128,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":129,"author":{"gitId":"engenhui1999"},"content":"        return updatedEvent;","lastModifiedDate":"2023-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":147,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"engenhui1999"},"content":"        private Rate rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":158,"author":{"gitId":"glozxi"},"content":"        private Timing timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"engenhui1999"},"content":"        private Contact contact;","lastModifiedDate":"2023-03-14"},{"lineNumber":160,"author":{"gitId":"engenhui1999"},"content":"        private Mark mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":166,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"engenhui1999"},"content":"            setRate(toCopy.rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2023-03-06"},{"lineNumber":173,"author":{"gitId":"glozxi"},"content":"            setTiming(toCopy.timing);","lastModifiedDate":"2023-03-09"},{"lineNumber":174,"author":{"gitId":"engenhui1999"},"content":"            setContact(toCopy.contact);","lastModifiedDate":"2023-03-14"},{"lineNumber":175,"author":{"gitId":"engenhui1999"},"content":"            setMark(toCopy.mark);","lastModifiedDate":"2023-03-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-03-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2023-03-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-03-06"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"engenhui1999"},"content":"            return CollectionUtil.isAnyNonNull(name, rate, address, timing, mark, tags);","lastModifiedDate":"2023-03-11"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":194,"author":{"gitId":"engenhui1999"},"content":"        public void setRate(Rate rate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":195,"author":{"gitId":"engenhui1999"},"content":"            this.rate \u003d rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":198,"author":{"gitId":"engenhui1999"},"content":"        public Optional\u003cRate\u003e getRate() {","lastModifiedDate":"2023-03-06"},{"lineNumber":199,"author":{"gitId":"engenhui1999"},"content":"            return Optional.ofNullable(rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2023-03-06"},{"lineNumber":203,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2023-03-06"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2023-03-06"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":210,"author":{"gitId":"glozxi"},"content":"        public void setTiming(Timing timing) {","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"glozxi"},"content":"            this.timing \u003d timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"glozxi"},"content":"        public Optional\u003cTiming\u003e getTiming() {","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"glozxi"},"content":"            return Optional.ofNullable(timing);","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"engenhui1999"},"content":"        public void setContact(Contact contact) {","lastModifiedDate":"2023-03-14"},{"lineNumber":219,"author":{"gitId":"engenhui1999"},"content":"            this.contact \u003d contact;","lastModifiedDate":"2023-03-14"},{"lineNumber":220,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":221,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":222,"author":{"gitId":"engenhui1999"},"content":"        public Optional\u003cContact\u003e getContact() {","lastModifiedDate":"2023-03-14"},{"lineNumber":223,"author":{"gitId":"engenhui1999"},"content":"            return Optional.ofNullable(contact);","lastModifiedDate":"2023-03-14"},{"lineNumber":224,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-14"},{"lineNumber":225,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-14"},{"lineNumber":226,"author":{"gitId":"engenhui1999"},"content":"        public void setMark(Mark mark) {","lastModifiedDate":"2023-03-11"},{"lineNumber":227,"author":{"gitId":"engenhui1999"},"content":"            this.mark \u003d mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":228,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":229,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":230,"author":{"gitId":"engenhui1999"},"content":"        public Optional\u003cMark\u003e getMark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":231,"author":{"gitId":"engenhui1999"},"content":"            return Optional.ofNullable(mark);","lastModifiedDate":"2023-03-11"},{"lineNumber":232,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":233,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-03-06"},{"lineNumber":235,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2023-03-06"},{"lineNumber":236,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2023-03-06"},{"lineNumber":237,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-03-06"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-06"},{"lineNumber":239,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2023-03-06"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2023-03-06"},{"lineNumber":243,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-06"},{"lineNumber":244,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2023-03-06"},{"lineNumber":245,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2023-03-06"},{"lineNumber":246,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2023-03-06"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2023-03-06"},{"lineNumber":248,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2023-03-06"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":253,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":254,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":255,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":258,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":259,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":260,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":263,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":264,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":267,"author":{"gitId":"engenhui1999"},"content":"                    \u0026\u0026 getRate().equals(e.getRate())","lastModifiedDate":"2023-03-06"},{"lineNumber":268,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2023-03-06"},{"lineNumber":269,"author":{"gitId":"glozxi"},"content":"                    \u0026\u0026 getTiming().equals(e.getTiming())","lastModifiedDate":"2023-03-13"},{"lineNumber":270,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2023-03-06"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"EksdeeeX":1,"glozxi":20,"engenhui1999":58,"-":195}},{"path":"src/main/java/seedu/address/logic/commands/LinkContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ExtraShotLatte"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"ExtraShotLatte"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"ExtraShotLatte"},"content":"import java.util.List;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.UniqueContactList;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"ExtraShotLatte"},"content":" * Links a contact to an event","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"ExtraShotLatte"},"content":"public class LinkContactCommand extends Command {","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String COMMAND_WORD \u003d \"linkcontact\";","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Links event identified by the index number to the\"","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"            + \" contact specified. \"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"            + \"INDEX PHONE (index must be positive integer and contact must be in contact list.)\\n\"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"            + \"Example: \" + COMMAND_WORD + \" 2\" + \"91234567\";","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String MESSAGE_LINK_CONTACT_SUCCESS \u003d \"Successfully linked! %1$s\";","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"    private final Index eventIndex;","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"ExtraShotLatte"},"content":"    private final String addContact;","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"     * Creates a LinkContactCommand to link the specified {@code Contact} to event","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"     * specified by the {@code Index}.","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"    public LinkContactCommand(Index index, String contact) {","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"ExtraShotLatte"},"content":"        requireNonNull(index);","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"ExtraShotLatte"},"content":"        eventIndex \u003d index;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"        addContact \u003d contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"        List\u003cContact\u003e contactList \u003d model.getContactList().getContactList();","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"        if (eventIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":54,"author":{"gitId":"ExtraShotLatte"},"content":"        Event toAdd \u003d lastShownList.get(eventIndex.getZeroBased());","lastModifiedDate":"2023-03-12"},{"lineNumber":55,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"ExtraShotLatte"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"ExtraShotLatte"},"content":"            Contact contactToAdd \u003d contactList.get(UniqueContactList.getNumberMap().get(addContact));","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"ExtraShotLatte"},"content":"            model.linkContact(toAdd, contactToAdd);","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"ExtraShotLatte"},"content":"        } catch (NullPointerException iobe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"            throw new CommandException(Messages.MESSAGE_CONTACT_NOT_FOUND);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"ExtraShotLatte"},"content":"        return new CommandResult(String.format(MESSAGE_LINK_CONTACT_SUCCESS, toAdd));","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"ExtraShotLatte"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"ExtraShotLatte"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"ExtraShotLatte"},"content":"        return other \u003d\u003d this","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"ExtraShotLatte"},"content":"                || (other instanceof LinkContactCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"ExtraShotLatte"},"content":"                \u0026\u0026 eventIndex.equals(((LinkContactCommand) other).eventIndex)","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"ExtraShotLatte"},"content":"                \u0026\u0026 addContact.equals(((LinkContactCommand) other).addContact));","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"ExtraShotLatte"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"ExtraShotLatte":73}},{"path":"src/main/java/seedu/address/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all events\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"engenhui1999":1,"-":23}},{"path":"src/main/java/seedu/address/logic/commands/MarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import java.util.List;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-14"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"            + \": Marks the event identified by the index number used in the displayed event list.\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_MARK_EVENT_SUCCESS \u003d \"Marked event: %1$s\";","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"    public MarkCommand(Index targetIndex) {","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"        Event eventToMark \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        Event markedEvent \u003d createMarkedEvent(eventToMark);","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"        model.markEvent(eventToMark, markedEvent);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"        return new CommandResult(String.format(MESSAGE_MARK_EVENT_SUCCESS, eventToMark));","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"engenhui1999"},"content":"     * Creates and returns a {@code Event} with the details of {@code eventToMark}","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"engenhui1999"},"content":"    private static Event createMarkedEvent(Event eventToMark) {","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"engenhui1999"},"content":"        assert eventToMark !\u003d null;","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"        Name updatedName \u003d eventToMark.getName();","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"        Rate updatedRate \u003d eventToMark.getRate();","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"engenhui1999"},"content":"        Address updatedAddress \u003d eventToMark.getAddress();","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"engenhui1999"},"content":"        Set\u003cTag\u003e updatedTags \u003d eventToMark.getTags();","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"engenhui1999"},"content":"        Timing updatedTiming \u003d eventToMark.getTiming();","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"engenhui1999"},"content":"        Contact updatedContact \u003d eventToMark.getContact();","lastModifiedDate":"2023-03-14"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"engenhui1999"},"content":"        Event updatedEvent \u003d new Event(updatedName, updatedRate, updatedAddress, updatedTiming, updatedTags);","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"engenhui1999"},"content":"        updatedEvent.mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"        updatedEvent.linkContact(updatedContact);","lastModifiedDate":"2023-03-14"},{"lineNumber":74,"author":{"gitId":"engenhui1999"},"content":"        return updatedEvent;","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"engenhui1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"engenhui1999"},"content":"                || (other instanceof MarkCommand // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 targetIndex.equals(((MarkCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"engenhui1999":83}},{"path":"src/main/java/seedu/address/logic/commands/NewContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * Creates a new contact in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"public class NewContactCommand extends Command {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    public static final String COMMAND_WORD \u003d \"newcontact\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the contact list. \"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"            + \"Parameters: \"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_PHONE + \"PHONE \\n\"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_NAME + \"Deborah Tan \"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"            + PREFIX_PHONE + \"91234567\";","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New contact added: %1$s\";","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"This contact already exists\";","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    private final Contact newContact;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"     * Creates an NewContactCommand to add the specified {@code Contact}","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    public NewContactCommand(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        newContact \u003d contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        if (model.hasContact(newContact)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"        model.addContact(newContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, newContact));","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof NewContactCommand // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 newContact.equals(((NewContactCommand) other).newContact));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":57}},{"path":"src/main/java/seedu/address/logic/commands/RateCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import java.util.List;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":" * Displays the rate of an event identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"public class RateCommand extends Command {","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    public static final String COMMAND_WORD \u003d \"rate\";","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"            + \": Displays the rate of the event identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Rate: %1$s\";","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    private final Index targetIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"    public RateCommand(Index targetIndex) {","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"        requireNonNull(model);","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"        List\u003cEvent\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"        Event event \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"        Rate rate \u003d model.getRate(event);","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, rate));","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"                || (other instanceof RateCommand // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"                \u0026\u0026 targetIndex.equals(((RateCommand) other).targetIndex)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"EksdeeeX":54}},{"path":"src/main/java/seedu/address/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_END;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_START;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-02-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_RATE, PREFIX_EMAIL,","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"                        PREFIX_ADDRESS, PREFIX_TIMING_START, PREFIX_TIMING_END, PREFIX_TAG);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_ADDRESS,","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"                PREFIX_RATE, PREFIX_TIMING_START, PREFIX_TIMING_END)","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"        Rate rate \u003d ParserUtil.parseRate(argMultimap.getValue(PREFIX_RATE).get());","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        Timing timing \u003d ParserUtil.parseTiming(argMultimap.getValue(PREFIX_TIMING_START).get(),","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"                argMultimap.getValue(PREFIX_TIMING_END).get());","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        Event person \u003d new Event(name, rate, address, timing, tagList);","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"glozxi":10,"engenhui1999":4,"-":51}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.LinkContactCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.logic.commands.RateCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"ExtraShotLatte"},"content":"        case LinkContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":68,"author":{"gitId":"ExtraShotLatte"},"content":"            return new LinkContactCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":69,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"ExtraShotLatte"},"content":"        case MarkCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-12"},{"lineNumber":74,"author":{"gitId":"ExtraShotLatte"},"content":"            return new MarkCommandParser().parse(arguments);","lastModifiedDate":"2023-03-12"},{"lineNumber":75,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        case NewContactCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"            return new NewContactCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"EksdeeeX"},"content":"        case RateCommand.COMMAND_WORD:","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"EksdeeeX"},"content":"            return new RateCommandParser().parse(arguments);","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ExtraShotLatte":7,"EksdeeeX":4,"bryansendeavour":4,"engenhui1999":3,"-":76}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    public static final Prefix PREFIX_RATE \u003d new Prefix(\"r/\");","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    public static final Prefix PREFIX_TIMING_START \u003d new Prefix(\"ds/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    public static final Prefix PREFIX_TIMING_END \u003d new Prefix(\"de/\");","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"glozxi":2,"engenhui1999":1,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-01-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_END;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_START;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-01-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_RATE,","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"                        PREFIX_ADDRESS, PREFIX_TIMING_START, PREFIX_TIMING_END, PREFIX_TAG);","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2018-08-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        if (argMultimap.getValue(PREFIX_RATE).isPresent()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"            editPersonDescriptor.setRate(ParserUtil.parseRate(argMultimap.getValue(PREFIX_RATE).get()));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        if (argMultimap.getValue(PREFIX_TIMING_START).isPresent()","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 argMultimap.getValue(PREFIX_TIMING_END).isPresent()) {","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"            editPersonDescriptor.setTiming(ParserUtil.parseTiming(argMultimap.getValue(PREFIX_TIMING_START).get(),","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"                    argMultimap.getValue(PREFIX_TIMING_END).get()));","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"glozxi":9,"engenhui1999":3,"-":74}},{"path":"src/main/java/seedu/address/logic/parser/LinkContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ExtraShotLatte"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"ExtraShotLatte"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-12"},{"lineNumber":4,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":5,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-12"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.LinkContactCommand;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"/**","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":" * Parses input arguments and creates a new LinkContactCommand object.","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":" */","lastModifiedDate":"2023-03-12"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"public class LinkContactCommandParser implements Parser\u003cLinkContactCommand\u003e {","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"     * Parses the given {@code String} of arguments in the context of the LinkContactCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"ExtraShotLatte"},"content":"     * and returns an LinkContactCommand object for execution.","lastModifiedDate":"2023-03-12"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-12"},{"lineNumber":18,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"    public LinkContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-12"},{"lineNumber":20,"author":{"gitId":"ExtraShotLatte"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"            String[] argarr \u003d args.trim().split(\" \");","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"            Index index \u003d ParserUtil.parseIndex(argarr[0]);","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"            String num \u003d argarr[1];","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"            return new LinkContactCommand(index, num);","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"                            LinkContactCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"ExtraShotLatte"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"ExtraShotLatte":31}},{"path":"src/main/java/seedu/address/logic/parser/MarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":" * Parses input arguments and creates a new MarkCommand object","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"public class MarkCommandParser implements Parser\u003cMarkCommand\u003e {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkCommand","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"     * and returns a MarkCommand object for execution.","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"    public MarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"        try {","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"            return new MarkCommand(index);","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE), pe);","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"engenhui1999":29}},{"path":"src/main/java/seedu/address/logic/parser/NewContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" * Parses input arguments and creates a new NewContactCommand object","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"public class NewContactCommandParser implements Parser\u003cNewContactCommand\u003e {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"     * Parses the given {@code String} of arguments in the context of the NewContactCommand","lastModifiedDate":"2023-03-12"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     * and returns an NewContactCommand object for execution.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    public NewContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, NewContactCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        ContactName name \u003d ParserUtil.parseContactName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        ContactPhone phone \u003d ParserUtil.parseContactPhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        Contact contact \u003d new Contact(name, phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        return new NewContactCommand(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"ExtraShotLatte":1,"bryansendeavour":44}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"     * Parses a {@code String name} into a {@code ContactName}","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    public static ContactName parseContactName(String name) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        if (!ContactName.isValidName(trimmedName)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"            throw new ParseException(ContactName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"        return new ContactName(trimmedName);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"     * Parses a {@code String phone} into a {@code ContactPhone}.","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    public static ContactPhone parseContactPhone(String phone) throws ParseException {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        if (!ContactPhone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"            throw new ParseException(ContactPhone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"        return new ContactPhone(trimmedPhone);","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"     * Parses a {@code String rate} into a {@code Rate}.","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"engenhui1999"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"engenhui1999"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"engenhui1999"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"engenhui1999"},"content":"    public static Rate parseRate(String rate) throws ParseException {","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"engenhui1999"},"content":"        String trimmedRate \u003d rate.trim();","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"engenhui1999"},"content":"        if (!Rate.isValidRate(trimmedRate)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"            throw new ParseException(Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"engenhui1999"},"content":"        return new Rate(trimmedRate);","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"glozxi"},"content":"     * Parses a {@code String timingStart} and a {@code String timingEnd} into a {@code Timing}.","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"glozxi"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"glozxi"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"glozxi"},"content":"     * @throws ParseException if the given {@code timingStart} or {@code timingEnd} is invalid.","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"glozxi"},"content":"    public static Timing parseTiming(String timingStart, String timingEnd) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":154,"author":{"gitId":"glozxi"},"content":"        requireNonNull(timingStart);","lastModifiedDate":"2023-03-09"},{"lineNumber":155,"author":{"gitId":"glozxi"},"content":"        requireNonNull(timingEnd);","lastModifiedDate":"2023-03-09"},{"lineNumber":156,"author":{"gitId":"glozxi"},"content":"        String trimmedTimingStart \u003d timingStart.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"glozxi"},"content":"        String trimmedTimingEnd \u003d timingEnd.trim();","lastModifiedDate":"2023-03-09"},{"lineNumber":158,"author":{"gitId":"glozxi"},"content":"        if (!Timing.isValidTiming(trimmedTimingStart, trimmedTimingEnd)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"glozxi"},"content":"            throw new ParseException(Timing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":160,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"glozxi"},"content":"        return new Timing(trimmedTimingStart, trimmedTimingEnd);","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":163,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":180,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"glozxi":18,"bryansendeavour":32,"engenhui1999":16,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/RateCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.logic.commands.RateCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":" * Parses input arguments and creates a new RateCommand object","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"public class RateCommandParser implements Parser\u003cRateCommand\u003e {","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"     * Parses the given {@code String} of arguments in the context of the RateCommand","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"     * and returns a RateCommand object for execution.","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"    public RateCommand parse(String args) throws ParseException {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"            return new RateCommand(index);","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"        } catch (ParseException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"            throw new ParseException(","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE), e);","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"EksdeeeX":29}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"    public void setPersons(List\u003cEvent\u003e persons) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"    public boolean hasPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":74,"author":{"gitId":"engenhui1999"},"content":"    public void addPerson(Event p) {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"    public void setPerson(Event target, Event editedPerson) {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"engenhui1999"},"content":"    public void removePerson(Event key) {","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"engenhui1999"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"engenhui1999"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"engenhui1999"},"content":"    public void markEvent(Event target, Event markedEvent) {","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"engenhui1999"},"content":"        persons.mark(target, markedEvent);","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"ExtraShotLatte"},"content":"    public void linkContact(Event event, Contact contact) {","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"ExtraShotLatte"},"content":"        event.linkContact(contact);","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"engenhui1999"},"content":"        return persons.asUnmodifiableObservableList().size() + \" events\";","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"engenhui1999"},"content":"    public ObservableList\u003cEvent\u003e getPersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ExtraShotLatte":5,"engenhui1999":16,"-":112}},{"path":"src/main/java/seedu/address/model/ContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.UniqueContactList;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":" * Wraps all data at the contact list level","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":" * Duplicates are not allowed (by .isSameContact comparison)","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"public class ContactList implements ReadOnlyContactList {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public final UniqueContactList contacts;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     *   among constructors.","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        contacts \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"    public ContactList() {","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"     * Creates an ContactList using the Contacts in the {@code toBeCopied}","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public ContactList(ReadOnlyContactList toBeCopied) {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        this();","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"    //// list overwrite operations","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"     * Replaces the contents of the contact list with {@code contacts}.","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"     * {@code contacts} must not contain duplicate contactss.","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        this.contacts.setContacts(contacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"     * Resets the existing data of this {@code ContactList} with {@code newData}.","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    public void resetData(ReadOnlyContactList newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(newData);","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"        setContacts(newData.getContactList());","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    //// contact-level operations","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if a contact with the same identity as {@code contact} exists in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        return contacts.contains(contact);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"     * Adds a contact to the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"     * The contact must not already exist in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"    public void addContact(Contact p) {","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"        contacts.add(p);","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"     * Replaces the given contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"     * {@code target} must exist in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"     * The contact identity of {@code editedContact} must not be the same as another existing","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"     * contact in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(editedContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        contacts.setContact(target, editedContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"     * Removes {@code key} from this {@code ContactList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"     * {@code key} must exist in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"    public void removeContact(Contact key) {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        contacts.remove(key);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    //// util methods","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        return contacts.asUnmodifiableObservableList().size() + \" contacts\";","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"        // TODO: refine later","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"    public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"        return contacts.asUnmodifiableObservableList();","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof ContactList // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 contacts.equals(((ContactList) other).contacts));","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"        return contacts.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"ExtraShotLatte":5,"bryansendeavour":122}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"    Predicate\u003cEvent\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    void setContactListFilePath(Path contactListFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"    /** Returns the ContactList */","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"    ReadOnlyContactList getContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if a contact with the same identity as {@code contact} exists in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    boolean hasContact(Contact contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"    boolean hasPerson(Event person);","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"    void deletePerson(Event target);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"     * Marks the given event.","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"     * The event must exist in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"engenhui1999"},"content":"    void markEvent(Event target, Event markedEvent);","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"     * Adds the given contact.","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"     * {@code contact} must not already exist in the contact list.","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"    void addContact(Contact contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"engenhui1999"},"content":"    void addPerson(Event person);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"EksdeeeX"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"EksdeeeX"},"content":"     * Retrieves the rate of an event.","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"EksdeeeX"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"EksdeeeX"},"content":"    Rate getRate(Event event);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":109,"author":{"gitId":"engenhui1999"},"content":"    void setPerson(Event target, Event editedPerson);","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"    ObservableList\u003cEvent\u003e getFilteredPersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":119,"author":{"gitId":"engenhui1999"},"content":"    void updateFilteredPersonList(Predicate\u003cEvent\u003e predicate);","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"    void updateFilteredContactList(Predicate\u003cContact\u003e contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"ExtraShotLatte"},"content":"    void linkContact(Event event, Contact contact);","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"EksdeeeX":5,"ExtraShotLatte":2,"bryansendeavour":21,"engenhui1999":14,"-":82}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    private final ContactList contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    private final FilteredList\u003cEvent\u003e filteredPersons;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    private final FilteredList\u003cContact\u003e filteredContacts;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyContactList contactList, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        requireAllNonNull(addressBook, contactList, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"                + \" with contact list: \" + contactList","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"                + \" and user prefs \" + userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        this.contactList \u003d new ContactList(contactList);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        filteredContacts \u003d new FilteredList\u003c\u003e(this.contactList.getContactList());","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        this(new AddressBook(), new ContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"        return userPrefs.getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath(Path contactListFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contactListFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        userPrefs.setContactListFilePath(contactListFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"engenhui1999"},"content":"    public boolean hasPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":117,"author":{"gitId":"engenhui1999"},"content":"    public void deletePerson(Event target) {","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"engenhui1999"},"content":"    public void markEvent(Event target, Event markedEvent) {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(target);","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"engenhui1999"},"content":"        addressBook.markEvent(target, markedEvent);","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"engenhui1999"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-11"},{"lineNumber":126,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":129,"author":{"gitId":"engenhui1999"},"content":"    public void addPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":135,"author":{"gitId":"engenhui1999"},"content":"    public void setPerson(Event target, Event editedPerson) {","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":148,"author":{"gitId":"engenhui1999"},"content":"    public ObservableList\u003cEvent\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":153,"author":{"gitId":"engenhui1999"},"content":"    public void updateFilteredPersonList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":158,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"    public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"        filteredContacts.setPredicate(predicate);","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"bryansendeavour"},"content":"    public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"bryansendeavour"},"content":"        return contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"bryansendeavour"},"content":"    public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"bryansendeavour"},"content":"        return contactList.hasContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"bryansendeavour"},"content":"    public void addContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"bryansendeavour"},"content":"        contactList.addContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"ExtraShotLatte"},"content":"    @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":181,"author":{"gitId":"ExtraShotLatte"},"content":"    public void linkContact(Event event, Contact contact) {","lastModifiedDate":"2023-03-12"},{"lineNumber":182,"author":{"gitId":"ExtraShotLatte"},"content":"        addressBook.linkContact(event, contact);","lastModifiedDate":"2023-03-12"},{"lineNumber":183,"author":{"gitId":"ExtraShotLatte"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2023-03-12"},{"lineNumber":184,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"EksdeeeX"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"EksdeeeX"},"content":"    public Rate getRate(Event event) {","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"EksdeeeX"},"content":"        return event.getRate();","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":195,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":206,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 contactList.equals(other.contactList)","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":208,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":211,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"EksdeeeX":5,"ExtraShotLatte":7,"bryansendeavour":46,"engenhui1999":14,"-":139}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"    ObservableList\u003cEvent\u003e getPersonList();","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":2,"-":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * Unmodifiable view of a contact list","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"public interface ReadOnlyContactList {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"     * Returns an unmodifiable view of the contact list.","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    ObservableList\u003cContact\u003e getContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":15}},{"path":"src/main/java/seedu/address/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"bryansendeavour":2,"-":16}},{"path":"src/main/java/seedu/address/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private Path contactListFilePath \u003d Paths.get(\"data\", \"contactlist.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        setContactListFilePath(newUserPrefs.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        return contactListFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath(Path contactListFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contactListFilePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"        this.contactListFilePath \u003d contactListFilePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryansendeavour":11,"-":87}},{"path":"src/main/java/seedu/address/model/contact/Contact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * Represents a contact.","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class Contact {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"    private ContactName name;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"    private ContactPhone phone;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public Contact(ContactName name, ContactPhone phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        requireAllNonNull(name, phone);","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"    public Contact() {};","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public ContactName getName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        return name;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    public ContactPhone getPhone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        return phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public boolean isSameContact(Contact otherContact) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"        if (otherContact \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"ExtraShotLatte"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        if (otherContact \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"        if (this.name \u003d\u003d otherContact.name) {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"        if (otherContact.getName().equals(this.getName())) {","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"ExtraShotLatte"},"content":"        return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":57,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":58,"author":{"gitId":"ExtraShotLatte"},"content":"    public boolean isNull() {","lastModifiedDate":"2023-03-12"},{"lineNumber":59,"author":{"gitId":"ExtraShotLatte"},"content":"        return this.name \u003d\u003d null;","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"ExtraShotLatte"},"content":"        if (other \u003d\u003d null) {","lastModifiedDate":"2023-03-12"},{"lineNumber":70,"author":{"gitId":"ExtraShotLatte"},"content":"            return false;","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"        if (!(other instanceof Contact)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"        Contact otherContact \u003d (Contact) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"ExtraShotLatte"},"content":"        if (this.name \u003d\u003d otherContact.name \u0026\u0026 this.phone \u003d\u003d otherContact.phone) {","lastModifiedDate":"2023-03-12"},{"lineNumber":83,"author":{"gitId":"ExtraShotLatte"},"content":"            return true;","lastModifiedDate":"2023-03-12"},{"lineNumber":84,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":85,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"        return otherContact.getName().equals(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 otherContact.getPhone().equals(getPhone());","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"        return Objects.hash(name, phone);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"                .append(getPhone());","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"ExtraShotLatte"},"content":"     * Formats the string needed to save in Json file","lastModifiedDate":"2023-03-12"},{"lineNumber":108,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":109,"author":{"gitId":"ExtraShotLatte"},"content":"    public String toCardString() {","lastModifiedDate":"2023-03-12"},{"lineNumber":110,"author":{"gitId":"ExtraShotLatte"},"content":"        try {","lastModifiedDate":"2023-03-12"},{"lineNumber":111,"author":{"gitId":"ExtraShotLatte"},"content":"            return name.fullName + \" HP:\" + phone.value;","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"ExtraShotLatte"},"content":"        } catch (NullPointerException npe) {","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"ExtraShotLatte"},"content":"            return \" \";","lastModifiedDate":"2023-03-12"},{"lineNumber":114,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":115,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"ExtraShotLatte":41,"bryansendeavour":76}},{"path":"src/main/java/seedu/address/model/contact/ContactName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * Represents a Contact\u0027s name in the contact book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class ContactName {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    /*","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    public final String fullName;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"     * @param name A valid name.","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    public ContactName(String name) {","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(name);","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        fullName \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        return fullName;","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof ContactName // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 fullName.equals(((ContactName) other).fullName)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        return fullName.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":59}},{"path":"src/main/java/seedu/address/model/contact/ContactPhone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * Represents a Contact\u0027s phone number in the contact book.","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class ContactPhone {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"            \"Phone numbers should only contain numbers, and it should be 3 digits long\";","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    public final String value;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    public ContactPhone(String phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(phone);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        value \u003d phone;","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        return value;","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof ContactPhone // instanceof handles nulls","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"                \u0026\u0026 value.equals(((ContactPhone) other).value)); // state check","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        return value.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":53}},{"path":"src/main/java/seedu/address/model/contact/UniqueContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" * A list of contacts that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":" * A contact is considered unique by comparing using {@code Person#isSameContact(Contact)}. As such, adding and","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":" * updating of contacts uses Contact#isSameContact(Contact) for equality to ensure that the contact being added","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":" * or updated is unique in terms of identity in the UniqueContactList.","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":" * However, the removal of a contact uses Contact#equals(Object) to ensure that the contact","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":" * with exactly the same fields will be removed.","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":" *","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":" * @see Contact#isSameContact(Contact)","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"public class UniqueContactList implements Iterable\u003cContact\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"    private static HashMap\u003cString, Integer\u003e numberMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"    private static int count \u003d 0;","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    private final ObservableList\u003cContact\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    private final ObservableList\u003cContact\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if the list contains an equivalent Contact as the given argument.","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public boolean contains(Contact toCheck) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        return internalList.stream().anyMatch(toCheck::isSameContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"    public static HashMap\u003cString, Integer\u003e getNumberMap() {","lastModifiedDate":"2023-03-12"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"        return numberMap;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"    public static int getCount() {","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"        return count;","lastModifiedDate":"2023-03-12"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"     * Adds a Contact to the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"     * The Contact must not already exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    public void add(Contact toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"        numberMap.put(toAdd.getPhone().value, count);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"ExtraShotLatte"},"content":"        count++;","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"     * Replaces the Contact {@code target} in the list with {@code editedContact}.","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"     * The Contact identity of {@code editedContact} must not be the same as another existing Contact in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact(Contact target, Contact editedContact) {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        requireAllNonNull(target, editedContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"        if (!target.isSameContact(editedContact) \u0026\u0026 contains(editedContact)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"        internalList.set(index, editedContact);","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"     * Removes the equivalent Contact from the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"     * The Contact must exist in the list.","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"    public void remove(Contact toRemove) {","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"            throw new ContactNotFoundException();","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts(seedu.address.model.contact.UniqueContactList replacement) {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"     * Replaces the contents of this list with {@code Contacts}.","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"     * {@code Contacts} must not contain duplicate Contacts.","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts(List\u003cContact\u003e contacts) {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"        requireAllNonNull(contacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        if (!contactsAreUnique(contacts)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"            throw new DuplicateContactException();","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"        internalList.setAll(contacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"    public ObservableList\u003cContact\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"    public Iterator\u003cContact\u003e iterator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"        return internalList.iterator();","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"                || (other instanceof UniqueContactList // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"                    \u0026\u0026 internalList.equals(((UniqueContactList) other).internalList));","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"        return internalList.hashCode();","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"     * Returns true if {@code Contacts} contains only unique Contacts.","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"    private boolean contactsAreUnique(List\u003cContact\u003e contacts) {","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"        for (int i \u003d 0; i \u003c contacts.size() - 1; i++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"            for (int j \u003d i + 1; j \u003c contacts.size(); j++) {","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"                if (contacts.get(i).isSameContact(contacts.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"                    return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"                }","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"        return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"ExtraShotLatte":13,"bryansendeavour":137}},{"path":"src/main/java/seedu/address/model/contact/exceptions/ContactNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":" * Signals that the operation is unable to find the specified contact.","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"public class ContactNotFoundException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":7}},{"path":"src/main/java/seedu/address/model/contact/exceptions/DuplicateContactException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact.exceptions;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":" * Signals that the operation will result in duplicate Contacts (Contacts are considered duplicates","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":" * if they have the same identity).","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"public class DuplicateContactException extends RuntimeException {","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"    public DuplicateContactException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"        super(\"Operation will result in duplicate persons\");","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":12}},{"path":"src/main/java/seedu/address/model/person/Event.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import java.util.HashSet;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import java.util.Set;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":" * Represents a Event in the address book.","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"public class Event {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"    // Identity fields","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"    private final Name name;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"    // Data fields","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    private final Rate rate;","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"    private final Address address;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    private final Timing timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    private Mark mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"    private Contact contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    public Event(Name name, Rate rate, Address address, Timing timing, Set\u003cTag\u003e tags) {","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"        requireAllNonNull(name, rate, address, tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"        this.address \u003d address;","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        this.timing \u003d timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"        this.mark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"        this.contact \u003d new Contact();","lastModifiedDate":"2023-03-12"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"    public Name getName() {","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"        return name;","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"    public Rate getRate() {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"        return rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"    public Address getAddress() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"        return address;","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"    public Timing getTiming() {","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        return timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"    public Mark getMark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"        return mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"ExtraShotLatte"},"content":"    public Contact getContact() {","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"ExtraShotLatte"},"content":"        return contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":66,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":67,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"engenhui1999"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"engenhui1999"},"content":"     * if modification is attempted.","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"engenhui1999"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"engenhui1999"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"engenhui1999"},"content":"     * Marks event as done.","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"engenhui1999"},"content":"    public void mark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"        mark.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-13"},{"lineNumber":83,"author":{"gitId":"ExtraShotLatte"},"content":"     * Link a contact to","lastModifiedDate":"2023-03-13"},{"lineNumber":84,"author":{"gitId":"ExtraShotLatte"},"content":"     * @param contact","lastModifiedDate":"2023-03-13"},{"lineNumber":85,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-13"},{"lineNumber":86,"author":{"gitId":"ExtraShotLatte"},"content":"    public void linkContact(Contact contact) {","lastModifiedDate":"2023-03-12"},{"lineNumber":87,"author":{"gitId":"ExtraShotLatte"},"content":"        requireAllNonNull(contact);","lastModifiedDate":"2023-03-13"},{"lineNumber":88,"author":{"gitId":"ExtraShotLatte"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":90,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":91,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"ExtraShotLatte"},"content":"     * Returns true if both events have the same name and the same timing.","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"engenhui1999"},"content":"     * This defines a weaker notion of equality between two events.","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"engenhui1999"},"content":"    public boolean isSameEvent(Event otherEvent) {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"engenhui1999"},"content":"        if (otherEvent \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"engenhui1999"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"engenhui1999"},"content":"        return otherEvent !\u003d null","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"ExtraShotLatte"},"content":"                \u0026\u0026 otherEvent.getName().equals(getName())","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"ExtraShotLatte"},"content":"                \u0026\u0026 otherEvent.getTiming().equals(getTiming());","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"engenhui1999"},"content":"     * Returns true if both events have the same identity and data fields.","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"engenhui1999"},"content":"     * This defines a stronger notion of equality between two events.","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"engenhui1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"engenhui1999"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"            return true;","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"engenhui1999"},"content":"        if (!(other instanceof Event)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"engenhui1999"},"content":"        Event otherEvent \u003d (Event) other;","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"engenhui1999"},"content":"        return otherEvent.getName().equals(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 otherEvent.getRate().equals(getRate())","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 otherEvent.getAddress().equals(getAddress())","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 otherEvent.getTiming().equals(getTiming())","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 otherEvent.getMark().equals(getMark())","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"ExtraShotLatte"},"content":"                \u0026\u0026 otherEvent.getContact().equals(getContact())","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 otherEvent.getTags().equals(getTags());","lastModifiedDate":"2023-03-11"},{"lineNumber":127,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"engenhui1999"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"engenhui1999"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"ExtraShotLatte"},"content":"        return Objects.hash(name, rate, address, timing, mark, contact, tags);","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"engenhui1999"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"engenhui1999"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"engenhui1999"},"content":"        builder.append(getName())","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"engenhui1999"},"content":"                .append(\"; Rate: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"engenhui1999"},"content":"                .append(getRate())","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"engenhui1999"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"engenhui1999"},"content":"                .append(getAddress())","lastModifiedDate":"2023-03-11"},{"lineNumber":143,"author":{"gitId":"glozxi"},"content":"                .append(\"; Timing: \")","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"engenhui1999"},"content":"                .append(getTiming())","lastModifiedDate":"2023-03-11"},{"lineNumber":145,"author":{"gitId":"engenhui1999"},"content":"                .append(\"; Mark: \")","lastModifiedDate":"2023-03-11"},{"lineNumber":146,"author":{"gitId":"engenhui1999"},"content":"                .append(getMark());","lastModifiedDate":"2023-03-11"},{"lineNumber":147,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"ExtraShotLatte"},"content":"        if (!contact.isNull()) {","lastModifiedDate":"2023-03-12"},{"lineNumber":149,"author":{"gitId":"ExtraShotLatte"},"content":"            builder.append(\"; Contact: \")","lastModifiedDate":"2023-03-12"},{"lineNumber":150,"author":{"gitId":"ExtraShotLatte"},"content":"                    .append(getContact());","lastModifiedDate":"2023-03-12"},{"lineNumber":151,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":153,"author":{"gitId":"engenhui1999"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"engenhui1999"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"engenhui1999"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"engenhui1999"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"engenhui1999"},"content":"        return builder.toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"ExtraShotLatte":27,"glozxi":8,"engenhui1999":126}},{"path":"src/main/java/seedu/address/model/person/Mark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":" * Represents the completeness of an Event in Paidlancers.","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"public class Mark {","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"    private boolean isDone;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"     * Constructs a {@code Mark}.","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"    public Mark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"     * Returns true if an event is done.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"        return isDone;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"     * Marks the event as done.","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    public void setDone() {","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"        isDone \u003d true;","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"    public String toString() {","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"]\";","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"                || (other instanceof Mark // instanceof handles nulls","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 isDone \u003d\u003d ((Mark) other).isDone); // state check","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"        return Double.hashCode(isDone ? 1 : 0);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"engenhui1999":46}},{"path":"src/main/java/seedu/address/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cEvent\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"    public boolean test(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"                || (other instanceof NameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                \u0026\u0026 keywords.equals(((NameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"engenhui1999":2,"-":29}},{"path":"src/main/java/seedu/address/model/person/Rate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":" * Represents an Event\u0027s rate in the address book.","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidRate(String)}","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"public class Rate {","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"            \"Rate should be a positive value, it should be more than 0.\";","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    public final double value;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"     * Constructs a {@code Rate}.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"     *","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"     * @param value A valid rate.","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    public Rate(String value) {","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(value);","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"        checkArgument(isValidRate(value.toString()), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"        this.value \u003d Double.parseDouble(value);","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"     * Returns true if a given string is a valid rate.","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    public static boolean isValidRate(String test) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"        try {","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"            return Double.parseDouble(test) \u003e 0; //test.matches(\"[-+]?[0-9]*\\\\.?[0-9]+\")","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"            return false;","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"    public String toString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"        return String.format(\"%.2f\", value);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"                || (other instanceof Rate // instanceof handles nulls","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"                \u0026\u0026 value \u003d\u003d ((Rate) other).value); // state check","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"    @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"        return Double.hashCode(value);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"engenhui1999":56}},{"path":"src/main/java/seedu/address/model/person/Timing.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"glozxi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"import java.time.format.ResolverStyle;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"import java.util.Objects;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":" * Represents an Event\u0027s timing in the event book.","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"public class Timing {","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"            \"Timings should be of the format dd-MM-uuuu hh:mm\";","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"    public final String startTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"    public final String endTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"     * Constructs a {@code Timing}.","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"     *","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"     * @param startTime A valid starting time.","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"     * @param endTime A valid ending time.","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public Timing(String startTime, String endTime) {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"        checkArgument(isValidTiming(startTime, endTime), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"     * Returns true if given strings give a valid timing.","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"    public static boolean isValidTiming(String testStartTime, String testEndTime) {","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        return isValidTime(testStartTime) \u0026\u0026 isValidTime(testEndTime);","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"    private static boolean isValidTime(String test) {","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"        if (test \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        try {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"            LocalDateTime.parse(test, DateTimeFormatter","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"                    .ofPattern(\"dd-MM-uuuu HH:mm\")","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"                    .withResolverStyle(ResolverStyle.STRICT));","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"            return true;","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"            return false;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"    public String toString() {","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        return startTime + \" - \" + endTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"                || (other instanceof Timing // instanceof handles nulls","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 startTime.equals(((Timing) other).startTime)","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"                \u0026\u0026 endTime.equals(((Timing) other).endTime)); // state check","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"    @Override","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"    public int hashCode() {","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"        return Objects.hash(startTime, endTime);","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"glozxi":74}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":" * @see Event#isSameEvent(Event)","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"public class UniquePersonList implements Iterable\u003cEvent\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    private final ObservableList\u003cEvent\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    private final ObservableList\u003cEvent\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"    public boolean contains(Event toCheck) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        return internalList.stream().anyMatch(toCheck::isSameEvent);","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"    public void add(Event toAdd) {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"    public void setPerson(Event target, Event editedPerson) {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"        if (!target.isSameEvent(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"engenhui1999"},"content":"    public void remove(Event toRemove) {","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"     * Marks the equivalent event from the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"     * The event must exist in the list.","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"    public void mark(Event toMark, Event markedEvent) {","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"engenhui1999"},"content":"        requireNonNull(toMark);","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"engenhui1999"},"content":"        setPerson(toMark, markedEvent);","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"engenhui1999"},"content":"    public void setPersons(List\u003cEvent\u003e persons) {","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"    public ObservableList\u003cEvent\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":117,"author":{"gitId":"engenhui1999"},"content":"    public Iterator\u003cEvent\u003e iterator() {","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"engenhui1999"},"content":"    private boolean personsAreUnique(List\u003cEvent\u003e persons) {","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"engenhui1999"},"content":"                if (persons.get(i).isSameEvent(persons.get(j))) {","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"engenhui1999":24,"-":122}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public static Contact[] getSampleContacts() {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        return new Contact [] {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"            new Contact(new ContactName(\"Deborah Tan\"), new ContactPhone(\"91234567\")),","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"            new Contact(new ContactName(\"Mandy\"), new ContactPhone(\"98765432\"))","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        };","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    public static Event[] getSamplePersons() {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"        return new Event[] {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"            new Event(new Name(\"Event 1\"), new Rate(\"1\"),","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Geylang Street 29, #06-40\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"                new Timing(\"02-02-2023 11:00\", \"02-02-2023 11:30\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                getTagSet(\"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"            new Event(new Name(\"Event 2\"), new Rate(\"2\"),","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"                new Timing(\"02-04-2023 06:00\", \"02-04-2023 11:30\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"            new Event(new Name(\"Event 3\"), new Rate(\"3\"),","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"                new Timing(\"02-02-2023 11:00\", \"02-02-2023 11:30\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                getTagSet(\"neighbours\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"            new Event(new Name(\"Event 4\"), new Rate(\"4\"),","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new Address(\"Blk 436 Serangoon Gardens Street 26, #16-43\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"                new Timing(\"02-02-2023 11:00\", \"02-02-2023 11:30\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                getTagSet(\"family\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"            new Event(new Name(\"Event 5\"), new Rate(\"5\"),","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                new Address(\"Blk 47 Tampines Street 20, #17-35\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"                new Timing(\"02-02-2023 11:00\", \"02-02-2023 11:30\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                getTagSet(\"classmates\")),","lastModifiedDate":"2017-03-14"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"            new Event(new Name(\"Event 6\"), new Rate(\"6\"),","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                new Address(\"Blk 45 Aljunied Street 85, #11-31\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"                new Timing(\"02-02-2023 11:00\", \"02-02-2023 11:30\"),","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                getTagSet(\"colleagues\"))","lastModifiedDate":"2017-03-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":63,"author":{"gitId":"engenhui1999"},"content":"        for (Event samplePerson : getSamplePersons()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"    public static ReadOnlyContactList getSampleContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        ContactList sampleCl \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        for (Contact sampleContact : getSampleContacts()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"            sampleCl.addContact(sampleContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"        return sampleCl;","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"glozxi":7,"bryansendeavour":20,"engenhui1999":11,"-":48}},{"path":"src/main/java/seedu/address/storage/ContactListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" * Represents a storage for {@link seedu.address.model.ContactList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"public interface ContactListStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"     * Returns ContactList data as a {@link seedu.address.model.ReadOnlyContactList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"     * @see #getContactListFilePath()","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    Optional\u003cReadOnlyContactList\u003e readContactList(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"     * Saves the given {@link ReadOnlyContactList} to the storage.","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"     * @param contactList cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    void saveContactList(ReadOnlyContactList contactList) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"     * @see #saveContactList(ReadOnlyContactList)","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    void saveContactList(ReadOnlyContactList addressBook, Path filePath) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":44}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedContact.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":" * Jackson-friendly version of {@link Contact}.","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"public class JsonAdaptedContact {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MISSING_CFIELD_MESSAGE_FORMAT \u003d \"Contact\u0027s %s field is missing!\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private final String name;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    private final String phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     * Contructs a {@code JsonAdaptedContact} with the give contact details.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    public JsonAdaptedContact(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone) {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        this.name \u003d name;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"     * Converts a given {@code Contact} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public JsonAdaptedContact(Contact source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"     * Converts this Jackson-friendly adopted person object into the model\u0027s {@code Contact} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted contact.","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    public Contact toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"            throw new IllegalValueException(String.format(MISSING_CFIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"                    ContactName.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        if (!ContactName.isValidName(name)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"            throw new IllegalValueException(ContactName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        final ContactName modelName \u003d new ContactName(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"            throw new IllegalValueException(String.format(MISSING_CFIELD_MESSAGE_FORMAT,","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"                    ContactPhone.class.getSimpleName()));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        if (!ContactPhone.isValidPhone(phone)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"            throw new IllegalValueException(ContactPhone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        final ContactPhone modelPhone \u003d new ContactPhone(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        return new Contact(modelName, modelPhone);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":64}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-12"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":" * Jackson-friendly version of {@link Event}.","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"    private final String rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"    private final String startTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    private final String endTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"    private final String mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"    private final String contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"rate\") String rate,","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"            @JsonProperty(\"address\") String address,","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"            @JsonProperty(\"startTiming\") String startTime,","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"            @JsonProperty(\"endTiming\") String endTiming,","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"            @JsonProperty(\"mark\") String mark, @JsonProperty(\"contact\") String contact,","lastModifiedDate":"2023-03-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"        this.rate \u003d rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        this.endTime \u003d endTiming;","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"        this.mark \u003d mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"ExtraShotLatte"},"content":"        this.contact \u003d contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"    public JsonAdaptedPerson(Event source) {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"engenhui1999"},"content":"        rate \u003d Double.toString(source.getRate().value);","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"        startTime \u003d source.getTiming().startTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"        endTime \u003d source.getTiming().endTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"        mark \u003d source.getMark().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"ExtraShotLatte"},"content":"        contact \u003d source.getContact().toCardString();","lastModifiedDate":"2023-03-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"    public Event toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"engenhui1999"},"content":"        if (rate \u003d\u003d null) {","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"engenhui1999"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Rate.class.getSimpleName()));","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"engenhui1999"},"content":"        if (!Rate.isValidRate(rate)) {","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"engenhui1999"},"content":"            throw new IllegalValueException(Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"engenhui1999"},"content":"        final Rate modelRate \u003d new Rate(rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"        if (startTime \u003d\u003d null || endTime \u003d\u003d null) {","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Timing.class.getSimpleName()));","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"        if (!Timing.isValidTiming(startTime, endTime)) {","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"            throw new IllegalValueException(Timing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"        }","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"        final Timing modelTiming \u003d new Timing(startTime, endTime);","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"engenhui1999"},"content":"        Event event \u003d new Event(modelName, modelRate, modelAddress, modelTiming, modelTags);","lastModifiedDate":"2023-03-11"},{"lineNumber":122,"author":{"gitId":"engenhui1999"},"content":"        if (mark.equals(\"[X]\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":123,"author":{"gitId":"engenhui1999"},"content":"            event.mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":124,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":125,"author":{"gitId":"ExtraShotLatte"},"content":"        if (!contact.equals(\" \")) {","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"ExtraShotLatte"},"content":"            String[] args \u003d contact.split(\"HP:\");","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"ExtraShotLatte"},"content":"            Contact contact \u003d new Contact(new ContactName(args[0].trim()), new ContactPhone(args[1].trim()));","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"ExtraShotLatte"},"content":"            event.linkContact(contact);","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"engenhui1999"},"content":"        return event;","lastModifiedDate":"2023-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ExtraShotLatte":12,"glozxi":17,"engenhui1999":23,"-":81}},{"path":"src/main/java/seedu/address/storage/JsonContactListStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Optional;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.util.FileUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":" * A class to access ContactList data stored as a json file on the hard disk.","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"public class JsonContactListStorage implements ContactListStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonContactListStorage.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    private Path filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public JsonContactListStorage(Path filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        return filePath;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        return readContactList(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"     * Similar to {@link #readContactList()}.","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList(Path filePath) throws DataConversionException {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        Optional\u003cJsonSerializableContactList\u003e jsonContactList \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"                filePath, JsonSerializableContactList.class);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        if (!jsonContactList.isPresent()) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"            return Optional.empty();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"            return Optional.of(jsonContactList.get().toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList(ReadOnlyContactList contactList) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        saveContactList(contactList, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"     * Similar to {@link #saveContactList(ReadOnlyContactList)}.","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList(ReadOnlyContactList contactList, Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(contactList);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableContactList(contactList), filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":79}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"            Event person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"engenhui1999":2,"-":58}},{"path":"src/main/java/seedu/address/storage/JsonSerializableContactList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":" * An Immutable ContactList that is serializable to JSON format.","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"@JsonRootName(value \u003d \"contactlist\")","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"public class JsonSerializableContactList {","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    public static final String MESSAGE_DUPLICATE_CONTACT \u003d \"Contact list contains duplicate contact(s).\";","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    private final List\u003cJsonAdaptedContact\u003e contacts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"     * Constructs a {@code JsonSerializaleContactList} with the given contacts.","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    @JsonCreator","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    public JsonSerializableContactList(@JsonProperty(\"contacts\") List\u003cJsonAdaptedContact\u003e contacts) {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        this.contacts.addAll(contacts);","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"     * Converts a given {@code ReadOnlyContactList} into this class for Jackson use.","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableContactList}.","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    public JsonSerializableContactList(ReadOnlyContactList source) {","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        contacts.addAll(source.getContactList().stream().map(JsonAdaptedContact::new).collect(Collectors.toList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"     * Converts this contact list into the model\u0027s {@code ContactList} object.","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"     *","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public ContactList toModelType() throws IllegalValueException {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        ContactList contactList \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        for (JsonAdaptedContact jsonAdaptedContact : contacts) {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"            Contact contact \u003d jsonAdaptedContact.toModelType();","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"            if (contactList.hasContact(contact)) {","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_CONTACT);","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"            }","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"            contactList.addContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        return contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":59}},{"path":"src/main/java/seedu/address/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"public interface Storage extends AddressBookStorage, ContactListStorage, UserPrefsStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    Path getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException, IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    void saveContactList(ReadOnlyContactList contactList) throws IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"bryansendeavour":11,"-":31}},{"path":"src/main/java/seedu/address/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    private ContactListStorage contactListStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    public StorageManager(AddressBookStorage addressBookStorage,","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"                          ContactListStorage contactListStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        this.contactListStorage \u003d contactListStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d ContactList methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"        return contactListStorage.getContactListFilePath();","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList() throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"        return readContactList(contactListStorage.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"    public Optional\u003cReadOnlyContactList\u003e readContactList(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"        return contactListStorage.readContactList(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList(ReadOnlyContactList contactList) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        saveContactList(contactList, contactListStorage.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"    @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList(ReadOnlyContactList contactList, Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"        contactListStorage.saveContactList(contactList, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryansendeavour":33,"-":77}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2223s2-cs2103t-t11-3.github.io/tp/\";","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     *     \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *             if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *             if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *             if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *         \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *             if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *         \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"EksdeeeX":1,"-":101}},{"path":"src/main/java/seedu/address/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    public final Event person;","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"    private Label rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label address;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    private Label timing;","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    @FXML","lastModifiedDate":"2023-03-10"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"    private Label mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"    @FXML","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"    private Label contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2023-03-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"    public PersonCard(Event person, int displayedIndex) {","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"        rate.setText(Double.toString(person.getRate().value));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        timing.setText(person.getTiming().startTime + \" - \" + person.getTiming().endTime);","lastModifiedDate":"2023-03-10"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"        mark.setText(person.getMark().toString());","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"        contact.setText(person.getContact().toCardString());","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"ExtraShotLatte":2,"glozxi":3,"engenhui1999":8,"-":70}},{"path":"src/main/java/seedu/address/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    private ListView\u003cEvent\u003e personListView;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    public PersonListPanel(ObservableList\u003cEvent\u003e personList) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"    class PersonListViewCell extends ListCell\u003cEvent\u003e {","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"        protected void updateItem(Event person, boolean empty) {","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"engenhui1999":5,"-":44}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"      \u003cLabel fx:id\u003d\"rate\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$rate\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"      \u003cLabel fx:id\u003d\"timing\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$timing\" /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"      \u003cLabel fx:id\u003d\"contact\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$contact\" /\u003e","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"      \u003cLabel fx:id\u003d\"mark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$mark\" /\u003e","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"      \u003crowConstraints\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"         \u003cRowConstraints /\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"      \u003c/rowConstraints\u003e","lastModifiedDate":"2023-03-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ExtraShotLatte":1,"glozxi":8,"engenhui1999":2,"-":31}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.storage.JsonContactListStorage;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        JsonContactListStorage contactListStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"                new JsonContactListStorage(temporaryFolder.resolve(\"contactList.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, contactListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"        JsonContactListStorage contactListStorage \u003d","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"                new JsonContactListIoExceptionThrowingStub(temporaryFolder","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"                        .resolve(\"ioExceptionContactList.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, contactListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"glozxi"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":91,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_AMY + END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":92,"author":{"gitId":"engenhui1999"},"content":"        Event expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"bryansendeavour"},"content":"    private static class JsonContactListIoExceptionThrowingStub extends JsonContactListStorage {","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"bryansendeavour"},"content":"        private JsonContactListIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":173,"author":{"gitId":"bryansendeavour"},"content":"            super(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":174,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":175,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":176,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":177,"author":{"gitId":"bryansendeavour"},"content":"        public void saveContactList(ReadOnlyContactList contactList, Path filePath) throws IOException {","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"bryansendeavour"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"EksdeeeX":2,"glozxi":4,"bryansendeavour":21,"engenhui1999":2,"-":152}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.TypicalContacts;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(),","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"                TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"        Event validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"                model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"        Event personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_EVENT);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"glozxi":1,"bryansendeavour":5,"engenhui1999":3,"-":39}},{"path":"src/test/java/seedu/address/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"        Event validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"        Event validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        assertThrows(CommandException.class, AddCommand.MESSAGE_DUPLICATE_EVENT, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"engenhui1999"},"content":"        Event alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"        Event bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"        public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"        public void setContactListFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"engenhui1999"},"content":"        public void addPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"        public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"engenhui1999"},"content":"        public boolean hasPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"bryansendeavour"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":160,"author":{"gitId":"engenhui1999"},"content":"        public void deletePerson(Event target) {","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":165,"author":{"gitId":"engenhui1999"},"content":"        public void setPerson(Event target, Event editedPerson) {","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":170,"author":{"gitId":"engenhui1999"},"content":"        public ObservableList\u003cEvent\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":175,"author":{"gitId":"engenhui1999"},"content":"        public void updateFilteredPersonList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"bryansendeavour"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":185,"author":{"gitId":"ExtraShotLatte"},"content":"        public void linkContact(Event event, Contact contact) {","lastModifiedDate":"2023-03-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"EksdeeeX"},"content":"        public Rate getRate(Event event) {","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-09"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":195,"author":{"gitId":"engenhui1999"},"content":"        public void markEvent(Event target, Event markedEvent) {","lastModifiedDate":"2023-03-11"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":204,"author":{"gitId":"engenhui1999"},"content":"        private final Event person;","lastModifiedDate":"2023-03-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":206,"author":{"gitId":"engenhui1999"},"content":"        ModelStubWithPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"engenhui1999"},"content":"        public boolean hasPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"engenhui1999"},"content":"            return this.person.isSameEvent(person);","lastModifiedDate":"2023-03-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":222,"author":{"gitId":"engenhui1999"},"content":"        final ArrayList\u003cEvent\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-06"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":225,"author":{"gitId":"engenhui1999"},"content":"        public boolean hasPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":226,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":227,"author":{"gitId":"engenhui1999"},"content":"            return personsAdded.stream().anyMatch(person::isSameEvent);","lastModifiedDate":"2023-03-06"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":230,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":231,"author":{"gitId":"engenhui1999"},"content":"        public void addPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":233,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":236,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":237,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":238,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"EksdeeeX":2,"ExtraShotLatte":1,"glozxi":1,"bryansendeavour":23,"engenhui1999":20,"-":195}},{"path":"src/test/java/seedu/address/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class ClearCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"bryansendeavour":3,"-":30}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_END;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_START;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    public static final String VALID_PHONE_ALICE \u003d \"94351253\";","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    public static final String VALID_START_TIME_AMY \u003d \"11-03-2023 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    public static final String VALID_END_TIME_AMY \u003d \"11-03-2023 12:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"    public static final String VALID_START_TIME_BOB \u003d \"04-04-2023 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"    public static final String VALID_END_TIME_BOB \u003d \"04-05-2023 13:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"    public static final String VALID_MARK_AMY \u003d \"[ ]\";","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"    public static final String VALID_MARK_BOB \u003d \"[ ]\";","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public static final String NAME_DESC_ALICE \u003d \" \" + PREFIX_NAME + VALID_NAME_ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"    public static final String PHONE_DESC_ALICE \u003d \" \" + PREFIX_PHONE + VALID_PHONE_ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_RATE + VALID_PHONE_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_RATE + VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"    public static final String START_TIME_DESC_AMY \u003d \" \" + PREFIX_TIMING_START + VALID_START_TIME_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"    public static final String START_TIME_DESC_BOB \u003d \" \" + PREFIX_TIMING_START + VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"    public static final String END_TIME_DESC_AMY \u003d \" \" + PREFIX_TIMING_END + VALID_END_TIME_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"    public static final String END_TIME_DESC_BOB \u003d \" \" + PREFIX_TIMING_END + VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_RATE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"    // string not formatted correctly not allowed for time","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"    public static final String INVALID_START_TIME_DESC \u003d \" \" + PREFIX_TIMING_START + \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"    public static final String INVALID_END_TIME_DESC \u003d \" \" + PREFIX_TIMING_END + \" \";","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"                .withPhone(VALID_PHONE_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"                .withTiming(VALID_START_TIME_AMY, VALID_END_TIME_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"glozxi"},"content":"                .withTiming(VALID_START_TIME_BOB, VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"engenhui1999"},"content":"        List\u003cEvent\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"engenhui1999"},"content":"        Event person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"glozxi":15,"bryansendeavour":5,"engenhui1999":10,"-":114}},{"path":"src/test/java/seedu/address/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"        Event personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"        Event personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"EksdeeeX":2,"bryansendeavour":4,"engenhui1999":4,"-":101}},{"path":"src/test/java/seedu/address/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_MARK_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class EditCommandTest {","lastModifiedDate":"2017-05-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"        Event editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"                new ContactList(model.getContactList()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"        Event lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":63,"author":{"gitId":"engenhui1999"},"content":"        Event editedPerson \u003d personInList.withName(VALID_NAME_BOB).withRate(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"                .withTiming(VALID_START_TIME_BOB, VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"                .withMark(VALID_MARK_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"                .withTiming(VALID_START_TIME_BOB, VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"                .withMark(VALID_MARK_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"                new ContactList(model.getContactList()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"        Event editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"                new ContactList(model.getContactList()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"engenhui1999"},"content":"        Event personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"engenhui1999"},"content":"        Event editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()),","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"                new ContactList(model.getContactList()), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"        Event firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"engenhui1999"},"content":"        Event personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        final EditCommand standardCommand \u003d new EditCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2017-05-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new EditCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2017-05-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"EksdeeeX":2,"glozxi":4,"bryansendeavour":11,"engenhui1999":12,"-":157}},{"path":"src/test/java/seedu/address/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.TypicalContacts;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(),","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"            TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(),","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"            TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bryansendeavour":5,"-":81}},{"path":"src/test/java/seedu/address/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2018-01-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.TypicalContacts;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(),","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"                TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(),","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"                TypicalContacts.getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"bryansendeavour":5,"-":37}},{"path":"src/test/java/seedu/address/logic/commands/MarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":" * {@code MarkCommand}.","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"        Event eventToMark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        Event markedEvent \u003d new PersonBuilder(eventToMark).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        markedEvent.mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_EVENT_SUCCESS, eventToMark);","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"        expectedModel.markEvent(eventToMark, markedEvent);","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":48,"author":{"gitId":"engenhui1999"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":58,"author":{"gitId":"engenhui1999"},"content":"        Event eventToMark \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"        Event markedEvent \u003d new PersonBuilder(eventToMark).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"        markedEvent.mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand markCommand \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":62,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":63,"author":{"gitId":"engenhui1999"},"content":"        String expectedMessage \u003d String.format(MarkCommand.MESSAGE_MARK_EVENT_SUCCESS, eventToMark);","lastModifiedDate":"2023-03-11"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-11"},{"lineNumber":66,"author":{"gitId":"engenhui1999"},"content":"        expectedModel.markEvent(eventToMark, markedEvent);","lastModifiedDate":"2023-03-11"},{"lineNumber":67,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":68,"author":{"gitId":"engenhui1999"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":69,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"        assertCommandSuccess(markCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":72,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":74,"author":{"gitId":"engenhui1999"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"engenhui1999"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"engenhui1999"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"engenhui1999"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand markCommand \u003d new MarkCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"        assertCommandFailure(markCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"engenhui1999"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":89,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand markFirstCommand \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":90,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand markSecondCommand \u003d new MarkCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":92,"author":{"gitId":"engenhui1999"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"engenhui1999"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand markFirstCommandCopy \u003d new MarkCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(markFirstCommand.equals(markFirstCommandCopy));","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"engenhui1999"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(markFirstCommand.equals(1));","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":102,"author":{"gitId":"engenhui1999"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(markFirstCommand.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":104,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":105,"author":{"gitId":"engenhui1999"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(markFirstCommand.equals(markSecondCommand));","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"engenhui1999"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"engenhui1999"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"engenhui1999":117}},{"path":"src/test/java/seedu/address/logic/commands/NewContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"class NewContactCommandTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e new NewContactCommand(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public void execute_contactAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        ModelStubAcceptingContactAdded modelStub \u003d new ModelStubAcceptingContactAdded();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        CommandResult commandResult \u003d new NewContactCommand(validContact).execute(modelStub);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(String.format(NewContactCommand.MESSAGE_SUCCESS, validContact), commandResult.getFeedbackToUser());","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(Arrays.asList(validContact), modelStub.contactsAdded);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    public void execute_duplicateContact_throwsCommandException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        Contact validContact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand newContactCommand \u003d new NewContactCommand(validContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        ModelStub modelStub \u003d new ModelStubWithContact(validContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"                NewContactCommand.MESSAGE_DUPLICATE_CONTACT, () -\u003e newContactCommand.execute(modelStub));","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    public void equals() {","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        Contact deborah \u003d new ContactBuilder().withName(\"Deborah\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        Contact mandy \u003d new ContactBuilder().withName(\"Mandy\").build();","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand addDeborahCommand \u003d new NewContactCommand(deborah);","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand addMandyCommand \u003d new NewContactCommand(mandy);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        // same object -\u003e true","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(addDeborahCommand.equals(addDeborahCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"        // same values -\u003e true","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand addMandyCommandCopy \u003d new NewContactCommand(mandy);","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(addMandyCommand.equals(addMandyCommandCopy));","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        // different types -\u003e false","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(addMandyCommand.equals(1));","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(addMandyCommand.equals(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        // different person -\u003e false","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(addMandyCommand.equals(addDeborahCommand));","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"     * A default model stub that has all the methods failing.","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"        public Path getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"        public void setContactListFilePath(Path contactListFilePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"        public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":150,"author":{"gitId":"bryansendeavour"},"content":"        public boolean hasPerson(Event person) {","lastModifiedDate":"2023-03-08"},{"lineNumber":151,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":152,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":153,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"bryansendeavour"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":158,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"        public void addPerson(Event person) {","lastModifiedDate":"2023-03-08"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":164,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":165,"author":{"gitId":"bryansendeavour"},"content":"        public void deletePerson(Event target) {","lastModifiedDate":"2023-03-08"},{"lineNumber":166,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":167,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":168,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":169,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"bryansendeavour"},"content":"        public void updateFilteredContactList(Predicate\u003cContact\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":171,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":172,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":173,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":174,"author":{"gitId":"ExtraShotLatte"},"content":"        @Override","lastModifiedDate":"2023-03-12"},{"lineNumber":175,"author":{"gitId":"ExtraShotLatte"},"content":"        public void linkContact(Event event, Contact contact) {","lastModifiedDate":"2023-03-12"},{"lineNumber":176,"author":{"gitId":"ExtraShotLatte"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-12"},{"lineNumber":177,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":178,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":179,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":180,"author":{"gitId":"bryansendeavour"},"content":"        public void updateFilteredPersonList(Predicate\u003cEvent\u003e predicate) {","lastModifiedDate":"2023-03-08"},{"lineNumber":181,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":182,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":183,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":184,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":185,"author":{"gitId":"bryansendeavour"},"content":"        public void setPerson(Event target, Event editedPerson) {","lastModifiedDate":"2023-03-08"},{"lineNumber":186,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":187,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":188,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":189,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":190,"author":{"gitId":"bryansendeavour"},"content":"        public ObservableList\u003cEvent\u003e getFilteredPersonList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":191,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":192,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":193,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":194,"author":{"gitId":"EksdeeeX"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":195,"author":{"gitId":"EksdeeeX"},"content":"        public Rate getRate(Event event) {","lastModifiedDate":"2023-03-08"},{"lineNumber":196,"author":{"gitId":"EksdeeeX"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-08"},{"lineNumber":197,"author":{"gitId":"EksdeeeX"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":198,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":199,"author":{"gitId":"engenhui1999"},"content":"        @Override","lastModifiedDate":"2023-03-11"},{"lineNumber":200,"author":{"gitId":"engenhui1999"},"content":"        public void markEvent(Event target, Event markedEvent) {","lastModifiedDate":"2023-03-11"},{"lineNumber":201,"author":{"gitId":"engenhui1999"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2023-03-11"},{"lineNumber":202,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":203,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":204,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":205,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":206,"author":{"gitId":"bryansendeavour"},"content":"     * Model stub that contains a single contact.","lastModifiedDate":"2023-03-08"},{"lineNumber":207,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":208,"author":{"gitId":"bryansendeavour"},"content":"    private class ModelStubWithContact extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":209,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":210,"author":{"gitId":"bryansendeavour"},"content":"        private final Contact contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":211,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":212,"author":{"gitId":"bryansendeavour"},"content":"        ModelStubWithContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":213,"author":{"gitId":"bryansendeavour"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":214,"author":{"gitId":"bryansendeavour"},"content":"            this.contact \u003d contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":215,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":216,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":217,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":218,"author":{"gitId":"bryansendeavour"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":219,"author":{"gitId":"bryansendeavour"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":220,"author":{"gitId":"bryansendeavour"},"content":"            return this.contact.isSameContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":221,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":222,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":223,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":224,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":225,"author":{"gitId":"bryansendeavour"},"content":"     * Model stub that always accept the contact being added.","lastModifiedDate":"2023-03-08"},{"lineNumber":226,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":227,"author":{"gitId":"bryansendeavour"},"content":"    private class ModelStubAcceptingContactAdded extends ModelStub {","lastModifiedDate":"2023-03-08"},{"lineNumber":228,"author":{"gitId":"bryansendeavour"},"content":"        final ArrayList\u003cContact\u003e contactsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-03-08"},{"lineNumber":229,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":230,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":231,"author":{"gitId":"bryansendeavour"},"content":"        public boolean hasContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":232,"author":{"gitId":"bryansendeavour"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":233,"author":{"gitId":"bryansendeavour"},"content":"            return contactsAdded.stream().anyMatch(contact::isSameContact);","lastModifiedDate":"2023-03-08"},{"lineNumber":234,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":235,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":236,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":237,"author":{"gitId":"bryansendeavour"},"content":"        public void addContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":238,"author":{"gitId":"bryansendeavour"},"content":"            requireNonNull(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":239,"author":{"gitId":"bryansendeavour"},"content":"            contactsAdded.add(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":240,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":241,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":242,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-08"},{"lineNumber":243,"author":{"gitId":"bryansendeavour"},"content":"        public ReadOnlyContactList getContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":244,"author":{"gitId":"bryansendeavour"},"content":"            return new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":245,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":246,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":247,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"EksdeeeX":6,"ExtraShotLatte":5,"bryansendeavour":231,"engenhui1999":5}},{"path":"src/test/java/seedu/address/logic/commands/RateCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":" * {@code RateCommand}.","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"public class RateCommandTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"    public void execute_validIndex_success() {","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"EksdeeeX"},"content":"        Event event \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"EksdeeeX"},"content":"        Rate rate \u003d event.getRate();","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"EksdeeeX"},"content":"        RateCommand rateCommand \u003d new RateCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"EksdeeeX"},"content":"        String expectedMessage \u003d String.format(RateCommand.MESSAGE_SUCCESS, rate);","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"EksdeeeX"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), model.getContactList(), new UserPrefs());","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"EksdeeeX"},"content":"        expectedModel.getRate(event);","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandSuccess(rateCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"EksdeeeX"},"content":"    public void execute_invalidIndex_throwsCommandException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"EksdeeeX"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"EksdeeeX"},"content":"        RateCommand rateCommand \u003d new RateCommand(outOfBoundIndex);","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"EksdeeeX"},"content":"        assertCommandFailure(rateCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"EksdeeeX"},"content":"    public void equals() {","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"EksdeeeX"},"content":"        RateCommand rateFirstCommand \u003d new RateCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"EksdeeeX"},"content":"        RateCommand rateSecondCommand \u003d new RateCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"EksdeeeX"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(rateFirstCommand.equals(rateFirstCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"EksdeeeX"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"EksdeeeX"},"content":"        RateCommand rateFirstCommandCopy \u003d new RateCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"EksdeeeX"},"content":"        assertTrue(rateFirstCommand.equals(rateFirstCommandCopy));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"EksdeeeX"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":66,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(rateFirstCommand.equals(1));","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"EksdeeeX"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(rateFirstCommand.equals(null));","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"EksdeeeX"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"EksdeeeX"},"content":"        assertFalse(rateFirstCommand.equals(rateSecondCommand));","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"EksdeeeX":74}},{"path":"src/test/java/seedu/address/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"        Event expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":67,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_FRIEND, new AddCommand(expectedPerson));","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":75,"author":{"gitId":"engenhui1999"},"content":"        Event expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":77,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"engenhui1999"},"content":"        Event expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"glozxi"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"glozxi"},"content":"                        + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":88,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2017-12-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"glozxi"},"content":"        // missing start time prefix","lastModifiedDate":"2023-03-09"},{"lineNumber":112,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"                        + VALID_START_TIME_BOB + END_TIME_DESC_AMY,","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"                expectedMessage);","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"        // missing end time prefix","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":118,"author":{"gitId":"glozxi"},"content":"                        + START_TIME_DESC_AMY + VALID_END_TIME_BOB,","lastModifiedDate":"2023-03-09"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_ADDRESS_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"glozxi"},"content":"                        + VALID_START_TIME_BOB + VALID_END_TIME_BOB,","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_AMY + END_TIME_DESC_AMY","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":135,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"engenhui1999"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":140,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"glozxi"},"content":"        // invalid start time","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":146,"author":{"gitId":"glozxi"},"content":"                + INVALID_START_TIME_DESC + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":147,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Timing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":148,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":149,"author":{"gitId":"glozxi"},"content":"        // invalid end time","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":151,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + INVALID_END_TIME_DESC","lastModifiedDate":"2023-03-09"},{"lineNumber":152,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Timing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":155,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":160,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2023-03-09"},{"lineNumber":161,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + END_TIME_DESC_BOB,","lastModifiedDate":"2023-03-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":165,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_BOB + START_TIME_DESC_BOB + END_TIME_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2023-03-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-12-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"glozxi":53,"engenhui1999":16,"-":100}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.DeleteCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.FindCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.LinkContactCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.RateCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.ContactUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"        Event person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        AddCommand command \u003d (AddCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(new AddCommand(person), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(new DeleteCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"        Event person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertEquals(new EditCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(new FindCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"    public void parseCommand_newContact() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"        NewContactCommand command \u003d (NewContactCommand) parser.parseCommand(ContactUtil.getNewContactCommand(contact));","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(new NewContactCommand(contact), command);","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"EksdeeeX"},"content":"    public void parseCommand_rate() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":107,"author":{"gitId":"EksdeeeX"},"content":"        RateCommand command \u003d (RateCommand) parser.parseCommand(","lastModifiedDate":"2023-03-08"},{"lineNumber":108,"author":{"gitId":"EksdeeeX"},"content":"            RateCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"EksdeeeX"},"content":"        assertEquals(new RateCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"engenhui1999"},"content":"    public void parseCommand_mark() throws Exception {","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"engenhui1999"},"content":"        MarkCommand command \u003d (MarkCommand) parser.parseCommand(","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"engenhui1999"},"content":"            MarkCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2023-03-11"},{"lineNumber":116,"author":{"gitId":"engenhui1999"},"content":"        assertEquals(new MarkCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2023-03-11"},{"lineNumber":117,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":118,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":119,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":120,"author":{"gitId":"ExtraShotLatte"},"content":"    public void parseCommand_linkContact() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"ExtraShotLatte"},"content":"        Contact contact \u003d new ContactBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"ExtraShotLatte"},"content":"        Event event \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"ExtraShotLatte"},"content":"        LinkContactCommand command \u003d (LinkContactCommand) parser.parseCommand(","lastModifiedDate":"2023-03-13"},{"lineNumber":124,"author":{"gitId":"ExtraShotLatte"},"content":"                LinkContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2023-03-13"},{"lineNumber":125,"author":{"gitId":"ExtraShotLatte"},"content":"                        + contact.getPhone().value);","lastModifiedDate":"2023-03-13"},{"lineNumber":126,"author":{"gitId":"ExtraShotLatte"},"content":"        assertEquals(new LinkContactCommand(INDEX_FIRST_PERSON, contact.getPhone().value), command);","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":128,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":129,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":140,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ExtraShotLatte":15,"EksdeeeX":7,"bryansendeavour":10,"engenhui1999":10,"-":98}},{"path":"src/test/java/seedu/address/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.END_TIME_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_END_TIME_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_START_TIME_DESC;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.START_TIME_DESC_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Rate.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"glozxi"},"content":"        // invalid timing","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_TIME_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"glozxi"},"content":"                + \" \" + INVALID_END_TIME_DESC, Timing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, \"1\" + START_TIME_DESC_AMY","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"glozxi"},"content":"                + \" \" + INVALID_END_TIME_DESC, Timing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"glozxi"},"content":"        assertParseFailure(parser, \"1\" + INVALID_START_TIME_DESC","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"                + \" \" + END_TIME_DESC_AMY, Timing.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Rate.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":120,"author":{"gitId":"glozxi"},"content":"                + ADDRESS_DESC_AMY + NAME_DESC_AMY","lastModifiedDate":"2023-03-13"},{"lineNumber":121,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + \" \" + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":122,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_FRIEND;","lastModifiedDate":"2023-03-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"engenhui1999"},"content":"                .withPhone(VALID_PHONE_BOB).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"glozxi"},"content":"                .withTiming(VALID_START_TIME_BOB, VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":136,"author":{"gitId":"engenhui1999"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"engenhui1999"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"glozxi"},"content":"        // timing","lastModifiedDate":"2023-03-13"},{"lineNumber":167,"author":{"gitId":"glozxi"},"content":"        userInput \u003d targetIndex.getOneBased() + START_TIME_DESC_AMY + \" \" + END_TIME_DESC_AMY;","lastModifiedDate":"2023-03-13"},{"lineNumber":168,"author":{"gitId":"glozxi"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTiming(VALID_START_TIME_AMY, VALID_END_TIME_AMY).build();","lastModifiedDate":"2023-03-13"},{"lineNumber":169,"author":{"gitId":"glozxi"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2023-03-13"},{"lineNumber":170,"author":{"gitId":"glozxi"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2023-03-13"},{"lineNumber":171,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":182,"author":{"gitId":"engenhui1999"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY","lastModifiedDate":"2023-03-06"},{"lineNumber":183,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_AMY + \" \" + END_TIME_DESC_AMY","lastModifiedDate":"2023-03-13"},{"lineNumber":184,"author":{"gitId":"engenhui1999"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2023-03-06"},{"lineNumber":185,"author":{"gitId":"glozxi"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":186,"author":{"gitId":"glozxi"},"content":"                + START_TIME_DESC_BOB + \" \" + END_TIME_DESC_BOB","lastModifiedDate":"2023-03-13"},{"lineNumber":187,"author":{"gitId":"glozxi"},"content":"                + TAG_DESC_HUSBAND;","lastModifiedDate":"2023-03-13"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"glozxi"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTiming(VALID_START_TIME_BOB, VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-13"},{"lineNumber":191,"author":{"gitId":"glozxi"},"content":"                .withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"engenhui1999"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2023-03-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"engenhui1999"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":226,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"glozxi":34,"engenhui1999":11,"-":181}},{"path":"src/test/java/seedu/address/logic/parser/LinkContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ExtraShotLatte"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-12"},{"lineNumber":2,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":3,"author":{"gitId":"ExtraShotLatte"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-13"},{"lineNumber":4,"author":{"gitId":"ExtraShotLatte"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-13"},{"lineNumber":5,"author":{"gitId":"ExtraShotLatte"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2023-03-13"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-13"},{"lineNumber":7,"author":{"gitId":"ExtraShotLatte"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-13"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2023-03-13"},{"lineNumber":10,"author":{"gitId":"ExtraShotLatte"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2023-03-13"},{"lineNumber":11,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-13"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":14,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2023-03-13"},{"lineNumber":15,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2023-03-13"},{"lineNumber":16,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":17,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.LinkContactCommand;","lastModifiedDate":"2023-03-13"},{"lineNumber":18,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2023-03-13"},{"lineNumber":19,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2023-03-13"},{"lineNumber":20,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2023-03-13"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"public class LinkContactCommandTest {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), getTypicalContactList(), new UserPrefs());","lastModifiedDate":"2023-03-13"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":31,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":32,"author":{"gitId":"ExtraShotLatte"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":33,"author":{"gitId":"ExtraShotLatte"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(expectedModel.getFilteredPersonList().size() + 1);","lastModifiedDate":"2023-03-13"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"        LinkContactCommand linkContactCommand \u003d new LinkContactCommand(outOfBoundIndex, \"91234567\");","lastModifiedDate":"2023-03-13"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":36,"author":{"gitId":"ExtraShotLatte"},"content":"        assertCommandFailure(linkContactCommand, model, Messages.MESSAGE_INVALID_EVENT_DISPLAYED_INDEX);","lastModifiedDate":"2023-03-13"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":38,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":40,"author":{"gitId":"ExtraShotLatte"},"content":"    public void execute_contactNotFound_throwsCommandException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":41,"author":{"gitId":"ExtraShotLatte"},"content":"        Event eventToAddContact \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-13"},{"lineNumber":42,"author":{"gitId":"ExtraShotLatte"},"content":"        model.addPerson(eventToAddContact);","lastModifiedDate":"2023-03-13"},{"lineNumber":43,"author":{"gitId":"ExtraShotLatte"},"content":"        LinkContactCommand linkContactCommand \u003d new LinkContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2023-03-13"},{"lineNumber":44,"author":{"gitId":"ExtraShotLatte"},"content":"                \"99999999\"); // phone number that does not exist in contact list","lastModifiedDate":"2023-03-13"},{"lineNumber":45,"author":{"gitId":"ExtraShotLatte"},"content":"        assertThrows(CommandException.class, () -\u003e linkContactCommand.execute(model));","lastModifiedDate":"2023-03-13"},{"lineNumber":46,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":47,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":48,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"    public void execute_invalidContact_throwsCommandException() throws Exception {","lastModifiedDate":"2023-03-13"},{"lineNumber":50,"author":{"gitId":"ExtraShotLatte"},"content":"        LinkContactCommand linkContactCommand \u003d new LinkContactCommand(Index.fromOneBased(1), \"91234568\");","lastModifiedDate":"2023-03-13"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"        assertThrows(CommandException.class, () -\u003e linkContactCommand.execute(model));","lastModifiedDate":"2023-03-13"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"ExtraShotLatte"},"content":"    public void equals() {","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"ExtraShotLatte"},"content":"        final LinkContactCommand standardCommand \u003d new LinkContactCommand(INDEX_FIRST_PERSON, \"91234567\");","lastModifiedDate":"2023-03-13"},{"lineNumber":58,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":59,"author":{"gitId":"ExtraShotLatte"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"        LinkContactCommand commandWithSameValues \u003d new LinkContactCommand(INDEX_FIRST_PERSON, \"91234567\");","lastModifiedDate":"2023-03-13"},{"lineNumber":61,"author":{"gitId":"ExtraShotLatte"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2023-03-13"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":63,"author":{"gitId":"ExtraShotLatte"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-13"},{"lineNumber":64,"author":{"gitId":"ExtraShotLatte"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2023-03-13"},{"lineNumber":65,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":66,"author":{"gitId":"ExtraShotLatte"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":67,"author":{"gitId":"ExtraShotLatte"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2023-03-13"},{"lineNumber":68,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":69,"author":{"gitId":"ExtraShotLatte"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":70,"author":{"gitId":"ExtraShotLatte"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2023-03-13"},{"lineNumber":71,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":72,"author":{"gitId":"ExtraShotLatte"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":73,"author":{"gitId":"ExtraShotLatte"},"content":"        assertFalse(standardCommand.equals(new LinkContactCommand(INDEX_SECOND_PERSON, \"91234567\")));","lastModifiedDate":"2023-03-13"},{"lineNumber":74,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":75,"author":{"gitId":"ExtraShotLatte"},"content":"        // different phone number -\u003e returns false","lastModifiedDate":"2023-03-13"},{"lineNumber":76,"author":{"gitId":"ExtraShotLatte"},"content":"        assertFalse(standardCommand.equals(new LinkContactCommand(INDEX_SECOND_PERSON, \"91234568\")));","lastModifiedDate":"2023-03-13"},{"lineNumber":77,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":78,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":79,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"ExtraShotLatte"},"content":"}","lastModifiedDate":"2023-03-12"}],"authorContributionMap":{"ExtraShotLatte":80}},{"path":"src/test/java/seedu/address/logic/parser/MarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.logic.commands.MarkCommand;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"/**","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":" * outside of the MarkCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":" * same path through the MarkCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":" */","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"public class MarkCommandParserTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"    private MarkCommandParser parser \u003d new MarkCommandParser();","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"    public void parse_validArgs_returnsMarkCommand() {","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        assertParseSuccess(parser, \"1\", new MarkCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, MarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"engenhui1999":32}},{"path":"src/test/java/seedu/address/logic/parser/NewContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"class NewContactCommandParserTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private NewContactCommandParser parser \u003d new NewContactCommandParser();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, NewContactCommand.MESSAGE_USAGE);","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        // missing name prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB, expectedMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        // missing phone prefix","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB, expectedMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        // all prefixes missing","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB, expectedMessage);","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":32}},{"path":"src/test/java/seedu/address/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2017-06-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    private static final String INVALID_START_TIME \u003d \"03-03-2023 77:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    private static final String INVALID_END_TIME \u003d \"03-03-2023 77:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"    private static final String VALID_START_TIME \u003d \"03-03-2023 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"    private static final String VALID_END_TIME \u003d \"03-03-2023 14:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactName_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactName(INVALID_NAME));","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactName_validValueWithoutWhitespace_returnsContactName() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"        ContactName expectedName \u003d new ContactName(VALID_NAME);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedName, ParserUtil.parseContactName(VALID_NAME));","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"        ContactName expectedName \u003d new ContactName(VALID_NAME);","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedName, ParserUtil.parseContactName(nameWithWhitespace));","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactPhone_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseContactPhone(INVALID_PHONE));","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactPhone_validValueWithoutWhitespace_returnsContactPhone() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"        ContactPhone expectedPhone \u003d new ContactPhone(VALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedPhone, ParserUtil.parseContactPhone(VALID_PHONE));","lastModifiedDate":"2023-03-08"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"    public void parseContactPhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2023-03-08"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"        ContactPhone expectedPhone \u003d new ContactPhone(VALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedPhone, ParserUtil.parseContactPhone(phoneWithWhitespace));","lastModifiedDate":"2023-03-08"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseAddress_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseAddress((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public void parseAddress_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseAddress(INVALID_ADDRESS));","lastModifiedDate":"2019-03-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithoutWhitespace_returnsAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(VALID_ADDRESS));","lastModifiedDate":"2017-05-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    public void parseAddress_validValueWithWhitespace_returnsTrimmedAddress() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        String addressWithWhitespace \u003d WHITESPACE + VALID_ADDRESS + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        Address expectedAddress \u003d new Address(VALID_ADDRESS);","lastModifiedDate":"2017-05-30"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddress, ParserUtil.parseAddress(addressWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseEmail_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseEmail((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseEmail_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseEmail(INVALID_EMAIL));","lastModifiedDate":"2019-03-14"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithoutWhitespace_returnsEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-22"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(VALID_EMAIL));","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public void parseEmail_validValueWithWhitespace_returnsTrimmedEmail() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        String emailWithWhitespace \u003d WHITESPACE + VALID_EMAIL + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        Email expectedEmail \u003d new Email(VALID_EMAIL);","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        assertEquals(expectedEmail, ParserUtil.parseEmail(emailWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":194,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":195,"author":{"gitId":"glozxi"},"content":"    public void parseTiming_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":196,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTiming((String) null, (String) null));","lastModifiedDate":"2023-03-09"},{"lineNumber":197,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTiming(VALID_START_TIME, (String) null));","lastModifiedDate":"2023-03-09"},{"lineNumber":198,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTiming((String) null, VALID_END_TIME));","lastModifiedDate":"2023-03-09"},{"lineNumber":199,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":200,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":201,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":202,"author":{"gitId":"glozxi"},"content":"    public void parseTiming_invalidValue_throwsParseException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":203,"author":{"gitId":"glozxi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTiming(INVALID_START_TIME, INVALID_END_TIME));","lastModifiedDate":"2023-03-09"},{"lineNumber":204,"author":{"gitId":"glozxi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTiming(INVALID_START_TIME, VALID_END_TIME));","lastModifiedDate":"2023-03-09"},{"lineNumber":205,"author":{"gitId":"glozxi"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTiming(VALID_START_TIME, INVALID_END_TIME));","lastModifiedDate":"2023-03-09"},{"lineNumber":206,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":207,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":208,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":209,"author":{"gitId":"glozxi"},"content":"    public void parseTiming_validValueWithoutWhitespace_returnsTiming() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":210,"author":{"gitId":"glozxi"},"content":"        Timing expectedTiming \u003d new Timing(VALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-03-09"},{"lineNumber":211,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedTiming, ParserUtil.parseTiming(VALID_START_TIME, VALID_END_TIME));","lastModifiedDate":"2023-03-09"},{"lineNumber":212,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":213,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":214,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":215,"author":{"gitId":"glozxi"},"content":"    public void parseTiming_validValueWithWhitespace_returnsTrimmedTiming() throws Exception {","lastModifiedDate":"2023-03-09"},{"lineNumber":216,"author":{"gitId":"glozxi"},"content":"        String startTimeWithWhitespace \u003d WHITESPACE + VALID_START_TIME + WHITESPACE;","lastModifiedDate":"2023-03-09"},{"lineNumber":217,"author":{"gitId":"glozxi"},"content":"        String endTimeWithWhitespace \u003d WHITESPACE + VALID_END_TIME + WHITESPACE;","lastModifiedDate":"2023-03-09"},{"lineNumber":218,"author":{"gitId":"glozxi"},"content":"        Timing expectedTiming \u003d new Timing(VALID_START_TIME, VALID_END_TIME);","lastModifiedDate":"2023-03-09"},{"lineNumber":219,"author":{"gitId":"glozxi"},"content":"        assertEquals(expectedTiming, ParserUtil.parseTiming(startTimeWithWhitespace, endTimeWithWhitespace));","lastModifiedDate":"2023-03-09"},{"lineNumber":220,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":221,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":223,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":235,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":241,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":261,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"glozxi":33,"bryansendeavour":38,"-":196}},{"path":"src/test/java/seedu/address/logic/parser/RateCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EksdeeeX"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"EksdeeeX"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"EksdeeeX"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"EksdeeeX"},"content":"import seedu.address.logic.commands.RateCommand;","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"EksdeeeX"},"content":"/**","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"EksdeeeX"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"EksdeeeX"},"content":" * outside of the RateCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"EksdeeeX"},"content":" * same path through the RateCommand, and therefore we test only one of them.","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"EksdeeeX"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"EksdeeeX"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"EksdeeeX"},"content":" */","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"EksdeeeX"},"content":"public class RateCommandParserTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"EksdeeeX"},"content":"    private RateCommandParser parser \u003d new RateCommandParser();","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"EksdeeeX"},"content":"    public void parse_validArgs_returnsRateCommand() {","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"EksdeeeX"},"content":"        assertParseSuccess(parser, \"1\", new RateCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"EksdeeeX"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"EksdeeeX"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"EksdeeeX"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"EksdeeeX"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT, RateCommand.MESSAGE_USAGE));","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"EksdeeeX"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"EksdeeeX"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"EksdeeeX":32}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-13"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-13"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-13"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"        Event editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"        List\u003cEvent\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"        Event editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":89,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":90,"author":{"gitId":"ExtraShotLatte"},"content":"    public void linkContact_linkContactToEvent_success() {","lastModifiedDate":"2023-03-13"},{"lineNumber":91,"author":{"gitId":"ExtraShotLatte"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":92,"author":{"gitId":"ExtraShotLatte"},"content":"        addressBook.linkContact(ALICE, new Contact(new ContactName(\"ALICE\"), new ContactPhone(\"91234567\")));","lastModifiedDate":"2023-03-13"},{"lineNumber":93,"author":{"gitId":"ExtraShotLatte"},"content":"        Event editedAlice \u003d new PersonBuilder(ALICE).withContact(\"ALICE\", \"91234567\").build();","lastModifiedDate":"2023-03-13"},{"lineNumber":94,"author":{"gitId":"ExtraShotLatte"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2023-03-13"},{"lineNumber":95,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":96,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":97,"author":{"gitId":"ExtraShotLatte"},"content":"    @Test","lastModifiedDate":"2023-03-13"},{"lineNumber":98,"author":{"gitId":"ExtraShotLatte"},"content":"    public void linkContact_linkNullToEvent_throwsNullPointerException() {","lastModifiedDate":"2023-03-13"},{"lineNumber":99,"author":{"gitId":"ExtraShotLatte"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2023-03-13"},{"lineNumber":100,"author":{"gitId":"ExtraShotLatte"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.linkContact(ALICE, null));","lastModifiedDate":"2023-03-13"},{"lineNumber":101,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-13"},{"lineNumber":102,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":107,"author":{"gitId":"engenhui1999"},"content":"        private final ObservableList\u003cEvent\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":109,"author":{"gitId":"engenhui1999"},"content":"        AddressBookStub(Collection\u003cEvent\u003e persons) {","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"engenhui1999"},"content":"        public ObservableList\u003cEvent\u003e getPersonList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"ExtraShotLatte":17,"engenhui1999":7,"-":95}},{"path":"src/test/java/seedu/address/model/ContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Collection;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"public class ContactListTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    private final ContactList contactList \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(Collections.emptyList(), contactList.getContactList());","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactList.resetData(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public void resetData_withValidReadOnlyContactBook_replacesData() {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        ContactList newData \u003d getTypicalContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        contactList.resetData(newData);","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(newData, contactList);","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    public void resetData_withDuplicateContacts_throwsDuplicateContactException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE)","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        List\u003cContact\u003e newContacts \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        ContactBookStub newData \u003d new ContactBookStub(newContacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e contactList.resetData(newData));","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    public void hasPerson_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e contactList.hasContact(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactNotInContactBook_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(contactList.hasContact(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactInContactBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"        contactList.addContact(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(contactList.hasContact(ALICE));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactWithSameIdentityFieldsInContactBook_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        contactList.addContact(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE)","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(contactList.hasContact(editedAlice));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"    public void getContactList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e contactList.getContactList().remove(0));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    private static class ContactBookStub implements ReadOnlyContactList {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        private final ObservableList\u003cContact\u003e contacts \u003d FXCollections.observableArrayList();","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        ContactBookStub(Collection\u003cContact\u003e contacts) {","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"            this.contacts.setAll(contacts);","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"        @Override","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        public ObservableList\u003cContact\u003e getContactList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"            return contacts;","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":100}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.AMY;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.BOB;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.ContactListBuilder;","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(new ContactList(), new ContactList(modelManager.getContactList()));","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        userPrefs.setContactListFilePath(Paths.get(\"contact/list/file/path\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        userPrefs.setContactListFilePath(Paths.get(\"new/contact/list/file/path\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setContactListFilePath(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath_validPath_setsContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        Path path \u003d Paths.get(\"contact/list/file/path\");","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"        modelManager.setContactListFilePath(path);","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(path, modelManager.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasContact(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactNotInContactList_returnsFalse() {","lastModifiedDate":"2023-03-08"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(modelManager.hasContact(AMY));","lastModifiedDate":"2023-03-08"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"    public void hasContact_contactInContactList_returnsTrue() {","lastModifiedDate":"2023-03-08"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"        modelManager.addContact(AMY);","lastModifiedDate":"2023-03-08"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(modelManager.hasContact(AMY));","lastModifiedDate":"2023-03-08"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"        ContactList contactList \u003d new ContactListBuilder().withContact(AMY).withContact(BOB).build();","lastModifiedDate":"2023-03-08"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"        ContactList differentContactList \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"        modelManager \u003d new ModelManager(addressBook, contactList, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, contactList, userPrefs);","lastModifiedDate":"2023-03-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, contactList, userPrefs)));","lastModifiedDate":"2023-03-08"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":155,"author":{"gitId":"bryansendeavour"},"content":"        // different contactList -\u003e return false","lastModifiedDate":"2023-03-08"},{"lineNumber":156,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentContactList, userPrefs)));","lastModifiedDate":"2023-03-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, contactList, userPrefs)));","lastModifiedDate":"2023-03-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":169,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, contactList, differentUserPrefs)));","lastModifiedDate":"2023-03-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"bryansendeavour":44,"-":127}},{"path":"src/test/java/seedu/address/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2018-11-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    public void setContactListFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setContactListFilePath(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"bryansendeavour":6,"-":21}},{"path":"src/test/java/seedu/address/model/contact/ContactNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"public class ContactNameTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ContactName(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ContactName(invalidName));","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    public void isValidName() {","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        // null name","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e ContactName.isValidName(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        // invalid name","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactName.isValidName(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactName.isValidName(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactName.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactName.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        // valid name","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactName.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":41}},{"path":"src/test/java/seedu/address/model/contact/ContactPhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"public class ContactPhoneTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ContactPhone(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new ContactPhone(invalidPhone));","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    public void isValidPhone() {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        // null phone number","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e ContactPhone.isValidPhone(null));","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        // invalid phone numbers","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ContactPhone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        // valid phone numbers","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactPhone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactPhone.isValidPhone(\"93121534\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ContactPhone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":41}},{"path":"src/test/java/seedu/address/model/contact/ContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"public class ContactTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    public void isSameContact() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ALICE.isSameContact(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.isSameContact(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.isSameContact(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedBob \u003d new ContactBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(BOB.isSameContact(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"        editedBob \u003d new ContactBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(BOB.isSameContact(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    public void equals() {","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"        Contact aliceCopy \u003d new ContactBuilder(ALICE).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        // different Contact -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        editedAlice \u003d new ContactBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":70}},{"path":"src/test/java/seedu/address/model/contact/UniqueContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.model.contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Collections;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.exceptions.ContactNotFoundException;","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.exceptions.DuplicateContactException;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.ContactBuilder;","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"public class UniqueContactListTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    private final UniqueContactList uniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    public void contains_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.contains(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    public void contains_contactNotInList_returnsFalse() {","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(uniqueContactList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    public void contains_contactInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(uniqueContactList.contains(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    public void contains_contactWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE)","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        assertTrue(uniqueContactList.contains(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public void add_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.add(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"    public void add_duplicateContact_throwsDuplicatePersonException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.add(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    public void setPerson_nullTargetContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(null, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"    public void setPerson_nullEditedContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContact(ALICE, null));","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_targetContactNotInList_throwsContactNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.setContact(ALICE, ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_editedContactIsSameContact_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContact(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_editedContactHasSameIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"        Contact editedAlice \u003d new ContactBuilder(ALICE)","lastModifiedDate":"2023-03-06"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"                .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContact(ALICE, editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(editedAlice);","lastModifiedDate":"2023-03-06"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_editedContactHasDifferentIdentity_success() {","lastModifiedDate":"2023-03-06"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContact(ALICE, BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"    public void setContact_editedContactHasNonUniqueIdentity_throwsDuplicateContactException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContact(ALICE, BOB));","lastModifiedDate":"2023-03-06"},{"lineNumber":107,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":108,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":109,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":110,"author":{"gitId":"bryansendeavour"},"content":"    public void remove_nullContact_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":111,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.remove(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":112,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":113,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":114,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":115,"author":{"gitId":"bryansendeavour"},"content":"    public void remove_contactDoesNotExist_throwsContactNotFoundException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":116,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(ContactNotFoundException.class, () -\u003e uniqueContactList.remove(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":117,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":118,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":119,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":120,"author":{"gitId":"bryansendeavour"},"content":"    public void remove_existingContact_removesContact() {","lastModifiedDate":"2023-03-06"},{"lineNumber":121,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":122,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.remove(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":123,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":124,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":125,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":126,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":127,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_nullUniqueContactList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":129,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((UniqueContactList) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":130,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":131,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":132,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":133,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_uniqueContactList_replacesOwnListWithProvidedUniqueContactList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":134,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":135,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":136,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":137,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContacts(expectedUniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":138,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":139,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":140,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":141,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":142,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_nullList_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":143,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueContactList.setContacts((List\u003cContact\u003e) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":144,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":145,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":146,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2023-03-06"},{"lineNumber":148,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.add(ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":149,"author":{"gitId":"bryansendeavour"},"content":"        List\u003cContact\u003e contactList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":150,"author":{"gitId":"bryansendeavour"},"content":"        uniqueContactList.setContacts(contactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":151,"author":{"gitId":"bryansendeavour"},"content":"        UniqueContactList expectedUniqueContactList \u003d new UniqueContactList();","lastModifiedDate":"2023-03-06"},{"lineNumber":152,"author":{"gitId":"bryansendeavour"},"content":"        expectedUniqueContactList.add(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(expectedUniqueContactList, uniqueContactList);","lastModifiedDate":"2023-03-06"},{"lineNumber":154,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":155,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":156,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":157,"author":{"gitId":"bryansendeavour"},"content":"    public void setContacts_listWithDuplicateContacts_throwsDuplicateContactException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":158,"author":{"gitId":"bryansendeavour"},"content":"        List\u003cContact\u003e listWithDuplicateContacts \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":159,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DuplicateContactException.class, () -\u003e uniqueContactList.setContacts(listWithDuplicateContacts));","lastModifiedDate":"2023-03-06"},{"lineNumber":160,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":161,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":163,"author":{"gitId":"bryansendeavour"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":164,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2023-03-06"},{"lineNumber":165,"author":{"gitId":"bryansendeavour"},"content":"                -\u003e uniqueContactList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2023-03-06"},{"lineNumber":166,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":167,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":167}},{"path":"src/test/java/seedu/address/model/person/EmailTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class EmailTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Email(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidEmail_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidEmail \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Email(invalidEmail));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_validEmail_equalsString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        String validEmail \u003d \"test@localhost\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"        assertEquals(validEmail, new Email(validEmail).toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_validEmail_equalsHashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"        String validEmail \u003d \"test@localhost\";","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"        assertEquals(validEmail.hashCode(), new Email(validEmail).hashCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isValidEmail() {","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null email","lastModifiedDate":"2017-12-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Email.isValidEmail(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // blank email","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // missing parts","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"@example.com\")); // missing local part","lastModifiedDate":"2017-04-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjackexample.com\")); // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@\")); // missing domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // invalid parts","lastModifiedDate":"2017-01-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-\")); // invalid domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam_ple.com\")); // underscore in domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter jack@example.com\")); // spaces in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@exam ple.com\")); // spaces in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\" peterjack@example.com\")); // leading space","lastModifiedDate":"2018-02-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com \")); // trailing space","lastModifiedDate":"2018-02-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@@example.com\")); // double \u0027@\u0027 symbol","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter@jack@example.com\")); // \u0027@\u0027 symbol in local part","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"-peterjack@example.com\")); // local part starts with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack-@example.com\")); // local part ends with a hyphen","lastModifiedDate":"2021-07-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peter..jack@example.com\")); // local part has two consecutive periods","lastModifiedDate":"2021-07-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example@com\")); // \u0027@\u0027 symbol in domain name","lastModifiedDate":"2017-04-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@.example.com\")); // domain name starts with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com.\")); // domain name ends with a period","lastModifiedDate":"2018-02-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@-example.com\")); // domain name starts with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.com-\")); // domain name ends with a hyphen","lastModifiedDate":"2018-02-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(Email.isValidEmail(\"peterjack@example.c\")); // top level domain has less than two chars","lastModifiedDate":"2021-07-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // valid email","lastModifiedDate":"2017-01-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack_1190@example.com\")); // underscore in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack.1190@example.com\")); // period in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack+1190@example.com\")); // \u0027+\u0027 symbol in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"PeterJack-1190@example.com\")); // hyphen in local part","lastModifiedDate":"2021-07-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a@bc\")); // minimal","lastModifiedDate":"2018-02-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"test@localhost\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"123@145\")); // numeric local part and domain name","lastModifiedDate":"2017-01-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"a1+be.d@example1.com\")); // mixture of alphanumeric and special characters","lastModifiedDate":"2021-07-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"peter_jack@very-very-very-long-example.com\")); // long domain name","lastModifiedDate":"2018-02-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"if.you.dream.it_you.can.do.it@example.com\")); // long local part","lastModifiedDate":"2017-04-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(Email.isValidEmail(\"e1234567@u.nus.edu\")); // more than one period in domain","lastModifiedDate":"2021-07-20"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"engenhui1999":13,"-":68}},{"path":"src/test/java/seedu/address/model/person/EventTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"ExtraShotLatte"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_AMY;","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"public class EventTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"        Event person \u003d new PersonBuilder().build();","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    public void isSameEvent() {","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(ALICE.isSameEvent(ALICE));","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(ALICE.isSameEvent(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        Event editedAlice \u003d new PersonBuilder(ALICE).withRate(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(ALICE.isSameEvent(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(ALICE.isSameEvent(editedAlice));","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"        Event editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(BOB.isSameEvent(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(BOB.isSameEvent(editedBob));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":53,"author":{"gitId":"ExtraShotLatte"},"content":"        // same name, different timing -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":54,"author":{"gitId":"ExtraShotLatte"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTiming(VALID_START_TIME_AMY, VALID_END_TIME_AMY)","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"ExtraShotLatte"},"content":"                .build();","lastModifiedDate":"2023-03-11"},{"lineNumber":56,"author":{"gitId":"ExtraShotLatte"},"content":"        assertFalse(ALICE.isSameEvent(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"engenhui1999"},"content":"        Event aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"engenhui1999"},"content":"        Event editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withRate(VALID_PHONE_BOB).build();","lastModifiedDate":"2023-03-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":93,"author":{"gitId":"engenhui1999"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":94,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(ALICE.hashCode() \u003d\u003d (BOB.hashCode()));","lastModifiedDate":"2023-03-11"},{"lineNumber":95,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":96,"author":{"gitId":"ExtraShotLatte"},"content":"        // different time -\u003e return false","lastModifiedDate":"2023-03-11"},{"lineNumber":97,"author":{"gitId":"ExtraShotLatte"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTiming(VALID_START_TIME_AMY, VALID_END_TIME_AMY).build();","lastModifiedDate":"2023-03-11"},{"lineNumber":98,"author":{"gitId":"ExtraShotLatte"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2023-03-11"},{"lineNumber":99,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":100,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"ExtraShotLatte":13,"engenhui1999":17,"-":72}},{"path":"src/test/java/seedu/address/model/person/MarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-11"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-11"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-11"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-11"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"public class MarkTest {","lastModifiedDate":"2023-03-11"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"    public void isSameMark() {","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"        Mark undoneMark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"        Mark doneMarkOne \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"        doneMarkOne.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"        Mark doneMarkTwo \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"        doneMarkTwo.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(undoneMark.equals(undoneMark));","lastModifiedDate":"2023-03-11"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"        // null -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(undoneMark.equals(null));","lastModifiedDate":"2023-03-11"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"        // different mark -\u003e returns false","lastModifiedDate":"2023-03-11"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(undoneMark.equals(doneMarkOne));","lastModifiedDate":"2023-03-11"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        // marks that have the same status -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(undoneMark.equals(new Mark()));","lastModifiedDate":"2023-03-11"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"        // marks that have the same status -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(doneMarkOne.equals(doneMarkTwo));","lastModifiedDate":"2023-03-11"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    public void equals() {","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"        Mark undoneMark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        Mark doneMark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        doneMark.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(undoneMark.toString().equals(\"[ ]\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2023-03-11"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(doneMark.toString().equals(\"[X]\"));","lastModifiedDate":"2023-03-11"},{"lineNumber":43,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-11"}],"authorContributionMap":{"engenhui1999":44}},{"path":"src/test/java/seedu/address/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withRate(\"12345\")","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"engenhui1999"},"content":"                .withAddress(\"Main Street\").build()));","lastModifiedDate":"2023-03-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"engenhui1999":2,"-":73}},{"path":"src/test/java/seedu/address/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2017-01-16"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_validPhone_equalsString() {","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        String validPhone \u003d \"91234567\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"        assertEquals(validPhone, new Phone(validPhone).toString());","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_validPhone_equalsHashCode() {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"        String validPhone \u003d \"91234567\";","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"        assertEquals(validPhone.hashCode(), new Phone(validPhone).hashCode());","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"engenhui1999":13,"-":40}},{"path":"src/test/java/seedu/address/model/person/RateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"engenhui1999"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"public class RateTest {","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"engenhui1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Rate(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"    public void constructor_invalidRate_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"engenhui1999"},"content":"        String invalidRate \u003d \"\";","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"engenhui1999"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Rate(invalidRate));","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"    @Test","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"engenhui1999"},"content":"    public void isValidRate() {","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"engenhui1999"},"content":"        // null rate number","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e Rate.isValidRate(null));","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"engenhui1999"},"content":"        // invalid rate numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\"\")); // empty string","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\" \")); // spaces only","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\"Rate\")); // non-numeric","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"        assertFalse(Rate.isValidRate(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"        // valid rate numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(Rate.isValidRate(\"911.00\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(Rate.isValidRate(\"93121534\"));","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"        assertTrue(Rate.isValidRate(\"124293842033123\")); // long rate numbers","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"engenhui1999"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"engenhui1999":39}},{"path":"src/test/java/seedu/address/model/person/TimingTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"glozxi"},"content":"package seedu.address.model.person;","lastModifiedDate":"2023-03-09"},{"lineNumber":2,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":3,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-09"},{"lineNumber":4,"author":{"gitId":"glozxi"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-03-09"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-09"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"glozxi"},"content":"public class TimingTest {","lastModifiedDate":"2023-03-09"},{"lineNumber":10,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"    public void constructor_bothNull_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timing(null, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"glozxi"},"content":"    public void constructor_startNull_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":17,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timing(\"12-03-2023 12:00\", null));","lastModifiedDate":"2023-03-09"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":20,"author":{"gitId":"glozxi"},"content":"    public void constructor_endNull_throwsNullPointerException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":21,"author":{"gitId":"glozxi"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timing(null, \"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":22,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":23,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    public void constructor_invalidTimeStart_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"glozxi"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Timing(invalidTime, \"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":30,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    public void constructor_invalidTimeEnd_throwsIllegalArgumentException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"        String invalidTime \u003d \"\";","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Timing(\"12-03-2023 12:00\", invalidTime));","lastModifiedDate":"2023-03-09"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":36,"author":{"gitId":"glozxi"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"    public void isValidTiming() {","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        // null time(s)","lastModifiedDate":"2023-03-09"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(null, null));","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"12-03-2023 12:00\", null));","lastModifiedDate":"2023-03-09"},{"lineNumber":41,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(null, \"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":42,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"        // invalid times","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"glozxi"},"content":"        // empty string","lastModifiedDate":"2023-03-09"},{"lineNumber":45,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"\", \"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":46,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"12-03-2023 12:00\", \"\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"        // spaces only","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"12-03-2023 12:00\", \" \"));","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\" \", \"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":51,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":52,"author":{"gitId":"glozxi"},"content":"        // different symbols","lastModifiedDate":"2023-03-09"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"12-03-2023 12:00\", \"12:03:2023 12-00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"12:03:2023 12-00\", \"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"        // non-existent times","lastModifiedDate":"2023-03-09"},{"lineNumber":57,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"31-02-2023 12:00\", \"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"12-01-2023 12:00\", \"31-02-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"15-02-2023 25:00\", \"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"glozxi"},"content":"        assertFalse(Timing.isValidTiming(\"12-01-2023 12:00\", \"15-02-2023 25:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":61,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":62,"author":{"gitId":"glozxi"},"content":"        // valid times","lastModifiedDate":"2023-03-09"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"        assertTrue(Timing.isValidTiming(\"12-03-2023 12:00\", \"12-03-2023 12:00\"));","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"glozxi"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":65,"author":{"gitId":"glozxi"},"content":"}","lastModifiedDate":"2023-03-09"}],"authorContributionMap":{"glozxi":65}},{"path":"src/test/java/seedu/address/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-08-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"        Event editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"engenhui1999"},"content":"        Event editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2023-03-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"engenhui1999"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cEvent\u003e) null));","lastModifiedDate":"2023-03-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"engenhui1999"},"content":"        List\u003cEvent\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2023-03-06"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"engenhui1999"},"content":"        List\u003cEvent\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2023-03-06"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":170,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"engenhui1999":5,"-":165}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedContactTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.storage.JsonAdaptedContact.MISSING_CFIELD_MESSAGE_FORMAT;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.BENSON;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"class JsonAdaptedContactTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private static final String INVALID_PHONE \u003d \"-65\";","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().fullName;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().value;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_validContactDetails_returnsContact() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(BENSON);","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(BENSON, contact.toModelType());","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(INVALID_NAME, VALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d ContactName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(null, VALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d String.format(MISSING_CFIELD_MESSAGE_FORMAT, ContactName.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, INVALID_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d ContactPhone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        JsonAdaptedContact contact \u003d new JsonAdaptedContact(VALID_NAME, null);","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"        String expectedMessage \u003d String.format(MISSING_CFIELD_MESSAGE_FORMAT, ContactPhone.class.getSimpleName());","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, contact::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":53}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"engenhui1999"},"content":"    private static final String INVALID_RATE \u003d \"-651234\";","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"glozxi"},"content":"    private static final String INVALID_START_TIME \u003d \"99-99-9999 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":25,"author":{"gitId":"glozxi"},"content":"    private static final String INVALID_END_TIME \u003d \"99-99-9999 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"    private static final String VALID_RATE \u003d BENSON.getRate().toString();","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"    private static final String VALID_START_TIME \u003d BENSON.getTiming().startTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"glozxi"},"content":"    private static final String VALID_END_TIME \u003d BENSON.getTiming().endTime;","lastModifiedDate":"2023-03-09"},{"lineNumber":33,"author":{"gitId":"engenhui1999"},"content":"    private static final String VALID_MARK \u003d BENSON.getMark().toString();","lastModifiedDate":"2023-03-11"},{"lineNumber":34,"author":{"gitId":"ExtraShotLatte"},"content":"    private static final String VALID_CONTACTNUM \u003d BENSON.getContact().getName().fullName + \" HP:\"","lastModifiedDate":"2023-03-12"},{"lineNumber":35,"author":{"gitId":"ExtraShotLatte"},"content":"            + BENSON.getContact().getPhone().value;","lastModifiedDate":"2023-03-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"glozxi"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"                        INVALID_NAME, VALID_RATE, VALID_ADDRESS,","lastModifiedDate":"2023-03-11"},{"lineNumber":51,"author":{"gitId":"ExtraShotLatte"},"content":"                        VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"ExtraShotLatte"},"content":"                null, VALID_RATE, VALID_ADDRESS, VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM,","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"                new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"engenhui1999"},"content":"                        VALID_NAME, INVALID_RATE, VALID_ADDRESS,","lastModifiedDate":"2023-03-11"},{"lineNumber":70,"author":{"gitId":"ExtraShotLatte"},"content":"                        VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":71,"author":{"gitId":"engenhui1999"},"content":"        String expectedMessage \u003d Rate.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":78,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, null, VALID_ADDRESS, VALID_START_TIME, VALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":79,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":80,"author":{"gitId":"engenhui1999"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Rate.class.getSimpleName());","lastModifiedDate":"2023-03-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":87,"author":{"gitId":"engenhui1999"},"content":"                        VALID_NAME, VALID_RATE, INVALID_ADDRESS,","lastModifiedDate":"2023-03-11"},{"lineNumber":88,"author":{"gitId":"ExtraShotLatte"},"content":"                        VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":96,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, null, VALID_START_TIME, VALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":97,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"glozxi"},"content":"    public void toModelType_invalidTiming_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, INVALID_START_TIME, VALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":106,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":107,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d Timing.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":108,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":109,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":110,"author":{"gitId":"glozxi"},"content":"        person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":111,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, VALID_START_TIME, INVALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":112,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":113,"author":{"gitId":"glozxi"},"content":"        expectedMessage \u003d Timing.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":114,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":115,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":116,"author":{"gitId":"glozxi"},"content":"        person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":117,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, INVALID_START_TIME, INVALID_END_TIME, VALID_MARK,","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_CONTACTNUM, VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"glozxi"},"content":"        expectedMessage \u003d Timing.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2023-03-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":123,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2023-03-09"},{"lineNumber":125,"author":{"gitId":"glozxi"},"content":"    public void toModelType_nullTiming_throwsIllegalValueException() {","lastModifiedDate":"2023-03-09"},{"lineNumber":126,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":127,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, null, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM,","lastModifiedDate":"2023-03-12"},{"lineNumber":128,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"glozxi"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Timing.class.getSimpleName());","lastModifiedDate":"2023-03-09"},{"lineNumber":130,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":131,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":132,"author":{"gitId":"glozxi"},"content":"        person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":133,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, VALID_START_TIME, null, VALID_MARK, VALID_CONTACTNUM,","lastModifiedDate":"2023-03-12"},{"lineNumber":134,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":135,"author":{"gitId":"glozxi"},"content":"        expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Timing.class.getSimpleName());","lastModifiedDate":"2023-03-09"},{"lineNumber":136,"author":{"gitId":"glozxi"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":137,"author":{"gitId":"glozxi"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":138,"author":{"gitId":"glozxi"},"content":"        person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":139,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_NAME, VALID_RATE, VALID_ADDRESS, null, null, VALID_MARK, VALID_CONTACTNUM,","lastModifiedDate":"2023-03-12"},{"lineNumber":140,"author":{"gitId":"ExtraShotLatte"},"content":"                VALID_TAGS);","lastModifiedDate":"2023-03-12"},{"lineNumber":141,"author":{"gitId":"glozxi"},"content":"        expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Timing.class.getSimpleName());","lastModifiedDate":"2023-03-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2023-03-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"glozxi"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2023-03-09"},{"lineNumber":150,"author":{"gitId":"engenhui1999"},"content":"                        VALID_NAME, VALID_RATE, VALID_ADDRESS,","lastModifiedDate":"2023-03-11"},{"lineNumber":151,"author":{"gitId":"ExtraShotLatte"},"content":"                        VALID_START_TIME, VALID_END_TIME, VALID_MARK, VALID_CONTACTNUM, invalidTags);","lastModifiedDate":"2023-03-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ExtraShotLatte":24,"glozxi":35,"engenhui1999":10,"-":86}},{"path":"src/test/java/seedu/address/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.HOON;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.IDA;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"            \"JsonAddressBookStorageTest\");","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"ExtraShotLatte"},"content":"    //TODO: FIX TESTCASE","lastModifiedDate":"2023-03-12"},{"lineNumber":60,"author":{"gitId":"ExtraShotLatte"},"content":"    //    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":61,"author":{"gitId":"ExtraShotLatte"},"content":"    //    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2023-03-12"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"    //        assertThrows(DataConversionException.class,","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"ExtraShotLatte"},"content":"    //        () -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2023-03-12"},{"lineNumber":64,"author":{"gitId":"ExtraShotLatte"},"content":"    //    }","lastModifiedDate":"2023-03-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ExtraShotLatte":8,"-":105}},{"path":"src/test/java/seedu/address/storage/JsonContactListStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.ALICE;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.HOON;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.IDA;","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import java.io.IOException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"class JsonContactListStorageTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\",","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"            \"data\", \"JsonContactListStorageTest\");","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    @TempDir","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    public Path testFolder;","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    private java.util.Optional\u003cReadOnlyContactList\u003e readContactList(String filePath) throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        return new JsonContactListStorage(Paths.get(filePath)).readContactList(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"                : null;","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"        assertFalse(readContactList(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactList(\"notJsonFormatContactList.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    public void readContactList_invalidPersonContactList_throwDataConversionException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactList(\"invalidPersonContactList.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    public void readContactList_invalidAndValidContactContactList_throwDataConversionException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(DataConversionException.class, () -\u003e readContactList(\"invalidAndValidPersonContactList.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"    public void readAndSaveContactList_allInOrder_success() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"        Path filePath \u003d testFolder.resolve(\"TempContactList.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"        ContactList original \u003d getTypicalContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"        JsonContactListStorage jsonContactListStorage \u003d new JsonContactListStorage(filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"        // Save in new file and read back","lastModifiedDate":"2023-03-08"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"        jsonContactListStorage.saveContactList(original, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"        ReadOnlyContactList readBack \u003d jsonContactListStorage.readContactList(filePath).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(original, new ContactList(readBack));","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        // Modify data, overwrite existing file, and read back","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        original.addContact(HOON);","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        original.removeContact(ALICE);","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"        jsonContactListStorage.saveContactList(original, filePath);","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"        readBack \u003d jsonContactListStorage.readContactList(filePath).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(original, new ContactList(readBack));","lastModifiedDate":"2023-03-08"},{"lineNumber":76,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":77,"author":{"gitId":"bryansendeavour"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2023-03-08"},{"lineNumber":78,"author":{"gitId":"bryansendeavour"},"content":"        original.addContact(IDA);","lastModifiedDate":"2023-03-08"},{"lineNumber":79,"author":{"gitId":"bryansendeavour"},"content":"        jsonContactListStorage.saveContactList(original); // file path not specified","lastModifiedDate":"2023-03-08"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"        readBack \u003d jsonContactListStorage.readContactList().get(); //file path not specified","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(original, new ContactList(readBack));","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList_nullContactList_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":86,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactList(null, \"SomeFile.json\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":87,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":88,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":89,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":90,"author":{"gitId":"bryansendeavour"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2023-03-08"},{"lineNumber":91,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":92,"author":{"gitId":"bryansendeavour"},"content":"    private void saveContactList(ReadOnlyContactList contactList, String filePath) {","lastModifiedDate":"2023-03-08"},{"lineNumber":93,"author":{"gitId":"bryansendeavour"},"content":"        try {","lastModifiedDate":"2023-03-08"},{"lineNumber":94,"author":{"gitId":"bryansendeavour"},"content":"            new JsonContactListStorage(Paths.get(filePath))","lastModifiedDate":"2023-03-08"},{"lineNumber":95,"author":{"gitId":"bryansendeavour"},"content":"                    .saveContactList(contactList, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2023-03-08"},{"lineNumber":96,"author":{"gitId":"bryansendeavour"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2023-03-08"},{"lineNumber":97,"author":{"gitId":"bryansendeavour"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2023-03-08"},{"lineNumber":98,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-08"},{"lineNumber":99,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":100,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":101,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":102,"author":{"gitId":"bryansendeavour"},"content":"    public void saveContactList_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2023-03-08"},{"lineNumber":103,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveContactList(new ContactList(), null));","lastModifiedDate":"2023-03-08"},{"lineNumber":104,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":105,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":106,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":106}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"ExtraShotLatte"},"content":"//import seedu.address.model.AddressBook;","lastModifiedDate":"2023-03-12"},{"lineNumber":13,"author":{"gitId":"ExtraShotLatte"},"content":"//import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2023-03-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"ExtraShotLatte"},"content":"    //TODO FIX TESTCASE","lastModifiedDate":"2023-03-12"},{"lineNumber":23,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":24,"author":{"gitId":"ExtraShotLatte"},"content":"    //    @Test","lastModifiedDate":"2023-03-12"},{"lineNumber":25,"author":{"gitId":"ExtraShotLatte"},"content":"    //    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2023-03-12"},{"lineNumber":26,"author":{"gitId":"ExtraShotLatte"},"content":"    //        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2023-03-12"},{"lineNumber":27,"author":{"gitId":"ExtraShotLatte"},"content":"    //                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2023-03-12"},{"lineNumber":28,"author":{"gitId":"ExtraShotLatte"},"content":"    //        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-12"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"    //        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"ExtraShotLatte"},"content":"    //        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2023-03-12"},{"lineNumber":31,"author":{"gitId":"ExtraShotLatte"},"content":"    //    }","lastModifiedDate":"2023-03-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ExtraShotLatte":12,"-":36}},{"path":"src/test/java/seedu/address/storage/JsonSerializableContactListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.storage;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.testutil.TypicalContacts;","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"class JsonSerializableContactListTest {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\",","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"            \"JsonSerializableContactListTest\");","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"    private static final Path TYPICAL_CONTACTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsContactList.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    private static final Path INVALID_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonContactList.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    private static final Path DUPLICATE_CONTACT_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonContactList.json\");","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_typicalContactFile_success() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        JsonSerializableContactList dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_CONTACTS_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"                JsonSerializableContactList.class).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        ContactList contactListFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"        ContactList typicalContactsContactList \u003d TypicalContacts.getTypicalContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(contactListFromFile, typicalContactsContactList);","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_invalidContactFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"        JsonSerializableContactList dataFromFile \u003d JsonUtil.readJsonFile(INVALID_CONTACT_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"                JsonSerializableContactList.class).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    public void toModelType_duplicateContacts_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"        JsonSerializableContactList dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_CONTACT_FILE,","lastModifiedDate":"2023-03-08"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"                JsonSerializableContactList.class).get();","lastModifiedDate":"2023-03-08"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableContactList.MESSAGE_DUPLICATE_CONTACT,","lastModifiedDate":"2023-03-08"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":47}},{"path":"src/test/java/seedu/address/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.testutil.TypicalContacts.getTypicalContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ReadOnlyContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        JsonContactListStorage contactListStorage \u003d new JsonContactListStorage(getTempFilePath(\"cl\"));","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, contactListStorage, userPrefsStorage);","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":68,"author":{"gitId":"bryansendeavour"},"content":"    public void contactListReadSave() throws Exception {","lastModifiedDate":"2023-03-08"},{"lineNumber":69,"author":{"gitId":"bryansendeavour"},"content":"        ContactList original \u003d getTypicalContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":70,"author":{"gitId":"bryansendeavour"},"content":"        storageManager.saveContactList(original);","lastModifiedDate":"2023-03-08"},{"lineNumber":71,"author":{"gitId":"bryansendeavour"},"content":"        ReadOnlyContactList retrieved \u003d storageManager.readContactList().get();","lastModifiedDate":"2023-03-08"},{"lineNumber":72,"author":{"gitId":"bryansendeavour"},"content":"        assertEquals(original, new ContactList(retrieved));","lastModifiedDate":"2023-03-08"},{"lineNumber":73,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":74,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":80,"author":{"gitId":"bryansendeavour"},"content":"    @Test","lastModifiedDate":"2023-03-08"},{"lineNumber":81,"author":{"gitId":"bryansendeavour"},"content":"    public void getContactListFilePath() {","lastModifiedDate":"2023-03-08"},{"lineNumber":82,"author":{"gitId":"bryansendeavour"},"content":"        assertNotNull(storageManager.getContactListFilePath());","lastModifiedDate":"2023-03-08"},{"lineNumber":83,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":84,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"bryansendeavour":18,"-":67}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"engenhui1999"},"content":"    public AddressBookBuilder withPerson(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":2,"-":32}},{"path":"src/test/java/seedu/address/testutil/ContactBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * A utility class to help with building ContactList objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" *     {@code ContactBook cb \u003d new ContactListBuilder().withContact(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"public class ContactBuilder {","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"    private ContactName name;","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    private ContactPhone phone;","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"     * Creates a {@code ContactBuilder} with the default details.","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    public ContactBuilder() {","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"        name \u003d new ContactName(DEFAULT_NAME);","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"        phone \u003d new ContactPhone(DEFAULT_PHONE);","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"     * Initializes the ContactBuilder with the data of {@code contactToCopy}.","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"    public ContactBuilder(Contact contactToCopy) {","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"        name \u003d contactToCopy.getName();","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        phone \u003d contactToCopy.getPhone();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"     * Sets the {@code ContactName} of the {@code Contact} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"    public ContactBuilder withName(String name) {","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"        this.name \u003d new ContactName(name);","lastModifiedDate":"2023-03-08"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"     * Sets the {@code ContactPhone} of the {@code Contact} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"    public ContactBuilder withPhone(String phone) {","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"        this.phone \u003d new ContactPhone(phone);","lastModifiedDate":"2023-03-08"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"        return this;","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    public Contact build() {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"        return new Contact(name, phone);","lastModifiedDate":"2023-03-06"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":56}},{"path":"src/test/java/seedu/address/testutil/ContactListBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":" * A utility class to help with building ContactList objects.","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":" *  {@code ContactBook cb \u003d new ContactListBuilder().withContact(\"John\", \"Doe\").build();}","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"public class ContactListBuilder {","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"    private ContactList contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"    public ContactListBuilder() {","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"        contactList \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public ContactListBuilder(ContactList contactList) {","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"        this.contactList \u003d contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"     * Adds a new {@code Contact} to the {@code ContactBook} that we are building.","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"    public ContactListBuilder withContact(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        contactList.addContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        return this;","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public ContactList build() {","lastModifiedDate":"2023-03-08"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"        return contactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":34}},{"path":"src/test/java/seedu/address/testutil/ContactUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-08"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2023-03-08"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2023-03-08"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.logic.commands.NewContactCommand;","lastModifiedDate":"2023-03-08"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-08"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-08"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":" * Utility class for a Contact.","lastModifiedDate":"2023-03-08"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-08"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"public class ContactUtil {","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"     * Returns an newContact command string for adding the {@code contact}.","lastModifiedDate":"2023-03-08"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":"    public static String getNewContactCommand(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"        return NewContactCommand.COMMAND_WORD + \" \" + getContactDetails(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-08"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-08"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"     * Returns the part of command string for the given {@code contact}\u0027s details.","lastModifiedDate":"2023-03-08"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-08"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"    public static String getContactDetails(Contact contact) {","lastModifiedDate":"2023-03-08"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-03-08"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"        sb.append(PREFIX_NAME + contact.getName().fullName + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"        sb.append(PREFIX_PHONE + contact.getPhone().value + \" \");","lastModifiedDate":"2023-03-08"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"        return sb.toString();","lastModifiedDate":"2023-03-08"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-08"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-08"}],"authorContributionMap":{"bryansendeavour":30}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":13,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"    public EditPersonDescriptorBuilder(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"engenhui1999"},"content":"        descriptor.setRate(person.getRate());","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"glozxi"},"content":"        descriptor.setTiming(person.getTiming());","lastModifiedDate":"2023-03-09"},{"lineNumber":40,"author":{"gitId":"engenhui1999"},"content":"        descriptor.setMark(person.getMark());","lastModifiedDate":"2023-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"    public EditPersonDescriptorBuilder withPhone(String rate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"        descriptor.setRate(new Rate(rate));","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":68,"author":{"gitId":"glozxi"},"content":"     * Sets the {@code TIMING} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"glozxi"},"content":"    public EditPersonDescriptorBuilder withTiming(String startTime, String endTime) {","lastModifiedDate":"2023-03-09"},{"lineNumber":71,"author":{"gitId":"glozxi"},"content":"        descriptor.setTiming(new Timing(startTime, endTime));","lastModifiedDate":"2023-03-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":76,"author":{"gitId":"engenhui1999"},"content":"     * Sets the {@code Mark} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":78,"author":{"gitId":"engenhui1999"},"content":"    public EditPersonDescriptorBuilder withMark(String mark) {","lastModifiedDate":"2023-03-11"},{"lineNumber":79,"author":{"gitId":"engenhui1999"},"content":"        Mark temp \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":80,"author":{"gitId":"engenhui1999"},"content":"        if (mark.equals(\"[X]\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":81,"author":{"gitId":"engenhui1999"},"content":"            temp.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"        descriptor.setMark(temp);","lastModifiedDate":"2023-03-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"glozxi":5,"engenhui1999":15,"-":80}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"engenhui1999"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":7,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":8,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.ContactName;","lastModifiedDate":"2023-03-12"},{"lineNumber":9,"author":{"gitId":"ExtraShotLatte"},"content":"import seedu.address.model.contact.ContactPhone;","lastModifiedDate":"2023-03-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"glozxi"},"content":"import seedu.address.model.person.Timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"    public static final String DEFAULT_RATE \u003d \"85355255\";","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"glozxi"},"content":"    public static final String DEFAULT_START_TIME \u003d \"12-03-2023 11:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":28,"author":{"gitId":"glozxi"},"content":"    public static final String DEFAULT_END_TIME \u003d \"12-03-2023 12:00\";","lastModifiedDate":"2023-03-09"},{"lineNumber":29,"author":{"gitId":"ExtraShotLatte"},"content":"    public static final String DEFAULT_CONTACTNUM \u003d \"91234567\";","lastModifiedDate":"2023-03-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    private Rate rate;","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"glozxi"},"content":"    private Timing timing;","lastModifiedDate":"2023-03-09"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"    private Mark mark;","lastModifiedDate":"2023-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"ExtraShotLatte"},"content":"    private Contact contact;","lastModifiedDate":"2023-03-12"},{"lineNumber":38,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"        rate \u003d new Rate(DEFAULT_RATE);","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"glozxi"},"content":"        timing \u003d new Timing(DEFAULT_START_TIME, DEFAULT_END_TIME);","lastModifiedDate":"2023-03-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"ExtraShotLatte"},"content":"        contact \u003d new Contact(new ContactName(DEFAULT_NAME), new ContactPhone(DEFAULT_CONTACTNUM));","lastModifiedDate":"2023-03-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"    public PersonBuilder(Event personToCopy) {","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":57,"author":{"gitId":"engenhui1999"},"content":"        rate \u003d personToCopy.getRate();","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":59,"author":{"gitId":"glozxi"},"content":"        timing \u003d personToCopy.getTiming();","lastModifiedDate":"2023-03-09"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"        mark \u003d personToCopy.getMark();","lastModifiedDate":"2023-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"ExtraShotLatte"},"content":"        contact \u003d personToCopy.getContact();","lastModifiedDate":"2023-03-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"engenhui1999"},"content":"     * Sets the {@code Rate} of the {@code Person} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"engenhui1999"},"content":"    public PersonBuilder withRate(String rate) {","lastModifiedDate":"2023-03-06"},{"lineNumber":93,"author":{"gitId":"engenhui1999"},"content":"        this.rate \u003d new Rate(rate);","lastModifiedDate":"2023-03-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2023-03-09"},{"lineNumber":98,"author":{"gitId":"glozxi"},"content":"     * Sets the {@code Timing} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2023-03-09"},{"lineNumber":100,"author":{"gitId":"glozxi"},"content":"    public PersonBuilder withTiming(String startTime, String endTime) {","lastModifiedDate":"2023-03-09"},{"lineNumber":101,"author":{"gitId":"glozxi"},"content":"        this.timing \u003d new Timing(startTime, endTime);","lastModifiedDate":"2023-03-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2023-03-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-03-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-03-09"},{"lineNumber":105,"author":{"gitId":"engenhui1999"},"content":"    /**","lastModifiedDate":"2023-03-11"},{"lineNumber":106,"author":{"gitId":"engenhui1999"},"content":"     * Sets the {@code Mark} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-11"},{"lineNumber":107,"author":{"gitId":"engenhui1999"},"content":"     */","lastModifiedDate":"2023-03-11"},{"lineNumber":108,"author":{"gitId":"engenhui1999"},"content":"    public PersonBuilder withMark(String mark) {","lastModifiedDate":"2023-03-11"},{"lineNumber":109,"author":{"gitId":"engenhui1999"},"content":"        this.mark \u003d new Mark();","lastModifiedDate":"2023-03-11"},{"lineNumber":110,"author":{"gitId":"engenhui1999"},"content":"        if (mark.equals(\"[X]\")) {","lastModifiedDate":"2023-03-11"},{"lineNumber":111,"author":{"gitId":"engenhui1999"},"content":"            this.mark.setDone();","lastModifiedDate":"2023-03-11"},{"lineNumber":112,"author":{"gitId":"engenhui1999"},"content":"        }","lastModifiedDate":"2023-03-11"},{"lineNumber":113,"author":{"gitId":"engenhui1999"},"content":"        return this;","lastModifiedDate":"2023-03-11"},{"lineNumber":114,"author":{"gitId":"engenhui1999"},"content":"    }","lastModifiedDate":"2023-03-11"},{"lineNumber":115,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":116,"author":{"gitId":"ExtraShotLatte"},"content":"     * Sets the {@code contact} of the {@code Event} that we are building.","lastModifiedDate":"2023-03-12"},{"lineNumber":117,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":118,"author":{"gitId":"ExtraShotLatte"},"content":"    public PersonBuilder withContact(String name, String number) {","lastModifiedDate":"2023-03-12"},{"lineNumber":119,"author":{"gitId":"ExtraShotLatte"},"content":"        this.contact \u003d new Contact(new ContactName(name), new ContactPhone(number));","lastModifiedDate":"2023-03-12"},{"lineNumber":120,"author":{"gitId":"ExtraShotLatte"},"content":"        return this;","lastModifiedDate":"2023-03-12"},{"lineNumber":121,"author":{"gitId":"ExtraShotLatte"},"content":"    }","lastModifiedDate":"2023-03-12"},{"lineNumber":122,"author":{"gitId":"ExtraShotLatte"},"content":"","lastModifiedDate":"2023-03-12"},{"lineNumber":123,"author":{"gitId":"ExtraShotLatte"},"content":"    /**","lastModifiedDate":"2023-03-12"},{"lineNumber":124,"author":{"gitId":"ExtraShotLatte"},"content":"     * Builds the event.","lastModifiedDate":"2023-03-12"},{"lineNumber":125,"author":{"gitId":"ExtraShotLatte"},"content":"     * @return Event that is built.","lastModifiedDate":"2023-03-12"},{"lineNumber":126,"author":{"gitId":"ExtraShotLatte"},"content":"     */","lastModifiedDate":"2023-03-12"},{"lineNumber":127,"author":{"gitId":"engenhui1999"},"content":"    public Event build() {","lastModifiedDate":"2023-03-06"},{"lineNumber":128,"author":{"gitId":"ExtraShotLatte"},"content":"        Event event \u003d new Event(name, rate, address, timing, tags);","lastModifiedDate":"2023-03-12"},{"lineNumber":129,"author":{"gitId":"ExtraShotLatte"},"content":"        if (!contact.equals(new Contact(new ContactName(DEFAULT_NAME), new ContactPhone(DEFAULT_CONTACTNUM)))) {","lastModifiedDate":"2023-03-12"},{"lineNumber":130,"author":{"gitId":"ExtraShotLatte"},"content":"            event.linkContact(this.contact);","lastModifiedDate":"2023-03-12"},{"lineNumber":131,"author":{"gitId":"ExtraShotLatte"},"content":"        }","lastModifiedDate":"2023-03-12"},{"lineNumber":132,"author":{"gitId":"ExtraShotLatte"},"content":"        return event;","lastModifiedDate":"2023-03-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"ExtraShotLatte":25,"glozxi":9,"engenhui1999":25,"-":76}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":5,"author":{"gitId":"engenhui1999"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_RATE;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_END;","lastModifiedDate":"2023-03-10"},{"lineNumber":8,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TIMING_START;","lastModifiedDate":"2023-03-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.AddCommand;","lastModifiedDate":"2017-03-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.EditCommand.EditPersonDescriptor;","lastModifiedDate":"2018-03-26"},{"lineNumber":14,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"engenhui1999"},"content":"    public static String getAddCommand(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2017-03-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"    public static String getPersonDetails(Event person) {","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"engenhui1999"},"content":"        sb.append(PREFIX_RATE + Double.toString(person.getRate().value) + \" \");","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"        sb.append(PREFIX_TIMING_START + person.getTiming().startTime + \" \");","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"glozxi"},"content":"        sb.append(PREFIX_TIMING_END + person.getTiming().endTime + \" \");","lastModifiedDate":"2023-03-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"        descriptor.getRate().ifPresent(rate -\u003e sb.append(PREFIX_RATE).append(rate.value).append(\" \"));","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"        descriptor.getTiming().ifPresent(timing -\u003e sb.append(PREFIX_TIMING_START)","lastModifiedDate":"2023-03-13"},{"lineNumber":54,"author":{"gitId":"glozxi"},"content":"                .append(timing.startTime).append(\" \")","lastModifiedDate":"2023-03-13"},{"lineNumber":55,"author":{"gitId":"glozxi"},"content":"                .append(PREFIX_TIMING_END)","lastModifiedDate":"2023-03-13"},{"lineNumber":56,"author":{"gitId":"glozxi"},"content":"                .append(timing.endTime).append(\" \"));","lastModifiedDate":"2023-03-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"glozxi":8,"engenhui1999":6,"-":53}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":10,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"    public static Event getPerson(Model model, Index index) {","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"engenhui1999":2,"-":53}},{"path":"src/test/java/seedu/address/testutil/TypicalContacts.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bryansendeavour"},"content":"package seedu.address.testutil;","lastModifiedDate":"2023-03-06"},{"lineNumber":2,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":3,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":4,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":5,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2023-03-06"},{"lineNumber":6,"author":{"gitId":"bryansendeavour"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2023-03-06"},{"lineNumber":7,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":8,"author":{"gitId":"bryansendeavour"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-03-06"},{"lineNumber":9,"author":{"gitId":"bryansendeavour"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-03-06"},{"lineNumber":10,"author":{"gitId":"bryansendeavour"},"content":"import java.util.List;","lastModifiedDate":"2023-03-06"},{"lineNumber":11,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":12,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.ContactList;","lastModifiedDate":"2023-03-08"},{"lineNumber":13,"author":{"gitId":"bryansendeavour"},"content":"import seedu.address.model.contact.Contact;","lastModifiedDate":"2023-03-06"},{"lineNumber":14,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":15,"author":{"gitId":"bryansendeavour"},"content":"/**","lastModifiedDate":"2023-03-06"},{"lineNumber":16,"author":{"gitId":"bryansendeavour"},"content":" * A utility class containing a list of {@code Contact} objects to be used in tests.","lastModifiedDate":"2023-03-06"},{"lineNumber":17,"author":{"gitId":"bryansendeavour"},"content":" */","lastModifiedDate":"2023-03-06"},{"lineNumber":18,"author":{"gitId":"bryansendeavour"},"content":"public class TypicalContacts {","lastModifiedDate":"2023-03-06"},{"lineNumber":19,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact ALICE \u003d new ContactBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-06"},{"lineNumber":20,"author":{"gitId":"bryansendeavour"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2023-03-06"},{"lineNumber":21,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact BENSON \u003d new ContactBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-06"},{"lineNumber":23,"author":{"gitId":"bryansendeavour"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2023-03-06"},{"lineNumber":24,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":25,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact CARL \u003d new ContactBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2023-03-06"},{"lineNumber":26,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":27,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact DANIEL \u003d new ContactBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2023-03-06"},{"lineNumber":28,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact ELLE \u003d new ContactBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact FIONA \u003d new ContactBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2023-03-06"},{"lineNumber":32,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":33,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact GEORGE \u003d new ContactBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2023-03-06"},{"lineNumber":34,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":36,"author":{"gitId":"bryansendeavour"},"content":"    // Manually added","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact HOON \u003d new ContactBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2023-03-06"},{"lineNumber":38,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":39,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact IDA \u003d new ContactBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2023-03-06"},{"lineNumber":40,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":41,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"bryansendeavour"},"content":"    // Manually added - Contact\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact AMY \u003d new ContactBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":44,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":45,"author":{"gitId":"bryansendeavour"},"content":"    public static final Contact BOB \u003d new ContactBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"bryansendeavour"},"content":"            .build();","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"bryansendeavour"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2023-03-06"},{"lineNumber":49,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":50,"author":{"gitId":"bryansendeavour"},"content":"    private TypicalContacts() {} // prevents instantiation","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"bryansendeavour"},"content":"    /**","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"bryansendeavour"},"content":"     * Returns an {@code ContactList} with all the typical Contacts.","lastModifiedDate":"2023-03-08"},{"lineNumber":54,"author":{"gitId":"bryansendeavour"},"content":"     */","lastModifiedDate":"2023-03-06"},{"lineNumber":55,"author":{"gitId":"bryansendeavour"},"content":"    public static ContactList getTypicalContactList() {","lastModifiedDate":"2023-03-08"},{"lineNumber":56,"author":{"gitId":"bryansendeavour"},"content":"        ContactList cl \u003d new ContactList();","lastModifiedDate":"2023-03-08"},{"lineNumber":57,"author":{"gitId":"bryansendeavour"},"content":"        for (Contact contact : getTypicalContacts()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"bryansendeavour"},"content":"            cl.addContact(contact);","lastModifiedDate":"2023-03-08"},{"lineNumber":59,"author":{"gitId":"bryansendeavour"},"content":"        }","lastModifiedDate":"2023-03-06"},{"lineNumber":60,"author":{"gitId":"bryansendeavour"},"content":"        return cl;","lastModifiedDate":"2023-03-08"},{"lineNumber":61,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"bryansendeavour"},"content":"","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"bryansendeavour"},"content":"    public static List\u003cContact\u003e getTypicalContacts() {","lastModifiedDate":"2023-03-06"},{"lineNumber":64,"author":{"gitId":"bryansendeavour"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2023-03-06"},{"lineNumber":65,"author":{"gitId":"bryansendeavour"},"content":"    }","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"bryansendeavour"},"content":"}","lastModifiedDate":"2023-03-06"}],"authorContributionMap":{"bryansendeavour":66}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":6,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_END_TIME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_AMY;","lastModifiedDate":"2023-03-09"},{"lineNumber":12,"author":{"gitId":"glozxi"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_START_TIME_BOB;","lastModifiedDate":"2023-03-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"engenhui1999"},"content":"import seedu.address.model.person.Event;","lastModifiedDate":"2023-03-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"engenhui1999"},"content":"    public static final Event ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2023-03-06"},{"lineNumber":29,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\")","lastModifiedDate":"2023-03-06"},{"lineNumber":30,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"94351253\")","lastModifiedDate":"2023-03-06"},{"lineNumber":31,"author":{"gitId":"glozxi"},"content":"            .withTiming(\"11-12-2023 02:00\", \"11-12-2023 10:00\")","lastModifiedDate":"2023-03-09"},{"lineNumber":32,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"engenhui1999"},"content":"    public static final Event BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2023-03-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":36,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"98765432\")","lastModifiedDate":"2023-03-06"},{"lineNumber":37,"author":{"gitId":"glozxi"},"content":"            .withTiming(\"11-03-2024 12:00\", \"11-03-2024 17:00\")","lastModifiedDate":"2023-03-09"},{"lineNumber":38,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":39,"author":{"gitId":"ExtraShotLatte"},"content":"            .withContact(\"Meier\", \"91239123\")","lastModifiedDate":"2023-03-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":41,"author":{"gitId":"engenhui1999"},"content":"    public static final Event CARL \u003d new PersonBuilder().withName(\"Carl Kurz\")","lastModifiedDate":"2023-03-06"},{"lineNumber":42,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"95352563\")","lastModifiedDate":"2023-03-06"},{"lineNumber":43,"author":{"gitId":"glozxi"},"content":"            .withTiming(\"25-01-2023 12:00\", \"26-01-2024 12:00\")","lastModifiedDate":"2023-03-09"},{"lineNumber":44,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":45,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"wall street\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":46,"author":{"gitId":"engenhui1999"},"content":"    public static final Event DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\")","lastModifiedDate":"2023-03-06"},{"lineNumber":47,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"87652533\")","lastModifiedDate":"2023-03-06"},{"lineNumber":48,"author":{"gitId":"glozxi"},"content":"            .withTiming(\"11-03-2024 12:00\", \"11-03-2024 13:00\")","lastModifiedDate":"2023-03-09"},{"lineNumber":49,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":50,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"10th street\").withTags(\"friends\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":51,"author":{"gitId":"engenhui1999"},"content":"    public static final Event ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\")","lastModifiedDate":"2023-03-06"},{"lineNumber":52,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"9482224\")","lastModifiedDate":"2023-03-06"},{"lineNumber":53,"author":{"gitId":"glozxi"},"content":"            .withTiming(\"11-03-2025 12:00\", \"11-03-2025 17:00\")","lastModifiedDate":"2023-03-09"},{"lineNumber":54,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":55,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"michegan ave\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":56,"author":{"gitId":"engenhui1999"},"content":"    public static final Event FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\")","lastModifiedDate":"2023-03-06"},{"lineNumber":57,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"9482427\")","lastModifiedDate":"2023-03-06"},{"lineNumber":58,"author":{"gitId":"glozxi"},"content":"            .withTiming(\"01-01-2024 12:30\", \"02-01-2024 02:15\")","lastModifiedDate":"2023-03-09"},{"lineNumber":59,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":60,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"little tokyo\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":61,"author":{"gitId":"engenhui1999"},"content":"    public static final Event GEORGE \u003d new PersonBuilder().withName(\"George Best\")","lastModifiedDate":"2023-03-06"},{"lineNumber":62,"author":{"gitId":"engenhui1999"},"content":"            .withRate(\"9482442\")","lastModifiedDate":"2023-03-06"},{"lineNumber":63,"author":{"gitId":"glozxi"},"content":"            .withTiming(\"11-03-2023 23:20\", \"12-03-2023 00:00\")","lastModifiedDate":"2023-03-09"},{"lineNumber":64,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":65,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"4th street\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":68,"author":{"gitId":"engenhui1999"},"content":"    public static final Event HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withRate(\"8482424\")","lastModifiedDate":"2023-03-06"},{"lineNumber":69,"author":{"gitId":"glozxi"},"content":"            .withTiming(\"01-08-2023 04:50\", \"01-08-2023 08:25\")","lastModifiedDate":"2023-03-09"},{"lineNumber":70,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":71,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"little india\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":72,"author":{"gitId":"engenhui1999"},"content":"    public static final Event IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withRate(\"8482131\")","lastModifiedDate":"2023-03-06"},{"lineNumber":73,"author":{"gitId":"glozxi"},"content":"            .withTiming(\"12-11-2023 13:30\", \"12-11-2023 16:25\")","lastModifiedDate":"2023-03-09"},{"lineNumber":74,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":75,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(\"chicago ave\").build();","lastModifiedDate":"2023-03-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":78,"author":{"gitId":"engenhui1999"},"content":"    public static final Event AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withRate(VALID_PHONE_AMY)","lastModifiedDate":"2023-03-06"},{"lineNumber":79,"author":{"gitId":"glozxi"},"content":"            .withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":80,"author":{"gitId":"glozxi"},"content":"            .withTiming(VALID_START_TIME_AMY, VALID_END_TIME_AMY)","lastModifiedDate":"2023-03-09"},{"lineNumber":81,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[ ]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":82,"author":{"gitId":"glozxi"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2023-03-09"},{"lineNumber":83,"author":{"gitId":"engenhui1999"},"content":"    public static final Event BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withRate(VALID_PHONE_BOB)","lastModifiedDate":"2023-03-06"},{"lineNumber":84,"author":{"gitId":"engenhui1999"},"content":"            .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2023-03-06"},{"lineNumber":85,"author":{"gitId":"engenhui1999"},"content":"            .withTiming(VALID_START_TIME_BOB, VALID_END_TIME_BOB)","lastModifiedDate":"2023-03-11"},{"lineNumber":86,"author":{"gitId":"engenhui1999"},"content":"            .withMark(\"[X]\")","lastModifiedDate":"2023-03-11"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"engenhui1999"},"content":"        for (Event person : getTypicalPersons()) {","lastModifiedDate":"2023-03-06"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":104,"author":{"gitId":"engenhui1999"},"content":"    public static List\u003cEvent\u003e getTypicalPersons() {","lastModifiedDate":"2023-03-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"ExtraShotLatte":1,"glozxi":16,"engenhui1999":42,"-":48}}]
